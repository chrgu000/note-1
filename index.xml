<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>零零散散</title>
    <link>/index.xml</link>
    <description>Recent content on 零零散散</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Oct 2017 21:07:39 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>kafka</title>
      <link>/post/bigdata/hadoop/kafka/</link>
      <pubDate>Sat, 07 Oct 2017 21:07:39 +0000</pubDate>
      
      <guid>/post/bigdata/hadoop/kafka/</guid>
      <description>&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;启动&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $TOOLS_HOME/kafka/start-kafka.sh&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $KAFKA_HOME/bin/kafka-server-start.sh $KAFKA_HOME/config/server.properties &amp;amp;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;查看
kafka-topics.sh --zookeeper djt11:2181 --list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建
kafka-topics.sh --create --zookeeper djt11:2181 --replication-factor 1 --partitions 1 --topic test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发送消息
kafka-console-producer.sh --broker-list djt11:9092 --topic test&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收消息
kafka-console-consumer.sh --zookeeper djt11:2181 --topic test --from-beginning&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看消费者组的消费情况
kafka-run-class.sh kafka.tools.ConsumerOffsetChecker --zookeeper djt11:2181 --group console-consumer-14804&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>离线计算项目</title>
      <link>/post/bigdata/djt/%E9%A1%B9%E7%9B%AE/%E7%A6%BB%E7%BA%BF%E8%AE%A1%E7%AE%97%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Wed, 27 Sep 2017 09:58:17 +0000</pubDate>
      
      <guid>/post/bigdata/djt/%E9%A1%B9%E7%9B%AE/%E7%A6%BB%E7%BA%BF%E8%AE%A1%E7%AE%97%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;离线计算项目&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_flume&#34;&gt;1. Flume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_kill_flume&#34;&gt;kill flume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_interceptor_conf&#34;&gt;interceptor.conf&lt;/a&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_mapper_reducer_编写步骤&#34;&gt;1. Mapper Reducer 编写步骤&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_每天收视的总人数&#34;&gt;每天收视的总人数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_yarn&#34;&gt;yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_创建分区表&#34;&gt;创建分区表&lt;/a&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_节目&#34;&gt;1. 节目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_频道&#34;&gt;2. 频道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_count&#34;&gt;3. count&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_flume&#34;&gt;1. Flume&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;rm -rf /home/hadoop/flume/flume-collect/checkpoint/* &amp;amp;&amp;amp; \
rm -rf /home/hadoop/flume/flume-collect/dataDir/*&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;nohup sh $FLUME_HOME/bin/flume-ng agent -n a1 -f ~/flume/conf/agg.conf &amp;gt; ~/log/flume/${HOSTNAME}-flume.log 2&amp;gt;&amp;amp;1 &amp;amp; echo $! &amp;gt; ~/log/flume/pid&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;nohup sh $FLUME_HOME/bin/flume-ng agent -n a1 -f ~/flume/conf/collect.conf &amp;gt; ~/log/flume/${HOSTNAME}-flume.log 2&amp;gt;&amp;amp;1 &amp;amp; echo $! &amp;gt; ~/log/flume/pid&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;_kill_flume&#34; class=&#34;sect0&#34;&gt;kill flume&lt;/h1&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;cat ~/log/flume/pid | xargs -I pid kill pid&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;nohup sh $FLUME_HOME/bin/flume-ng agent -n a1 -f ~/flume/conf/spool.conf &amp;gt; ~/log/flume/djt11-flume.log -Dflume.root.logger=INFO,console 2&amp;gt;&amp;amp;1 &amp;amp; echo $! &amp;gt; ~/log/flume/pid&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;_interceptor_conf&#34; class=&#34;sect0&#34;&gt;interceptor.conf&lt;/h1&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;nohup sh $FLUME_HOME/bin/flume-ng agent -n a1 -f ~/flume/conf/interceptor.conf &amp;gt; ~/log/flume/djt11-flume.log -Dflume.root.logger=INFO,console 2&amp;gt;&amp;amp;1 &amp;amp; echo $! &amp;gt; ~/log/flume/pid&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;echo &#34;&#34; &amp;gt; ~/log/flume/$HOSTNAME-flume.log
tail -f ~/log/flume/${HOSTNAME}-flume.log&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;tail -f ~/log/flume/djt12-flume.log&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;tail -f ~/log/flume/djt13-flume.log&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;mount -t nfs 192.168.137.2:/e/djt /home/hadoop/share&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mapper_reducer_编写步骤&#34;&gt;1. Mapper Reducer 编写步骤&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;创建Configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;job实例&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置输出key value分隔符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setJar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setMapper&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setOutputKey&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setOutputValue
.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;cat deploy.conf|grep -v &#39;^#&#39;|grep &#39;,all,&#39;|awk -F&#39;,&#39; &#39;{print $1}&#39;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;flume 采集 小文件  sink 到 hdfs 中, 会不会一个小文件一个block块&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;stbNum + &#34;@&#34; + date + &#34;@&#34; + sn + &#34;@&#34; + p+ &#34;@&#34; + s + &#34;@&#34; + e + &#34;@&#34;
            // + duration&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;stbNum      机顶盒
date        日期
sn          频道
p           节目内容
s           起始时间
e           结束时间
duration    收看时长&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;每个节目每天的收视人数和人均收视时长&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sn@date&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;收视人数&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sum(stbNum)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;mount -t nfs 192.168.137.2:/e/djt /home/hadoop/share&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;mkdir -p /home/hadoop/data/flume/{checkpoint,dataDir}&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $TOOLS_HOME/flume/start-flume.sh
sh $TOOLS_HOME/flume/stop-flume.sh&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;tail -f $LOG_HOME/flume/${HOSTNAME}-flume.log&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;java -cp tv-1.0-jar-with-dependencies.jar io.dishui.upload.CopyManyFilesToHDFS &#34;hdfs://djt11:9000&#34; &#34;E:\\djt\\resource\\guangdian\\73\\*&#34; &#34;hdfs://djt11:9000/tv/&#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hadoop jar tv-1.0.jar io.dishui.tv.reducer.ParseAndFilterLog&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $SPARK_HOME/bin/spark-submit \
--class ParseAndFilterLog \
--master spark://djt11:7077 \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 4 \
spark-1.0-jar-with-dependencies.jar \
hdfs://cluster1/tv/* \
hdfs://cluster1/output/spark-output-3&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark.files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml&lt;/a&gt; &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查看文件的block块数
hadoop fsck /tv/2012-09-17 -files -blocks&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $SPARK_HOME/bin/spark-submit \
--class ParseAndFilterLog \
--master spark://djt11:7077 \
--executor-memory 1g \
--total-executor-cores 2 \
spark-1.0-jar-with-dependencies.jar \
hdfs://cluster1/tv/* \
hdfs://cluster1/output/spark-output-1&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;_每天收视的总人数&#34; class=&#34;sect0&#34;&gt;每天收视的总人数&lt;/h1&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hadoop jar tv-1.0-jar-with-dependencies.jar io.dishui.my.extract.ProgramNumAndTime \
/output/spark-output-3/* /output/ProgramNumAndTime-output&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hdfs dfs -cat /output/ProgramNumAndTime-output/* | wc -l&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $SPARK_HOME/bin/spark-submit \
--class ProgramNumAndTime \
--master spark://djt11:7077 \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 4 \
spark-1.0-jar-with-dependencies.jar \
hdfs://cluster1/output/spark-output-3/* \
hdfs://cluster1/output/spark-ProgramNumAndTime-output&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;_yarn&#34; class=&#34;sect0&#34;&gt;yarn&lt;/h1&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sh $SPARK_HOME/bin/spark-submit \
--class extract.ProgramAvgAndReachNum \
--master yarn \
--deploy-mode client \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 4 \
spark-1.0-jar-with-dependencies.jar \
hdfs://cluster1/guangdian/2012-09-18/parselog-out/* \
hdfs://cluster1/output/spark-ProgramAvgAndReachNum-output&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hdfs dfs -cat /output/spark-ProgramNumAndTime-output2/* | wc -l&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hadoop jar guangdian.jar io.dishui.tv.reducer.ParseAndFilterLog /tv/2012-09-17 /tmp&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;io.dishui.tv.reducer.ParseAndFilterLog&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;_创建分区表&#34; class=&#34;sect0&#34;&gt;创建分区表&lt;/h1&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_节目&#34;&gt;1. 节目&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;columnlog_min&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS columnlog_min(
    tvcolumn STRING COMMENT &#39;节目&#39;,
    tvtime STRING COMMENT &#39;日期&#39;,
    tvmin STRING COMMENT &#39;分钟&#39;,
    avgnum INT COMMENT &#39;平均收视人数&#39;,
    reachnum INT COMMENT &#39;到达人数&#39;,
    tvrating DOUBLE COMMENT &#39;收视率&#39;,
    reachrating DOUBLE COMMENT &#39;到达率&#39;,
    marketshare DOUBLE COMMENT &#39;市场份额&#39;
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/guangdian_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS columnlog_hour LIKE columnlog_min;
CREATE EXTERNAL TABLE IF NOT EXISTS columnlog_day LIKE columnlog_min;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_频道&#34;&gt;2. 频道&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS channellog_min(
    tvchannel STRING COMMENT &#39;节目&#39;,
    tvtime STRING COMMENT &#39;日期&#39;,
    tvmin STRING COMMENT &#39;分钟&#39;,
    avgnum INT COMMENT &#39;平均收视人数&#39;,
    reachnum INT COMMENT &#39;到达人数&#39;,
    tvrating DOUBLE COMMENT &#39;收视率&#39;,
    reachrating DOUBLE COMMENT &#39;到达率&#39;,
    marketshare DOUBLE COMMENT &#39;市场份额&#39;
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/guangdian_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS channellog_hour LIKE channellog_min;
CREATE EXTERNAL TABLE IF NOT EXISTS channellog_day LIKE channellog_min;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_count&#34;&gt;3. count&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;columnlog_count&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS columnlog_count(
    tvcolumn STRING COMMENT &#39;节目&#39;,
    tvtime STRING COMMENT &#39;日期&#39;,
    num STRING COMMENT &#39;每天收视人数&#39;,
    avg_timelen INT COMMENT &#39;平均收视时长&#39;,
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/guangdian_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;channellog_count&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS channellog_count(
    tvchannel STRING COMMENT &#39;频道&#39;,
    tvtime STRING COMMENT &#39;日期&#39;,
    num STRING COMMENT &#39;每天收视人数&#39;,
    avg_timelen INT COMMENT &#39;平均收视时长&#39;,
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/guangdian_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;truncate table columnlog_min;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS test_columnlog_min2(
    tvcolumn STRING COMMENT &#39;节目&#39;,
    tvdate1 STRING ,
    tvmin STRING COMMENT &#39;分钟&#39;,
    avgnum INT COMMENT &#39;平均收视人数&#39;,
    reachnum INT COMMENT &#39;到达人数&#39;,
    tvrating DOUBLE COMMENT &#39;收视率&#39;,
    reachrating DOUBLE COMMENT &#39;到达率&#39;,
    marketshare DOUBLE COMMENT &#39;市场份额&#39;
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/test_guangdian_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;select * from test_columnlog_min1 where tvdate=&#39;2012-09-20&#39; limit 5&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;alter table test_columnlog_min2 add partition (tvdate=&#39;2012-09-20&#39;);&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;select * from test_columnlog_min2 limit 5;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS test1(
    tvcolumn STRING COMMENT &#39;节目&#39;,
    tvmin STRING COMMENT &#39;分钟&#39;
) PARTITIONED BY (tvdate STRING COMMENT &#39;日期&#39;)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/test_ext&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE EXTERNAL TABLE IF NOT EXISTS test2(
    tvcolumn STRING COMMENT &#39;节目&#39;,
    tvdate STRING COMMENT &#39;日期&#39;,
    tvmin STRING COMMENT &#39;分钟&#39;
)
ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;@&#39;
STORED AS TEXTFILE
LOCATION &#39;/test_ext2&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;DJT_TV_OUTPUT=/guangdian
startdate=2012-09-17&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hive -e &#34;
load data inpath &#39;${DJT_TV_OUTPUT}/${startdate}/programRating-out/&#39; into table columnlog_min partition(tvdate=&#39;${startdate}&#39;);
exit;
&#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;load data inpath &#39;/guangdian/2012-09-20/programRating-out/&#39; into table test_columnlog_min1 partition(tvdate=&#39;2012-09-20&#39;);&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;load data inpath &#39;/test_guangdian_ext/tvdate=2012-09-20&#39; into table test_columnlog_min1 partition(tvdate=&#39;2012-09-20&#39;);&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;startdate 2012-09-17
enddate 2012-09-20&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;select tvcolumn,tvdate1,concat(substr(tvmin,0,2),&#39;:00&#39;),sum(avgnum)/count(&lt;strong&gt;),sum(reachnum)/count(&lt;/strong&gt;),sum(tvrating)/count(&lt;strong&gt;),sum(reachrating)/count(&lt;/strong&gt;),sum(marketshare)/count(*) from test_columnlog_min2 where tvdate=&#39;2012-09-20&#39; group by  tvcolumn, tvdate1, concat(substr(tvmin,0,2),&#39;:00&#39;) limit 5;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(&#34;cat&#34;, (1,2)), (&#34;cat&#34;, (1,5)), (&#34;mouse&#34;, (1,4)), (&#34;cat&#34;, (11,2)), (&#34;dog&#34;, (11,2)), (&#34;mouse&#34;,(1, 2))&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark 调优  spark sql 调优 方面的&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hadoop jar guangdian.jar io.dishui.tv.mapper.ExtractChannelNumAndTimelen ${DJT_TV_OUTPUT}/${startdate}/parselog-out/  ${DJT_TV_OUTPUT}/${startdate}/channelNumAndTimelen-out&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark-submit \
--class extract.ProgramAvgAndReachNum \
--master yarn \
--deploy-mode client \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 2 \
spark-1.0-jar-with-dependencies.jar \
${DJT_TV_OUTPUT}/${startdate}/parselog-out/ \
${DJT_TV_OUTPUT}/${startdate}/channelNumAndTimelen-out&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark-submit \
--class extract.CurrentNum \
--master yarn \
--deploy-mode cluster \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 512m \
--total-executor-cores 2 \
guangdian-spark.jar \
/guangdian-spark/2012-09-17/parselog-out \
/guangdian-spark/2012-09-17/extractCurrentNum-out&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark-submit \
--class extract.AnalyzeCountProgramRating \
--master yarn \
--deploy-mode cluster \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 2 \
guangdian-spark.jar \
/guangdian-spark/2012-09-17/programAvgAndReach-out/ \
/guangdian-spark/2012-09-17/programRating-out \
/guangdian-spark/2012-09-17/extractCurrentNum-out/&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark-submit \
--class extract.AnalyzeCountProgramRating \
--master spark://djt11:7077 \
--files &lt;a href=&#34;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&#34; class=&#34;bare&#34;&gt;file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/hdfs-site.xml,file:///home/hadoop/app/hadoop-2.6.5/etc/hadoop/core-site.xml&lt;/a&gt; \
--executor-memory 1g \
--total-executor-cores 2 \
guangdian-spark.jar \
/guangdian-spark/2012-09-17/programAvgAndReach-out/ \
/guangdian-spark/2012-09-17/programRating-out \
/guangdian-spark/2012-09-17/extractCurrentNum-out/&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>问题总结</title>
      <link>/post/bigdata/%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 19 Sep 2017 08:32:40 +0000</pubDate>
      
      <guid>/post/bigdata/%E9%97%AE%E9%A2%98/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;spark&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_hbase&#34;&gt;1. Hbase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_hbase&#34;&gt;1. Hbase&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;单节点启动 只有 HMaster 进程&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>机器学习与数学基础</title>
      <link>/post/july/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 27 Aug 2017 12:52:28 +0000</pubDate>
      
      <guid>/post/july/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;机器学习与数学基础&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_不明白&#34;&gt;1. 不明白&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_不明白&#34;&gt;1. 不明白&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;协方差&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SparkSql</title>
      <link>/post/bigdata/spark/spark-sql2/</link>
      <pubDate>Fri, 11 Aug 2017 14:43:47 +0000</pubDate>
      
      <guid>/post/bigdata/spark/spark-sql2/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;SparkSql2&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_spark_sql2&#34;&gt;1. Spark SQL2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_spark_sql2&#34;&gt;1. Spark SQL2&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;org.apache.spark.sql.SparkSession#sql
  org.apache.spark.sql.catalyst.parser.ParserInterface#parsePlan&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SparkSql</title>
      <link>/post/bigdata/spark/xiaoxiang/xiaoxiang-spark/</link>
      <pubDate>Fri, 11 Aug 2017 14:43:47 +0000</pubDate>
      
      <guid>/post/bigdata/spark/xiaoxiang/xiaoxiang-spark/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;SparkSql2&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_spark_sql2&#34;&gt;1. Spark SQL2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_spark_sql2&#34;&gt;1. Spark SQL2&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;逻辑查询计划图
物理查询计划
任务调度
任务分布式执行&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;前三个阶段 driver端完成&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;逻辑执行图
    完全依赖
        新生成的RDD的每个Partition完全依赖前一个依赖的某一个Partition
    部分依赖
        shuffle
        新生成的RDD的每一个Partition的部分数据完全依赖前一个依赖的某一个Partition的部分数据&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;一对一 全依赖
map filter flatMap&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;部分依赖   shuffle Rdd
groupByKey
reduceByKey&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;物理查询计划&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;划分 stage  以 shuffle 划分&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;每一个stage会产生 多个 task
将尽可能多的
不是一个partition一个task&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;几个Action 几个Job&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;一个job 多个stage&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;每个 stage 有很多个 task&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;每个 executer -&amp;#8594; process(进程) -&amp;#8594; task(线程)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;shuffle task 瓶颈所在  网络瓶颈&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;groupByKey -&amp;#8594; 新的RDD
    shuffle RDD&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;reduceByKey
    两种 RDD&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;spark historyserver 配置与启动&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;yarn.log-aggregation-enable&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;
&amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;yarn.log.server.url&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;http://master:19888/jobhistory/logs&amp;lt;/value&amp;gt;
&amp;lt;/property&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;sc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Scala 参考</title>
      <link>/post/bigdata/scala/scala-ref/</link>
      <pubDate>Fri, 28 Jul 2017 09:38:57 +0000</pubDate>
      
      <guid>/post/bigdata/scala/scala-ref/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Scala 参考&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_scala_参考&#34;&gt;1. Scala 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_scala_参考&#34;&gt;1. Scala 参考&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://alvinalexander.com/scala&#34; class=&#34;bare&#34;&gt;https://alvinalexander.com/scala&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dzone.com&#34; class=&#34;bare&#34;&gt;https://dzone.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/lauris/awesome-scala&#34; class=&#34;bare&#34;&gt;https://github.com/lauris/awesome-scala&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://windor.gitbooks.io/beginners-guide-to-scala/content/chp1-extractors.html&#34; class=&#34;bare&#34;&gt;https://windor.gitbooks.io/beginners-guide-to-scala/content/chp1-extractors.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>neo4j</title>
      <link>/post/work/zichuan/neo4j/</link>
      <pubDate>Mon, 10 Jul 2017 08:54:21 +0000</pubDate>
      
      <guid>/post/work/zichuan/neo4j/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_参考&#34;&gt;1. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;preamble&#34;&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;例如, 一个可以用来查找 Emil 的朋友的模式:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (ee:Person)-[:KNOWS]-(friends)
WHERE ee.name = &#34;Emil&#34; RETURN ee, friends&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MATCH用于描述由已知节点查找节点的模式的子句&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(ee)以 Person 开始模式 (由 WHERE 限制)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-[:KNOWS]-匹配 &#34;KNOWS&#34; 关系 (任意方向)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(friends)将被绑定到 Emil 的朋友&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;模式匹配可用于做推荐. Johan 正在学习冲浪, 因此他也许希望查找一个已经冲浪的新朋友:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (js:Person)-[:KNOWS]-()-[:KNOWS]-(surfer)
WHERE js.name = &#34;Johan&#34; AND surfer.hobby = &#34;surfing&#34;
RETURN DISTINCT surfer&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;()空的圆括符忽略这些节点
DISTINCT因为多于一条路径将匹配该模式
冲浪者将包含 Allison, 他是一位冲浪的朋友的朋友&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;在查询前面加上 EXPLAIN  或  PROFILE以了解您的查询是如何工作的:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;PROFILE MATCH (js:Person)-[:KNOWS]-()-[:KNOWS]-(surfer)
WHERE js.name = &#34;Johan&#34; AND surfer.hobby = &#34;surfing&#34;
RETURN DISTINCT surfer&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheMatrix:Movie {title:&#39;The Matrix&#39;, released:1999, tagline:&#39;Welcome to the Real World&#39;})
CREATE (Keanu:Person {name:&#39;Keanu Reeves&#39;, born:1964})
CREATE (Carrie:Person {name:&#39;Carrie-Anne Moss&#39;, born:1967})
CREATE (Laurence:Person {name:&#39;Laurence Fishburne&#39;, born:1961})
CREATE (Hugo:Person {name:&#39;Hugo Weaving&#39;, born:1960})
CREATE (AndyW:Person {name:&#39;Andy Wachowski&#39;, born:1967})
CREATE (LanaW:Person {name:&#39;Lana Wachowski&#39;, born:1965})
CREATE (JoelS:Person {name:&#39;Joel Silver&#39;, born:1952})&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Neo&#39;]}]&amp;#8594;(TheMatrix),
  (Carrie)-[:ACTED_IN {roles:[&#39;Trinity&#39;]}]&amp;#8594;(TheMatrix),
  (Laurence)-[:ACTED_IN {roles:[&#39;Morpheus&#39;]}]&amp;#8594;(TheMatrix),
  (Hugo)-[:ACTED_IN {roles:[&#39;Agent Smith&#39;]}]&amp;#8594;(TheMatrix),
  (AndyW)-[:DIRECTED]&amp;#8594;(TheMatrix),
  (LanaW)-[:DIRECTED]&amp;#8594;(TheMatrix),
  (JoelS)-[:PRODUCED]&amp;#8594;(TheMatrix)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (Emil:Person {name:&#34;Emil Eifrem&#34;, born:1978})
CREATE (Emil)-[:ACTED_IN {roles:[&#34;Emil&#34;]}]&amp;#8594;(TheMatrix)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheMatrixReloaded:Movie {title:&#39;The Matrix Reloaded&#39;, released:2003, tagline:&#39;Free your mind&#39;})
CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Neo&#39;]}]&amp;#8594;(TheMatrixReloaded),
  (Carrie)-[:ACTED_IN {roles:[&#39;Trinity&#39;]}]&amp;#8594;(TheMatrixReloaded),
  (Laurence)-[:ACTED_IN {roles:[&#39;Morpheus&#39;]}]&amp;#8594;(TheMatrixReloaded),
  (Hugo)-[:ACTED_IN {roles:[&#39;Agent Smith&#39;]}]&amp;#8594;(TheMatrixReloaded),
  (AndyW)-[:DIRECTED]&amp;#8594;(TheMatrixReloaded),
  (LanaW)-[:DIRECTED]&amp;#8594;(TheMatrixReloaded),
  (JoelS)-[:PRODUCED]&amp;#8594;(TheMatrixReloaded)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheMatrixRevolutions:Movie {title:&#39;The Matrix Revolutions&#39;, released:2003, tagline:&#39;Everything that has a beginning has an end&#39;})
CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Neo&#39;]}]&amp;#8594;(TheMatrixRevolutions),
  (Carrie)-[:ACTED_IN {roles:[&#39;Trinity&#39;]}]&amp;#8594;(TheMatrixRevolutions),
  (Laurence)-[:ACTED_IN {roles:[&#39;Morpheus&#39;]}]&amp;#8594;(TheMatrixRevolutions),
  (Hugo)-[:ACTED_IN {roles:[&#39;Agent Smith&#39;]}]&amp;#8594;(TheMatrixRevolutions),
  (AndyW)-[:DIRECTED]&amp;#8594;(TheMatrixRevolutions),
  (LanaW)-[:DIRECTED]&amp;#8594;(TheMatrixRevolutions),
  (JoelS)-[:PRODUCED]&amp;#8594;(TheMatrixRevolutions)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheDevilsAdvocate:Movie {title:&#34;The Devil&amp;#8217;s Advocate&#34;, released:1997, tagline:&#39;Evil has its winning ways&#39;})
CREATE (Charlize:Person {name:&#39;Charlize Theron&#39;, born:1975})
CREATE (Al:Person {name:&#39;Al Pacino&#39;, born:1940})
CREATE (Taylor:Person {name:&#39;Taylor Hackford&#39;, born:1944})
CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Kevin Lomax&#39;]}]&amp;#8594;(TheDevilsAdvocate),
  (Charlize)-[:ACTED_IN {roles:[&#39;Mary Ann Lomax&#39;]}]&amp;#8594;(TheDevilsAdvocate),
  (Al)-[:ACTED_IN {roles:[&#39;John Milton&#39;]}]&amp;#8594;(TheDevilsAdvocate),
  (Taylor)-[:DIRECTED]&amp;#8594;(TheDevilsAdvocate)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (AFewGoodMen:Movie {title:&#34;A Few Good Men&#34;, released:1992, tagline:&#34;In the heart of the nation&amp;#8217;s capital, in a courthouse of the U.S. government, one man will stop at nothing to keep his honor, and one will stop at nothing to find the truth.&#34;})
CREATE (TomC:Person {name:&#39;Tom Cruise&#39;, born:1962})
CREATE (JackN:Person {name:&#39;Jack Nicholson&#39;, born:1937})
CREATE (DemiM:Person {name:&#39;Demi Moore&#39;, born:1962})
CREATE (KevinB:Person {name:&#39;Kevin Bacon&#39;, born:1958})
CREATE (KieferS:Person {name:&#39;Kiefer Sutherland&#39;, born:1966})
CREATE (NoahW:Person {name:&#39;Noah Wyle&#39;, born:1971})
CREATE (CubaG:Person {name:&#39;Cuba Gooding Jr.&#39;, born:1968})
CREATE (KevinP:Person {name:&#39;Kevin Pollak&#39;, born:1957})
CREATE (JTW:Person {name:&#39;J.T. Walsh&#39;, born:1943})
CREATE (JamesM:Person {name:&#39;James Marshall&#39;, born:1967})
CREATE (ChristopherG:Person {name:&#39;Christopher Guest&#39;, born:1948})
CREATE (RobR:Person {name:&#39;Rob Reiner&#39;, born:1947})
CREATE (AaronS:Person {name:&#39;Aaron Sorkin&#39;, born:1961})
CREATE
  (TomC)-[:ACTED_IN {roles:[&#39;Lt. Daniel Kaffee&#39;]}]&amp;#8594;(AFewGoodMen),
  (JackN)-[:ACTED_IN {roles:[&#39;Col. Nathan R. Jessup&#39;]}]&amp;#8594;(AFewGoodMen),
  (DemiM)-[:ACTED_IN {roles:[&#39;Lt. Cdr. JoAnne Galloway&#39;]}]&amp;#8594;(AFewGoodMen),
  (KevinB)-[:ACTED_IN {roles:[&#39;Capt. Jack Ross&#39;]}]&amp;#8594;(AFewGoodMen),
  (KieferS)-[:ACTED_IN {roles:[&#39;Lt. Jonathan Kendrick&#39;]}]&amp;#8594;(AFewGoodMen),
  (NoahW)-[:ACTED_IN {roles:[&#39;Cpl. Jeffrey Barnes&#39;]}]&amp;#8594;(AFewGoodMen),
  (CubaG)-[:ACTED_IN {roles:[&#39;Cpl. Carl Hammaker&#39;]}]&amp;#8594;(AFewGoodMen),
  (KevinP)-[:ACTED_IN {roles:[&#39;Lt. Sam Weinberg&#39;]}]&amp;#8594;(AFewGoodMen),
  (JTW)-[:ACTED_IN {roles:[&#39;Lt. Col. Matthew Andrew Markinson&#39;]}]&amp;#8594;(AFewGoodMen),
  (JamesM)-[:ACTED_IN {roles:[&#39;Pfc. Louden Downey&#39;]}]&amp;#8594;(AFewGoodMen),
  (ChristopherG)-[:ACTED_IN {roles:[&#39;Dr. Stone&#39;]}]&amp;#8594;(AFewGoodMen),
  (AaronS)-[:ACTED_IN {roles:[&#39;Man in Bar&#39;]}]&amp;#8594;(AFewGoodMen),
  (RobR)-[:DIRECTED]&amp;#8594;(AFewGoodMen),
  (AaronS)-[:WROTE]&amp;#8594;(AFewGoodMen)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TopGun:Movie {title:&#34;Top Gun&#34;, released:1986, tagline:&#39;I feel the need, the need for speed.&#39;})
CREATE (KellyM:Person {name:&#39;Kelly McGillis&#39;, born:1957})
CREATE (ValK:Person {name:&#39;Val Kilmer&#39;, born:1959})
CREATE (AnthonyE:Person {name:&#39;Anthony Edwards&#39;, born:1962})
CREATE (TomS:Person {name:&#39;Tom Skerritt&#39;, born:1933})
CREATE (MegR:Person {name:&#39;Meg Ryan&#39;, born:1961})
CREATE (TonyS:Person {name:&#39;Tony Scott&#39;, born:1944})
CREATE (JimC:Person {name:&#39;Jim Cash&#39;, born:1941})
CREATE
  (TomC)-[:ACTED_IN {roles:[&#39;Maverick&#39;]}]&amp;#8594;(TopGun),
  (KellyM)-[:ACTED_IN {roles:[&#39;Charlie&#39;]}]&amp;#8594;(TopGun),
  (ValK)-[:ACTED_IN {roles:[&#39;Iceman&#39;]}]&amp;#8594;(TopGun),
  (AnthonyE)-[:ACTED_IN {roles:[&#39;Goose&#39;]}]&amp;#8594;(TopGun),
  (TomS)-[:ACTED_IN {roles:[&#39;Viper&#39;]}]&amp;#8594;(TopGun),
  (MegR)-[:ACTED_IN {roles:[&#39;Carole&#39;]}]&amp;#8594;(TopGun),
  (TonyS)-[:DIRECTED]&amp;#8594;(TopGun),
  (JimC)-[:WROTE]&amp;#8594;(TopGun)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (JerryMaguire:Movie {title:&#39;Jerry Maguire&#39;, released:2000, tagline:&#39;The rest of his life begins now.&#39;})
CREATE (ReneeZ:Person {name:&#39;Renee Zellweger&#39;, born:1969})
CREATE (KellyP:Person {name:&#39;Kelly Preston&#39;, born:1962})
CREATE (JerryO:Person {name:&#34;Jerry O&amp;#8217;Connell&#34;, born:1974})
CREATE (JayM:Person {name:&#39;Jay Mohr&#39;, born:1970})
CREATE (BonnieH:Person {name:&#39;Bonnie Hunt&#39;, born:1961})
CREATE (ReginaK:Person {name:&#39;Regina King&#39;, born:1971})
CREATE (JonathanL:Person {name:&#39;Jonathan Lipnicki&#39;, born:1996})
CREATE (CameronC:Person {name:&#39;Cameron Crowe&#39;, born:1957})
CREATE
  (TomC)-[:ACTED_IN {roles:[&#39;Jerry Maguire&#39;]}]&amp;#8594;(JerryMaguire),
  (CubaG)-[:ACTED_IN {roles:[&#39;Rod Tidwell&#39;]}]&amp;#8594;(JerryMaguire),
  (ReneeZ)-[:ACTED_IN {roles:[&#39;Dorothy Boyd&#39;]}]&amp;#8594;(JerryMaguire),
  (KellyP)-[:ACTED_IN {roles:[&#39;Avery Bishop&#39;]}]&amp;#8594;(JerryMaguire),
  (JerryO)-[:ACTED_IN {roles:[&#39;Frank Cushman&#39;]}]&amp;#8594;(JerryMaguire),
  (JayM)-[:ACTED_IN {roles:[&#39;Bob Sugar&#39;]}]&amp;#8594;(JerryMaguire),
  (BonnieH)-[:ACTED_IN {roles:[&#39;Laurel Boyd&#39;]}]&amp;#8594;(JerryMaguire),
  (ReginaK)-[:ACTED_IN {roles:[&#39;Marcee Tidwell&#39;]}]&amp;#8594;(JerryMaguire),
  (JonathanL)-[:ACTED_IN {roles:[&#39;Ray Boyd&#39;]}]&amp;#8594;(JerryMaguire),
  (CameronC)-[:DIRECTED]&amp;#8594;(JerryMaguire),
  (CameronC)-[:PRODUCED]&amp;#8594;(JerryMaguire),
  (CameronC)-[:WROTE]&amp;#8594;(JerryMaguire)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (StandByMe:Movie {title:&#34;Stand By Me&#34;, released:1986, tagline:&#34;For some, it&amp;#8217;s the last real taste of innocence, and the first real taste of life. But for everyone, it&amp;#8217;s the time that memories are made of.&#34;})
CREATE (RiverP:Person {name:&#39;River Phoenix&#39;, born:1970})
CREATE (CoreyF:Person {name:&#39;Corey Feldman&#39;, born:1971})
CREATE (WilW:Person {name:&#39;Wil Wheaton&#39;, born:1972})
CREATE (JohnC:Person {name:&#39;John Cusack&#39;, born:1966})
CREATE (MarshallB:Person {name:&#39;Marshall Bell&#39;, born:1942})
CREATE
  (WilW)-[:ACTED_IN {roles:[&#39;Gordie Lachance&#39;]}]&amp;#8594;(StandByMe),
  (RiverP)-[:ACTED_IN {roles:[&#39;Chris Chambers&#39;]}]&amp;#8594;(StandByMe),
  (JerryO)-[:ACTED_IN {roles:[&#39;Vern Tessio&#39;]}]&amp;#8594;(StandByMe),
  (CoreyF)-[:ACTED_IN {roles:[&#39;Teddy Duchamp&#39;]}]&amp;#8594;(StandByMe),
  (JohnC)-[:ACTED_IN {roles:[&#39;Denny Lachance&#39;]}]&amp;#8594;(StandByMe),
  (KieferS)-[:ACTED_IN {roles:[&#39;Ace Merrill&#39;]}]&amp;#8594;(StandByMe),
  (MarshallB)-[:ACTED_IN {roles:[&#39;Mr. Lachance&#39;]}]&amp;#8594;(StandByMe),
  (RobR)-[:DIRECTED]&amp;#8594;(StandByMe)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (AsGoodAsItGets:Movie {title:&#39;As Good as It Gets&#39;, released:1997, tagline:&#39;A comedy from the heart that goes for the throat.&#39;})
CREATE (HelenH:Person {name:&#39;Helen Hunt&#39;, born:1963})
CREATE (GregK:Person {name:&#39;Greg Kinnear&#39;, born:1963})
CREATE (JamesB:Person {name:&#39;James L. Brooks&#39;, born:1940})
CREATE
  (JackN)-[:ACTED_IN {roles:[&#39;Melvin Udall&#39;]}]&amp;#8594;(AsGoodAsItGets),
  (HelenH)-[:ACTED_IN {roles:[&#39;Carol Connelly&#39;]}]&amp;#8594;(AsGoodAsItGets),
  (GregK)-[:ACTED_IN {roles:[&#39;Simon Bishop&#39;]}]&amp;#8594;(AsGoodAsItGets),
  (CubaG)-[:ACTED_IN {roles:[&#39;Frank Sachs&#39;]}]&amp;#8594;(AsGoodAsItGets),
  (JamesB)-[:DIRECTED]&amp;#8594;(AsGoodAsItGets)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (WhatDreamsMayCome:Movie {title:&#39;What Dreams May Come&#39;, released:1998, tagline:&#39;After life there is more. The end is just the beginning.&#39;})
CREATE (AnnabellaS:Person {name:&#39;Annabella Sciorra&#39;, born:1960})
CREATE (MaxS:Person {name:&#39;Max von Sydow&#39;, born:1929})
CREATE (WernerH:Person {name:&#39;Werner Herzog&#39;, born:1942})
CREATE (Robin:Person {name:&#39;Robin Williams&#39;, born:1951})
CREATE (VincentW:Person {name:&#39;Vincent Ward&#39;, born:1956})
CREATE
  (Robin)-[:ACTED_IN {roles:[&#39;Chris Nielsen&#39;]}]&amp;#8594;(WhatDreamsMayCome),
  (CubaG)-[:ACTED_IN {roles:[&#39;Albert Lewis&#39;]}]&amp;#8594;(WhatDreamsMayCome),
  (AnnabellaS)-[:ACTED_IN {roles:[&#39;Annie Collins-Nielsen&#39;]}]&amp;#8594;(WhatDreamsMayCome),
  (MaxS)-[:ACTED_IN {roles:[&#39;The Tracker&#39;]}]&amp;#8594;(WhatDreamsMayCome),
  (WernerH)-[:ACTED_IN {roles:[&#39;The Face&#39;]}]&amp;#8594;(WhatDreamsMayCome),
  (VincentW)-[:DIRECTED]&amp;#8594;(WhatDreamsMayCome)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (SnowFallingonCedars:Movie {title:&#39;Snow Falling on Cedars&#39;, released:1999, tagline:&#39;First loves last. Forever.&#39;})
CREATE (EthanH:Person {name:&#39;Ethan Hawke&#39;, born:1970})
CREATE (RickY:Person {name:&#39;Rick Yune&#39;, born:1971})
CREATE (JamesC:Person {name:&#39;James Cromwell&#39;, born:1940})
CREATE (ScottH:Person {name:&#39;Scott Hicks&#39;, born:1953})
CREATE
  (EthanH)-[:ACTED_IN {roles:[&#39;Ishmael Chambers&#39;]}]&amp;#8594;(SnowFallingonCedars),
  (RickY)-[:ACTED_IN {roles:[&#39;Kazuo Miyamoto&#39;]}]&amp;#8594;(SnowFallingonCedars),
  (MaxS)-[:ACTED_IN {roles:[&#39;Nels Gudmundsson&#39;]}]&amp;#8594;(SnowFallingonCedars),
  (JamesC)-[:ACTED_IN {roles:[&#39;Judge Fielding&#39;]}]&amp;#8594;(SnowFallingonCedars),
  (ScottH)-[:DIRECTED]&amp;#8594;(SnowFallingonCedars)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (YouveGotMail:Movie {title:&#34;You&amp;#8217;ve Got Mail&#34;, released:1998, tagline:&#39;At odds in life&amp;#8230;&amp;#8203; in love on-line.&#39;})
CREATE (ParkerP:Person {name:&#39;Parker Posey&#39;, born:1968})
CREATE (DaveC:Person {name:&#39;Dave Chappelle&#39;, born:1973})
CREATE (SteveZ:Person {name:&#39;Steve Zahn&#39;, born:1967})
CREATE (TomH:Person {name:&#39;Tom Hanks&#39;, born:1956})
CREATE (NoraE:Person {name:&#39;Nora Ephron&#39;, born:1941})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Joe Fox&#39;]}]&amp;#8594;(YouveGotMail),
  (MegR)-[:ACTED_IN {roles:[&#39;Kathleen Kelly&#39;]}]&amp;#8594;(YouveGotMail),
  (GregK)-[:ACTED_IN {roles:[&#39;Frank Navasky&#39;]}]&amp;#8594;(YouveGotMail),
  (ParkerP)-[:ACTED_IN {roles:[&#39;Patricia Eden&#39;]}]&amp;#8594;(YouveGotMail),
  (DaveC)-[:ACTED_IN {roles:[&#39;Kevin Jackson&#39;]}]&amp;#8594;(YouveGotMail),
  (SteveZ)-[:ACTED_IN {roles:[&#39;George Pappas&#39;]}]&amp;#8594;(YouveGotMail),
  (NoraE)-[:DIRECTED]&amp;#8594;(YouveGotMail)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (SleeplessInSeattle:Movie {title:&#39;Sleepless in Seattle&#39;, released:1993, tagline:&#39;What if someone you never met, someone you never saw, someone you never knew was the only someone for you?&#39;})
CREATE (RitaW:Person {name:&#39;Rita Wilson&#39;, born:1956})
CREATE (BillPull:Person {name:&#39;Bill Pullman&#39;, born:1953})
CREATE (VictorG:Person {name:&#39;Victor Garber&#39;, born:1949})
CREATE (RosieO:Person {name:&#34;Rosie O&amp;#8217;Donnell&#34;, born:1962})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Sam Baldwin&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (MegR)-[:ACTED_IN {roles:[&#39;Annie Reed&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (RitaW)-[:ACTED_IN {roles:[&#39;Suzy&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (BillPull)-[:ACTED_IN {roles:[&#39;Walter&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (VictorG)-[:ACTED_IN {roles:[&#39;Greg&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (RosieO)-[:ACTED_IN {roles:[&#39;Becky&#39;]}]&amp;#8594;(SleeplessInSeattle),
  (NoraE)-[:DIRECTED]&amp;#8594;(SleeplessInSeattle)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (JoeVersustheVolcano:Movie {title:&#39;Joe Versus the Volcano&#39;, released:1990, tagline:&#39;A story of love, lava and burning desire.&#39;})
CREATE (JohnS:Person {name:&#39;John Patrick Stanley&#39;, born:1950})
CREATE (Nathan:Person {name:&#39;Nathan Lane&#39;, born:1956})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Joe Banks&#39;]}]&amp;#8594;(JoeVersustheVolcano),
  (MegR)-[:ACTED_IN {roles:[&#39;DeDe&#39;, &#39;Angelica Graynamore&#39;, &#39;Patricia Graynamore&#39;]}]&amp;#8594;(JoeVersustheVolcano),
  (Nathan)-[:ACTED_IN {roles:[&#39;Baw&#39;]}]&amp;#8594;(JoeVersustheVolcano),
  (JohnS)-[:DIRECTED]&amp;#8594;(JoeVersustheVolcano)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (WhenHarryMetSally:Movie {title:&#39;When Harry Met Sally&#39;, released:1998, tagline:&#39;At odds in life&amp;#8230;&amp;#8203; in love on-line.&#39;})
CREATE (BillyC:Person {name:&#39;Billy Crystal&#39;, born:1948})
CREATE (CarrieF:Person {name:&#39;Carrie Fisher&#39;, born:1956})
CREATE (BrunoK:Person {name:&#39;Bruno Kirby&#39;, born:1949})
CREATE
  (BillyC)-[:ACTED_IN {roles:[&#39;Harry Burns&#39;]}]&amp;#8594;(WhenHarryMetSally),
  (MegR)-[:ACTED_IN {roles:[&#39;Sally Albright&#39;]}]&amp;#8594;(WhenHarryMetSally),
  (CarrieF)-[:ACTED_IN {roles:[&#39;Marie&#39;]}]&amp;#8594;(WhenHarryMetSally),
  (BrunoK)-[:ACTED_IN {roles:[&#39;Jess&#39;]}]&amp;#8594;(WhenHarryMetSally),
  (RobR)-[:DIRECTED]&amp;#8594;(WhenHarryMetSally),
  (RobR)-[:PRODUCED]&amp;#8594;(WhenHarryMetSally),
  (NoraE)-[:PRODUCED]&amp;#8594;(WhenHarryMetSally),
  (NoraE)-[:WROTE]&amp;#8594;(WhenHarryMetSally)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (ThatThingYouDo:Movie {title:&#39;That Thing You Do&#39;, released:1996, tagline:&#39;In every life there comes a time when that thing you dream becomes that thing you do&#39;})
CREATE (LivT:Person {name:&#39;Liv Tyler&#39;, born:1977})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Mr. White&#39;]}]&amp;#8594;(ThatThingYouDo),
  (LivT)-[:ACTED_IN {roles:[&#39;Faye Dolan&#39;]}]&amp;#8594;(ThatThingYouDo),
  (Charlize)-[:ACTED_IN {roles:[&#39;Tina&#39;]}]&amp;#8594;(ThatThingYouDo),
  (TomH)-[:DIRECTED]&amp;#8594;(ThatThingYouDo)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheReplacements:Movie {title:&#39;The Replacements&#39;, released:2000, tagline:&#39;Pain heals, Chicks dig scars&amp;#8230;&amp;#8203; Glory lasts forever&#39;})
CREATE (Brooke:Person {name:&#39;Brooke Langton&#39;, born:1970})
CREATE (Gene:Person {name:&#39;Gene Hackman&#39;, born:1930})
CREATE (Orlando:Person {name:&#39;Orlando Jones&#39;, born:1968})
CREATE (Howard:Person {name:&#39;Howard Deutch&#39;, born:1950})
CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Shane Falco&#39;]}]&amp;#8594;(TheReplacements),
  (Brooke)-[:ACTED_IN {roles:[&#39;Annabelle Farrell&#39;]}]&amp;#8594;(TheReplacements),
  (Gene)-[:ACTED_IN {roles:[&#39;Jimmy McGinty&#39;]}]&amp;#8594;(TheReplacements),
  (Orlando)-[:ACTED_IN {roles:[&#39;Clifford Franklin&#39;]}]&amp;#8594;(TheReplacements),
  (Howard)-[:DIRECTED]&amp;#8594;(TheReplacements)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (RescueDawn:Movie {title:&#39;RescueDawn&#39;, released:2006, tagline:&#34;Based on the extraordinary true story of one man&amp;#8217;s fight for freedom&#34;})
CREATE (ChristianB:Person {name:&#39;Christian Bale&#39;, born:1974})
CREATE (ZachG:Person {name:&#39;Zach Grenier&#39;, born:1954})
CREATE
  (MarshallB)-[:ACTED_IN {roles:[&#39;Admiral&#39;]}]&amp;#8594;(RescueDawn),
  (ChristianB)-[:ACTED_IN {roles:[&#39;Dieter Dengler&#39;]}]&amp;#8594;(RescueDawn),
  (ZachG)-[:ACTED_IN {roles:[&#39;Squad Leader&#39;]}]&amp;#8594;(RescueDawn),
  (SteveZ)-[:ACTED_IN {roles:[&#39;Duane&#39;]}]&amp;#8594;(RescueDawn),
  (WernerH)-[:DIRECTED]&amp;#8594;(RescueDawn)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheBirdcage:Movie {title:&#39;The Birdcage&#39;, released:1996, tagline:&#39;Come as you are&#39;})
CREATE (MikeN:Person {name:&#39;Mike Nichols&#39;, born:1931})
CREATE
  (Robin)-[:ACTED_IN {roles:[&#39;Armand Goldman&#39;]}]&amp;#8594;(TheBirdcage),
  (Nathan)-[:ACTED_IN {roles:[&#39;Albert Goldman&#39;]}]&amp;#8594;(TheBirdcage),
  (Gene)-[:ACTED_IN {roles:[&#39;Sen. Kevin Keeley&#39;]}]&amp;#8594;(TheBirdcage),
  (MikeN)-[:DIRECTED]&amp;#8594;(TheBirdcage)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (Unforgiven:Movie {title:&#39;Unforgiven&#39;, released:1992, tagline:&#34;It&amp;#8217;s a hell of a thing, killing a man&#34;})
CREATE (RichardH:Person {name:&#39;Richard Harris&#39;, born:1930})
CREATE (ClintE:Person {name:&#39;Clint Eastwood&#39;, born:1930})
CREATE
  (RichardH)-[:ACTED_IN {roles:[&#39;English Bob&#39;]}]&amp;#8594;(Unforgiven),
  (ClintE)-[:ACTED_IN {roles:[&#39;Bill Munny&#39;]}]&amp;#8594;(Unforgiven),
  (Gene)-[:ACTED_IN {roles:[&#39;Little Bill Daggett&#39;]}]&amp;#8594;(Unforgiven),
  (ClintE)-[:DIRECTED]&amp;#8594;(Unforgiven)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (JohnnyMnemonic:Movie {title:&#39;Johnny Mnemonic&#39;, released:1995, tagline:&#39;The hottest data on earth. In the coolest head in town&#39;})
CREATE (Takeshi:Person {name:&#39;Takeshi Kitano&#39;, born:1947})
CREATE (Dina:Person {name:&#39;Dina Meyer&#39;, born:1968})
CREATE (IceT:Person {name:&#39;Ice-T&#39;, born:1958})
CREATE (RobertL:Person {name:&#39;Robert Longo&#39;, born:1953})
CREATE
  (Keanu)-[:ACTED_IN {roles:[&#39;Johnny Mnemonic&#39;]}]&amp;#8594;(JohnnyMnemonic),
  (Takeshi)-[:ACTED_IN {roles:[&#39;Takahashi&#39;]}]&amp;#8594;(JohnnyMnemonic),
  (Dina)-[:ACTED_IN {roles:[&#39;Jane&#39;]}]&amp;#8594;(JohnnyMnemonic),
  (IceT)-[:ACTED_IN {roles:[&#39;J-Bone&#39;]}]&amp;#8594;(JohnnyMnemonic),
  (RobertL)-[:DIRECTED]&amp;#8594;(JohnnyMnemonic)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (CloudAtlas:Movie {title:&#39;Cloud Atlas&#39;, released:2012, tagline:&#39;Everything is connected&#39;})
CREATE (HalleB:Person {name:&#39;Halle Berry&#39;, born:1966})
CREATE (JimB:Person {name:&#39;Jim Broadbent&#39;, born:1949})
CREATE (TomT:Person {name:&#39;Tom Tykwer&#39;, born:1965})
CREATE (DavidMitchell:Person {name:&#39;David Mitchell&#39;, born:1969})
CREATE (StefanArndt:Person {name:&#39;Stefan Arndt&#39;, born:1961})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Zachry&#39;, &#39;Dr. Henry Goose&#39;, &#39;Isaac Sachs&#39;, &#39;Dermot Hoggins&#39;]}]&amp;#8594;(CloudAtlas),
  (Hugo)-[:ACTED_IN {roles:[&#39;Bill Smoke&#39;, &#39;Haskell Moore&#39;, &#39;Tadeusz Kesselring&#39;, &#39;Nurse Noakes&#39;, &#39;Boardman Mephi&#39;, &#39;Old Georgie&#39;]}]&amp;#8594;(CloudAtlas),
  (HalleB)-[:ACTED_IN {roles:[&#39;Luisa Rey&#39;, &#39;Jocasta Ayrs&#39;, &#39;Ovid&#39;, &#39;Meronym&#39;]}]&amp;#8594;(CloudAtlas),
  (JimB)-[:ACTED_IN {roles:[&#39;Vyvyan Ayrs&#39;, &#39;Captain Molyneux&#39;, &#39;Timothy Cavendish&#39;]}]&amp;#8594;(CloudAtlas),
  (TomT)-[:DIRECTED]&amp;#8594;(CloudAtlas),
  (AndyW)-[:DIRECTED]&amp;#8594;(CloudAtlas),
  (LanaW)-[:DIRECTED]&amp;#8594;(CloudAtlas),
  (DavidMitchell)-[:WROTE]&amp;#8594;(CloudAtlas),
  (StefanArndt)-[:PRODUCED]&amp;#8594;(CloudAtlas)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheDaVinciCode:Movie {title:&#39;The Da Vinci Code&#39;, released:2006, tagline:&#39;Break The Codes&#39;})
CREATE (IanM:Person {name:&#39;Ian McKellen&#39;, born:1939})
CREATE (AudreyT:Person {name:&#39;Audrey Tautou&#39;, born:1976})
CREATE (PaulB:Person {name:&#39;Paul Bettany&#39;, born:1971})
CREATE (RonH:Person {name:&#39;Ron Howard&#39;, born:1954})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Dr. Robert Langdon&#39;]}]&amp;#8594;(TheDaVinciCode),
  (IanM)-[:ACTED_IN {roles:[&#39;Sir Leight Teabing&#39;]}]&amp;#8594;(TheDaVinciCode),
  (AudreyT)-[:ACTED_IN {roles:[&#39;Sophie Neveu&#39;]}]&amp;#8594;(TheDaVinciCode),
  (PaulB)-[:ACTED_IN {roles:[&#39;Silas&#39;]}]&amp;#8594;(TheDaVinciCode),
  (RonH)-[:DIRECTED]&amp;#8594;(TheDaVinciCode)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (VforVendetta:Movie {title:&#39;V for Vendetta&#39;, released:2006, tagline:&#39;Freedom! Forever!&#39;})
CREATE (NatalieP:Person {name:&#39;Natalie Portman&#39;, born:1981})
CREATE (StephenR:Person {name:&#39;Stephen Rea&#39;, born:1946})
CREATE (JohnH:Person {name:&#39;John Hurt&#39;, born:1940})
CREATE (BenM:Person {name: &#39;Ben Miles&#39;, born:1967})
CREATE
  (Hugo)-[:ACTED_IN {roles:[&#39;V&#39;]}]&amp;#8594;(VforVendetta),
  (NatalieP)-[:ACTED_IN {roles:[&#39;Evey Hammond&#39;]}]&amp;#8594;(VforVendetta),
  (StephenR)-[:ACTED_IN {roles:[&#39;Eric Finch&#39;]}]&amp;#8594;(VforVendetta),
  (JohnH)-[:ACTED_IN {roles:[&#39;High Chancellor Adam Sutler&#39;]}]&amp;#8594;(VforVendetta),
  (BenM)-[:ACTED_IN {roles:[&#39;Dascomb&#39;]}]&amp;#8594;(VforVendetta),
  (JamesM)-[:DIRECTED]&amp;#8594;(VforVendetta),
  (AndyW)-[:PRODUCED]&amp;#8594;(VforVendetta),
  (LanaW)-[:PRODUCED]&amp;#8594;(VforVendetta),
  (JoelS)-[:PRODUCED]&amp;#8594;(VforVendetta),
  (AndyW)-[:WROTE]&amp;#8594;(VforVendetta),
  (LanaW)-[:WROTE]&amp;#8594;(VforVendetta)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (SpeedRacer:Movie {title:&#39;Speed Racer&#39;, released:2008, tagline:&#39;Speed has no limits&#39;})
CREATE (EmileH:Person {name:&#39;Emile Hirsch&#39;, born:1985})
CREATE (JohnG:Person {name:&#39;John Goodman&#39;, born:1960})
CREATE (SusanS:Person {name:&#39;Susan Sarandon&#39;, born:1946})
CREATE (MatthewF:Person {name:&#39;Matthew Fox&#39;, born:1966})
CREATE (ChristinaR:Person {name:&#39;Christina Ricci&#39;, born:1980})
CREATE (Rain:Person {name:&#39;Rain&#39;, born:1982})
CREATE
  (EmileH)-[:ACTED_IN {roles:[&#39;Speed Racer&#39;]}]&amp;#8594;(SpeedRacer),
  (JohnG)-[:ACTED_IN {roles:[&#39;Pops&#39;]}]&amp;#8594;(SpeedRacer),
  (SusanS)-[:ACTED_IN {roles:[&#39;Mom&#39;]}]&amp;#8594;(SpeedRacer),
  (MatthewF)-[:ACTED_IN {roles:[&#39;Racer X&#39;]}]&amp;#8594;(SpeedRacer),
  (ChristinaR)-[:ACTED_IN {roles:[&#39;Trixie&#39;]}]&amp;#8594;(SpeedRacer),
  (Rain)-[:ACTED_IN {roles:[&#39;Taejo Togokahn&#39;]}]&amp;#8594;(SpeedRacer),
  (BenM)-[:ACTED_IN {roles:[&#39;Cass Jones&#39;]}]&amp;#8594;(SpeedRacer),
  (AndyW)-[:DIRECTED]&amp;#8594;(SpeedRacer),
  (LanaW)-[:DIRECTED]&amp;#8594;(SpeedRacer),
  (AndyW)-[:WROTE]&amp;#8594;(SpeedRacer),
  (LanaW)-[:WROTE]&amp;#8594;(SpeedRacer),
  (JoelS)-[:PRODUCED]&amp;#8594;(SpeedRacer)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (NinjaAssassin:Movie {title:&#39;Ninja Assassin&#39;, released:2009, tagline:&#39;Prepare to enter a secret world of assassins&#39;})
CREATE (NaomieH:Person {name:&#39;Naomie Harris&#39;})
CREATE
  (Rain)-[:ACTED_IN {roles:[&#39;Raizo&#39;]}]&amp;#8594;(NinjaAssassin),
  (NaomieH)-[:ACTED_IN {roles:[&#39;Mika Coretti&#39;]}]&amp;#8594;(NinjaAssassin),
  (RickY)-[:ACTED_IN {roles:[&#39;Takeshi&#39;]}]&amp;#8594;(NinjaAssassin),
  (BenM)-[:ACTED_IN {roles:[&#39;Ryan Maslow&#39;]}]&amp;#8594;(NinjaAssassin),
  (JamesM)-[:DIRECTED]&amp;#8594;(NinjaAssassin),
  (AndyW)-[:PRODUCED]&amp;#8594;(NinjaAssassin),
  (LanaW)-[:PRODUCED]&amp;#8594;(NinjaAssassin),
  (JoelS)-[:PRODUCED]&amp;#8594;(NinjaAssassin)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (TheGreenMile:Movie {title:&#39;The Green Mile&#39;, released:1999, tagline:&#34;Walk a mile you&amp;#8217;ll never forget.&#34;})
CREATE (MichaelD:Person {name:&#39;Michael Clarke Duncan&#39;, born:1957})
CREATE (DavidM:Person {name:&#39;David Morse&#39;, born:1953})
CREATE (SamR:Person {name:&#39;Sam Rockwell&#39;, born:1968})
CREATE (GaryS:Person {name:&#39;Gary Sinise&#39;, born:1955})
CREATE (PatriciaC:Person {name:&#39;Patricia Clarkson&#39;, born:1959})
CREATE (FrankD:Person {name:&#39;Frank Darabont&#39;, born:1959})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Paul Edgecomb&#39;]}]&amp;#8594;(TheGreenMile),
  (MichaelD)-[:ACTED_IN {roles:[&#39;John Coffey&#39;]}]&amp;#8594;(TheGreenMile),
  (DavidM)-[:ACTED_IN {roles:[&#39;Brutus &#34;Brutal&#34; Howell&#39;]}]&amp;#8594;(TheGreenMile),
  (BonnieH)-[:ACTED_IN {roles:[&#39;Jan Edgecomb&#39;]}]&amp;#8594;(TheGreenMile),
  (JamesC)-[:ACTED_IN {roles:[&#39;Warden Hal Moores&#39;]}]&amp;#8594;(TheGreenMile),
  (SamR)-[:ACTED_IN {roles:[&#39;&#34;Wild Bill&#34; Wharton&#39;]}]&amp;#8594;(TheGreenMile),
  (GaryS)-[:ACTED_IN {roles:[&#39;Burt Hammersmith&#39;]}]&amp;#8594;(TheGreenMile),
  (PatriciaC)-[:ACTED_IN {roles:[&#39;Melinda Moores&#39;]}]&amp;#8594;(TheGreenMile),
  (FrankD)-[:DIRECTED]&amp;#8594;(TheGreenMile)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (FrostNixon:Movie {title:&#39;Frost/Nixon&#39;, released:2008, tagline:&#39;400 million people were waiting for the truth.&#39;})
CREATE (FrankL:Person {name:&#39;Frank Langella&#39;, born:1938})
CREATE (MichaelS:Person {name:&#39;Michael Sheen&#39;, born:1969})
CREATE (OliverP:Person {name:&#39;Oliver Platt&#39;, born:1960})
CREATE
  (FrankL)-[:ACTED_IN {roles:[&#39;Richard Nixon&#39;]}]&amp;#8594;(FrostNixon),
  (MichaelS)-[:ACTED_IN {roles:[&#39;David Frost&#39;]}]&amp;#8594;(FrostNixon),
  (KevinB)-[:ACTED_IN {roles:[&#39;Jack Brennan&#39;]}]&amp;#8594;(FrostNixon),
  (OliverP)-[:ACTED_IN {roles:[&#39;Bob Zelnick&#39;]}]&amp;#8594;(FrostNixon),
  (SamR)-[:ACTED_IN {roles:[&#39;James Reston, Jr.&#39;]}]&amp;#8594;(FrostNixon),
  (RonH)-[:DIRECTED]&amp;#8594;(FrostNixon)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (Hoffa:Movie {title:&#39;Hoffa&#39;, released:1992, tagline:&#34;He didn&amp;#8217;t want law. He wanted justice.&#34;})
CREATE (DannyD:Person {name:&#39;Danny DeVito&#39;, born:1944})
CREATE (JohnR:Person {name:&#39;John C. Reilly&#39;, born:1965})
CREATE
  (JackN)-[:ACTED_IN {roles:[&#39;Hoffa&#39;]}]&amp;#8594;(Hoffa),
  (DannyD)-[:ACTED_IN {roles:[&#39;Robert &#34;Bobby&#34; Ciaro&#39;]}]&amp;#8594;(Hoffa),
  (JTW)-[:ACTED_IN {roles:[&#39;Frank Fitzsimmons&#39;]}]&amp;#8594;(Hoffa),
  (JohnR)-[:ACTED_IN {roles:[&#39;Peter &#34;Pete&#34; Connelly&#39;]}]&amp;#8594;(Hoffa),
  (DannyD)-[:DIRECTED]&amp;#8594;(Hoffa)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (Apollo13:Movie {title:&#39;Apollo 13&#39;, released:1995, tagline:&#39;Houston, we have a problem.&#39;})
CREATE (EdH:Person {name:&#39;Ed Harris&#39;, born:1950})
CREATE (BillPax:Person {name:&#39;Bill Paxton&#39;, born:1955})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Jim Lovell&#39;]}]&amp;#8594;(Apollo13),
  (KevinB)-[:ACTED_IN {roles:[&#39;Jack Swigert&#39;]}]&amp;#8594;(Apollo13),
  (EdH)-[:ACTED_IN {roles:[&#39;Gene Kranz&#39;]}]&amp;#8594;(Apollo13),
  (BillPax)-[:ACTED_IN {roles:[&#39;Fred Haise&#39;]}]&amp;#8594;(Apollo13),
  (GaryS)-[:ACTED_IN {roles:[&#39;Ken Mattingly&#39;]}]&amp;#8594;(Apollo13),
  (RonH)-[:DIRECTED]&amp;#8594;(Apollo13)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (Twister:Movie {title:&#39;Twister&#39;, released:1996, tagline:&#34;Don&amp;#8217;t Breathe. Don&amp;#8217;t Look Back.&#34;})
CREATE (PhilipH:Person {name:&#39;Philip Seymour Hoffman&#39;, born:1967})
CREATE (JanB:Person {name:&#39;Jan de Bont&#39;, born:1943})
CREATE
  (BillPax)-[:ACTED_IN {roles:[&#39;Bill Harding&#39;]}]&amp;#8594;(Twister),
  (HelenH)-[:ACTED_IN {roles:[&#39;Dr. Jo Harding&#39;]}]&amp;#8594;(Twister),
  (ZachG)-[:ACTED_IN {roles:[&#39;Eddie&#39;]}]&amp;#8594;(Twister),
  (PhilipH)-[:ACTED_IN {roles:[&#39;Dustin &#34;Dusty&#34; Davis&#39;]}]&amp;#8594;(Twister),
  (JanB)-[:DIRECTED]&amp;#8594;(Twister)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (CastAway:Movie {title:&#39;Cast Away&#39;, released:2000, tagline:&#39;At the edge of the world, his journey begins.&#39;})
CREATE (RobertZ:Person {name:&#39;Robert Zemeckis&#39;, born:1951})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Chuck Noland&#39;]}]&amp;#8594;(CastAway),
  (HelenH)-[:ACTED_IN {roles:[&#39;Kelly Frears&#39;]}]&amp;#8594;(CastAway),
  (RobertZ)-[:DIRECTED]&amp;#8594;(CastAway)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (OneFlewOvertheCuckoosNest:Movie {title:&#34;One Flew Over the Cuckoo&amp;#8217;s Nest&#34;, released:1975, tagline:&#34;If he&amp;#8217;s crazy, what does that make you?&#34;})
CREATE (MilosF:Person {name:&#39;Milos Forman&#39;, born:1932})
CREATE
  (JackN)-[:ACTED_IN {roles:[&#39;Randle McMurphy&#39;]}]&amp;#8594;(OneFlewOvertheCuckoosNest),
  (DannyD)-[:ACTED_IN {roles:[&#39;Martini&#39;]}]&amp;#8594;(OneFlewOvertheCuckoosNest),
  (MilosF)-[:DIRECTED]&amp;#8594;(OneFlewOvertheCuckoosNest)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (SomethingsGottaGive:Movie {title:&#34;Something&amp;#8217;s Gotta Give&#34;, released:2003})
CREATE (DianeK:Person {name:&#39;Diane Keaton&#39;, born:1946})
CREATE (NancyM:Person {name:&#39;Nancy Meyers&#39;, born:1949})
CREATE
  (JackN)-[:ACTED_IN {roles:[&#39;Harry Sanborn&#39;]}]&amp;#8594;(SomethingsGottaGive),
  (DianeK)-[:ACTED_IN {roles:[&#39;Erica Barry&#39;]}]&amp;#8594;(SomethingsGottaGive),
  (Keanu)-[:ACTED_IN {roles:[&#39;Julian Mercer&#39;]}]&amp;#8594;(SomethingsGottaGive),
  (NancyM)-[:DIRECTED]&amp;#8594;(SomethingsGottaGive),
  (NancyM)-[:PRODUCED]&amp;#8594;(SomethingsGottaGive),
  (NancyM)-[:WROTE]&amp;#8594;(SomethingsGottaGive)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (BicentennialMan:Movie {title:&#39;Bicentennial Man&#39;, released:1999, tagline:&#34;One robot&amp;#8217;s 200 year journey to become an ordinary man.&#34;})
CREATE (ChrisC:Person {name:&#39;Chris Columbus&#39;, born:1958})
CREATE
  (Robin)-[:ACTED_IN {roles:[&#39;Andrew Marin&#39;]}]&amp;#8594;(BicentennialMan),
  (OliverP)-[:ACTED_IN {roles:[&#39;Rupert Burns&#39;]}]&amp;#8594;(BicentennialMan),
  (ChrisC)-[:DIRECTED]&amp;#8594;(BicentennialMan)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (CharlieWilsonsWar:Movie {title:&#34;Charlie Wilson&amp;#8217;s War&#34;, released:2007, tagline:&#34;A stiff drink. A little mascara. A lot of nerve. Who said they couldn&amp;#8217;t bring down the Soviet empire.&#34;})
CREATE (JuliaR:Person {name:&#39;Julia Roberts&#39;, born:1967})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Rep. Charlie Wilson&#39;]}]&amp;#8594;(CharlieWilsonsWar),
  (JuliaR)-[:ACTED_IN {roles:[&#39;Joanne Herring&#39;]}]&amp;#8594;(CharlieWilsonsWar),
  (PhilipH)-[:ACTED_IN {roles:[&#39;Gust Avrakotos&#39;]}]&amp;#8594;(CharlieWilsonsWar),
  (MikeN)-[:DIRECTED]&amp;#8594;(CharlieWilsonsWar)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (ThePolarExpress:Movie {title:&#39;The Polar Express&#39;, released:2004, tagline:&#39;This Holiday Season… Believe&#39;})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Hero Boy&#39;, &#39;Father&#39;, &#39;Conductor&#39;, &#39;Hobo&#39;, &#39;Scrooge&#39;, &#39;Santa Claus&#39;]}]&amp;#8594;(ThePolarExpress),
  (RobertZ)-[:DIRECTED]&amp;#8594;(ThePolarExpress)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (ALeagueofTheirOwn:Movie {title:&#39;A League of Their Own&#39;, released:1992, tagline:&#39;Once in a lifetime you get a chance to do something different.&#39;})
CREATE (Madonna:Person {name:&#39;Madonna&#39;, born:1954})
CREATE (GeenaD:Person {name:&#39;Geena Davis&#39;, born:1956})
CREATE (LoriP:Person {name:&#39;Lori Petty&#39;, born:1963})
CREATE (PennyM:Person {name:&#39;Penny Marshall&#39;, born:1943})
CREATE
  (TomH)-[:ACTED_IN {roles:[&#39;Jimmy Dugan&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (GeenaD)-[:ACTED_IN {roles:[&#39;Dottie Hinson&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (LoriP)-[:ACTED_IN {roles:[&#39;Kit Keller&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (RosieO)-[:ACTED_IN {roles:[&#39;Doris Murphy&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (Madonna)-[:ACTED_IN {roles:[&#39;&#34;All the Way&#34; Mae Mordabito&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (BillPax)-[:ACTED_IN {roles:[&#39;Bob Hinson&#39;]}]&amp;#8594;(ALeagueofTheirOwn),
  (PennyM)-[:DIRECTED]&amp;#8594;(ALeagueofTheirOwn)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE (PaulBlythe:Person {name:&#39;Paul Blythe&#39;})
CREATE (AngelaScope:Person {name:&#39;Angela Scope&#39;})
CREATE (JessicaThompson:Person {name:&#39;Jessica Thompson&#39;})
CREATE (JamesThompson:Person {name:&#39;James Thompson&#39;})&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE
  (JamesThompson)-[:FOLLOWS]&amp;#8594;(JessicaThompson),
  (AngelaScope)-[:FOLLOWS]&amp;#8594;(JessicaThompson),
  (PaulBlythe)-[:FOLLOWS]&amp;#8594;(AngelaScope)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;CREATE
  (JessicaThompson)-[:REVIEWED {summary:&#39;An amazing journey&#39;, rating:95}]&amp;#8594;(CloudAtlas),
  (JessicaThompson)-[:REVIEWED {summary:&#39;Silly, but fun&#39;, rating:65}]&amp;#8594;(TheReplacements),
  (JamesThompson)-[:REVIEWED {summary:&#39;The coolest football movie ever&#39;, rating:100}]&amp;#8594;(TheReplacements),
  (AngelaScope)-[:REVIEWED {summary:&#39;Pretty funny at times&#39;, rating:62}]&amp;#8594;(TheReplacements),
  (JessicaThompson)-[:REVIEWED {summary:&#39;Dark, but compelling&#39;, rating:85}]&amp;#8594;(Unforgiven),
  (JessicaThompson)-[:REVIEWED {summary:&#34;Slapstick redeemed only by the Robin Williams and Gene Hackman&amp;#8217;s stellar performances&#34;, rating:45}]&amp;#8594;(TheBirdcage),
  (JessicaThompson)-[:REVIEWED {summary:&#39;A solid romp&#39;, rating:68}]&amp;#8594;(TheDaVinciCode),
  (JamesThompson)-[:REVIEWED {summary:&#39;Fun, but a little far fetched&#39;, rating:65}]&amp;#8594;(TheDaVinciCode),
  (JessicaThompson)-[:REVIEWED {summary:&#39;You had me at Jerry&#39;, rating:92}]&amp;#8594;(JerryMaguire)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;WITH TomH as a
MATCH (a)-[:ACTED_IN]&amp;#8594;(m)&amp;#8592;[:DIRECTED]-(d) RETURN a,m,d LIMIT 10
;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查找名叫 &#34;Tom Hanks&#34; 的演员&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (tom {name: &#34;Tom Hanks&#34;}) RETURN tom&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查找标题为 &#34;Cloud Atlas&#34; 的电影&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (cloudAtlas {title: &#34;Cloud Atlas&#34;}) RETURN cloudAtlas&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查找 10 个人&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (people:Person) RETURN people.name LIMIT 10&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查找 1990 年代里发行的电影&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (nineties:Movie) WHERE nineties.released &amp;gt; 1990 AND nineties.released &amp;lt; 2000 RETURN nineties.title&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (people:Person) WHERE people.born&amp;gt;1970 AND people.born&amp;lt;1980 RETURN people.name LIMIT 100&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;列出 Tom Hanks 的所有电影&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (tom:Person {name: &#34;Tom Hanks&#34;})-[:ACTED_IN]&amp;#8594;(tomHanksMovies) RETURN tom,tomHanksMovies&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;谁导演的 &#34;Cloud Atlas&#34;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (cloudAtlas {title: &#34;Cloud Atlas&#34;})&amp;#8592;[:DIRECTED]-(directors) RETURN directors.name&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Tom Hanks 的合作演员是&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (tom:Person {name:&#34;Tom Hanks&#34;})-[:ACTED_IN]&amp;#8594;(m)&amp;#8592;[:ACTED_IN]-(coActors) RETURN coActors.name&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;人们与 &#34;Cloud Atlas&#34; 有何关系&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (people:Person)-[relatedTo]-(:Movie {title: &#34;Cloud Atlas&#34;}) RETURN people.name, Type(relatedTo), relatedTo&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;从 Kevin Bacon 起, 电影和导演最多 4 跳&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (bacon:Person {name:&#34;Kevin Bacon&#34;})-[*1..4]-(hollywood)
RETURN DISTINCT hollywood&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;培根路径, 到 Meg Ryan 任意关系的最短路径&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH p=shortestPath(
  (bacon:Person {name:&#34;Kevin Bacon&#34;})-[*]-(meg:Person {name:&#34;Meg Ryan&#34;})
)
RETURN p&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;为查找没有与 Tom Hanks 一起工作过的联合演员, 扩展 Tom Hanks 的合作演员&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (tom:Person {name:&#34;Tom Hanks&#34;})-[:ACTED_IN]&amp;#8594;(m)&amp;#8592;[:ACTED_IN]-(coActors),
      (coActors)-[:ACTED_IN]&amp;#8594;(m2)&amp;#8592;[:ACTED_IN]-(cocoActors)
WHERE NOT (tom)-[:ACTED_IN]&amp;#8594;(m2)
RETURN cocoActors.name AS Recommended, count(*) AS Strength ORDER BY Strength DESC&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;查找将 Tom Hanks 介绍给 Tom Cruise 的人&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (tom:Person {name:&#34;Tom Hanks&#34;})-[:ACTED_IN]&amp;#8594;(m)&amp;#8592;[:ACTED_IN]-(coActors),
      (coActors)-[:ACTED_IN]&amp;#8594;(m2)&amp;#8592;[:ACTED_IN]-(cruise:Person {name:&#34;Tom Cruise&#34;})
RETURN tom, m, coActors, m2, cruise&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;删除所有 Movie 和 Person 节点及他们的关系&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (a:Person),(m:Movie) OPTIONAL MATCH (a)-[r1]-(), (m)-[r2]-() DELETE a,r1,m,r2&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;注意, 在首次创建关系时, 您只需像这样比较属性值&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;验证电影图已经已经消失了&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;MATCH (n) RETURN n&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;cd /c/Documents and Settings/Administrator/桌面/dishui&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_参考&#34;&gt;1. 参考&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://neo4j.com/docs/developer-manual/3.2/cypher/&#34; class=&#34;bare&#34;&gt;http://neo4j.com/docs/developer-manual/3.2/cypher/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://neo4j.com/docs/java-reference/current/&#34; class=&#34;bare&#34;&gt;http://neo4j.com/docs/java-reference/current/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/neo4j-examples&#34; class=&#34;bare&#34;&gt;https://github.com/neo4j-examples&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/neo4j/docker-neo4j&#34; class=&#34;bare&#34;&gt;https://github.com/neo4j/docker-neo4j&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://neo4j.com/developer/spring-data-neo4j/&#34; class=&#34;bare&#34;&gt;https://neo4j.com/developer/spring-data-neo4j/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://neo4j.com/developer/java/&#34; class=&#34;bare&#34;&gt;https://neo4j.com/developer/java/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://neo4j.com/docs/cypher-refcard/current/&#34; class=&#34;bare&#34;&gt;https://neo4j.com/docs/cypher-refcard/current/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;start n = node(&lt;strong&gt;) where n.Name =~ &#39;.*SUBSTRING.&lt;/strong&gt;&#39; return n.Name, n;
7687&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>面试</title>
      <link>/post/my/%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Tue, 04 Jul 2017 11:42:35 +0000</pubDate>
      
      <guid>/post/my/%E9%9D%A2%E8%AF%95/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;面试&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_mr程序运行流程&#34;&gt;1. MR程序运行流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_mapreduce的shuffle机制&#34;&gt;2. mapreduce的shuffle机制&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_概述&#34;&gt;2.1. 概述：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_shuffle缓存流程&#34;&gt;2.2. Shuffle缓存流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mr程序运行流程&#34;&gt;1. MR程序运行流程&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;一个mr程序启动的时候，最先启动的是MRAppMaster，MRAppMaster启动后根据本次job的描述信息，计算出需要的maptask实例数量，然后向集群申请机器启动相应数量的maptask进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;maptask进程启动之后，根据给定的数据切片范围进行数据处理，主体流程为：&lt;/p&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;利用客户指定的inputformat来获取RecordReader读取数据，形成输入KV对&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将输入KV对传递给客户定义的map()方法，做逻辑运算，并将map()方法输出的KV对收集到缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将缓存中的KV对按照K分区排序后不断溢写到磁盘文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MRAppMaster监控到所有maptask进程任务完成之后，会根据客户指定的参数启动相应数量的reducetask进程，并告知reducetask进程要处理的数据范围（数据分区）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reducetask进程启动之后，根据MRAppMaster告知的待处理数据所在位置，从若干台maptask运行所在机器上获取到若干个maptask输出结果文件，并在本地进行重新归并排序，然后按照相同key的KV为一个组，调用客户定义的reduce()方法进行逻辑运算，并收集运算输出的结果KV，然后调用客户指定的outputformat将结果数据输出到外部存储&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_mapreduce的shuffle机制&#34;&gt;2. mapreduce的shuffle机制&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_概述&#34;&gt;2.1. 概述：&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;mapreduce中，map阶段处理的数据如何传递给reduce阶段，是mapreduce框架中最关键的一个流程，这个流程就叫shuffle；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shuffle: 洗牌、发牌——（核心机制：数据分区，排序，缓存）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具体来说：就是将maptask输出的处理结果数据，分发给reducetask，并在分发的过程中，对数据按key进行了分区和排序；&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_shuffle缓存流程&#34;&gt;2.2. Shuffle缓存流程&lt;/h3&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/hadoop/2017-07-04_114657.png&#34; alt=&#34;2017 07 04 114657&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;shuffle是MR处理流程中的一个过程，它的每一个处理步骤是分散在各个map task和reduce task节点上完成的，整体来看，分为3个操作：&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;分区partition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sort根据key排序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combiner进行局部value的合并&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;详细流程:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;maptask收集我们的map()方法输出的kv对，放到内存缓冲区中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从内存缓冲区不断溢出本地磁盘文件，可能会溢出多个文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多个溢出文件会被合并成大的溢出文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在溢出过程中，及合并的过程中，都要调用partitoner进行分组和针对key进行排序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reducetask根据自己的分区号，去各个maptask机器上取相应的结果分区数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;reducetask会取到同一个分区的来自不同maptask的结果文件，reducetask会将这些文件再进行合并（归并排序）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合并成大文件后，shuffle的过程也就结束了，后面进入reducetask的逻辑运算过程（从文件中取出一个一个的键值对group，调用用户自定义的reduce()方法）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Shuffle中的缓冲区大小会影响到mapreduce程序的执行效率，原则上说，缓冲区越大，磁盘io的次数越少，执行速度就越快
缓冲区的大小可以通过参数调整,  参数：io.sort.mb  默认100M&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/hadoop/2017-07-04_115826.png&#34; alt=&#34;2017 07 04 115826&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hbase
    rowkey 写成 13212314532-y-m-d&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;主键字典顺序进行插入&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;hbase 会根据每一行的主键(ROWKEY)的字典顺序将数据排序&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;点击流 pageviews
点击流 visit模型预处理&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;表
    ods_click_pageviews
    ods_weblog_origin
    click_stream_visit&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;相关配置参数
    flume输出数据目录
    /data/flumedata/2016-03-18&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;预处理程序的输入数据目录：
/data/weblog/preprocess/input&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;预处理程序raw输出数据目录：
/data/weblog/preprocess/output&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;预处理程序valid输出数据目录：
/data/weblog/preprocess/valid_output&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;预处理点击流模型pageviews数据输出目录
/data/weblog/preprocess/click_pv_out&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;预处理点击流模型visit数据输出目录
/data/weblog/preprocess/click_visit_out&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;#数据仓库DDL

#ods贴源表
drop table if exists ods_weblog_origin;
create table ods_weblog_origin(
valid string,
remote_addr string,
remote_user string,
time_local string,
request string,
status string,
body_bytes_sent string,
http_referer string,
http_user_agent string)
partitioned by (datestr string)
row format delimited
fields terminated by &#39;\001&#39;;



#ods点击流pageviews表
drop table if exists ods_click_pageviews;
create table ods_click_pageviews(
Session string,
remote_addr string,
#加一个字段   user string,
time_local string,
request string,
visit_step string,
page_staylong string,
http_referer string,
http_user_agent string,
body_bytes_sent string,
status string)
partitioned by (datestr string)
row format delimited
fields terminated by &#39;\001&#39;;


#点击流visit表
drop table if exist ods_click_visit;
create table ods_click_visit(
session     string,
remote_addr string,
inTime      string,
outTime     string,
inPage      string,
outPage     string,
referal     string,
pageVisits  int)
partitioned by (datestr string);



#etl明细宽表
drop table ods_weblog_detail;
create table ods_weblog_detail(
valid           string, --有效标识
remote_addr     string, --来源IP
remote_user     string, --用户标识
time_local      string, --访问完整时间
daystr          string, --访问日期
timestr         string, --访问时间
month           string, --访问月
day             string, --访问日
hour            string, --访问时
request         string, --请求的url
status          string, --响应码
body_bytes_sent string, --传输字节数
http_referer    string, --来源url
ref_host        string, --来源的host
ref_path        string, --来源的路径
ref_query       string, --来源参数query
ref_query_id    string, --来源参数query的值
http_user_agent string --客户终端标识
)
partitioned by(datestr string);

#时间维度表
create table v_time(year string,month string,day string,hour string)
row format delimited
fields terminated by &#39;,&#39;;

load data local inpath &#39;/home/hadoop/v_time.txt&#39; into table v_time;


#每小时pv统计表
drop table dw_pvs_hour;
create table dw_pvs_hour(month string,day string,hour string,pvs bigint) partitioned by(datestr string);

#每日用户平均pv
drop table dw_avgpv_user_d;
create table dw_avgpv_user_d(
day string,
avgpv string);

#来源维度PV统计表(小时粒度)
drop table zs.dw_pvs_referer_h;
create table zs.dw_pvs_referer_h(referer_url string,referer_host string,month string,day string,hour string,pv_referer_cnt bigint) partitioned by(datestr string);

#每小时来源PV topn
drop table zs.dw_pvs_refhost_topn_h;
create table zs.dw_pvs_refhost_topn_h(
hour string,
toporder string,
ref_host string,
ref_host_cnts string
) partitioned by(datestr string);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;insert into table zs.ods_weblog_detail partition(datestr=&#39;$day_01&#39;)
select c.valid,c.remote_addr,c.remote_user,c.time_local,
substring(c.time_local,0,10) as daystr,
substring(c.time_local,12) as tmstr,
substring(c.time_local,6,2) as month,
substring(c.time_local,9,2) as day,
substring(c.time_local,11,3) as hour,
c.request,c.status,c.body_bytes_sent,c.http_referer,c.ref_host,c.ref_path,c.ref_query,c.ref_query_id,c.http_user_agent
from
(SELECT
a.valid,a.remote_addr,a.remote_user,a.time_local,
a.request,a.status,a.body_bytes_sent,a.http_referer,a.http_user_agent,b.ref_host,b.ref_path,b.ref_query,b.ref_query_id
FROM zs.ods_weblog_origin a LATERAL VIEW parse_url_tuple(regexp_replace(http_referer, \&#34;\\\&#34;\&#34;, \&#34;\&#34;), &#39;HOST&#39;, &#39;PATH&#39;,&#39;QUERY&#39;, &#39;QUERY:id&#39;) b as ref_host, ref_path, ref_query, ref_query_id) c&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;insert into table zs.dw_pvs_hour partition(datestr=&#39;$day_01&#39;)
select a.month as month,a.day as day,a.hour as hour,count(1) as pvs from zs.ods_weblog_detail a
where a.datestr=&#39;$day_01&#39; group by a.month,a.day,a.hour;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;#!/bin/bash
if [ $# -eq 1 ]
then
    cur_date=`date --date=&#34;${1}&#34; +%Y-%m-%d`
else
    cur_date=`date -d&#39;-1 day&#39; +%Y-%m-%d`
fi

echo &#34;cur_date:&#34;${cur_date}

year=`date --date=$cur_date +%Y`
month=`date --date=$cur_date +%m`
day=`date --date=$cur_date +%d`

table_name=&#34;&#34;
table_columns=&#34;&#34;
hadoop_dir=/user/rd/bi_dm/app_user_experience_d/year=${year}/month=${month}/day=${day}
mysql_db_pwd=biall_pwd2015
mysql_db_name=bi_tag_all


echo &#39;sqoop start&#39;
$SQOOP_HOME/bin/sqoop export \
--connect &#34;jdbc:mysql://hadoop03:3306/biclick&#34; \
--username $mysql_db_name \
--password $mysql_db_pwd \
--table $table_name \
--columns $table_columns \
--fields-terminated-by &#39;\001&#39; \
--export-dir $hadoop_dir

echo &#39;sqoop end&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>快学Scala</title>
      <link>/post/bigdata/scala/%E5%BF%AB%E5%AD%A6Scala/</link>
      <pubDate>Wed, 21 Jun 2017 13:03:08 +0000</pubDate>
      
      <guid>/post/bigdata/scala/%E5%BF%AB%E5%AD%A6Scala/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;scala&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_类&#34;&gt;1. 类&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#__strong_bean_strong_属性&#34;&gt;1.1. &lt;strong&gt;Bean&lt;/strong&gt; 属性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_辅助构造器&#34;&gt;1.2. 辅助构造器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_主构造器&#34;&gt;1.3. 主构造器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_带函数参数的函数&#34;&gt;2. 带函数参数的函数&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_参数_类型_推导&#34;&gt;2.1. 参数(类型)推导&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_类&#34;&gt;1. 类&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;__strong_bean_strong_属性&#34;&gt;1.1. &lt;strong&gt;Bean&lt;/strong&gt; 属性&lt;/h3&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-21_130203.png&#34; alt=&#34;2017 06 21 130203&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_辅助构造器&#34;&gt;1.2. 辅助构造器&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;辅助构造器的名称为this (在Java或C、中，构造器的名称和类名相同—当
你修改类名时就不那么方便了。)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个辅助构造器都必须以一个对先前已定义的其他辅助构造器或主构造器的
调用开始&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;辅助构造器类&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;class Person{
  private var name = &#34;&#34;
  private var age = 0

  def this(name:String){ // 一个辅助构造器
    this() // 调用主构造器
    this.name = name
  }

  def this(name:String, age: Int){ // 另一个辅助构造器
    this(name) // 调用前一个辅助构造器
    this.age = age
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;三种方式构建对象&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;    val p1 = new Person // 主构造器
    val p2 = new Person(&#34;Spark&#34;) // 第一个辅助构造器
    val p3 = new Person(&#34;Spark&#34;,42) // 第二个辅助构造器&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_主构造器&#34;&gt;1.3. 主构造器&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;主构造器的参数直接放置在类名之后&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主构造器会执行类定义中的所有语句。例如在以下类中:&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;class Person2(val name:String,val age:Int){
  println(&#34;Person2&#34;) &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  def description = name + &#34; is &#34; + age + &#34; years old &#34;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;println语句是主构造器的一部分。每当有对象被构造出来时，上述代码就会被执行&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;针对主构造器参数生成的字段和方法&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-21_144831.png&#34; alt=&#34;2017 06 21 144831&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_带函数参数的函数&#34;&gt;2. 带函数参数的函数&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;在本节中，你将会看到如何实现接受另一个函数作为参数的函数。以下是一个示例&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;def valueAtOneQuarter(f: (Double) =&amp;gt; Double) = f(0.25)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;    注意。这里的参数可以是任何接受Double并返Double的函数。valueAtOneQuarter
函数将计算那个函数在D.25位置的值。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;例如
    valueAtOneQuarter(ceil _) // 1.0
    valueAtOneQuarter(sqrt _) // 0.5 (因为 0.5 * 0.5 = 0.25)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;valueAtOneQuarter类型是什么呢?它是一个带有单个参数的函数，因为它的类型&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(参数类型) &amp;#8658; 结果类型&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;结果类型很显然是Double,而参数类型已经在函数头部以(Double) &amp;#8658; Double给出
了。因此，valueAtOneQuarter的类型为:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;((Double) &amp;#8658; Double) &amp;#8658; Double&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;由于valueAtOneQuarter是一个接受函数参数的函数，因此它被称做高阶函数
高阶函数也可以产出另一个函数。以下是一个简单示例:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;def mulBy(factor: Double) = (x: Double) &amp;#8658; factor * x&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;mulBy函数有一个类型为Double的参数，返回一个类型为(Double) &amp;#8658; Double 的函数&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;(Double) &amp;#8658; ((Double) &amp;#8658; Double)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_参数_类型_推导&#34;&gt;2.1. 参数(类型)推导&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;当你将一个匿名函数传递给另一个函数或方法时。Scala会尽可能帮助你推断出类
型信息。举例来说，你不需要将代码写成:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;valueAtOneQuarter((x: Double) &amp;#8658; 3 * x)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;由于valueAtOneQuarter方法知道你会传入一个类型为(Double) &amp;#8658; Double的函数 你可以简单地写成:
    valueAtOneQuarter((x) &amp;#8658; 3 * x)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;作为额外奖励，对于只有一个参数的函数，你可以略去参数外围的()
    valueAtOneQuarter(x &amp;#8658; 3 * x)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;这样更好了。如果参数在 &amp;#8658; 右侧只出现一次，你可以用一替换掉它:
    valueAtOneQuarter(3 * _)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;请注意这些简写方式仅在参数类型已知的情况下有效
    val fun = 3 * _ // 错误: 无法推断出类型
    val fun = 3 * (_: Double) // OK
    val fun: (Double) &amp;#8658; Double = 3 * _ // OK, 因为我们给出了fun的类型&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt;  def mulBy(factor: Double) = (x: Double) =&amp;gt; factor * x
考虑如下调用
  val triple = mulBy(3)
  val half = mulBy(0.5)
  println(triple(14) + &#34; &#34; + half(14)) // 42 7&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;literalblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre&gt; *mulBy* 的首次调用将参数变量 *factor* 设为3。该变量在 *(x:Double) =&amp;gt; factor*x*  函
数的函数体内被引用，该函数被存人 *triple* .然后参数变量 *factor* 从运行时的栈上
被弹出。
接下来， *mulBy* 再次被调用，这次 *factor* 被设为了0.5。该变量在 *(x:Double) =&amp;gt; factor*x* 数的函数体内被引用。该函数被存入 *half*
每一个返回的函数都有自己的factor设置。
这样一个函数被称做闭包(closure)闭包由代码和代码用到的任何非局部变量定义构成
这些函数实际上是以类的对象方式实现的，该类有一个实例变量factor和一个包含了函数体的apply方法。&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-22_131426.png&#34; alt=&#34;2017 06 22 131426&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-22_131515.png&#34; alt=&#34;2017 06 22 131515&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-22_132227.png&#34; alt=&#34;2017 06 22 132227&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/scala/2017-06-22_132310.png.png&#34; alt=&#34;2017 06 22 132310.png&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://twitter.github.io/scala_school/zh_cn/index.html&#34; class=&#34;bare&#34;&gt;http://twitter.github.io/scala_school/zh_cn/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;def calcType(calc: Calculator) = calc match {
  case Calculator(&#34;HP&#34;, &#34;20B&#34;) &amp;#8658; &#34;financial&#34;
  case Calculator(&#34;HP&#34;, &#34;48G&#34;) &amp;#8658; &#34;scientific&#34;
  case Calculator(&#34;HP&#34;, &#34;30B&#34;) &amp;#8658; &#34;business&#34;
  case Calculator(ourBrand, ourModel) &amp;#8658; &#34;Calculator: %s %s is of unknown type&#34;.format(ourBrand, ourModel)
}&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;val wepons = Map(&#34;AK&#34; &amp;#8594; 12,&#34;DBL&#34;)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>spark hive</title>
      <link>/post/bigdata/spark/spark-hive/</link>
      <pubDate>Sat, 17 Jun 2017 14:11:22 +0000</pubDate>
      
      <guid>/post/bigdata/spark/spark-hive/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;spark hive&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_spark_hive&#34;&gt;1. spark hive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_spark_hive&#34;&gt;1. spark hive&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;$SPARK_HOME/conf/hive-site.xml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;configuration&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;hive.metastore.uris&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;thrift://master:9083&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;val hiveContext = new org.apache.spark.sql.hive.HiveContext(sc)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hiveContext.sql(&#34;show tables&#34;).collect.foreach(println)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hiveContext.sql(&#34;select count(*) from zh_track&#34;).collect.foreach(println)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hiveContext.sql(&#34;SELECT COUNT(*) FROM zh_track z GROUP BY z.box_no&#34;).collect.foreach(println)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hiveContext.sql(&#34;SELECT z.box_no, COUNT(*) AS num FROM zh_track z GROUP BY z.box_no ORDER BY num DESC limit 10&#34;).collect.foreach(println)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;create table t_pp(id string,name string)
clustered by (id)
sorted by (id)
into 4 buckets
row format delimited fields terminated by &#39;,&#39;;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;insert into table t_pp
select id,name from t_p distribute by (id) sort by (id);&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;hiveContext.sql(&#34;drop table t_pp&#34;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;create table t_pp(id string,name string)
partitioned by (ds string)
row format delimited fields terminated by &#39;,&#39;
stored as textfile;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;insert into table t_pp partition(ds=&#39;2017-06-18&#39;)
select id,name from t_p&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;select * from t_partitioned where ds=&#39;2017-06-18&#39;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;val selectSql = &#34;select * from t_partitioned where ds=&#39;2017-06-18&#39;&#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;val t_partitioned =
  s&#34;&#34;&#34;
     |create table t_partitioned(id string,name string)
     |partitioned by (ds string)
     |row format delimited fields terminated by &#39;,&#39;
     |stored as textfile
   &#34;&#34;&#34;.stripMargin
val insertSql =
  s&#34;&#34;&#34;
     |insert into table t_partitioned partition(ds=&#39;2017-06-18&#39;)
     |select id,name from t_p
   &#34;&#34;&#34;.stripMargin&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;start-thriftserver.sh \
  --hiveconf hive.server2.thrift.port=10000 \
  --hiveconf hive.server2.thrift.bind.host=master \
  --hiveconf hive.metastore.uris=thrift://master:9083 \
  --master spark://master:7077&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;beeline -u jdbc:hive2://master:10000 -n root&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;log&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;INFO hive.metastore: Connected to metastore&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>elasticsearch</title>
      <link>/post/work/es/</link>
      <pubDate>Wed, 07 Jun 2017 09:02:42 +0000</pubDate>
      
      <guid>/post/work/es/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_安装es&#34;&gt;1. 安装ES&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_logstash&#34;&gt;2. logstash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_参考&#34;&gt;3. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_安装es&#34;&gt;1. 安装ES&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;Dockerfile &lt;a href=&#34;https://git.oschina.net/dishui/dockerfiles/tree/master/es?dir=1&amp;amp;filepath=es&amp;amp;oid=e8ff05c2c87b776b3f757bbe96ac074baad681fb&amp;amp;sha=05594af12d130d68723126075580426c3496c6cf&#34;&gt;地址&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;FROM centos:7
MAINTAINER dishui_git@126.com
ENV LANG en_US.utf8
ENV JAVA_HOME /usr/local/java/jdk1.7.0_79
COPY docker-entrypoint.sh es1.7.tar.gz jdk-7u79-linux-x64.rpm /
COPY es.conf /etc/supervisord.conf.d/es.conf
RUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
    &amp;amp;&amp;amp; curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \
    &amp;amp;&amp;amp; rpm -ivh /jdk-7u79-linux-x64.rpm --prefix=/usr/local/java \
    &amp;amp;&amp;amp; yum install python-setuptools -y \
    &amp;amp;&amp;amp; easy_install -i http://pypi.doubanio.com/simple supervisor \
    &amp;amp;&amp;amp; echo_supervisord_conf &amp;gt; /etc/supervisord.conf \
    &amp;amp;&amp;amp; mkdir -p /etc/supervisord.conf.d \
    &amp;amp;&amp;amp; echo -e &#34;[include]\nfiles = /etc/supervisord.conf.d/*.conf&#34; &amp;gt;&amp;gt; /etc/supervisord.conf \
    &amp;amp;&amp;amp; tar -zxf /es1.7.tar.gz \
    &amp;amp;&amp;amp; cd /elasticsearch-1.7.1 \
    &amp;amp;&amp;amp; ./bin/plugin -u https://github.com/NLPchina/elasticsearch-sql/releases/download/1.4.9/elasticsearch-sql-1.4.9.zip --install sql \
    &amp;amp;&amp;amp; rm -rf /elasticsearch-1.7.1/logs \
    &amp;amp;&amp;amp; rm -f /es1.7.tar.gz \
    &amp;amp;&amp;amp; rm -f /jdk-7u79-linux-x64.rpm
EXPOSE 9200 9300
ENTRYPOINT [&#34;sh&#34;,&#34;/docker-entrypoint.sh&#34;]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;基于 &lt;strong&gt;centos7&lt;/strong&gt; 镜像安装 &lt;strong&gt;jdk1.7.0_79&lt;/strong&gt; 和 &lt;strong&gt;supervisord&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;构建&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;# 在 Dockerfile 所在目录执行
docker build -t mailiqing.com:5000/es:1.7 .&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问 &lt;a href=&#34;http://ES_URL:9200/_plugin/head/&#34; class=&#34;bare&#34;&gt;http://ES_URL:9200/_plugin/head/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
ES_URL:  &lt;strong&gt;ES&lt;/strong&gt; 服务器的 &lt;strong&gt;IP&lt;/strong&gt; 地址
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加映射&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/work/2017-06-09_100922.png&#34; alt=&#34;2017 06 09 100922&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mapping 映射&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;PUT /b2b &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
{
   &#34;mappings&#34;: {
      &#34;resources_single&#34;: { &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
         &#34;properties&#34;: {
            &#34;rs_name&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34; &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
            },
            &#34;chuku_3&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;rs_state&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;rs_area&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;rs_create&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34; &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
            },
            &#34;rs_modify&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34;
            },
            &#34;id&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;index&#34;: &#34;not_analyzed&#34;,
               &#34;store&#34;: true
            }
         }
      },
      &#34;ti_procurement&#34;: {
         &#34;properties&#34;: {
            &#34;rsrv_str3&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;rsrv_str4&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;rsrv_str5&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;remark&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;store&#34;: true,
               &#34;analyzer&#34;: &#34;ik&#34;
            },
            &#34;delivery_date_start&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34;
            },
            &#34;delivery_date_end&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34;
            },
            &#34;in_date&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34;
            },
            &#34;update_date&#34;: {
               &#34;type&#34;: &#34;date&#34;,
               &#34;format&#34;: &#34;date_time&#34;
            },
            &#34;procur_f_id&#34;: {
               &#34;type&#34;: &#34;string&#34;,
               &#34;index&#34;: &#34;not_analyzed&#34;,
               &#34;store&#34;: true
            }
         }
      }
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;索引 &amp;#8658; 数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;文档 &amp;#8658; 表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;使用 &lt;strong&gt;ik&lt;/strong&gt; 分词器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;日期格式&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_logstash&#34;&gt;2. logstash&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;增量更新&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;update.yml&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;input {
  jdbc {
    type =&amp;gt; &#34;procurement&#34;
    jdbc_connection_string =&amp;gt; &#34;jdbc:mysql://mysql:3306/mailiqing&#34; &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    jdbc_user =&amp;gt; &#34;root&#34; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    jdbc_password =&amp;gt; &#34;111111&#34; &lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
    jdbc_driver_library =&amp;gt; &#34;/logstash/mysql-connector-java-5.1.33.jar&#34;
    jdbc_driver_class =&amp;gt; &#34;com.mysql.jdbc.Driver&#34;
    jdbc_paging_enabled =&amp;gt; &#34;true&#34;
    jdbc_page_size =&amp;gt; &#34;50000&#34;
    schedule =&amp;gt; &#34;* * * * *&#34;
    use_column_value =&amp;gt; true
    tracking_column =&amp;gt; update_date &lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;(4)&lt;/b&gt;
    statement_filepath =&amp;gt; &#34;/logstash/sql-update/ti_procurement.sql&#34; &lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;(5)&lt;/b&gt;
  }
  jdbc {
    type =&amp;gt; &#34;resources&#34;
    jdbc_connection_string =&amp;gt; &#34;jdbc:mysql://mysql:3306/mailiqing&#34;
    jdbc_user =&amp;gt; &#34;root&#34;
    jdbc_password =&amp;gt; &#34;111111&#34;
    jdbc_driver_library =&amp;gt; &#34;/logstash/mysql-connector-java-5.1.33.jar&#34;
    jdbc_driver_class =&amp;gt; &#34;com.mysql.jdbc.Driver&#34;
    jdbc_paging_enabled =&amp;gt; &#34;true&#34;
    jdbc_page_size =&amp;gt; &#34;50000&#34;
    schedule =&amp;gt; &#34;* * * * *&#34;
    use_column_value =&amp;gt; true
    tracking_column =&amp;gt; rs_modify
    statement_filepath =&amp;gt; &#34;/logstash/sql-update/resources_single.sql&#34;
  }
}
output {
  if [type] == &#34;procurement&#34; {
    elasticsearch {
      hosts =&amp;gt; &#34;es:9200&#34; &lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;(6)&lt;/b&gt;
      index =&amp;gt; &#34;b2b&#34; &lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;(7)&lt;/b&gt;
      document_type =&amp;gt; &#34;ti_procurement&#34; &lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;(8)&lt;/b&gt;
      document_id =&amp;gt; &#34;%{procur_f_id}&#34;
    }
  }
  else if [type] == &#34;resources&#34; {
    elasticsearch {
      hosts =&amp;gt; &#34;es:9200&#34;
      index =&amp;gt; &#34;b2b&#34;
      document_type =&amp;gt; &#34;resources_single&#34;
      document_id =&amp;gt; &#34;%{id}&#34;
    }
  }
  stdout { codec =&amp;gt; rubydebug }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;mysql 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;mysql 用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;3&#34;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;mysql 密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;4&#34;&gt;&lt;/i&gt;&lt;b&gt;4&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;以某一列的值做增量更新&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;5&#34;&gt;&lt;/i&gt;&lt;b&gt;5&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;sql语句&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;6&#34;&gt;&lt;/i&gt;&lt;b&gt;6&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;es 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;7&#34;&gt;&lt;/i&gt;&lt;b&gt;7&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;8&#34;&gt;&lt;/i&gt;&lt;b&gt;8&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;文档&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ti_procurement.sql&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;SELECT
  *
FROM
  ti_procurement tp
WHERE tp.update_date &amp;gt; :sql_last_value&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;resources_single.sql&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;SELECT
  *
FROM
  resources_single rs
WHERE rs.rs_modify &amp;gt; :sql_last_value&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;logstash -f update.yml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_参考&#34;&gt;3. 参考&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://dockone.io/article/101&#34;&gt;Docker 参考&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://wiki.jikexueyuan.com/project/elasticsearch-definitive-guide-cn/&#34;&gt;Elasticsearch 权威指南（中文版）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/NLPchina/elasticsearch-sql&#34; class=&#34;bare&#34;&gt;https://github.com/NLPchina/elasticsearch-sql&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/2.4/index.html&#34; class=&#34;bare&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/2.4/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/logstash/2.4/index.html&#34; class=&#34;bare&#34;&gt;https://www.elastic.co/guide/en/logstash/2.4/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>hive on spark</title>
      <link>/post/bigdata/hadoop/hive-on-spark/</link>
      <pubDate>Sun, 04 Jun 2017 19:56:49 +0000</pubDate>
      
      <guid>/post/bigdata/hadoop/hive-on-spark/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;hive on spark&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_环境&#34;&gt;1. 环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#__strong_vagrant_strong_配置文件&#34;&gt;2. &lt;strong&gt;vagrant&lt;/strong&gt; 配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_配置&#34;&gt;3. 配置&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_hadoop配置文件&#34;&gt;3.1. Hadoop配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_spark配置文件&#34;&gt;3.2. Spark配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_hive配置文件&#34;&gt;3.3. Hive配置文件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_启动&#34;&gt;4. 启动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_环境&#34;&gt;1. 环境&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;table class=&#34;tableblock frame-all grid-all spread&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3334%;&#34;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;名称&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;版本&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;下载地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Docker&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Docker version 17.04.0-ce, build 4845c56&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://www.docker.com/&#34; class=&#34;bare&#34;&gt;https://www.docker.com/&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;VirtualBox&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;4.3.12&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://www.virtualbox.org/&#34; class=&#34;bare&#34;&gt;https://www.virtualbox.org/&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Vagrant&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Vagrant 1.8.1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://www.vagrantup.com/downloads.html&#34; class=&#34;bare&#34;&gt;https://www.vagrantup.com/downloads.html&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;etcd&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;3.1.8&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/coreos/etcd/releases/download/v3.1.8/etcd-v3.1.8-linux-amd64.tar.gz&#34;&gt;etcd-v3.1.8-linux-amd64.tar.gz&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;flanneld&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;v0.7.1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/coreos/flannel/releases/download/v0.7.1/flanneld-amd64&#34;&gt;flanneld-amd64&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;mk-docker-opts.sh&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coreos/flannel/master/dist/mk-docker-opts.sh&#34;&gt;mk-docker-opts.sh&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;JDK&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;java version &#34;1.7.0_45&#34;&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Hadoop&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Hadoop 2.6.5&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;http://hadoop.apache.org/releases.html&#34; class=&#34;bare&#34;&gt;http://hadoop.apache.org/releases.html&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Spark&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1.5.3&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/apache/spark/tree/branch-1.5&#34; class=&#34;bare&#34;&gt;https://github.com/apache/spark/tree/branch-1.5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Hive&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Hive 2.1.1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;http://hive.apache.org/downloads.html&#34; class=&#34;bare&#34;&gt;http://hive.apache.org/downloads.html&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;__strong_vagrant_strong_配置文件&#34;&gt;2. &lt;strong&gt;vagrant&lt;/strong&gt; 配置文件&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

app_servers = {
    :slave1 =&amp;gt; &#39;192.168.123.124&#39;,
    :slave2 =&amp;gt; &#39;192.168.123.125&#39;
}
Vagrant.configure(2) do |config|
  config.vm.synced_folder &#34;.&#34;, &#34;/vagrant&#34;, disabled: true
  config.ssh.insert_key = false

  app_servers.each do |app_server_name, app_server_ip|
    config.vm.define app_server_name do |coreos|
      coreos.vm.box = &#34;CentOS-7&#34;
      coreos.vm.hostname = app_server_name.to_s
      coreos.vm.network :public_network, ip: app_server_ip
      coreos.vm.provider &#34;virtualbox&#34; do |vb|
        vb.memory = &#34;1024&#34;
      end
    end
  end
end&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_配置&#34;&gt;3. 配置&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;编辑 &lt;strong&gt;hosts&lt;/strong&gt; 文件&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt;&amp;gt; /etc/hosts &amp;lt;&amp;lt;_EOF_
192.168.123.123 master
192.168.123.124 slave1
192.168.123.125 slave2
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 &lt;strong&gt;master&lt;/strong&gt; 到 &lt;strong&gt;slave&lt;/strong&gt; 的免密登陆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编译 &lt;strong&gt;Spark&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;docker run -it --rm -v /root/dishui/data/.m2/:/root/.m2 -v /root/dishui/spark-branch-1.5:/spark-branch-1.5 dishui.io:5000/dishui/java:1.1 /bin/bash

./make-distribution.sh --name &#34;hadoop2-without-hive&#34; --tgz &#34;-Pyarn,hadoop-provided,hadoop-2.4,parquet-provided&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://pan.baidu.com/s/1bE99fw&#34;&gt;编译好的(密码：atlg)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
&lt;strong&gt;Maven&lt;/strong&gt; 添加阿里云仓库
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;mirror&amp;gt;
    &amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;
    &amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;
    &amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public/&amp;lt;/url&amp;gt;
    &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;
&amp;lt;/mirror&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载解压&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;tar -zxf hadoop-2.6.5.tar.gz -C /usr/local/
tar -zxf apache-hive-2.1.1-bin.tar.gz -C /usr/local/
tar -zxf spark-1.5.3-SNAPSHOT-bin-hadoop2-without-hive.tgz -C /usr/local/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;环境变量&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; /etc/profile.d/bigdata.sh &amp;lt;&amp;lt;_EOF_
export JAVA_HOME=/usr/local/jdk1.7.0_45
export HADOOP_HOME=/usr/local/hadoop-2.6.5
export SPARK_HOME=/usr/local/spark-1.5.3
export HIVE_HOME=/usr/local/apache-hive-1.2.1-bin
export PATH=\$PATH:\$JAVA_HOME/bin:\$HADOOP_HOME/bin:\$SPARK_HOME/bin:\$HADOOP_HOME/sbin:\$SPARK_HOME/sbin:\$HIVE_HOME/bin
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_hadoop配置文件&#34;&gt;3.1. Hadoop配置文件&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $HADOOP_HOME/etc/hadoop/core-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;configuration&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;fs.defaultFS&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;hdfs://master:9000&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;hadoop.tmp.dir&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;/root/hdfs/&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $HADOOP_HOME/etc/hadoop/hdfs-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;configuration&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;dfs.namenode.name.dir&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;file:///root/hdfs/namenode&amp;lt;/value&amp;gt;
        &amp;lt;description&amp;gt;NameNode directory for namespace and transaction logs storage.&amp;lt;/description&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;dfs.datanode.data.dir&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;file:///root/hdfs/datanode&amp;lt;/value&amp;gt;
        &amp;lt;description&amp;gt;DataNode directory&amp;lt;/description&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;dfs.replication&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;2&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $HADOOP_HOME/etc/hadoop/yarn-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;configuration&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.nodemanager.aux-services&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;mapreduce_shuffle&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.nodemanager.aux-services.mapreduce_shuffle.class&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;org.apache.hadoop.mapred.ShuffleHandler&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.resourcemanager.hostname&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;master&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;!-- Hive on spark--&amp;gt;
    &amp;lt;property&amp;gt;
        &amp;lt;name&amp;gt;yarn.resourcemanager.scheduler.class&amp;lt;/name&amp;gt;
        &amp;lt;value&amp;gt;org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $HADOOP_HOME/etc/hadoop/slaves&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;slave1
slave2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_spark配置文件&#34;&gt;3.2. Spark配置文件&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $SPARK_HOME/conf/spark-env.sh&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;export JAVA_HOME=/usr/local/jdk1.7.0_45/
export HADOOP_HOME=/usr/local/hadoop-2.6.5
export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
export YARN_CONF_DIR=$HADOOP_HOME/etc/hadoop
export SPARK_DIST_CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath)
export SPARK_MASTER_IP=master
export SPARK_LOCAL_IP=master
export SPARK_MASTER_PORT=7077&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $SPARK_HOME/conf/spark-defaults.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;spark.master                     yarn-cluster &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
spark.home                       /usr/local/spark-1.5.3
spark.eventLog.enabled           true
spark.eventLog.dir               hdfs://master:9000/hive-spark-log &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
spark.serializer                 org.apache.spark.serializer.KryoSerializer
spark.executor.memory            512m
spark.driver.memory              512m
spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=&#34;one two three&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;spark&lt;/strong&gt; &lt;strong&gt;yarn&lt;/strong&gt; 模式启动(默认: &lt;strong&gt;spark://master:7077&lt;/strong&gt; )&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;在 &lt;strong&gt;hdfs&lt;/strong&gt; 中要存在&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;．&lt;code&gt;vi $SPARK_HOME/conf/slaves&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;+&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;slave1
slave2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_hive配置文件&#34;&gt;3.3. Hive配置文件&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;vi $HIVE_HOME/conf/hive-site.xml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; standalone=&#34;no&#34;?&amp;gt;
&amp;lt;?xml-stylesheet type=&#34;text/xsl&#34; href=&#34;configuration.xsl&#34;?&amp;gt;
&amp;lt;configuration&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;javax.jdo.option.ConnectionURL&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;jdbc:mysql://master:3308/hive?createDatabaseIfNotExist=true&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;

    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;javax.jdo.option.ConnectionDriverName&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;com.mysql.jdbc.Driver&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;

    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;javax.jdo.option.ConnectionUserName&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;root&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;

    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;javax.jdo.option.ConnectionPassword&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;111111&amp;lt;/value&amp;gt;
      &amp;lt;description&amp;gt;password to use against metastore database&amp;lt;/description&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
       &amp;lt;name&amp;gt;hive.metastore.schema.verification&amp;lt;/name&amp;gt;
       &amp;lt;value&amp;gt;false&amp;lt;/value&amp;gt;
     &amp;lt;/property&amp;gt;

    &amp;lt;!-- hive on spark --&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;hive.execution.engine&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;spark&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.enentLog.enabled&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;true&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.enentLog.dir&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;hdfs://master:9000/hive-spark-log&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.serializer&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;org.apache.spark.serializer.KryoSerializer&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.executor.memeory&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;512m&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.driver.memeory&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;512m&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property&amp;gt;
      &amp;lt;name&amp;gt;spark.executor.extraJavaOptions&amp;lt;/name&amp;gt;
      &amp;lt;value&amp;gt;-XX:+PrintGCDetails -Dkey=value -Dnumbers=&#34;one two three&#34;&amp;lt;/value&amp;gt;
    &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
拷贝 &lt;strong&gt;mysql-connector-java-5.1.35-bin.jar&lt;/strong&gt; 到 &lt;strong&gt;$HIVE_HOME/lib&lt;/strong&gt; 下
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_启动&#34;&gt;4. 启动&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;启动 &lt;strong&gt;Hadoop&lt;/strong&gt; 集群&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; start-hadoop.sh &amp;lt;&amp;lt;_EOF_
#!/bin/bash

echo -e &#34;\n&#34;
$HADOOP_HOME/sbin/start-dfs.sh
echo -e &#34;\n&#34;
$HADOOP_HOME/sbin/start-yarn.sh
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;查看集群是否运行正常&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;[root@master ~]# jps
21784 Jps
12874 Master
5748 ResourceManager
5593 SecondaryNameNode
5415 NameNode&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动 &lt;strong&gt;Spark&lt;/strong&gt; 集群&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;$SPARK_HOME/sbin/start-all.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;olist loweralpha&#34;&gt;
&lt;ol class=&#34;loweralpha&#34; type=&#34;a&#34;&gt;
&lt;li&gt;
&lt;p&gt;测试 &lt;strong&gt;Spark&lt;/strong&gt; 集群是否运行正常&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;$SPARK_HOME/bin/spark-submit \
--class org.apache.spark.examples.SparkPi \
--master yarn \ &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
--deploy-mode client \
--executor-memory 512M \
--total-executor-cores 1 \
$SPARK_HOME/lib/spark-examples-1.5.2-hadoop2.2.0.jar \
10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;yarn&lt;/strong&gt; 模式&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hive on spark&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;hive
create table test(ts BIGINT,line STRING); (创建表）
select count(*) from test;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://master:8088/cluster&#34;&gt; &lt;strong&gt;yarn&lt;/strong&gt; 中查看&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>etcd flanneld</title>
      <link>/post/docker/etcd-flanneld/</link>
      <pubDate>Wed, 31 May 2017 22:53:49 +0000</pubDate>
      
      <guid>/post/docker/etcd-flanneld/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;etcd flanneld&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_环境&#34;&gt;1. 环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_启动&#34;&gt;2. 启动&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_etcd&#34;&gt;2.1. etcd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_flanneld&#34;&gt;2.2. flanneld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_修改docker参数&#34;&gt;2.3. 修改Docker参数&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_q_a&#34;&gt;3. Q &amp;amp; A&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_参考&#34;&gt;4. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_环境&#34;&gt;1. 环境&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;table class=&#34;tableblock frame-all grid-all spread&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3334%;&#34;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;名称&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;版本&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;下载地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;etcd&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;3.1.8&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/coreos/etcd/releases/download/v3.1.8/etcd-v3.1.8-linux-amd64.tar.gz&#34;&gt;etcd-v3.1.8-linux-amd64.tar.gz&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;flanneld&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;v0.7.1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/coreos/flannel/releases/download/v0.7.1/flanneld-amd64&#34;&gt;flanneld-amd64&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;mk-docker-opts.sh&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coreos/flannel/master/dist/mk-docker-opts.sh&#34;&gt;mk-docker-opts.sh&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
etcd flanneld mk-docker-opts.sh 下载到 $HOME/bin 下
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_启动&#34;&gt;2. 启动&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_etcd&#34;&gt;2.1. etcd&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;nohup etcd \
  --name my-etcd-1 \
  --data-dir ~/etcd-data \
  --listen-client-urls http://0.0.0.0:2379 \
  --advertise-client-urls http://0.0.0.0:2379 \
  --listen-peer-urls http://0.0.0.0:2380 \
  --initial-advertise-peer-urls http://0.0.0.0:2380 &amp;amp;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;开机启动&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; /usr/lib/systemd/system/etcd.service &amp;lt;&amp;lt;_EOF_
[Unit]
Description=etcd
After=network.target
After=network-online.target
[Service]
ExecStart=/root/bin/etcd \
  --name my-etcd-1 \
  --data-dir ~/etcd-data \
  --listen-client-urls http://0.0.0.0:2379 \
  --advertise-client-urls http://0.0.0.0:2379 \
  --listen-peer-urls http://0.0.0.0:2380 \
  --initial-advertise-peer-urls http://0.0.0.0:2380
[Install]
WantedBy=multi-user.target
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;添加网段 确定etcd可以使用之后，我们需要设置分配给docker网络的网段&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;etcdctl mk /coreos.com/network/config &#39;{&#34;Network&#34;:&#34;172.17.0.0/16&#34;, &#34;SubnetMin&#34;: &#34;172.17.1.0&#34;, &#34;SubnetMax&#34;: &#34;172.17.254.0&#34;}&#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_flanneld&#34;&gt;2.2. flanneld&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;nohup flanneld -iface=enp4s0f0 \ &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
-etcd-endpoints=http://192.168.123.124:2379 &amp;amp; &lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;-iface 网卡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;2&#34;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;-etcd-endpoints: etcd 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; /usr/lib/systemd/system/flanneld.service &amp;lt;&amp;lt;_EOF_
[Unit]
After=network.target
After=network-online.target etcd.service
Description=flannel
[Service]
ExecStart=/root/bin/flanneld \
-iface=enp4s0f0 \
-etcd-endpoints=http://196.168.1.34:2379
[Install]
WantedBy=multi-user.target
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_修改docker参数&#34;&gt;2.3. 修改Docker参数&lt;/h3&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;vi /usr/lib/systemd/system/docker.service
# 添加
EnvironmentFile=-/etc/sysconfig/docker
ExecStart=/usr/bin/dockerd $DOCKER_OPTS&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;EnvironmentFile=-/run/flannel/subnet.env
ExecStart=/usr/bin/dockerd --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU}&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;mk-docker-opts.sh -c
cat /run/docker_opts.env &amp;gt; /etc/sysconfig/docker
systemctl daemon-reload &amp;amp;&amp;amp; systemctl restart docker&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;etcdctl ls /coreos.com/network/subnets&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_q_a&#34;&gt;3. Q &amp;amp; A&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;dlist&#34;&gt;
&lt;dl&gt;
&lt;dt class=&#34;hdlist1&#34;&gt;重启后 两个主机 flannel ping 不通 &lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;路由信息丢失&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;ip r # 查看路由信息

# 172.17.0.0/16 dev flannel0  proto kernel  scope link  src 172.17.25.0 (例子)
# 添加路由
ip route add 172.17.0.0/16 via 172.17.25.0 dev flannel0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;mk-docker-opts.sh -i
source /run/flannel/subnet.env
rm /var/run/docker.pid
ifconfig docker0 ${FLANNEL_SUBNET}&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_参考&#34;&gt;4. 参考&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.jianshu.com/p/a2039a8855ec&#34;&gt;CentOS7安装etcd和flannel&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>文档</title>
      <link>/post/work/wuliu/jiaojie/</link>
      <pubDate>Mon, 15 May 2017 09:06:35 +0000</pubDate>
      
      <guid>/post/work/wuliu/jiaojie/</guid>
      <description>&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt;
&lt;div id=&#34;toctitle&#34;&gt;Contents&lt;/div&gt;
&lt;ul class=&#34;sectlevel1&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_测试服务器&#34;&gt;1. 测试服务器&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_docker_安装&#34;&gt;1.1. Docker 安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_rancher_安装&#34;&gt;1.2. Rancher 安装&lt;/a&gt;
&lt;ul class=&#34;sectlevel3&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_registry_server&#34;&gt;1.2.1. registry server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_registry_client端&#34;&gt;1.2.2. registry client端&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_下载_strong_rancher_strong_所需镜像并_strong_push_strong_到_strong_docker_registry_strong&#34;&gt;1.2.3. 下载 &lt;strong&gt;Rancher&lt;/strong&gt; 所需镜像并 &lt;strong&gt;Push&lt;/strong&gt; 到 &lt;strong&gt;Docker Registry&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_rancher_启动&#34;&gt;1.3. Rancher 启动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_应用&#34;&gt;1.4. 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_正式服务器&#34;&gt;2. 正式服务器&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_参考&#34;&gt;2.1. 参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_docker_操作命令&#34;&gt;3. Docker 操作命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_ansible&#34;&gt;4. Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#_q_a&#34;&gt;5. Q &amp;amp; A&lt;/a&gt;
&lt;ul class=&#34;sectlevel2&#34;&gt;
&lt;li&gt;&lt;a href=&#34;#_rancher&#34;&gt;5.1. Rancher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_测试服务器&#34;&gt;1. 测试服务器&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;环境:&lt;/p&gt;
&lt;/div&gt;
&lt;table class=&#34;tableblock frame-all grid-all spread&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3333%;&#34;&gt;
&lt;col style=&#34;width: 33.3334%;&#34;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;名称&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;版本&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;下载地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Docker&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Docker version 1.13.1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://store.docker.com/editions/community/docker-ce-server-centos?tab=description&#34;&gt;docker&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Rancher&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;1.5&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/rancher/rancher/tree/v1.5&#34;&gt;rancher 1.5&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;Docker Compose&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;docker-compose version 1.8.1, build 878cff1&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;&lt;a href=&#34;https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64&#34;&gt;docker-compose&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_docker_安装&#34;&gt;1.1. Docker 安装&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;配置 本地 yum 仓库&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum install -y yum-plugin-downloadonly # yum下载软件包插件
mkdir -p /var/www/html/data/yum-repo/ # yum 仓库目录
yum install docker-engine-1.12.1-1.el7.centos --downloadonly --downloaddir=/var/www/html/data/yum-repo/ # 下载 docker 依赖到仓库
createrepo -p -d -o /var/www/html/data/yum-repo/ /var/www/html/data/yum-repo/ # 生成 yum 仓库信息

systemctl start httpd # 启动 apache (如果没有 yum install -y httpd 安装)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 内网 &lt;code&gt;yum&lt;/code&gt; 源&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; /etc/yum.repos.d/CentOS-Base.repo &amp;lt;&amp;lt;_EOF_
[Local-rpm]
name=Local-rpm
baseurl=http://jzlh.com/data/yum-repo
enabled=1
gpgcheck=0
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置 远程 &lt;code&gt;yum&lt;/code&gt; 源&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;cat &amp;gt; /etc/yum.repos.d/docker-main.repo &amp;lt;&amp;lt;_EOF_
[docker-main-repo]
name=Docker main Repository
baseurl=http://mirrors.aliyun.com/docker-engine/yum/repo/main/centos/7
enabled=1
gpgcheck=1
gpgkey=http://mirrors.aliyun.com/docker-engine/yum/gpg
_EOF_&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;docker&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum install -y docker-engine-1.12.1-1.el7.centos&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关闭防火墙&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;systemctl status firewalld.service #查看firewall状态

systemctl stop firewalld.service #停止firewall

systemctl disable firewalld.service #停止firewall开机启动&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;systemctl enable docker # 开机启动
systemctl start docker # 启动&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何使用Docker加速器&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;mkdir -p /etc/docker
tee /etc/docker/daemon.json &amp;lt;&amp;lt;-&#39;EOF&#39;
{
  &#34;registry-mirrors&#34;: [&#34;https://7xefeire.mirror.aliyuncs.com&#34;]
}
EOF
systemctl daemon-reload
systemctl restart docker&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_rancher_安装&#34;&gt;1.2. Rancher 安装&lt;/h3&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_registry_server&#34;&gt;1.2.1. registry server&lt;/h4&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;生成自签名证书&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd ~/

mkdir registry &amp;amp;&amp;amp; cd registry &amp;amp;&amp;amp; mkdir certs &amp;amp;&amp;amp; cd certs

openssl req -x509 -days 3650 -subj &#39;/CN=mailiqing.com/&#39; -nodes -newkey rsa:2048 -keyout registry.key -out registry.crt&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;admonitionblock tip&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&#34;icon&#34;&gt;
&lt;i class=&#34;fa icon-tip&#34; title=&#34;Tip&#34;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&#34;content&#34;&gt;
CN=mailiqing.com 这里是域名
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拉取 &lt;strong&gt;registry:2.5&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker pull registry:2.5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动 &lt;code&gt;registry server&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;registry.yml&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;version: &#39;2&#39;

services:
  registry-v2:
    image: registry:2.5
    container_name: registry-v2
    ports:
      - &#34;5000:5000&#34;
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt
      REGISTRY_HTTP_TLS_KEY: /certs/registry.key
    volumes:
      - /home/wuliu/registry-data:/var/lib/registry
      - /home/wuliu/registry/certs:/certs
  registry-web: &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    image: konradkleine/docker-registry-frontend:v2
    container_name: registry-web
    ports:
      - &#34;8082:80&#34;
    environment:
      ENV_DOCKER_REGISTRY_HOST: jzlh.com
      ENV_DOCKER_REGISTRY_PORT: 5000
      ENV_DOCKER_REGISTRY_USE_SSL: 1
    extra_hosts:
      - &#34;jzlh.com:192.168.1.55&#34;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;web界面查看镜像列表&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker-compose -f registry.yml up&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_registry_client端&#34;&gt;1.2.2. registry client端&lt;/h4&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;registry-cert.sh&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;#!/bin/bash

DOMAIN=mailiqing.com:5000

mkdir -p /etc/docker/certs.d/$DOMAIN

cat &amp;gt; /etc/docker/certs.d/$DOMAIN/registry.crt &amp;lt;&amp;lt;_EOF_ &lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
-----BEGIN CERTIFICATE-----
MIIDAzCCAeugAwIBAgIJAMsKmEFPgZmQMA0GCSqGSIb3DQEBCwUAMBgxFjAUBgNV
BAMMDW1haWxpcWluZy5jb20wHhcNMTcwNTE1MDMxODU0WhcNMjcwNTEzMDMxODU0
WjAYMRYwFAYDVQQDDA1tYWlsaXFpbmcuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOC
AQ8AMIIBCgKCAQEAuurO4pKcIDgjQ3JMojee+JCvXj3pHqT5PLm+YO6UCTayOKqK
Jh9Ykfs6NOo73VZXzLc0EPH+bNgNUbX6X7y5iYV/iBu+Yt9gxrSYr3UF8/LbtLGk
mExWEe+JLVkJQna2mqXGsEq4UdUkQa/5de1ts5go5Uhzq79QYKdgduneh0wwmBjX
rX2UYB36lBobMGDLnC6mVwavJprpxWpsr5t2L4nH02vLg44vJDz9grzm3EHQ1cOn
pYsKRbFGptNmwX+/f7kt+jItOsIG+Om3CoM614Y2rzAGT0zfv/3jiyDLLyXiwvnc
ABqrD9+BriEJd3nfkdF5gNtGn3CPHuq0EGOWkwIDAQABo1AwTjAdBgNVHQ4EFgQU
jr05uLk9epuxBdo7x5gRjT/zfGwwHwYDVR0jBBgwFoAUjr05uLk9epuxBdo7x5gR
jT/zfGwwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEArLB0Nbk5153a
MqWHoLAVnFmVpkKDU4vOr+jw71xKNPlv5/cwppTWO1AagbZoQdyaprspVOvca0E1
zrNigjuGkVSkb03rE61Kz6v2U0kJ/DTKhDQmvUHf5PqWpfyeZlnu4a+EyHeTPwpI
U45htOenShJ7QEEfAZ0SxHq0gpu38CeSUIxY2xYXxSDjMSFEmGlekbNKpBO64V/E
pqBUxAMaTMRczMh9JohN2yFpMcbbUCr87DAIExHJZIeyrYBorBf+sas3DDgbWalv
CbJ3Q+lRb0nB7tYZerazeshBh3rVmE9eZq5idEVvdmXAIqdV3uZV0mhx0Rw+j2e3
gHprA9NIog==
-----END CERTIFICATE-----
_EOF_

echo 196.168.1.33 mailiqing.com &amp;gt;&amp;gt; /etc/hosts&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;colist arabic&#34;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&#34;conum&#34; data-value=&#34;1&#34;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;内容对应 &lt;code&gt;registry server&lt;/code&gt; 的 &lt;code&gt;registry.crt&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_下载_strong_rancher_strong_所需镜像并_strong_push_strong_到_strong_docker_registry_strong&#34;&gt;1.2.3. 下载 &lt;strong&gt;Rancher&lt;/strong&gt; 所需镜像并 &lt;strong&gt;Push&lt;/strong&gt; 到 &lt;strong&gt;Docker Registry&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;脚本&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;push.sh&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;#!/bin/bash

for var in $@
do
    echo &#34;$var&#34;
    docker pull $var
    docker tag $var mailiqing.com:5000/$var
    docker push mailiqing.com:5000/$var
    docker rmi mailiqing.com:5000/$var
done&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sh push.sh rancher/net:v0.11.2 rancher/net:holder rancher/scheduler:v0.7.5 rancher/healthcheck:v0.2.3 rancher/metadata:v0.9.1 rancher/dns:v0.14.2 rancher/network-manager:v0.6.6 rancher/agent:v1.2.2 rancher/server:v1.5.5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_rancher_启动&#34;&gt;1.3. Rancher 启动&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;启动 &lt;strong&gt;rancher/server&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d --name rancher-server --restart=unless-stopped -p 8080:8080 rancher/server:v1.5.5&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;rancher&lt;/strong&gt; 管理界面地址&lt;/p&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;a href=&#34;http://196.168.1.33:8080&#34;&gt;Rancher UI&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加主机&lt;/p&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/work/wuliu/2017-05-16_171531.png&#34; alt=&#34;2017 05 16 171531&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;拉去 &lt;strong&gt;agent&lt;/strong&gt; 所需的镜像&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;title&#34;&gt;pull.sh&lt;/div&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;#!/bin/bash

for var in $@
do
  echo &#34;$var&#34;
  docker pull mailiqing.com:5000/$var
  docker tag mailiqing.com:5000/$var $var
  docker rmi mailiqing.com:5000/$var
done&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;sudo docker run --rm --privileged -e CATTLE_AGENT_IP=192.168.1.55 -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.2.2 http://192.168.1.55:8080/v1/scripts/4E42E0DCA5755FA4E9C7:1483142400000:iFFrEd1fYz0mxK7ElC63n6X5Kw&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_应用&#34;&gt;1.4. 应用&lt;/h3&gt;
&lt;div class=&#34;imageblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;img src=&#34;/src/img/work/wuliu/2017-05-16_171915.png&#34; alt=&#34;2017 05 16 171915&#34;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_正式服务器&#34;&gt;2. 正式服务器&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;table class=&#34;tableblock frame-all grid-all spread&#34;&gt;
&lt;colgroup&gt;
&lt;col style=&#34;width: 25%;&#34;&gt;
&lt;col style=&#34;width: 25%;&#34;&gt;
&lt;col style=&#34;width: 25%;&#34;&gt;
&lt;col style=&#34;width: 25%;&#34;&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;主机名&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;IP(外网)&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;IP(内网)&lt;/th&gt;
&lt;th class=&#34;tableblock halign-left valign-top&#34;&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;pro-54&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;116.90.81.78&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;192.168.1.54&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;正式服务器&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;jzlh&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;116.90.81.79&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;192.168.1.55&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;监控(部署)服务器&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;pro-51&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;192.168.1.51&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;正式服务器&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;pro-52&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;192.168.1.52&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;正式服务器&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;pro-53&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;192.168.1.53&lt;/p&gt;&lt;/td&gt;
&lt;td class=&#34;tableblock halign-left valign-top&#34;&gt;&lt;p class=&#34;tableblock&#34;&gt;正式服务器&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_参考&#34;&gt;2.1. 参考&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://git.oschina.net/dishui/dockerfiles&#34;&gt;测试服务器 dockerfiles&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://store.docker.com/&#34;&gt;docker store&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://dev.aliyun.com/search.html&#34;&gt;阿里云 镜像&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_docker_操作命令&#34;&gt;3. Docker 操作命令&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;asciinema-player src=&#34;/src/records/docker.json&#34; cols=&#34;95&#34; rows=&#34;22&#34; speed=&#34;2&#34;&gt;&lt;/asciinema-player&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_ansible&#34;&gt;4. Ansible&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;配置免登录&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;#生成 ssh 密钥
ssh-keygen
#拷贝公钥到目标主机
ssh-copy-id 196.168.1.34&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行命令&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;ansible-playbook -i hosts rancher.yml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_q_a&#34;&gt;5. Q &amp;amp; A&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_rancher&#34;&gt;5.1. Rancher&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;WARNING: IPv4 forwarding is disabled. Networking will not work.&lt;/p&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;highlightjs highlight&#34;&gt;&lt;code&gt;# 临时设置端口转发(重启失效)
sysctl net.ipv4.ip_forward=1
# 重启后生效
vi /usr/lib/sysctl.d/50-default.conf

net.ipv4.ip_forward = 1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>