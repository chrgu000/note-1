[
    {
        "uri": "//hugo/post/app/base",
        "content": "\r\nasdfasdf\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/bug",
        "title": "bug",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n\r\n\r\ninclude::content/post/app/shop.adoc[]\r\n\r\n. 我的店铺--添加商品--添加商品属性\r\n出库地址和销售区域 是选择的 不是填写的\r\n\r\nSELECT\r\n  mpa.product_id,\r\n  IFNULL(\r\n    tranAddr (\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '销售地区'\r\n          THEN mpa.attr_value\r\n          ELSE NULL\r\n        END\r\n      ),\r\n      '-'\r\n    ),\r\n    CAST(mpa.attr_value AS CHAR(12))\r\n  ) sale_region,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '出库地区'\r\n        THEN tranAddr(mpa.attr_value,'-')\r\n        ELSE NULL\r\n      END\r\n    ) repository_region,\r\nFROM\r\n  mlq_product_attr mpa\r\nWHERE mpa.product_id = '201610261142512'\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/bug",
        "content": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n店铺\r\n\r\n\r\n/* Asciidoctor default stylesheet | MIT License | http://asciidoctor.org */\r\n/* Remove comment around @import statement below when using as a custom stylesheet */\r\n/*@import \"https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700\";*/\r\narticle,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}\r\naudio,canvas,video{display:inline-block}\r\naudio:not([controls]){display:none;height:0}\r\n[hidden],template{display:none}\r\nscript{display:none!important}\r\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}\r\na{background:transparent}\r\na:focus{outline:thin dotted}\r\na:active,a:hover{outline:0}\r\nh1{font-size:2em;margin:.67em 0}\r\nabbr[title]{border-bottom:1px dotted}\r\nb,strong{font-weight:bold}\r\ndfn{font-style:italic}\r\nhr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}\r\nmark{background:#ff0;color:#000}\r\ncode,kbd,pre,samp{font-family:monospace;font-size:1em}\r\npre{white-space:pre-wrap}\r\nq{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\"}\r\nsmall{font-size:80%}\r\nsub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}\r\nsup{top:-.5em}\r\nsub{bottom:-.25em}\r\nimg{border:0}\r\nsvg:not(:root){overflow:hidden}\r\nfigure{margin:0}\r\nfieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}\r\nlegend{border:0;padding:0}\r\nbutton,input,select,textarea{font-family:inherit;font-size:100%;margin:0}\r\nbutton,input{line-height:normal}\r\nbutton,select{text-transform:none}\r\nbutton,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}\r\nbutton[disabled],html input[disabled]{cursor:default}\r\ninput[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}\r\ninput[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}\r\ninput[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}\r\nbutton::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}\r\ntextarea{overflow:auto;vertical-align:top}\r\ntable{border-collapse:collapse;border-spacing:0}\r\n*,*:before,*:after{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box}\r\nhtml,body{font-size:100%}\r\nbody{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:\"Noto Serif\",\"DejaVu Serif\",serif;font-weight:400;font-style:normal;line-height:1;position:relative;cursor:auto;tab-size:4;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}\r\na:hover{cursor:pointer}\r\nimg,object,embed{max-width:100%;height:auto}\r\nobject,embed{height:100%}\r\nimg{-ms-interpolation-mode:bicubic}\r\n.left{float:left!important}\r\n.right{float:right!important}\r\n.text-left{text-align:left!important}\r\n.text-right{text-align:right!important}\r\n.text-center{text-align:center!important}\r\n.text-justify{text-align:justify!important}\r\n.hide{display:none}\r\nimg,object,svg{display:inline-block;vertical-align:middle}\r\ntextarea{height:auto;min-height:50px}\r\nselect{width:100%}\r\n.center{margin-left:auto;margin-right:auto}\r\n.spread{width:100%}\r\np.lead,.paragraph.lead>p,#preamble>.sectionbody>.paragraph:first-of-type p{font-size:1.21875em;line-height:1.6}\r\n.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}\r\ndiv,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0;direction:ltr}\r\na{color:#2156a5;text-decoration:underline;line-height:inherit}\r\na:hover,a:focus{color:#1d4b8f}\r\na img{border:none}\r\np{font-family:inherit;font-weight:400;font-size:1em;line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}\r\np aside{font-size:.875em;line-height:1.35;font-style:italic}\r\nh1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:\"Open Sans\",\"DejaVu Sans\",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}\r\nh1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}\r\nh1{font-size:2.125em}\r\nh2{font-size:1.6875em}\r\nh3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}\r\nh4,h5{font-size:1.125em}\r\nh6{font-size:1em}\r\nhr{border:solid #ddddd8;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em;height:0}\r\nem,i{font-style:italic;line-height:inherit}\r\nstrong,b{font-weight:bold;line-height:inherit}\r\nsmall{font-size:60%;line-height:inherit}\r\ncode{font-family:\"Droid Sans Mono\",\"DejaVu Sans Mono\",monospace;font-weight:400;color:rgba(0,0,0,.9)}\r\nul,ol,dl{font-size:1em;line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}\r\nul,ol,ul.no-bullet,ol.no-bullet{margin-left:1.5em}\r\nul li ul,ul li ol{margin-left:1.25em;margin-bottom:0;font-size:1em}\r\nul.square li ul,ul.circle li ul,ul.disc li ul{list-style:inherit}\r\nul.square{list-style-type:square}\r\nul.circle{list-style-type:circle}\r\nul.disc{list-style-type:disc}\r\nul.no-bullet{list-style:none}\r\nol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}\r\ndl dt{margin-bottom:.3125em;font-weight:bold}\r\ndl dd{margin-bottom:1.25em}\r\nabbr,acronym{text-transform:uppercase;font-size:90%;color:rgba(0,0,0,.8);border-bottom:1px dotted #ddd;cursor:help}\r\nabbr{text-transform:none}\r\nblockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}\r\nblockquote cite{display:block;font-size:.9375em;color:rgba(0,0,0,.6)}\r\nblockquote cite:before{content:\"\\2014 \\0020\"}\r\nblockquote cite a,blockquote cite a:visited{color:rgba(0,0,0,.6)}\r\nblockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}\r\n@media only screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}\r\nh1{font-size:2.75em}\r\nh2{font-size:2.3125em}\r\nh3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}\r\nh4{font-size:1.4375em}}\r\ntable{background:#fff;margin-bottom:1.25em;border:solid 1px #dedede}\r\ntable thead,table tfoot{background:#f7f8f7;font-weight:bold}\r\ntable thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}\r\ntable tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}\r\ntable tr.even,table tr.alt,table tr:nth-of-type(even){background:#f8f8f7}\r\ntable thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{display:table-cell;line-height:1.6}\r\nh1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}\r\nh1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}\r\n.clearfix:before,.clearfix:after,.float-group:before,.float-group:after{content:\" \";display:table}\r\n.clearfix:after,.float-group:after{clear:both}\r\n*:not(pre)>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background-color:#f7f7f8;-webkit-border-radius:4px;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed;word-wrap:break-word}\r\n*:not(pre)>code.nobreak{word-wrap:normal}\r\n*:not(pre)>code.nowrap{white-space:nowrap}\r\npre,pre>code{line-height:1.45;color:rgba(0,0,0,.9);font-family:\"Droid Sans Mono\",\"DejaVu Sans Mono\",monospace;font-weight:400;text-rendering:optimizeSpeed}\r\nem em{font-style:normal}\r\nstrong strong{font-weight:400}\r\n.keyseq{color:rgba(51,51,51,.8)}\r\nkbd{font-family:\"Droid Sans Mono\",\"DejaVu Sans Mono\",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background-color:#f7f7f7;border:1px solid #ccc;-webkit-border-radius:3px;border-radius:3px;-webkit-box-shadow:0 1px 0 rgba(0,0,0,.2),0 0 0 .1em white inset;box-shadow:0 1px 0 rgba(0,0,0,.2),0 0 0 .1em #fff inset;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}\r\n.keyseq kbd:first-child{margin-left:0}\r\n.keyseq kbd:last-child{margin-right:0}\r\n.menuseq,.menu{color:rgba(0,0,0,.8)}\r\nb.button:before,b.button:after{position:relative;top:-1px;font-weight:400}\r\nb.button:before{content:\"[\";padding:0 3px 0 2px}\r\nb.button:after{content:\"]\";padding:0 2px 0 3px}\r\np a>code:hover{color:rgba(0,0,0,.9)}\r\n#header,#content,#footnotes,#footer{width:100%;margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}\r\n#header:before,#header:after,#content:before,#content:after,#footnotes:before,#footnotes:after,#footer:before,#footer:after{content:\" \";display:table}\r\n#header:after,#content:after,#footnotes:after,#footer:after{clear:both}\r\n#content{margin-top:1.25em}\r\n#content:before{content:none}\r\n#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}\r\n#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #ddddd8}\r\n#header>h1:only-child,body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #ddddd8;padding-bottom:8px}\r\n#header .details{border-bottom:1px solid #ddddd8;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:-ms-flexbox;display:-webkit-flex;display:flex;-ms-flex-flow:row wrap;-webkit-flex-flow:row wrap;flex-flow:row wrap}\r\n#header .details span:first-child{margin-left:-.125em}\r\n#header .details span.email a{color:rgba(0,0,0,.85)}\r\n#header .details br{display:none}\r\n#header .details br+span:before{content:\"\\00a0\\2013\\00a0\"}\r\n#header .details br+span.author:before{content:\"\\00a0\\22c5\\00a0\";color:rgba(0,0,0,.85)}\r\n#header .details br+span#revremark:before{content:\"\\00a0|\\00a0\"}\r\n#header #revnumber{text-transform:capitalize}\r\n#header #revnumber:after{content:\"\\00a0\"}\r\n#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #ddddd8;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}\r\n#toc{border-bottom:1px solid #efefed;padding-bottom:.5em}\r\n#toc>ul{margin-left:.125em}\r\n#toc ul.sectlevel0>li>a{font-style:italic}\r\n#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}\r\n#toc ul{font-family:\"Open Sans\",\"DejaVu Sans\",sans-serif;list-style-type:none}\r\n#toc li{line-height:1.3334;margin-top:.3334em}\r\n#toc a{text-decoration:none}\r\n#toc a:active{text-decoration:underline}\r\n#toctitle{color:#7a2518;font-size:1.2em}\r\n@media only screen and (min-width:768px){#toctitle{font-size:1.375em}\r\nbody.toc2{padding-left:15em;padding-right:0}\r\n#toc.toc2{margin-top:0!important;background-color:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #efefed;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}\r\n#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}\r\n#toc.toc2>ul{font-size:.9em;margin-bottom:0}\r\n#toc.toc2 ul ul{margin-left:0;padding-left:1em}\r\n#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}\r\nbody.toc2.toc-right{padding-left:0;padding-right:15em}\r\nbody.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #efefed;left:auto;right:0}}\r\n@media only screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}\r\n#toc.toc2{width:20em}\r\n#toc.toc2 #toctitle{font-size:1.375em}\r\n#toc.toc2>ul{font-size:.95em}\r\n#toc.toc2 ul ul{padding-left:1.25em}\r\nbody.toc2.toc-right{padding-left:0;padding-right:20em}}\r\n#content #toc{border-style:solid;border-width:1px;border-color:#e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;-webkit-border-radius:4px;border-radius:4px}\r\n#content #toc>:first-child{margin-top:0}\r\n#content #toc>:last-child{margin-bottom:0}\r\n#footer{max-width:100%;background-color:rgba(0,0,0,.8);padding:1.25em}\r\n#footer-text{color:rgba(255,255,255,.8);line-height:1.44}\r\n.sect1{padding-bottom:.625em}\r\n@media only screen and (min-width:768px){.sect1{padding-bottom:1.25em}}\r\n.sect1+.sect1{border-top:1px solid #efefed}\r\n#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}\r\n#content h1>a.anchor:before,h2>a.anchor:before,h3>a.anchor:before,#toctitle>a.anchor:before,.sidebarblock>.content>.title>a.anchor:before,h4>a.anchor:before,h5>a.anchor:before,h6>a.anchor:before{content:\"\\00A7\";font-size:.85em;display:block;padding-top:.1em}\r\n#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}\r\n#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}\r\n#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}\r\n.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}\r\n.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:\"Noto Serif\",\"DejaVu Serif\",serif;font-size:1rem;font-style:italic}\r\ntable.tableblock>caption.title{white-space:nowrap;overflow:visible;max-width:0}\r\n.paragraph.lead>p,#preamble>.sectionbody>.paragraph:first-of-type p{color:rgba(0,0,0,.85)}\r\ntable.tableblock #preamble>.sectionbody>.paragraph:first-of-type p{font-size:inherit}\r\n.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}\r\n.admonitionblock>table td.icon{text-align:center;width:80px}\r\n.admonitionblock>table td.icon img{max-width:none}\r\n.admonitionblock>table td.icon .title{font-weight:bold;font-family:\"Open Sans\",\"DejaVu Sans\",sans-serif;text-transform:uppercase}\r\n.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #ddddd8;color:rgba(0,0,0,.6)}\r\n.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}\r\n.exampleblock>.content{border-style:solid;border-width:1px;border-color:#e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;-webkit-border-radius:4px;border-radius:4px}\r\n.exampleblock>.content>:first-child{margin-top:0}\r\n.exampleblock>.content>:last-child{margin-bottom:0}\r\n.sidebarblock{border-style:solid;border-width:1px;border-color:#e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;-webkit-border-radius:4px;border-radius:4px}\r\n.sidebarblock>:first-child{margin-top:0}\r\n.sidebarblock>:last-child{margin-bottom:0}\r\n.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}\r\n.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}\r\n.literalblock pre,.listingblock pre:not(.highlight),.listingblock pre[class=\"highlight\"],.listingblock pre[class^=\"highlight \"],.listingblock pre.CodeRay,.listingblock pre.prettyprint{background:#f7f7f8}\r\n.sidebarblock .literalblock pre,.sidebarblock .listingblock pre:not(.highlight),.sidebarblock .listingblock pre[class=\"highlight\"],.sidebarblock .listingblock pre[class^=\"highlight \"],.sidebarblock .listingblock pre.CodeRay,.sidebarblock .listingblock pre.prettyprint{background:#f2f1f1}\r\n.literalblock pre,.literalblock pre[class],.listingblock pre,.listingblock pre[class]{-webkit-border-radius:4px;border-radius:4px;word-wrap:break-word;padding:1em;font-size:.8125em}\r\n.literalblock pre.nowrap,.literalblock pre[class].nowrap,.listingblock pre.nowrap,.listingblock pre[class].nowrap{overflow-x:auto;white-space:pre;word-wrap:normal}\r\n@media only screen and (min-width:768px){.literalblock pre,.literalblock pre[class],.listingblock pre,.listingblock pre[class]{font-size:.90625em}}\r\n@media only screen and (min-width:1280px){.literalblock pre,.literalblock pre[class],.listingblock pre,.listingblock pre[class]{font-size:1em}}\r\n.literalblock.output pre{color:#f7f7f8;background-color:rgba(0,0,0,.9)}\r\n.listingblock pre.highlightjs{padding:0}\r\n.listingblock pre.highlightjs>code{padding:1em;-webkit-border-radius:4px;border-radius:4px}\r\n.listingblock pre.prettyprint{border-width:0}\r\n.listingblock>.content{position:relative}\r\n.listingblock code[data-lang]:before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:#999}\r\n.listingblock:hover code[data-lang]:before{display:block}\r\n.listingblock.terminal pre .command:before{content:attr(data-prompt);padding-right:.5em;color:#999}\r\n.listingblock.terminal pre .command:not([data-prompt]):before{content:\"$\"}\r\ntable.pyhltable{border-collapse:separate;border:0;margin-bottom:0;background:none}\r\ntable.pyhltable td{vertical-align:top;padding-top:0;padding-bottom:0;line-height:1.45}\r\ntable.pyhltable td.code{padding-left:.75em;padding-right:0}\r\npre.pygments .lineno,table.pyhltable td:not(.code){color:#999;padding-left:0;padding-right:.5em;border-right:1px solid #ddddd8}\r\npre.pygments .lineno{display:inline-block;margin-right:.25em}\r\ntable.pyhltable .linenodiv{background:none!important;padding-right:0!important}\r\n.quoteblock{margin:0 1em 1.25em 1.5em;display:table}\r\n.quoteblock>.title{margin-left:-1.5em;margin-bottom:.75em}\r\n.quoteblock blockquote,.quoteblock blockquote p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}\r\n.quoteblock blockquote{margin:0;padding:0;border:0}\r\n.quoteblock blockquote:before{content:\"\\201c\";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}\r\n.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}\r\n.quoteblock .attribution{margin-top:.5em;margin-right:.5ex;text-align:right}\r\n.quoteblock .quoteblock{margin-left:0;margin-right:0;padding:.5em 0;border-left:3px solid rgba(0,0,0,.6)}\r\n.quoteblock .quoteblock blockquote{padding:0 0 0 .75em}\r\n.quoteblock .quoteblock blockquote:before{display:none}\r\n.verseblock{margin:0 1em 1.25em 1em}\r\n.verseblock pre{font-family:\"Open Sans\",\"DejaVu Sans\",sans;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}\r\n.verseblock pre strong{font-weight:400}\r\n.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}\r\n.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}\r\n.quoteblock .attribution br,.verseblock .attribution br{display:none}\r\n.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}\r\n.quoteblock.abstract{margin:0 0 1.25em 0;display:block}\r\n.quoteblock.abstract blockquote,.quoteblock.abstract blockquote p{text-align:left;word-spacing:0}\r\n.quoteblock.abstract blockquote:before,.quoteblock.abstract blockquote p:first-of-type:before{display:none}\r\ntable.tableblock{max-width:100%;border-collapse:separate}\r\ntable.tableblock td>.paragraph:last-child p>p:last-child,table.tableblock th>p:last-child,table.tableblock td>p:last-child{margin-bottom:0}\r\ntable.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}\r\ntable.grid-all th.tableblock,table.grid-all td.tableblock{border-width:0 1px 1px 0}\r\ntable.grid-all tfoot>tr>th.tableblock,table.grid-all tfoot>tr>td.tableblock{border-width:1px 1px 0 0}\r\ntable.grid-cols th.tableblock,table.grid-cols td.tableblock{border-width:0 1px 0 0}\r\ntable.grid-all *>tr>.tableblock:last-child,table.grid-cols *>tr>.tableblock:last-child{border-right-width:0}\r\ntable.grid-rows th.tableblock,table.grid-rows td.tableblock{border-width:0 0 1px 0}\r\ntable.grid-all tbody>tr:last-child>th.tableblock,table.grid-all tbody>tr:last-child>td.tableblock,table.grid-all thead:last-child>tr>th.tableblock,table.grid-rows tbody>tr:last-child>th.tableblock,table.grid-rows tbody>tr:last-child>td.tableblock,table.grid-rows thead:last-child>tr>th.tableblock{border-bottom-width:0}\r\ntable.grid-rows tfoot>tr>th.tableblock,table.grid-rows tfoot>tr>td.tableblock{border-width:1px 0 0 0}\r\ntable.frame-all{border-width:1px}\r\ntable.frame-sides{border-width:0 1px}\r\ntable.frame-topbot{border-width:1px 0}\r\nth.halign-left,td.halign-left{text-align:left}\r\nth.halign-right,td.halign-right{text-align:right}\r\nth.halign-center,td.halign-center{text-align:center}\r\nth.valign-top,td.valign-top{vertical-align:top}\r\nth.valign-bottom,td.valign-bottom{vertical-align:bottom}\r\nth.valign-middle,td.valign-middle{vertical-align:middle}\r\ntable thead th,table tfoot th{font-weight:bold}\r\ntbody tr th{display:table-cell;line-height:1.6;background:#f7f8f7}\r\ntbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}\r\np.tableblock>code:only-child{background:none;padding:0}\r\np.tableblock{font-size:1em}\r\ntd>div.verse{white-space:pre}\r\nol{margin-left:1.75em}\r\nul li ol{margin-left:1.5em}\r\ndl dd{margin-left:1.125em}\r\ndl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}\r\nol>li p,ul>li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}\r\nul.unstyled,ol.unnumbered,ul.checklist,ul.none{list-style-type:none}\r\nul.unstyled,ol.unnumbered,ul.checklist{margin-left:.625em}\r\nul.checklist li>p:first-child>.fa-square-o:first-child,ul.checklist li>p:first-child>.fa-check-square-o:first-child{width:1em;font-size:.85em}\r\nul.checklist li>p:first-child>input[type=\"checkbox\"]:first-child{width:1em;position:relative;top:1px}\r\nul.inline{margin:0 auto .625em auto;margin-left:-1.375em;margin-right:0;padding:0;list-style:none;overflow:hidden}\r\nul.inline>li{list-style:none;float:left;margin-left:1.375em;display:block}\r\nul.inline>li>*{display:block}\r\n.unstyled dl dt{font-weight:400;font-style:normal}\r\nol.arabic{list-style-type:decimal}\r\nol.decimal{list-style-type:decimal-leading-zero}\r\nol.loweralpha{list-style-type:lower-alpha}\r\nol.upperalpha{list-style-type:upper-alpha}\r\nol.lowerroman{list-style-type:lower-roman}\r\nol.upperroman{list-style-type:upper-roman}\r\nol.lowergreek{list-style-type:lower-greek}\r\n.hdlist>table,.colist>table{border:0;background:none}\r\n.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}\r\ntd.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}\r\ntd.hdlist1{font-weight:bold;padding-bottom:1.25em}\r\n.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}\r\n.colist>table tr>td:first-of-type{padding:0 .75em;line-height:1}\r\n.colist>table tr>td:last-of-type{padding:.25em 0}\r\n.thumb,.th{line-height:0;display:inline-block;border:solid 4px #fff;-webkit-box-shadow:0 0 0 1px #ddd;box-shadow:0 0 0 1px #ddd}\r\n.imageblock.left,.imageblock[style*=\"float: left\"]{margin:.25em .625em 1.25em 0}\r\n.imageblock.right,.imageblock[style*=\"float: right\"]{margin:.25em 0 1.25em .625em}\r\n.imageblock>.title{margin-bottom:0}\r\n.imageblock.thumb,.imageblock.th{border-width:6px}\r\n.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}\r\n.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}\r\n.image.left{margin-right:.625em}\r\n.image.right{margin-left:.625em}\r\na.image{text-decoration:none;display:inline-block}\r\na.image object{pointer-events:none}\r\nsup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}\r\nsup.footnote a,sup.footnoteref a{text-decoration:none}\r\nsup.footnote a:active,sup.footnoteref a:active{text-decoration:underline}\r\n#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}\r\n#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em 0;border-width:1px 0 0 0}\r\n#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;text-indent:-1.05em;margin-bottom:.2em}\r\n#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none}\r\n#footnotes .footnote:last-of-type{margin-bottom:0}\r\n#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}\r\n.gist .file-data>table{border:0;background:#fff;width:100%;margin-bottom:0}\r\n.gist .file-data>table td.line-data{width:99%}\r\ndiv.unbreakable{page-break-inside:avoid}\r\n.big{font-size:larger}\r\n.small{font-size:smaller}\r\n.underline{text-decoration:underline}\r\n.overline{text-decoration:overline}\r\n.line-through{text-decoration:line-through}\r\n.aqua{color:#00bfbf}\r\n.aqua-background{background-color:#00fafa}\r\n.black{color:#000}\r\n.black-background{background-color:#000}\r\n.blue{color:#0000bf}\r\n.blue-background{background-color:#0000fa}\r\n.fuchsia{color:#bf00bf}\r\n.fuchsia-background{background-color:#fa00fa}\r\n.gray{color:#606060}\r\n.gray-background{background-color:#7d7d7d}\r\n.green{color:#006000}\r\n.green-background{background-color:#007d00}\r\n.lime{color:#00bf00}\r\n.lime-background{background-color:#00fa00}\r\n.maroon{color:#600000}\r\n.maroon-background{background-color:#7d0000}\r\n.navy{color:#000060}\r\n.navy-background{background-color:#00007d}\r\n.olive{color:#606000}\r\n.olive-background{background-color:#7d7d00}\r\n.purple{color:#600060}\r\n.purple-background{background-color:#7d007d}\r\n.red{color:#bf0000}\r\n.red-background{background-color:#fa0000}\r\n.silver{color:#909090}\r\n.silver-background{background-color:#bcbcbc}\r\n.teal{color:#006060}\r\n.teal-background{background-color:#007d7d}\r\n.white{color:#bfbfbf}\r\n.white-background{background-color:#fafafa}\r\n.yellow{color:#bfbf00}\r\n.yellow-background{background-color:#fafa00}\r\nspan.icon>.fa{cursor:default}\r\n.admonitionblock td.icon [class^=\"fa icon-\"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}\r\n.admonitionblock td.icon .icon-note:before{content:\"\\f05a\";color:#19407c}\r\n.admonitionblock td.icon .icon-tip:before{content:\"\\f0eb\";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}\r\n.admonitionblock td.icon .icon-warning:before{content:\"\\f071\";color:#bf6900}\r\n.admonitionblock td.icon .icon-caution:before{content:\"\\f06d\";color:#bf3400}\r\n.admonitionblock td.icon .icon-important:before{content:\"\\f06a\";color:#bf0000}\r\n.conum[data-value]{display:inline-block;color:#fff!important;background-color:rgba(0,0,0,.8);-webkit-border-radius:100px;border-radius:100px;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:\"Open Sans\",\"DejaVu Sans\",sans-serif;font-style:normal;font-weight:bold}\r\n.conum[data-value] *{color:#fff!important}\r\n.conum[data-value]+b{display:none}\r\n.conum[data-value]:after{content:attr(data-value)}\r\npre .conum[data-value]{position:relative;top:-.125em}\r\nb.conum *{color:inherit!important}\r\n.conum:not([data-value]):empty{display:none}\r\ndt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}\r\nh1,h2,p,td.content,span.alt{letter-spacing:-.01em}\r\np strong,td.content strong,div.footnote strong{letter-spacing:-.005em}\r\np,blockquote,dt,td.content,span.alt{font-size:1.0625rem}\r\np{margin-bottom:1.25rem}\r\n.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}\r\n.exampleblock>.content{background-color:#fffef7;border-color:#e0e0dc;-webkit-box-shadow:0 1px 4px #e0e0dc;box-shadow:0 1px 4px #e0e0dc}\r\n.print-only{display:none!important}\r\n@media print{@page{margin:1.25cm .75cm}\r\n*{-webkit-box-shadow:none!important;box-shadow:none!important;text-shadow:none!important}\r\na{color:inherit!important;text-decoration:underline!important}\r\na.bare,a[href^=\"#\"],a[href^=\"mailto:\"]{text-decoration:none!important}\r\na[href^=\"http:\"]:not(.bare):after,a[href^=\"https:\"]:not(.bare):after{content:\"(\" attr(href) \")\";display:inline-block;font-size:.875em;padding-left:.25em}\r\nabbr[title]:after{content:\" (\" attr(title) \")\"}\r\npre,blockquote,tr,img,object,svg{page-break-inside:avoid}\r\nthead{display:table-header-group}\r\nsvg{max-width:100%}\r\np,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}\r\nh2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}\r\n#toc,.sidebarblock,.exampleblock>.content{background:none!important}\r\n#toc{border-bottom:1px solid #ddddd8!important;padding-bottom:0!important}\r\n.sect1{padding-bottom:0!important}\r\n.sect1+.sect1{border:0!important}\r\n#header>h1:first-child{margin-top:1.25rem}\r\nbody.book #header{text-align:center}\r\nbody.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em 0}\r\nbody.book #header .details{border:0!important;display:block;padding:0!important}\r\nbody.book #header .details span:first-child{margin-left:0!important}\r\nbody.book #header .details br{display:block}\r\nbody.book #header .details br+span:before{content:none!important}\r\nbody.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}\r\nbody.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}\r\n.listingblock code[data-lang]:before{display:block}\r\n#footer{background:none!important;padding:0 .9375em}\r\n#footer-text{color:rgba(0,0,0,.6)!important;font-size:.9em}\r\n.hide-on-print{display:none!important}\r\n.print-only{display:block!important}\r\n.hide-for-print{display:none!important}\r\n.show-for-print{display:inherit!important}}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntitle = \"bug\"\r\ndate = \"2016-12-27\"\r\ncategories = [ \"bug\"]\r\n\r\n\r\n\r\n\r\n\r\n我的店铺&#8212;&#8203;添加商品&#8212;&#8203;添加商品属性\r\n出库地址和销售区域 是选择的 不是填写的\r\n\r\n\r\n\r\n\r\n店铺\r\n\r\n\r\n我的店铺\r\n\r\n\r\nURL\r\n\r\nhttp://116.90.81.68/app/shop/{userId}\r\n\r\n支持格式\r\n\r\nJSON\r\n\r\nHTTP请求方式\r\n\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明\r\n\r\n\r\n\r\n\r\n{userId} : 用户Id\r\n\r\n\r\n\r\nhttp://116.90.81.68/app/shop/20150615uo7jE40\r\n\r\n\r\n\r\n是否需要登录\r\n\r\n否\r\n\r\n成功\r\n\r\n\r\n\r\n\r\n{\r\n  \"id\": \"2015091404A3ol8\", # 店铺id\r\n  \"shopName\": \"北京中物振华贸易有限公司\", # 店铺名称\r\n  \"shopLogo\": \"196.168.1.31/data/upload_image/shop/13/0/016a6e2b4da14457b1da90ed39ed27c7.jpg\", # 店铺logo\r\n  \"shopStandardLogo\": \"196.168.1.31/data/upload_image/shop/14/8/3a858e0536244ac9a8ede39792fe9ebe.png\", # 店铺介绍 图片\r\n  \"shopDesc\": \"北京中物振华贸易有限公司是以经营道路沥青、石化产品等为主的专业性贸易公司。公司拥有进出口企业许可证。近年来，公司在市场实践中积累了丰富的市场运作经验，拥有一支专业化、高素质、稳定团结的职工队伍。公司经营进口70号、90号道路沥青及乳化沥青和改性沥青。公司在天津塘沽建有12000吨散装沥青储存库区，年周转能力20余万吨，在山西平遥建有10000吨散装沥青库区。我公司是华北地区第一家经销进口散装道路沥青的企业，同时还是韩国“SK”沥青在部分地区的独家代理商，公司平均每年自销进口沥青20万吨以上，外贸进口额在8亿元人民币／年以上。 多年来，公司秉承“真诚、守信”的经营理念，以严谨务实的做事风格，在客户中赢得了充分的信誉和支持。\", # 店铺介绍\r\n\r\n  \"collectCount\": 12, # 收藏\r\n  \"goodsCount\" : 9, # 商品数量\r\n  \"saleCount\": 11.5, # 销量\r\n  \"state\": 1\r\n}\r\n\r\n\r\n\r\n\r\n失败\r\n\r\n\r\n\r\n\r\n{\r\n  \"state\": 0,\r\n  \"message\": \"尚未开通店铺,请联系客服\"\r\n}\r\n\r\n\r\n\r\n\r\n店铺 商品管理\r\n\r\n\r\nURL\r\n\r\nhttp://116.90.81.68/app/shop/list?shopId=2015091404A3ol8&amp;start=1&amp;limit=10&amp;state=c\r\n\r\n支持格式\r\n\r\nGET JSON\r\n\r\nHTTP请求方式\r\n\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明\r\n\r\n\r\n\r\n\r\nshopId : 店铺id\r\nstart : 起始 1\r\nlimit : 每页个数 10\r\nstate : 商品状态 c:销售中 d:已下架 a:未审核\r\n\r\n\r\n\r\n\r\n是否需要登录\r\n\r\n是\r\n\r\n成功\r\n\r\n\r\n\r\n\r\n{\r\n  \"list\": [\r\n    {\r\n      \"id\": \"201509141hs732H\", # 商品 id\r\n      \"title\": \"东海牌70#沥青\", # 商品 标题\r\n      \"stockQuantity\": \"2000\", # 库存\r\n      \"goodsPrice\": \"1850.0\", # 商品价格\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3 # 销售量\r\n    },\r\n    {\r\n      \"id\": \"20150914JPCi4n8\",\r\n      \"title\": \"昆仑牌70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1850.0\",\r\n\t  \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n\t  \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    },\r\n    {\r\n      \"id\": \"20150915TR2F8rq\",\r\n      \"title\": \"中海油36-1 70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1750.0\",\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    }\r\n  ],\r\n  \"totalsize\": 9,\r\n  \"state\": 1\r\n}\r\n\r\n\r\n\r\n\r\n失败\r\n\r\n\r\n\r\n\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n\r\n\r\n\r\n\r\n商品管理 (上架,下架)\r\n\r\n\r\nURL\r\n\r\nhttp://116.90.81.68/app/goods/edit\r\n\r\n支持格式\r\n\r\nPOST JSON\r\n\r\nHTTP请求方式\r\n\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明\r\n\r\n\r\n\r\n\r\n{\r\n  \"id\":\"201509184CW5802\", # 商品id\r\n  \"state\":\"d\" # 商品状态 d:下架 a: 上架\r\n}\r\n\r\n\r\n\r\n\r\n是否需要登录\r\n\r\n是\r\n\r\n成功\r\n\r\n\r\n\r\n\r\n{\"state\":1}\r\n\r\n\r\n\r\n\r\n失败\r\n\r\n\r\n\r\n\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"编辑失败!\"\r\n}\r\n\r\n\r\n\r\nSELECT\r\n  mpa.product_id,\r\n  IFNULL(\r\n    tranAddr (\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '销售地区'\r\n          THEN mpa.attr_value\r\n          ELSE NULL\r\n        END\r\n      ),\r\n      '-'\r\n    ),\r\n    CAST(mpa.attr_value AS CHAR(12))\r\n  ) sale_region,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '出库地区'\r\n        THEN tranAddr(mpa.attr_value,'-')\r\n        ELSE NULL\r\n      END\r\n    ) repository_region,\r\nFROM\r\n  mlq_product_attr mpa\r\nWHERE mpa.product_id = '201610261142512'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nLast updated 2016-12-27 13:52:49 中国标准时间\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/cart",
        "content": ":icons: font\r\n:host: 116.90.81.68/app\r\n== 购物车\r\n\r\n\r\n=== 购物车 列表\r\nURL::\r\nhttp://{host}/cart/list?start=1&limit=10&userId=201506242J080J3\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart # 起始页\r\nlimit # 每页显示个数\r\nuserId # 移动端 本地保存的用户ID\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"totalsize\" : 4\r\n  \"list\": [\r\n    {\r\n      \"sellerNick\": \"廊坊通泰公路材料有限公司\", #供应商\r\n      \"shopName\": \"廊坊通泰公路材料有限公司\", #店铺名\r\n      \"productPrice\": \"4250.00\", # 价格\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e351fce4b0b02f90bf7b20.img_300_300.img\",\r\n      \"userId\": \"201506242J080J3\", # 用户id\r\n      \"userName\": \"tjzh\", # 用户名\r\n      \"productId\": \"20160224dD6HNuc\", # 商品id\r\n      \"productName\": \"70#\", # 商品名称\r\n      \"productQuantity\": 35, # 购买数量\r\n      \"minQuantity\": \"35\", # 最小起订量\r\n      \"accessTime\": \"2016-03-29 06:49:14\", # 添加时间\r\n      \"deliveryType\": 0, #提货方式 0：卖家送货 1：买家自提\r\n      \"id\": \"20160329303v668\" # 购物车id\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 添加购物车\r\nURL::\r\nhttp://{host}/cart/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"201506242J080J3\", #用户id\r\n  \"productId\" : \"20151026X3422O5\", #商品id\r\n  \"productName\" : \"兆华 70#\", #商品名称\r\n  \"productQuantity\" : 45, #购买数量\r\n  \"deliveryType\" : 1 #提货方式 0：卖家送货 1：买家自提\r\n}\r\n\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 获取库存\r\nURL::\r\nhttp://{host}/product/getStock/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 20150915P303OF7 # 商品id\r\nhttp://{host}/product/getStock/20150915P303OF7\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"stockQuantity\": \"5000\"\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取库存失败\"\r\n}\r\n```\r\n\r\n=== 编辑购物车\r\nURL::\r\nhttp://{host}/cart/edit\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"20151026X3422O5\", # 购物车id\r\n  \"productQuantity\" : 450 # 商品数量\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n    \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n\t\"state\" : 0,\r\n\t\"message\" : \"编辑失败\"\r\n}\r\n```\r\n\r\n=== 删除\r\nURL::\r\nhttp://{host}/cart/del/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 2015062545V2OHQ # 商品id\r\nhttp://{host}/cart/del/2015062545V2OHQ\r\n```\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n{\r\n    \"state\": 1\r\n}\r\n\r\n失败::\r\n```json\r\n{\r\n\t\"state\" : 0,\r\n\t\"message\" : \"删除失败\"\r\n}\r\n```\r\n\r\n=== 收货地址\r\n\r\n==== 获取收获地址\r\n\r\nURL::\r\nhttp://{host}/cart/get/addr/list/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{userId} : 用户id\r\n```\r\n例：http://{host}/cart/get/addr/list/20150615uo7jE40\r\n\r\n是否需要登录::\r\n需要\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"consignee\": \"娃哈哈222\", # 联系人\r\n      \"cellphone\": \"1234567845\", # 联系电话\r\n      \"levelNo\": 0, # 是否是默认地址 0：是  -1：否\r\n      \"area\": \"北京 北京市4\", # 地址\r\n      \"address\": \"xxxxee\" # 详细地址\r\n      \"id\": \"201610081534403\" # 地址id\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n==== 默认收货地址\r\nURL::\r\nhttp://{host}/cart/get/addr/default/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\n携带参数说明::\r\n```\r\nuserId : 用户id\r\n```\r\n例: http://{host}/cart/get/addr/default/20160920GY3Pm85444\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"consignee\" : \"陆陆\",\r\n  \"cellphone\" : \"18840853787\",\r\n  \"levelNo\" : 0,\r\n  \"address\" : \"啦啦队\",\r\n  \"area\" : \"河北省|秦皇岛市|抚宁县\",\r\n  \"state\" : 1,\r\n  \"id\" : \"201610140328269\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"没有默认地址！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n==== 添加收获地址\r\nURL::\r\nhttp://{host}/cart/add/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\":\"20150615uo7jE40\", # 用户id\r\n  \"consignee\" : \"娃哈哈2\", # 联系人\r\n  \"area\" : \"北京|北京市\", # 地址\r\n  \"address\" : \"xxxxee\", # 详细地址\r\n  \"cellphone\" : \"12345678\" # 电话\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"id\": \"201610120452124\", # 地址id\r\n  \"levelNo\": \"0\" # 是否默认 0:默认 -1:不是默认\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 编辑收货地址\r\nURL::\r\nhttp://{host}/cart/edit/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"201610081534403\", # 收货地址id\r\n  \"userId\":\"20150615uo7jE40\", # 用户id\r\n  \"consignee\" : \"娃哈哈2\", # 联系人\r\n  \"area\" : \"北京|北京市4\", # 地址\r\n  \"address\" : \"xxxxee\", # 详细地址\r\n  \"cellphone\" : \"1234567845\" # 电话\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n==== 设置默认地址\r\nURL::\r\nhttp://{host}/cart/edit/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"201610081534403\", # 收货地址id\r\n  \"levelNo\":0 # 设置默认地址\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"编辑失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 删除地址\r\nURL::\r\nhttp://{host}/cart/del/addr/{id}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : id # 地址id\r\n```\r\nhttp://{host}/cart/del/addr/201610081608294\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"删除失败！\"\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/cservice",
        "content": ":icons: font\r\n:host: app.mailiqing.com/app\r\n== 客服管理\r\n\r\n=== 动态\r\nURL::\r\nhttp://{host}/cservice/dynamic?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"imgs\": [ \"http://116.90.81.68:80/koto/img/58216823e4b05f43ef7356df.img_300_300.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    },\r\n    {\r\n      \"imgs\": [\r\n        \"http://116.90.81.68:80/koto/img/582537a0e4b02a49b7a089bf.img_300_300.img\"\r\n      ],\r\n      \"clist\": [],\r\n      \"likeCount\": 0,\r\n      \"collectionCount\": 0,\r\n      \"inDate\": \"2016-11-11 11:14:40.0\",\r\n      \"mood\": \"发布时间\",\r\n      \"userImage\": \"http://116.90.81.68:80/koto/img/58216823e4b05f43ef7356df.img_300_300.img\",\r\n      \"type\": \"2\",\r\n      \"commentCount\": 0,\r\n      \"id\": \"20161111205Q3Bj\",\r\n      \"user_name\": \"沥沥\",\r\n      \"isFriend\": 1,\r\n      \"isLike\": \"1\",\r\n      \"isCollection\": \"1\",\r\n      \"user_id\": \"20161021E0f8Ro0\"\r\n    }\r\n  ],\r\n  \"state\": 1,\r\n  \"totalsize\": 560\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 动态详情\r\nURL::\r\nhttp://{host}/app_pitchcircle/getMoodDetail?id=201611177Gs0Cn3\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"  #搜索值\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 采购单\r\nURL::\r\nhttp://{host}/cservice/procurement?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"id\": \"20161111866mgN0\",\r\n      \"userId\": \"20161021E0f8Ro0\",\r\n      \"title\": \"韩国大宇 稳定剂\",\r\n      \"receiveAddr\": \"北京市-北京市-大兴区\",\r\n      \"inDate\": \"2016-11-11 14:14:20\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/582561bbe4b02a49b7a089c5.img_100_100_1.img\",\r\n      \"unit\": \"吨\",\r\n      \"count\": \"25.00\"\r\n    },\r\n    {\r\n      \"id\": \"20150707E245t4x\",  #采购单id\r\n      \"title\": \"国产品牌 沥青4444444444444444\", #采购单标题\r\n      \"count\": 500.00, #数量\r\n      \"userId\": \"20160919OR42Yb6\", #采购单发布者\r\n      \"receiveAddr\": \"华北地区\", #收货地址\r\n      \"inDate\": \"2015-07-07 03:43:48\", #发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", #图片\r\n      \"unit\": \"吨\" #单位\r\n    },\r\n  ],\r\n  \"totalsize\": 114,\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 资源单\r\nURL::\r\nhttp://{host}/cservice/resource?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"total\": 173,\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"id\":\"20161027D87f7q7\",//资源单id\r\n      \"rs_name\":\"吃吃吃\",//公司名称\r\n      \"img\":\"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"rs_area\":\"北京市|北京市|东城区\",\r\n      \"rs_state\":\"沥青路面湿滑\",//介绍\r\n    },\r\n    {\r\n      \"rs_state\": \"啦啦啦啦\",\r\n      \"id\": \"20161111M0F55G3\",\r\n      \"rs_name\": \"啊啊啊\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/5825197de4b05f43ef735756.img_300_300.img\",\r\n      \"rs_area\": \"北京市|北京市|朝阳区\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n== 审核\r\n\r\n=== 审核动态\r\nURL::\r\nhttp://{host}/cservice/audit/dynamic?id=20161111x4D6266\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 动态id\r\n```\r\n例子: http://{host}/cservice/audit/dynamic?id=20161111x4D6266\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n=== 审核评论\r\nURL::\r\nhttp://{host}/cservice/audit/comment?id=2016111154QPF31\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 评论id\r\n```\r\n例子: http://{host}/cservice/audit/comment?id=2016111154QPF31\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n=== 审核采购单\r\nURL::\r\nhttp://{host}/cservice/audit/procurement?id=20169029yi2o2e3&state=0\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 采购单id\r\nstate : 0:不通过 1:通过\r\n```\r\n例子: http://{host}/cservice/audit/procurement?id=20169029yi2o2e3&state=0\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n== 获取客服信息\r\n=== 获取平台客服\r\n\r\nURL::\r\nhttp://{host}/app_customerService/getPlatCustomerService?custId=201512116eSr235\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n\"custId\": \"201512116eSr235\" # s_custId 卖家\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n\"state\":1,\r\n\"id\":\"20161031je43e0i\" //环信ID\r\n}\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取卖家客服失败\"\r\n}\r\n```\r\n\r\n=== 获取卖家客服\r\n\r\nURL::\r\nhttp://{host}/app_customerService/getMemberCustomerService?custId=201512116eSr235\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n\"custId\": \"201512116eSr235\" # s_custId 卖家\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n\"state\":1,\r\n\"id\":\"20161031je43e0i\" //环信ID\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取卖家客服失败\"\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "FROM mailiqing.com:5000/tomcat:1.1\r\nCOPY ./setenv.sh /apache-tomcat-7.0.62/bin/setenv.sh\r\nEXPOSE 8080\r\nCMD [\"/usr/bin/supervisord\",\"-n\"]",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/goods",
        "content": ":icons: font\r\n:host: app.mailiqing.com/app\r\n== 商品模块\r\n=== 商品列表统一接口\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST +\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n是否需要登录::\r\n否\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"from\":0,  # 起始页数\r\n  \"searchKey\":\"\",  # 搜索框\r\n  \"catId\":\"\",  # 管理类目id\r\n  \"brandName\":\"\",  # 品牌\r\n  \"productName\":\"\",  # 型号\r\n  \"region\":\"\",  # 出库地\r\n  \"sellerNick\":\"\",  # 供应商\r\n  \"priceFrom\":\"\",  # 起始价格\r\n  \"priceTo\":\"\", # 结束价格\r\n  \"category\":\"\",  # 商品类目\r\n  \"shopId\":\"\",  # 店铺id\r\n  \"shopCat\":\"\",  # 店铺类目\r\n  \"sort\":0  # 价格排序 0:升序 1:降序\r\n}\r\n```\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n=== 进入现货市场\r\nURL::\r\nhttp://{host}/goods\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET +\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [ #品牌\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\",\r\n    \"韩国SK\",\r\n    \"进口品牌\"\r\n  ],\r\n  \"productNames\": [ #型号\r\n    \"70#\",\r\n    \"弹性体SBS改性沥青防水卷材\",\r\n    \"90#\",\r\n    \"聚氨脂防水涂料\",\r\n    \"自粘防水卷材\",\r\n    \"SBS类\"\r\n  ],\r\n  \"sellerNicks\": [ #供应商\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"Mai沥青自营\",\r\n    \"山东大山路桥工程有限公司\",\r\n    \"山东高速物资储运有限公司\",\r\n    \"江苏中路新材料科技发展有限公司\",\r\n    \"山东华瑞道路材料技术有限公司\"\r\n  ],\r\n  \"hots\": [   #热门推荐\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\",\r\n    \"韩国SK\",\r\n    \"进口品牌\"\r\n  ],\r\n  \"categorys\": [\r\n    {\r\n      \"catId\": \"201509145a8o761\",\r\n      \"catName\": \"沥青\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915a006n2x\",\r\n      \"catName\": \"沥青添加剂\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915H047E36\",\r\n      \"catName\": \"沥青混合料\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915H3y0520\",\r\n      \"catName\": \"防水材料\"\r\n    },\r\n    {\r\n      \"catId\": \"2015091534715Do\",\r\n      \"catName\": \"设备/检测\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\n```\r\nJSON\r\n```\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n[source,json]\r\n----\r\n{\r\n  \"searchKey\" : \"沥青\"  \r\n}\r\n----\r\n string 必须\r\n\r\n--\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n[source,json]\r\n----\r\n{\r\n  \"list\": [\r\n    {\r\n      \"goodsId\": \"201512308RLi6w2\", \r\n      \"title\": \"70#基质沥青\", \r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", \r\n      \"productPrice\": \"1800.00\", \r\n      \"unit\": \"吨\", \r\n      \"minQuantity\": \"5000\", \r\n      \"repositoryRegion\": \"华东地区,江苏省,泰州市\", \r\n      \"url\": \"/product/get/201512308RLi6w2\" \r\n    },\r\n    {\r\n      \"id\": \"201509155okjh81\",\r\n      \"title\": \"海韵牌70#沥青\",\r\n      \"imgOriginal\": null,\r\n      \"productPrice\": \"1745.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"50000\",\r\n      \"repositoryRegion\": \"华东地区,山东省\",\r\n      \"url\": \"/product/get/201509155okjh81\"\r\n    }\r\n  ],\r\n  \"totalCount\": 719, \r\n  \"totalPages\": 72, \r\n  \"state\": 1 \r\n}\r\n----\r\n 商品id\r\n 商品名称\r\n 图片\r\n 商品价格\r\n 单位\r\n 最小起订量\r\n 出库地址\r\n 商品详情链接\r\n 总数\r\n 总页数\r\n 1:成功 0:失败\r\n--\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 品牌过滤\r\n[[/uploads/2-1.png]]\r\n\r\n[IMPORTANT]\r\n====\r\n点击 品牌 跳转到 现货市场列表页  携带 *brandName* 到列表页\r\n====\r\n\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"brandName\" : \"东海\",  #品牌\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 供应商过滤\r\n[IMPORTANT]\r\n====\r\n点击 供应商 跳转到 现货市场列表页  携带 *sellerNick* 到列表页\r\n====\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"sellerNick\" : \"北京市政路桥建材集团有限公司\",  #供应商\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 型号过滤\r\n[IMPORTANT]\r\n====\r\n点击 型号 跳转到 现货市场列表页  携带 *productName* 到列表页\r\n====\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"productName\" : \"SBS\",  #型号\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 类目过滤\r\n[IMPORTANT]\r\n====\r\n点击左侧类目 右侧更新数据\r\n====\r\nURL::\r\nhttp://{host}/goods/search/category\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"catId\" : \"201509145a8o761\" #类目id\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [\r\n    \"国产品牌\",\r\n    \"山西兰亭\",\r\n    \"艾施姆\"\r\n  ],\r\n  \"productNames\": [\r\n    \"沥青混凝土\",\r\n    \"橡胶（ARAC）\",\r\n    \"沥青玛蹄脂碎石\",\r\n    \"环保橡胶\",\r\n    \"排水降噪\",\r\n    \"防冰融雪\"\r\n  ],\r\n  \"sellerNicks\": [\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"江苏中路新材料科技发展有限公司\",\r\n    \"兰亭商社\",\r\n    \"北京塞北路通商贸有限公司\",\r\n    \"北京岭北筑路材料有限公司\",\r\n    \"北京艾施姆科技有限公司\"\r\n  ],\r\n  \"hots\": [\r\n    \"国产品牌\",\r\n    \"山西兰亭\",\r\n    \"艾施姆\"\r\n  ],\r\n  \"categorys\": [\r\n    {\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青添加剂\",\r\n      \"catId\": \"20150914i3J058e\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青混合料\",\r\n      \"catId\": \"20150914m348342\"\r\n    },\r\n    {\r\n      \"catName\": \"防水材料\",\r\n      \"catId\": \"201509140qX823u\"\r\n    },\r\n    {\r\n      \"catName\": \"设备/检测\",\r\n      \"catId\": \"20150914K2Mm1LN\"\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 价格排序\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"sort\" : 0,    // 0:升序 1:降序\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 添加商品\r\nURL::\r\nhttp://{host}/goods/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"2015091886Hi8X7\", #用户id\r\n  \"shopId\" : \"201509187M0Cv51\", #店铺id\r\n  \"title\" : \"东风70#\", #商品名称\r\n  \"catCode\" : \"20150914q0asfEw|20150914w7L7oG2|201509140732S22\", #类目\r\n  \"repositoryAddr\" : \"北京|北京市\", #出库地址\r\n  \"price\" : 3400,   # 价格 double\r\n  \"inventory\" : 400,  # 库存 int\r\n  \"saleAddr\" : \"北京|北京市\", # 销售区域\r\n  \"delivery\" : 3, # 交货天数\r\n  \"minMount\" : 45,  # 最小起订量\r\n  \"logisticsType\" : 0, # 物流信息 0:买家自提 1:卖家送货\r\n  \"goodsDesc\" : \"70# 沥青好东西\", # 商品描述\r\n  \"img\" : \"img/509476613293148127.jpg|img/624472029306431674\" # 图片 多张图片使用 | 分割\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n    \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加商品失败！\"\r\n}\r\n```\r\n\r\n\r\n\r\n==== 商品分类\r\nURL::\r\nhttp://{host}/procurement/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"msc_cl\": [\r\n        {\r\n          \"msc_cl\": [  # 子类目 数组\r\n            {\r\n              \"catName\": \"10#\",\r\n              \"catId\": \"2015091431h7wTV\"\r\n            },\r\n            {\r\n              \"catName\": \"60#\",\r\n              \"catId\": \"2015112386UvJoM\"\r\n            },\r\n            {\r\n              \"catName\": \"70#\",\r\n              \"catId\": \"201509140732S22\"\r\n            },\r\n            {\r\n              \"catName\": \"90#\",\r\n              \"catId\": \"201509144X87wlj\"\r\n            },\r\n            {\r\n              \"catName\": \"100#\",\r\n              \"catId\": \"20160112l200k78\"\r\n            },\r\n            {\r\n              \"catName\": \"110#\",\r\n              \"catId\": \"2015091482l1w41\"\r\n            },\r\n            {\r\n              \"catName\": \"130#\",\r\n              \"catId\": \"20150914L740u1U\"\r\n            },\r\n            {\r\n              \"catName\": \"140#\",\r\n              \"catId\": \"20151125460MI7i\"\r\n            },\r\n            {\r\n              \"catName\": \"180#\",\r\n              \"catId\": \"20151223iX8q82e,20150914w7L7oG2\"\r\n            }\r\n          ],\r\n          \"catName\": \"基质沥青\", # 类目名\r\n          \"catId\": \"20150914w7L7oG2\"  # 类目id\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"SBS类\",\r\n              \"catId\": \"20150914m401ckq\"\r\n            },\r\n            {\r\n              \"catName\": \"SBR类\",\r\n              \"catId\": \"2015091418gJ6ub\"\r\n            },\r\n            {\r\n              \"catName\": \"橡胶粉\",\r\n              \"catId\": \"20150914pM66574\"\r\n            },\r\n            {\r\n              \"catName\": \"PG改性沥青\",\r\n              \"catId\": \"20150914F85313F\"\r\n            },\r\n            {\r\n              \"catName\": \"环保橡胶沥青\",\r\n              \"catId\": \"20150914A4mAK2U\"\r\n            },\r\n            {\r\n              \"catName\": \"MAC改性沥青\",\r\n              \"catId\": \"201601140E1sgI3\"\r\n            }\r\n          ],\r\n          \"catName\": \"改性沥青\",\r\n          \"catId\": \"20150914H6PM003\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"公路用乳化沥青\",\r\n              \"catId\": \"20150914165E287\"\r\n            },\r\n            {\r\n              \"catName\": \"改性乳化沥青\",\r\n              \"catId\": \"20160318CPQ26JU\"\r\n            },\r\n            {\r\n              \"catName\": \"高含固量乳化沥青\",\r\n              \"catId\": \"20150914Wd82123\"\r\n            },\r\n            {\r\n              \"catName\": \"高粘度乳化沥青\",\r\n              \"catId\": \",20150914K6N5Hha\"\r\n            },\r\n            {\r\n              \"catName\": \"微表处改性乳化沥青\",\r\n              \"catId\": \"20150914c453WYQ\"\r\n            },\r\n            {\r\n              \"catName\": \"冷再生乳化沥青\",\r\n              \"catId\": \"2015091476gmJ1T\"\r\n            },\r\n            {\r\n              \"catName\": \"特殊乳化沥青\",\r\n              \"catId\": \"201509146eb8Pyb\"\r\n            },\r\n            {\r\n              \"catName\": \"不粘轮乳化沥青\",\r\n              \"catId\": \"20160413Q7Km65j\"\r\n            }\r\n          ],\r\n          \"catName\": \"乳化沥青\",\r\n          \"catId\": \"20150914m34mQ5n\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"煤沥青\",\r\n              \"catId\": \"20150914eB2cy68\"\r\n            },\r\n            {\r\n              \"catName\": \"岩沥青\",\r\n              \"catId\": \"2015091424K8635\"\r\n            },\r\n            {\r\n              \"catName\": \"彩色沥青\",\r\n              \"catId\": \"20160106M8nK6iI\"\r\n            },\r\n            {\r\n              \"catName\": \"硫化沥青\",\r\n              \"catId\": \"20160106O5tSxi4\"\r\n            },\r\n            {\r\n              \"catName\": \"防腐沥青\",\r\n              \"catId\": \"20151019341oqb4\"\r\n            }\r\n          ],\r\n          \"catName\": \"其他沥青\",\r\n          \"catId\": \"20150914q48W8K0\"\r\n        }\r\n      ],\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n说明::\r\n获取的类目是树形结构\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 品牌\r\n\r\nURL::\r\nhttp://{host}/app/procurement/brand/{categoryId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{categoryId} : 201509140732S22 # 类目id\r\n```\r\nhttp://{host}/app/procurement/brand/201509140732S22\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"brandId\": \"20150914NO6768t\", # 品牌id\r\n      \"brandName\": \"韩国SK\" # 品牌名称\r\n    },\r\n    {\r\n      \"brandId\": \"201509148O45Q61\",\r\n      \"brandName\": \"齐鲁石化\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 立即购买 结算\r\nURL::\r\nhttp://{host}/app_order/insertOrder.shtml\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"consignee\": \"77777777\", # 联系人\r\n  \"consigneeContact\": \"177777777\", # 联系方式\r\n  \"placeOfDelivery\": \"277777777\", # 收货地址\r\n  \"tihuoType\": \"1\", # 配送方式 0卖家运输，1买家自提\r\n  \"shipRemark\": \"dsssdsdds\", # 备注\r\n  \"invoiceType\": \"0\", # 发票类型 0增值税专用发票，1增值税普通发票\r\n  \"kaijuType\": \"1\", # 开据类型 0一票制，1两票制\r\n  \"buyerId\": \"20150828QYY07uh\", # 买家Id (s_custId)\r\n  \"buyerName\": \"测试账号_买家1\", # 买家名称\r\n  \"goodsId\": \"201509233SiR651\", # 商品ID\r\n  \"goodsNum\": \"10\", # 购买数量\r\n  \"goodsPrice\": \"12.34\" # 商品单价\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\": \"201610131634428\", # 订单id\r\n  \"bankNo\": \"862182325910001\", # 账号\r\n  \"totalShipFee\": \"0.0\", # 订单运费\r\n  \"totalOrderAmount\": \"123.40\", # 订单总额\r\n  \"state\": 1,\r\n  \"userName\": \"北京金兆路华电子商务有限公司\", # 户名\r\n  \"bank\": \"招商银行 朝阳门支行\", # 开户行\r\n  \"totalGoodsAmount\": \"123.40\" # 订单金额\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"新增订单失败！\"\r\n}\r\n```\r\n\r\n=== 筛选\r\n\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"from\":1,  # 起始页\r\n  \"searchKey\":\"沥青\", # 搜索关键字\r\n  \"brandName\":\"国产品牌\", # 品牌\r\n  \"productName\":\"SBS\", # 型号\r\n  \"region\":\"北京市\", # 地区\r\n  \"sellerNick\":\"北京市政路桥建材集团有限公司\", # 供应商\r\n  \"priceFrom\": 1000, # 起始价格\r\n  \"priceTo\": 2000, # 结束价格\r\n  \"sort\":0 # 0:升序 1:降序\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 获取 品牌 型号 供应商\r\nURL::\r\nhttp://{host}/goods/filter\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [   #品牌\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\"\r\n  ],\r\n  \"productNames\": [   #型号\r\n    \"70#\",\r\n    \"弹性体SBS改性沥青防水卷材\",\r\n    \"90#\",\r\n    \"聚氨脂防水涂料\"\r\n  ],\r\n  \"sellerNicks\": [   #供应商\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"Mai沥青自营\",\r\n    \"山东大山路桥工程有限公司\",\r\n    \"山东高速物资储运有限公司\"\r\n  ],\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 首页 轮播\r\nURL::\r\nhttp://{host}/goods/carousel?userId=20160919OR42Yb6\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n空\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"carousel\": [ # 轮播图\r\n    {\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"url\": \"http://www.mailiqing.com/special/zhyyingkou/zhyyingkou.html\"\r\n    },\r\n    {\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"url\": \"http://www.mailiqing.com/special/ziyuandan/ziyuandan.html\"\r\n    }\r\n  ],\r\n  \"recommend\": [ # 热卖推荐\r\n    {\r\n      \"title\": \"70#\", # 标题\r\n      \"clickCount\": \"2\", # 点击量\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", # 图片\r\n      \"userName\": \"小明\", # 发布者\r\n      \"type\": \"商品\",  # 类型 资源单|采购单|商品\r\n      \"url\": \"http://www.mailiqing.com/special/zhyyingkou/zhyyingkou.html\" # url\r\n    },\r\n    {\r\n      \"title\": \"70#\",\r\n      \"clickCount\": \"2\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"userName\": \"小明\",\r\n      \"type\": \"商品\",\r\n      \"url\": \"http://www.mailiqing.com/special/ziyuandan/ziyuandan.html\"\r\n    }\r\n  ],\r\n  \"dynamic\": [\r\n    {\r\n      \"imgs\": [ \"img/57e8efdbe4b09d52039ce4c4.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 首页 类目\r\n[IMPORTANT]\r\n====\r\n. 点击类目 携带类目id 跳转现货市场列表页\r\n. URL +\r\nhttp://{host}/goods/search\r\n. 携带参数说明\r\n```json\r\n{\"category\":\"沥青\"}\r\n```\r\n====\r\n\r\n\r\nURL::\r\nhttp://{host}/goods/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"catName\": \"沥青\", # 类目名 点击时  携带\r\n      \"catId\": \"20150914q0asfEw\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青添加剂\",\r\n      \"catId\": \"20150914i3J058e\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青混合料\",\r\n      \"catId\": \"20150914m348342\"\r\n    },\r\n    {\r\n      \"catName\": \"防水材料\",\r\n      \"catId\": \"201509140qX823u\"\r\n    },\r\n    {\r\n      \"catName\": \"设备/检测\",\r\n      \"catId\": \"20150914K2Mm1LN\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 商品详情\r\nURL::\r\nhttp://{host}/product/get/{id}?userId=20160919OR42Yb6\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid: 20160308fqkgw2G # 商品id\r\nuserId: 20160919OR42Yb6 # 用户id (如果登录,需要携带)\r\n```\r\nhttp://{host}/product/get/20160308fqkgw2G\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"title\": \"秦皇岛90#\", # 商品名称\r\n  \"unit\": \"吨\", # 单位\r\n  \"imgLarge\": [ # 图片大图\r\n    \"http://116.90.81.68:80/koto/img/57e352dee4b0b02f90bf8995.img\"\r\n  ],\r\n  \"imgs\": [\r\n    \"http://116.90.81.68:80/koto/img/57e352dee4b0b02f90bf8995.img_300_300.img\" # 图片\r\n  ],\r\n  \"sellerNick\": \"北京通力正实\", # 公司名称\r\n  \"productPrice\": \"1580.00\", # 商品价格\r\n  \"stockQuantity\": \"5000\", # 库存量\r\n  \"packageType\": \"散装 \", # 包装类型\r\n  \"deliveryDay\": \"7\", # 备货周期 天\r\n  \"saleRegion\": \"全国\",  # 销售区域\r\n  \"minQuantity\": \"35\", # 最小起订量\r\n  \"repositoryRegion\": \"华北地区,河北省\", # 出库地\r\n  \"isSelf\": \"0\", # 是否是自营 0：否 1：是\r\n  \"shopId\": \"20151119v4N0775\",  # 店铺id\r\n  \"phone\": \"400-187-1158\", # 客服电话\r\n  \"goodsDesc\":\"/h5/goodsDesc/20160308fqkgw2G\" # 商品描述\r\n  \"huanxin_no\": \"20161031je43e0i\", # 平台环信号\r\n  \"m_huanxin_no\": \"20161031je43e0i\", # 卖家环信号\r\n  \"plat_image\": \"20161031je43e0i\", # 平台客服头像\r\n  \"member_image\": \"20161031je43e0i\", # 卖家头像\r\n  \"shopInfo\": { # 店铺信息\r\n    \"id\": \"20151119v4N0775\", # 店铺id\r\n    \"shopName\": \"北京通力正实\", # 店铺名称\r\n    \"shopLogo\": \"http://116.90.81.68/data/upload_image/shop/0/7/f082080de6d54d3492f5f57348aacfbe.jpg\", # 店铺logo\r\n    \"shopDesc\": \"\\n    北京通力正实贸易有限公司，成立于2009年，公司依法从事沥青、燃料油、危险品等专业贸易。公司注册资金500万元，拥有天津塘沽沥青库（2万库容），北京沥青库（2万库容），有一支管理经验丰富，技术力量雄厚的专业团队，各类专业人才近百名。\\n公司年销售、配送能力七十万吨以上。主要经销、配送中国石油秦皇岛、辽河、任丘、呼和浩特等炼厂生产的《昆仑》牌道路沥青、渣油、油浆、焦化料、催化料、塔顶油、燃料油及一线、二线、三线防水助剂；中海油滨州炼厂生产的《中海36-1》道路沥青、蜡油及200#焦化油；中国石油保定、镇海、齐鲁、南京金陵、西安、燕化等炼厂生产的《东海牌》道路沥青、油浆及渣油。在三大央企以上产品销量名列前茅。\\n在公司全体员工的积极努力下，公司先后获得：2010年中国石化炼油上海销售有限公司“东海牌”沥青稳定发展奖，河北省A级经销商等荣誉；获得中油燃料油股份有限公司、中海油中海沥青股份有限公司的大客户待遇。 公司以“科技为先、质量为本、信誉为金”为宗旨，以创新发展，靠质量求市场，用诚信求合作，竭诚为各界朋友提供优质的产品和诚信的服务。\", # 店铺简介\r\n    \"url\": \"/shop/get/20151119v4N0775\" # 店铺链接\r\n    \"collectCount\": 12, # 收藏数量\r\n    \"isCollect\": 1, # 是否收藏 0:否 1:是\r\n    \"goodsCount\": 17, # 商品数量\r\n    \"saleCount\": 11.5 # 销售量\r\n  },\r\n  \"services\": [ # 服务\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a7.img\",\r\n      \"text\": \"物流\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a3.img\",\r\n      \"text\": \"金融\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a1.img\",\r\n      \"text\": \"委托找货\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a5.img\",\r\n      \"text\": \"加工\"\r\n    }\r\n  ],\r\n  \"recommandGoods\": [ # 热门推荐\r\n    {\r\n      \"title\": \"辽河石化70#\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"1610.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华北地区,河北省\",\r\n      \"url\": \"/product/get/2016030874s56CG\",\r\n      \"goodsId\": \"2016030874s56CG\"\r\n    },\r\n    {\r\n      \"title\": \"石家庄炼厂90#\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"1550.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华北地区,河北省\",\r\n      \"url\": \"/product/get/20160308La441Oe\",\r\n      \"goodsId\": \"20160308La441Oe\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n=== 进入店铺\r\nURL::\r\nhttp://{host}/shop/get/{id}?userId=20160919OR42Yb6\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 2015091404A3ol8 # 店铺id\r\nuserId: 20160919OR42Yb6 # 用户id (如果登录,需要携带)\r\n```\r\nhttp://{host}/shop/get/2015091404A3ol8\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\" : \"2015091404A3ol8\", # 店铺id\r\n  \"shopName\" : \"北京中物振华贸易有限公司\", # 店铺名称\r\n  \"shopLogo\" : \"http://116.90.81.68/data/upload_image/shop/13/0/016a6e2b4da14457b1da90ed39ed27c7.jpg\", # 店铺logo\r\n  \"shopDesc\" : \"北京中物振华贸易有限公司是以经营道路沥青、石化产品等为主的专业性贸易公司。公司拥有进出口企业许可证。近年来，公司在市场实践中积累了丰富的市场运作经验，拥有一支专业化、高素质、稳定团结的职工队伍。公司经营进口70号、90号道路沥青及乳化沥青和改性沥青。公司在天津塘沽建有12000吨散装沥青储存库区，年周转能力20余万吨，在山西平遥建有10000吨散装沥青库区。我公司是华北地区第一家经销进口散装道路沥青的企业，同时还是韩国“SK”沥青在部分地区的独家代理商，公司平均每年自销进口沥青20万吨以上，外贸进口额在8亿元人民币／年以上。 多年来，公司秉承“真诚、守信”的经营理念，以严谨务实的做事风格，在客户中赢得了充分的信誉和支持。\", # 店铺描述\r\n  \"url\" : \"/shop/get/2015091404A3ol8\",\r\n  \"collectCount\" : \"12\", # 收藏数量\r\n  \"goodsCount\" : \"12\", # 商品数量\r\n  \"saleCount\" : \"11.5\", # 销售量\r\n  \"isCollect\" : \"1\", # 是否收藏 0:否 1:是\r\n  \"shopStandardLogo\" : \"http://116.90.81.68/data/upload_image/shop/14/8/3a858e0536244ac9a8ede39792fe9ebe.png\", # 店铺描述 图片\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/search?q=沥青&type=0&from=2\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\n携带参数说明::\r\n```\r\nq : 沥青 # 请求参数\r\ntype : 0:全部(默认) 1:采购单搜索框 2:资源单搜索框\r\nfrom : 1 (起始页)\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n\"dynamics\": [\r\n    {\r\n      \"imgs\": [ \"img/57e8efdbe4b09d52039ce4c4.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    }\r\n  ],\r\n  \"goods\": [\r\n    {\r\n      \"title\": \"70#优质沥青\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"3500.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华东地区,上海市\",\r\n      \"url\": \"/product/get/20160614I6PXp42\",\r\n      \"goodsId\": \"20160614I6PXp42\"\r\n    }\r\n  ],\r\n  \"procurements\": [ # 采购单\r\n   {\r\n      \"id\": \"201508221gK5Lp5\", # 采购单id\r\n      \"title\": \"东海 沥青\", # 标题\r\n      \"receiveAddr\": \"华南地区-广西省\", # 地址\r\n      \"inDate\": \"2015-08-22 03:41:24\", # 发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", # 图片\r\n      \"unit\": \"吨\", # 单位\r\n      \"count\": \"40.00\" # 数量\r\n    },\r\n    {\r\n      \"id\": \"20150928R564b43\",\r\n      \"title\": \"国产品牌 沥青\",\r\n      \"receiveAddr\": \"华东地区-浙江省-丽水市-青田县\",\r\n      \"inDate\": \"2015-09-28 08:04:50\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"unit\": \"吨\",\r\n      \"count\": \"1.00\"\r\n    }\r\n  ],\r\n  \"resources\": [ # 资源单\r\n    {\r\n      \"id\": \"20160425Iyf0al0\", # 资源单id\r\n      \"rs_name\": \"山东金石沥青股份有限公司\", # 公司名称\r\n      \"rs_state\": \"金石沥青，质量保证，欢迎给我来我司考察。\",# 公司介绍\r\n      \"rs_area\": \"华东地区,山东省,日照市\", # 所在地\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\" # 图片\r\n    },\r\n    {\r\n      \"id\": \"201604267Rds4pK\",\r\n      \"rs_name\": \"东北兰亭轩飞沥青技术推广有限公司\",\r\n      \"rs_state\": \"公司销售以下产品《双龙70#、双龙90#、彩色沥青、高铁和隧道专用防水板、改性沥青设备、再生沥青混凝土拌合站》；欢迎各位咨询购买\\r\\n\",\r\n      \"rs_area\": \"东北地区\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\"\r\n    }\r\n  ],\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 首页 通知\r\nURL::\r\nhttp://{host}/alter/list?userId=201610175a7YJ3K&start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nuserId : 用户ID\r\nstart: 起始页\r\nlimit: 每页个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"dynamic\": {\r\n        \"id\": \"20161207X3T4722\",\r\n        \"imgs\": [\r\n          \"http://116.90.81.68:80/koto/img/5847b775e4b028b1d2a46f76.img_300_300_1.img\"\r\n        ],\r\n        \"isFriend\": 1,\r\n        \"user_name\": \"建华\",\r\n        \"collectionCount\": 0,\r\n        \"likeCount\": 0,\r\n        \"clist\": [],\r\n        \"isLike\": \"1\",\r\n        \"isCollection\": \"1\",\r\n        \"userImage\": \"http://116.90.81.68:80/koto/img/5829375be4b02a49b7a089d1.img_100_100_1.img\",\r\n        \"mood\": \"这次行不行\",\r\n        \"user_id\": \"20161031Je43e0i\",\r\n        \"commentCount\": 10\r\n      },\r\n\r\n      \"id\": 34, #消息id\r\n      \"moodId\": \"201612050UoG265\", # 动态ID\r\n      \"comment\": \"回复内容\", # 评论内容\r\n      \"image\": \"http://116.90.81.68:80/koto/img/583570ffe4b03366a5caf6e2.img_220_220_1.img\", # 评论者的头像\r\n      \"nickname\": \"行行行\", # 评论者的昵称\r\n      \"inDate\": \"2016-12-07 10:48:18\", # 评论时间\r\n      \"type\": 2 # 评论的消息\r\n    },\r\n    {\r\n      \"id\": 1, #消息id\r\n      \"msgAlter\": \"测试0\",\r\n      \"msgTitle\": \"测试0\",  #消息标题\r\n      \"inDate\": \"2016-11-04 10:08:42\", # 时间\r\n      \"msgContent\": \"测试0\", #消息内容\r\n      \"type\" : 1, #系统消息\r\n      \"url\":\"http://app.mailiqing.com/app/h5/alter/1\"\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"msgAlter\": \"测试3\",\r\n      \"msgTitle\": \"测试3\",\r\n      \"inDate\": \"2016-11-04 10:09:04\",\r\n      \"msgContent\": \"测试3\",\r\n      \"type\" : 1,\r\n      \"url\":\"http://app.mailiqing.com/app/h5/alter/1\"\r\n    },\r\n    {\r\n      \"id\":\"20160817K5r07Pt\", # 主键ID\r\n      \"addStatus\":1, # 添加状态：0已申请，1已添加，2已拒绝\r\n      \"inDate\":\"2016-08-17 09:30:30\", # 时间\r\n      \"addedUserId\":\"201608153822qIE\", # 被添加用户ID\r\n      \"userId\":\"20150828p8jr40S\", # 申请人用户ID\r\n      \"image\":\"\", # 申请人头像\r\n      \"nickname\":\"\", # 申请人昵称\r\n      \"userName\":\"ceshi_buyer\", # 申请人用户名称\r\n      \"addedUserName\":\"bqlq\" # 被添加用户名称\r\n      \"additional\":\"我是谁啊\" # 附加信息\r\n      \"type\" : 0 # 添加好友信息\r\n    }\r\n  ],\r\n  \"totalsize\":13, #总数\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/procurement",
        "content": ":icons: font\r\n:host: app.mailiqing.com/app\r\n== 采购单\r\n=== 采购单列表\r\n\r\nURL::\r\nhttp://{host}/procurement/list?start=1&limit=10&area=北京&sort=1&q=沥青\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart # 起始页\r\nlimit # 每页个数\r\narea # 地区筛选\r\nsort # 日期排序 0:降序 1:升序\r\n综合排序 传 start limit\r\nq # 搜索关键字\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"id\": \"20150707E245t4x\",  #采购单id\r\n      \"title\": \"国产品牌 沥青4444444444444444\", #采购单标题\r\n      \"count\": 500.00, #数量\r\n      \"userId\": \"20160919OR42Yb6\", #采购单发布者\r\n      \"receiveAddr\": \"华北地区\", #收货地址\r\n      \"inDate\": \"2015-07-07 03:43:48\", #发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", #图片\r\n      \"unit\": \"吨\" #单位\r\n    },\r\n    {\r\n      \"id\": \"201508221gK5Lp5\",\r\n      \"title\": \"东海 沥青\",\r\n      \"count\": 40.00,\r\n      \"receiveAddr\": \"华南地区-广西省\",\r\n      \"userId\": \"20160919OR42Yb6\",\r\n      \"inDate\": \"2015-08-22 03:41:24\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"unit\": \"吨\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 采购单详情\r\nURL::\r\nhttp://{host}/procurement/get/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 20150707E245t4x  # 采购单id\r\n```\r\nhttp://{host}/procurement/get/20150707E245t4x\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"acTime\" : 10, #有效时间\r\n  \"companyName\" : \"\", #公司名称\r\n  \"deliveryType\" : 0, #提货方式 0：卖家送货 1：买家自提\r\n  \"count\" : 500.00, #采购数量\r\n  \"deliveryDateStart\" : \"2015-07-13\", #起始时间\r\n  \"deliveryDateEnd\" : \"2015-07-19\", #结束时间\r\n  \"inDate\" : \"2015-07-07 03:43:48\", #发布时间\r\n  \"title\" : \"国产品牌 沥青4444444444444444\", #标题\r\n  \"unit\" : \"吨\", #单位\r\n  \"state\" : 1, #状态\r\n  \"phone\" : \"13904650472\", # 电话\r\n  \"isCollect\" : 0, # 0:未收藏 1:收藏\r\n  \"id\" : \"20150707E245t4x\", #采购单id\r\n  \"desc\" : \"\", #采购单描述\r\n  \"huanxin_no\": \"20161031je43e0i\", # 平台环信号\r\n  \"plat_image\": \"20161031je43e0i\", # 平台头像\r\n  \"image\": [ # 图片\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbb.img_375_230.img\",\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbd.img_375_230.img\"\r\n  ],\r\n  \"imgLarge\": [ #图片大图\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbb.img\",\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbd.img\"\r\n  ],\r\n  \"receiveAddr\" : \"华北地区\", #收货地址\r\n  \"brandName\" : \"国产品牌\" #品牌\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 发布\r\nURL::\r\nhttp://{host}/procurement/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\": \"20151026X3422O5\", # s_userId 用户id\r\n  \"companyName\": \"金兆路华777\", # 公司名称\r\n  \"category\": \"20150914q0asfEw|20150914w7L7oG2|201509140732S22\", # 类目\r\n  \"brandName\": \"东海,国产\", # 品牌名\r\n  \"count\": \"400\", # 数量\r\n  \"deliveryDateStart\": \"2016-08-08\", # 交货时间：开始时间 yyyy-MM-dd\r\n  \"deliveryDateEnd\": \"2016-08-18\", # 交货时间：结束时间yyyy-MM-dd\r\n  \"receiveAddr\": \"北京|北京市\", # 收货地址\r\n  \"desc\": \"70#沥青,行行行\", # 描述\r\n  \"img\": \"img/57e38f32e4b0b02f90bf8a3c.img\" # 图片\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\":1,\r\n  \"id\":\"20160928TyWUN1L\" # 采购单id\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败\"\r\n}\r\n```\r\n\r\n\r\n==== 商品分类\r\nURL::\r\nhttp://{host}/procurement/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"msc_cl\": [\r\n        {\r\n          \"msc_cl\": [  # 子类目 数组\r\n            {\r\n              \"catName\": \"10#\",\r\n              \"catId\": \"2015091431h7wTV\"\r\n            },\r\n            {\r\n              \"catName\": \"60#\",\r\n              \"catId\": \"2015112386UvJoM\"\r\n            },\r\n            {\r\n              \"catName\": \"70#\",\r\n              \"catId\": \"201509140732S22\"\r\n            },\r\n            {\r\n              \"catName\": \"90#\",\r\n              \"catId\": \"201509144X87wlj\"\r\n            },\r\n            {\r\n              \"catName\": \"100#\",\r\n              \"catId\": \"20160112l200k78\"\r\n            },\r\n            {\r\n              \"catName\": \"110#\",\r\n              \"catId\": \"2015091482l1w41\"\r\n            },\r\n            {\r\n              \"catName\": \"130#\",\r\n              \"catId\": \"20150914L740u1U\"\r\n            },\r\n            {\r\n              \"catName\": \"140#\",\r\n              \"catId\": \"20151125460MI7i\"\r\n            },\r\n            {\r\n              \"catName\": \"180#\",\r\n              \"catId\": \"20151223iX8q82e,20150914w7L7oG2\"\r\n            }\r\n          ],\r\n          \"catName\": \"基质沥青\", # 类目名\r\n          \"catId\": \"20150914w7L7oG2\"  # 类目id\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"SBS类\",\r\n              \"catId\": \"20150914m401ckq\"\r\n            },\r\n            {\r\n              \"catName\": \"SBR类\",\r\n              \"catId\": \"2015091418gJ6ub\"\r\n            },\r\n            {\r\n              \"catName\": \"橡胶粉\",\r\n              \"catId\": \"20150914pM66574\"\r\n            },\r\n            {\r\n              \"catName\": \"PG改性沥青\",\r\n              \"catId\": \"20150914F85313F\"\r\n            },\r\n            {\r\n              \"catName\": \"环保橡胶沥青\",\r\n              \"catId\": \"20150914A4mAK2U\"\r\n            },\r\n            {\r\n              \"catName\": \"MAC改性沥青\",\r\n              \"catId\": \"201601140E1sgI3\"\r\n            }\r\n          ],\r\n          \"catName\": \"改性沥青\",\r\n          \"catId\": \"20150914H6PM003\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"公路用乳化沥青\",\r\n              \"catId\": \"20150914165E287\"\r\n            },\r\n            {\r\n              \"catName\": \"改性乳化沥青\",\r\n              \"catId\": \"20160318CPQ26JU\"\r\n            },\r\n            {\r\n              \"catName\": \"高含固量乳化沥青\",\r\n              \"catId\": \"20150914Wd82123\"\r\n            },\r\n            {\r\n              \"catName\": \"高粘度乳化沥青\",\r\n              \"catId\": \",20150914K6N5Hha\"\r\n            },\r\n            {\r\n              \"catName\": \"微表处改性乳化沥青\",\r\n              \"catId\": \"20150914c453WYQ\"\r\n            },\r\n            {\r\n              \"catName\": \"冷再生乳化沥青\",\r\n              \"catId\": \"2015091476gmJ1T\"\r\n            },\r\n            {\r\n              \"catName\": \"特殊乳化沥青\",\r\n              \"catId\": \"201509146eb8Pyb\"\r\n            },\r\n            {\r\n              \"catName\": \"不粘轮乳化沥青\",\r\n              \"catId\": \"20160413Q7Km65j\"\r\n            }\r\n          ],\r\n          \"catName\": \"乳化沥青\",\r\n          \"catId\": \"20150914m34mQ5n\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"煤沥青\",\r\n              \"catId\": \"20150914eB2cy68\"\r\n            },\r\n            {\r\n              \"catName\": \"岩沥青\",\r\n              \"catId\": \"2015091424K8635\"\r\n            },\r\n            {\r\n              \"catName\": \"彩色沥青\",\r\n              \"catId\": \"20160106M8nK6iI\"\r\n            },\r\n            {\r\n              \"catName\": \"硫化沥青\",\r\n              \"catId\": \"20160106O5tSxi4\"\r\n            },\r\n            {\r\n              \"catName\": \"防腐沥青\",\r\n              \"catId\": \"20151019341oqb4\"\r\n            }\r\n          ],\r\n          \"catName\": \"其他沥青\",\r\n          \"catId\": \"20150914q48W8K0\"\r\n        }\r\n      ],\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n说明::\r\n获取的类目是树形结构\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 品牌\r\n\r\nURL::\r\nhttp://{host}/app/procurement/brand/{categoryId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{categoryId} : 201509140732S22 # 类目id\r\n```\r\nhttp://{host}/app/procurement/brand/201509140732S22\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"brandId\": \"20150914NO6768t\", # 品牌id\r\n      \"brandName\": \"韩国SK\" # 品牌名称\r\n    },\r\n    {\r\n      \"brandId\": \"201509148O45Q61\",\r\n      \"brandName\": \"齐鲁石化\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n==== 收货地址\r\nURL::\r\nhttp://{host}/procurement/area/{parentId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{parentId} : 000000000000000 # 父id\r\n```\r\nhttp://{host}/procurement/area/000000000000000\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"areaId\": \"201509237y73e1Y\", # 地区id\r\n      \"areaName\": \"全国\" # 地区名\r\n    },\r\n    {\r\n      \"areaId\": \"20150601L2sIhL7\",\r\n      \"areaName\": \"华东地区\"\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/quanceng",
        "content": ":icons: font\r\n:host: 116.90.81.68/app\r\n== 圈层\r\n=== 发布动态\r\nURL::\r\nhttp://{host}/app_user_mood/insert.shtml\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"user_id\": \"201512116eSr5i4\", # 用户id\r\n  \"user_name\": \"20160928TyWUN1L\", # 用户名\r\n  \"mood\": \"兆华\", # 动态详情\r\n  \"img\": \"img/asdlfjl13345431231.img\" # 图片 多张用 | 拼接\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/quoteprice",
        "content": ":icons: font\r\n:host: 116.90.81.68/app\r\n== 报价单\r\n=== 报价单发布\r\n\r\nURL::\r\nhttp://{host}/quoteprice/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"201512116eSr5i4\" # 用户id\r\n  \"procurId\" : \"20160928TyWUN1L\", # 采购单id\r\n  \"factoryName\" : \"兆华\", # 公司名称\r\n  \"repositoryAddr\" : \"北京|北京市\", # 出库地址\r\n  \"desc\" : \"70#沥青好东西\", # 报价描述\r\n  \"contact\" : \"小明\", # 联系人\r\n  \"phone\" : \"13345431231\", # 电话\r\n  \"img\" : \"img/asdlfjl13345431231.img\" # 图片 多张使用 | 拼接\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1,\r\n  \"id\" : \"201609281332179\" # 报价单 id\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加报价单失败！\"\r\n}\r\n```\r\n\r\n\r\n=== 收到的报价\r\nURL::\r\nhttp://{host}/quoteprice/list?userId=201512116eSr5i4&start=1&limit=10\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nuserId : 201512116eSr5i4 # 用户id\r\nstart : 1 # 起始页\r\nlimit : 10 # 每页显示个数\r\n```\r\nhttp://{host}/quoteprice/list?userId=201512116eSr5i4&start=1&limit=10\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n[\r\n  {\r\n    \"id\": \"201609281326083\", # 报价单id\r\n    \"title\": \"沥青|基质沥青|70# 东海,国产\", # 标题\r\n    \"receiveAddr\": \"北京-北京市\", # 所在地\r\n    \"inDate\": \"2016-09-28 02:04:29\", # 发布时间\r\n    \"img\": \"http://116.90.81.68:80/koto/img/asdlfjl13345431231.img_300_300.img\", # 图片\r\n    \"factoryName\": \"兆华\", # 公司名称\r\n    \"repositoryAddr\": \"北京-北京市\", # 出库地\r\n    \"count\": 400\r\n  },\r\n  {\r\n    \"id\": \"201609281332179\",\r\n    \"title\": \"沥青|基质沥青|70#东海,国产\",\r\n    \"receiveAddr\": \"北京-北京市\",\r\n    \"inDate\": \"2016-09-28 02:04:29\",\r\n    \"img\": \"http://116.90.81.68:80/koto/img/asdlfjl13345431231.img_300_300.img\",\r\n    \"factoryName\": \"兆华\",\r\n    \"repositoryAddr\": \"北京-北京市\",\r\n    \"count\": 400\r\n  }\r\n]\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 报价单 详情\r\nURL::\r\nhttp://{host}/quoteprice/get/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 201609281326083  # 报价单id\r\n```\r\n例子: http://{host}/quoteprice/get/201609281326083\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"title\": \"沥青|基质沥青|70# 东海,国产\", # 商品名称\r\n  \"receiveAddr\": \"北京-北京市\", # 收货地址\r\n  \"inDate\": \"2016-09-28 02:04:29\", # 发布时间\r\n  \"imgs\": [ # 图片\r\n    \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\"\r\n  ],\r\n  \"factoryName\": \"兆华\", # 公司名称\r\n  \"repositoryAddr\": \"北京-北京市\", # 出库地址\r\n  \"desc\": \"70#沥青好东西\", # 报价描述\r\n  \"contact\": \"小明\", # 联系人\r\n  \"phone\": \"13345431231\", # 电话\r\n  \"state\": \"1\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/server",
        "content": ":icons: font\r\n\r\n== 正式服务器切换\r\n. 数据库切换\r\n. es切换\r\n. koto切换\r\n\r\n\r\nTIMESTMP\r\n\r\nasdlfj\r\n\r\n\r\n\r\netcd2 -name node1 -initial-advertise-peer-urls http://192.168.137.16:2380 \\\r\n  -listen-peer-urls http://0.0.0.0:2380 \\\r\n  -listen-client-urls http://0.0.0.0:2379,http://127.0.0.1:4001 \\\r\n  -advertise-client-urls http://0.0.0.0:2379 \\\r\n  -initial-cluster-token etcd-cluster \\\r\n  -initial-cluster node1=http://192.168.137.16:2380,node2=http://192.168.137.17:2380 \\\r\n  -initial-cluster-state new\r\n\r\netcd2 -name node2 -initial-advertise-peer-urls http://192.168.137.17:2380 \\\r\n  -listen-peer-urls http://0.0.0.0:2380 \\\r\n  -listen-client-urls http://0.0.0.0:2379,http://127.0.0.1:4001 \\\r\n  -advertise-client-urls http://0.0.0.0:2379 \\\r\n  -initial-cluster-token etcd-cluster \\\r\n  -initial-cluster node1=http://192.168.137.16:2380,node2=http://192.168.137.17:2380 \\\r\n  -initial-cluster-state new\r\n\r\n\r\netcdctl set /coreos.com/network/config '{ \"Network\": \"10.0.0.0/8\",\"SubnetLen\": 20, \"SubnetMin\": \"10.10.0.0\",\"SubnetMax\": \"10.99.0.0\",\"Backend\": { \"Type\": \"udp\", \"Port\": 7890 } }'\r\n\r\netcdctl get /coreos.com/network/config\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/shop",
        "content": ":icons: font\r\n:host: 116.90.81.68/app\r\n== 店铺\r\n\r\n=== 我的店铺\r\nURL::\r\nhttp://{host}/shop/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```url\r\n{userId} : 用户Id\r\n```\r\nhttp://{host}/shop/20150615uo7jE40\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\": \"2015091404A3ol8\", # 店铺id\r\n  \"shopName\": \"北京中物振华贸易有限公司\", # 店铺名称\r\n  \"shopLogo\": \"196.168.1.31/data/upload_image/shop/13/0/016a6e2b4da14457b1da90ed39ed27c7.jpg\", # 店铺logo\r\n  \"shopStandardLogo\": \"196.168.1.31/data/upload_image/shop/14/8/3a858e0536244ac9a8ede39792fe9ebe.png\", # 店铺介绍 图片\r\n  \"shopDesc\": \"北京中物振华贸易有限公司是以经营道路沥青、石化产品等为主的专业性贸易公司。公司拥有进出口企业许可证。近年来，公司在市场实践中积累了丰富的市场运作经验，拥有一支专业化、高素质、稳定团结的职工队伍。公司经营进口70号、90号道路沥青及乳化沥青和改性沥青。公司在天津塘沽建有12000吨散装沥青储存库区，年周转能力20余万吨，在山西平遥建有10000吨散装沥青库区。我公司是华北地区第一家经销进口散装道路沥青的企业，同时还是韩国“SK”沥青在部分地区的独家代理商，公司平均每年自销进口沥青20万吨以上，外贸进口额在8亿元人民币／年以上。 多年来，公司秉承“真诚、守信”的经营理念，以严谨务实的做事风格，在客户中赢得了充分的信誉和支持。\", # 店铺介绍\r\n\r\n  \"collectCount\": 12, # 收藏\r\n  \"goodsCount\" : 9, # 商品数量\r\n  \"saleCount\": 11.5, # 销量\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\": 0,\r\n  \"message\": \"尚未开通店铺,请联系客服\"\r\n}\r\n```\r\n\r\n\r\n=== 店铺 商品管理\r\nURL::\r\nhttp://{host}/shop/list?shopId=2015091404A3ol8&start=1&limit=10&state=c\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nshopId : 店铺id\r\nstart : 起始 1\r\nlimit : 每页个数 10\r\nstate : 商品状态 c:销售中 d:已下架 a:未审核\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"id\": \"201509141hs732H\", # 商品 id\r\n      \"title\": \"东海牌70#沥青\", # 商品 标题\r\n      \"stockQuantity\": \"2000\", # 库存\r\n      \"goodsPrice\": \"1850.0\", # 商品价格\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3 # 销售量\r\n    },\r\n    {\r\n      \"id\": \"20150914JPCi4n8\",\r\n      \"title\": \"昆仑牌70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1850.0\",\r\n\t  \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n\t  \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    },\r\n    {\r\n      \"id\": \"20150915TR2F8rq\",\r\n      \"title\": \"中海油36-1 70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1750.0\",\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    }\r\n  ],\r\n  \"totalsize\": 9,\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 商品管理 (上架,下架)\r\nURL::\r\nhttp://{host}/goods/edit\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\":\"201509184CW5802\", # 商品id\r\n  \"state\":\"d\" # 商品状态 d:下架 a: 上架\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"编辑失败!\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/template",
        "content": "\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"  #搜索值\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/app/xiaoxi",
        "content": ":icons: font\r\n:host: 116.90.81.68/app\r\n== 十四、消息聊天\r\n[cols=\"2*\"]\r\n|===\r\n\r\n|14.1添加好友列表\r\n|http://{host}/app_message/addFriendList.shtml\r\n\r\n|14.2用户搜索列表\r\n|http://{host}/app_message/searchUserList.shtml\r\n\r\n|14.3我的群列表\r\n|http://{host}/app_message/groupList.shtml\r\n\r\n|14.4群用户列表\r\n|http://{host}/app_message/groupUserList.shtml\r\n\r\n|14.5好友主页\r\n|http://{host}/app_userHome/userDetail.shtml\r\n\r\n|14.6我的圈层列表\r\n|http://{host}/app_pitchcircle/myPitchcirclelist.shtml\r\n\r\n|14.7申请添加好友\r\n|http://{host}/app_message/addFriend.shtml\r\n\r\n|14.8同意好友添加请求\r\n|http://{host}/app_message/agreeAddFriend.shtml\r\n\r\n|14.9删除好友\r\n|http://{host}/app_message/deleteFriend.shtml\r\n\r\n|14.10创建群组\r\n|http://{host}/app_message/creatGroup.shtml\r\n\r\n|14.11添加群用户\r\n|http://{host}/app_message/addGroupuser.shtml\r\n\r\n|14.12删除群用户\r\n|http://{host}/app_message/deleteGroupuser.shtml\r\n\r\n|14.13退出群组\r\n|http://{host}/app_message/outGroup.shtml\r\n\r\n|14.14删除群组\r\n|http://{host}/app_message/deleteGroup.shtml\r\n\r\n|14.15设置群名称\r\n|http://{host}/app_message/setGroupName.shtml\r\n\r\n|14.16设置群公告\r\n|http://{host}/app_message/setGroupNotice.shtml\r\n\r\n|14.17群投诉\r\n|http://{host}/app_message/groupComplain.shtml\r\n\r\n|14.18设置好友备注\r\n|http://{host}/app_userHome/setRemarkName.shtml\r\n\r\n|===\r\n\r\n=== 14.1添加好友列表\r\nURL::\r\nhttp://{host}/app_message/addFriendList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\"//当前用户ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"id\":\"20160817K5r07Pt\", //主键ID\r\n\"addStatus\":1, //添加状态：0已申请，1已添加，2已拒绝\r\n\"inDate\":\"2016-08-17 09:30:30\", //时间\r\n\"addedUserId\":\"201608153822qIE\", //被添加用户ID\r\n\"userId\":\"20150828p8jr40S\", //用户ID\r\n\"image\":\"\", //申请人头像\r\n\"userName\":\"ceshi_buyer\", //用户名称\r\n\"addedUserName\":\"bqlq\" //被添加用户名称\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.2用户搜索列表\r\nURL::\r\nhttp://{host}/app_message/searchUserList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"keyword\" : \"ceshi\"//搜索关键字\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"user_name\":\"ceshijingyan\", //用户名称\r\n\"image\":\"\", //用户头像\r\n\"user_id\":\"20151110vbO0kFg\" //用户ID\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.3我的群列表\r\nURL::\r\nhttp://{host}/app_message/groupList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\" //用户ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"id\":\"20160823E654813\", //群ID\r\n\"groupName\":\"闲聊\" //群名称\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.4群用户列表\r\nURL::\r\nhttp://{host}/app_message/groupUserList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"groupId\" : \"20160823E654813\" //群组ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"nickName\":\"\", //昵称\r\n\"userId\":\"2016060350a651k\", //用户ID\r\n\"image\":\"\", //用户头像\r\n\"userName\":\"18611522653\" //用户名\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.5好友主页\r\nURL::\r\nhttp://{host}/app_userHome/userDetail.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\" //好友ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"areaName\":\"\", //地区名称\r\n\"nickName\":\"\", //昵称\r\n\"userId\":\"20150828QYY07uh\", //用户ID\r\n\"image\":\"\", //用户头像\r\n\"userName\":\"\", //用户名\r\n\"moodIamges\":\"http://196.168.1.31:80/koto/img/57c77d8ce4b098a789a30f30.img,http://196.168.1.31:80/koto/img/57c77d8ce4b098a789a30f2d.img\" //动态图片\r\n\"signature\":\"\" //个性签名\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.6我的圈层列表\r\nURL::\r\nhttp://{host}/app_pitchcircle/myPitchcirclelist.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\", //当前用户ID\r\n  \"iStart\" : \"1\", //开始的页数\r\n  \"limit\" : \"5\" //显示的条数\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"user_id\":\"20150828QYY07uh\", //发布用户ID\r\n\"in_date\":\"2016-09-01 09:04:07.0\", //时间\r\n\"relation_id\":\"2016090126fHv0p\", //该圈层关联ID\r\n\"type\":\"2\", //圈层类型：0资源单，1采购单，2动态\r\n\"detail\":\"2345\", //信息详情\r\n\"title\":\"\", //信息标题\r\n\"id\":\"201609015BX350y\" //该信息ID\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/base",
        "content": ":host:\r\n:img: {host}/src\r\n:resource: content/resource\r\n:src: content/src\r\n:svg: {host}/src/svg\r\n// :imagesdir: {host}/src\r\n:imagesoutdir: content/src/img/plantuml\r\n:plantimgdir: /src/img/plantuml\r\n:experimental:\r\n:table-caption!:\r\n:example-caption!:\r\n:icons: font\r\n:sectnums:\r\n:toc:\r\n:toclevels: 4\r\n:source-highlighter: highlightjs\r\n:stem: latexmath\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/azkaban",
        "content": "version: '2'\r\nservices:\r\n  mariadb:\r\n    image: mariadb:10\r\n    container_name: mariadb\r\n    restart: always\r\n    ports:\r\n        - \"3306:3306\"\r\n    environment:\r\n      - MYSQL_USER=azkaban\r\n      - MYSQL_PASSWORD=azkaban\r\n      - MYSQL_DATABASE=azkaban\r\n      - MYSQL_ROOT_PASSWORD=wootwoot\r\n    networks:\r\n      - hadoop\r\n  azkaban-webserver:\r\n    image: puckel/azkaban-webserver\r\n    container_name: azkaban-webserver\r\n    ports:\r\n      - \"8443:8443\"\r\n    depends_on:\r\n      - mariadb\r\n    networks:\r\n      - hadoop\r\n  azkaban-executor:\r\n    image: puckel/azkaban-executor:my-1.0\r\n    container_name: azkaban-executor\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n    depends_on:\r\n      - mariadb\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/files/flume-dir-hdfs",
        "content": "#定义三大组件的名称\r\nagent1.sources = source1\r\nagent1.sinks = sink1\r\nagent1.channels = channel1\r\n\r\n# 配置source组件\r\nagent1.sources.source1.type = spooldir\r\nagent1.sources.source1.spoolDir = /hadoop/logs/\r\nagent1.sources.source1.fileHeader = false\r\n\r\n#配置拦截器\r\nagent1.sources.source1.interceptors = i1\r\nagent1.sources.source1.interceptors.i1.type = host\r\nagent1.sources.source1.interceptors.i1.hostHeader = hostname\r\n\r\n# 配置sink组件\r\nagent1.sinks.sink1.type = hdfs\r\nagent1.sinks.sink1.hdfs.path =hdfs://hadoop-master:9000/weblog/flume-collection/%y-%m-%d/%H-%M\r\nagent1.sinks.sink1.hdfs.filePrefix = access_log\r\nagent1.sinks.sink1.hdfs.maxOpenFiles = 5000\r\nagent1.sinks.sink1.hdfs.batchSize= 100\r\nagent1.sinks.sink1.hdfs.fileType = DataStream\r\nagent1.sinks.sink1.hdfs.writeFormat =Text\r\nagent1.sinks.sink1.hdfs.rollSize = 102400\r\nagent1.sinks.sink1.hdfs.rollCount = 1000000\r\nagent1.sinks.sink1.hdfs.rollInterval = 60\r\n#agent1.sinks.sink1.hdfs.round = true\r\n#agent1.sinks.sink1.hdfs.roundValue = 10\r\n#agent1.sinks.sink1.hdfs.roundUnit = minute\r\nagent1.sinks.sink1.hdfs.useLocalTimeStamp = true\r\n# Use a channel which buffers events in memory\r\nagent1.channels.channel1.type = memory\r\nagent1.channels.channel1.keep-alive = 120\r\nagent1.channels.channel1.capacity = 500000\r\nagent1.channels.channel1.transactionCapacity = 600\r\n\r\n# Bind the source and sink to the channel\r\nagent1.sources.source1.channels = channel1\r\nagent1.sinks.sink1.channel = channel1",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/files/flume-file-hdfs",
        "content": "agent1.sources = source1\r\nagent1.sinks = sink1\r\nagent1.channels = channel1\r\n\r\n# Describe/configure tail -F source1\r\nagent1.sources.source1.type = exec\r\nagent1.sources.source1.command = tail -F /hadoop/logs/access_log\r\nagent1.sources.source1.channels = channel1\r\n\r\n#configure host for source\r\nagent1.sources.source1.interceptors = i1\r\nagent1.sources.source1.interceptors.i1.type = host\r\nagent1.sources.source1.interceptors.i1.hostHeader = hostname\r\n\r\n# Describe sink1\r\nagent1.sinks.sink1.type = hdfs\r\n#a1.sinks.k1.channel = c1\r\nagent1.sinks.sink1.hdfs.path =hdfs://hadoop-master:9000/weblog/flume-collection/%y-%m-%d/%H-%M\r\nagent1.sinks.sink1.hdfs.filePrefix = access_log\r\nagent1.sinks.sink1.hdfs.maxOpenFiles = 5000\r\nagent1.sinks.sink1.hdfs.batchSize= 100\r\nagent1.sinks.sink1.hdfs.fileType = DataStream\r\nagent1.sinks.sink1.hdfs.writeFormat =Text\r\nagent1.sinks.sink1.hdfs.rollSize = 102400\r\nagent1.sinks.sink1.hdfs.rollCount = 1000000\r\nagent1.sinks.sink1.hdfs.rollInterval = 60\r\nagent1.sinks.sink1.hdfs.round = true\r\nagent1.sinks.sink1.hdfs.roundValue = 10\r\nagent1.sinks.sink1.hdfs.roundUnit = minute\r\nagent1.sinks.sink1.hdfs.useLocalTimeStamp = true\r\n\r\n# Use a channel which buffers events in memory\r\nagent1.channels.channel1.type = memory\r\nagent1.channels.channel1.keep-alive = 120\r\nagent1.channels.channel1.capacity = 500000\r\nagent1.channels.channel1.transactionCapacity = 600\r\n\r\n# Bind the source and sink to the channel\r\nagent1.sources.source1.channels = channel1\r\nagent1.sinks.sink1.channel = channel1",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/files/flume",
        "content": "# 定义这个agent中各组件的名字\r\na1.sources = r1\r\na1.sinks = k1\r\na1.channels = c1\r\n\r\n# 描述和配置source组件：r1\r\na1.sources.r1.type = netcat\r\na1.sources.r1.bind = 0.0.0.0\r\na1.sources.r1.port = 44444\r\n\r\n# 描述和配置sink组件：k1\r\na1.sinks.k1.type = logger\r\n\r\n# 描述和配置channel组件，此处使用是内存缓存的方式\r\na1.channels.c1.type = memory\r\na1.channels.c1.capacity = 1000\r\na1.channels.c1.transactionCapacity = 100\r\n\r\n# 描述和配置source  channel   sink之间的连接关系\r\na1.sources.r1.channels = c1\r\na1.sinks.k1.channel = c1",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/flume",
        "content": "version: '2'\r\nservices:\r\n  flume:\r\n    image: dishui.io:5000/lokkju/flume-hdfs\r\n    container_name: flume\r\n    environment:\r\n      # - \"FLUME_AGENT_NAME=a1\" # netcat\r\n      - \"FLUME_AGENT_NAME=agent1\"\r\n      - \"FLUME_CONF_FILE=/var/tmp/flume.conf\"\r\n    volumes:\r\n      # - ./files/flume.conf:/var/tmp/flume.conf #netcat\r\n      # - ./files/flume-dir-hdfs.conf:/var/tmp/flume.conf #dir\r\n      - ./files/flume-file-hdfs.conf:/var/tmp/flume.conf #file\r\n      - ./files/logs:/hadoop/logs #logs\r\n    ports:\r\n      - \"44444:44444\"\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/hadoop",
        "content": "version: '2'\r\nservices:\r\n  hadoop:\r\n    image: dishui.io:5000/harisekhon/hadoop:2.6\r\n    container_name: hadoop\r\n    # volumes:\r\n    #   - ./files/hbase/core-site.conf:/hbase/conf/core-site.conf\r\n    #   - ./files/hbase/hdfs-site.conf:/hbase/conf/hdfs-site.conf\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/compose/hbase",
        "content": "version: '2'\r\nservices:\r\n  hbase:\r\n    image: dishui.io:5000/harisekhon/hbase\r\n    container_name: hbase\r\n    volumes:\r\n      - ./files/hbase/core-site.conf:/hbase/conf/core-site.conf\r\n      - ./files/hbase/hdfs-site.conf:/hbase/conf/hdfs-site.conf\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "/",
        "content": "FROM puckel/azkaban-executor\r\n\r\nCOPY t.sh /t.sh\r\nRUN /bin/sh /t.sh\r\nRUN curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/dockerfile/azkaban/t",
        "content": "#! /bin/bash\r\n\r\ncat > /etc/apt/sources.list ",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/dockerfile/flume-hdfs-2.7",
        "content": "FROM dishui.io:5000/probablyfine/flume\r\nMAINTAINER dishui_git@126.com\r\nCOPY ./es-1.7.tar /\r\nCOPY ./es.conf /etc/supervisord.conf.d/es.conf\r\n#系统时间\r\nRUN cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime",
        "tags": []
    },
    {
        "uri": "/",
        "content": "FROM kiwenlau/hadoop:1.0\r\n\r\nCOPY apache-hive-1.2.1-bin-my.tar.gz /\r\nENV PATH=\"/apache-hive-1.2.1-bin/bin:${PATH}\"\r\nRUN tar -zxf /apache-hive-1.2.1-bin-my.tar.gz -C / \\\r\n    && rm -f /apache-hive-1.2.1-bin-my.tar.gz\r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "FROM kiwenlau/hadoop-hive:1.0\r\n\r\nCOPY sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz /\r\nENV SQOOP_HOME=/sqoop-1.4.6.bin__hadoop-2.0.4-alpha\r\nENV HIVE_HOME=/apache-hive-1.2.1-bin\r\nENV PATH=\"/sqoop-1.4.6.bin__hadoop-2.0.4-alpha/bin:${PATH}\"\r\nRUN tar -zxf /sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz -C / \\\r\n    && rm -f /sqoop-1.4.6.bin__hadoop-2.0.4-alpha.tar.gz",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/docker/hadoop-docker",
        "title": "hadoop-docker",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hadoop-docker\r\n\r\nhttps://github.com/HariSekhon/Dockerfiles[]\r\nhttps://hub.docker.com/r/harisekhon[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/flume-sqoop",
        "title": "flume-sqoop",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: flume-sqoop\r\n\r\n= Flume\r\n\r\n> 在一个完整的大数据处理系统中，除了hdfs+mapreduce+hive组成分析系统的核心之外，还需要数据采集、结果数据导出、任务调度等不可或缺的辅助系统，而这些辅助工具在hadoop生态体系中都有便捷的开源框架，如图所示：\r\n\r\nimage::{img}/img/hadoop/flume/image001.png[]\r\n---\r\n\r\n== Flume介绍\r\n\r\n=== 概述\r\n\r\n. Flume是一个分布式、可靠、和高可用的海量日志采集、聚合和传输的系统。\r\n. Flume可以采集文件，socket数据包等各种形式源数据，又可以将采集到的数据输出到HDFS、hbase、hive、kafka等众多外部存储系统中\r\n. 一般的采集需求，通过对flume的简单配置即可实现\r\n. Flume针对特殊场景也具备良好的自定义扩展能力，因此，flume可以适用于大部分的日常数据采集场景\r\n\r\n=== 运行机制\r\n\r\n. *Flume* 分布式系统中最核心的角色是 *agent*，*flume* 采集系统就是由一个个*agent*所连接起来形成\r\n. 每一个 *agent* 相当于一个数据传递员 ，内部有三个组件：\r\n** *Source*：采集源，用于跟数据源对接，以获取数据\r\n** *Sink*：下沉地，采集数据的传送目的，用于往下一级 *agent* 传递数据或者往最终存储系统传递数据\r\n** *Channel*：*angent* 内部的数据传输通道，用于从 *source* 将数据传递到 *sink*\r\n+\r\nimage::{img}/img/hadoop/flume/image003.png[]\r\n---\r\n\r\n=== Flume采集系统结构图\r\n\r\n. 简单结构\r\n** 单个agent采集数据\r\n+\r\nimage::{img}/img/hadoop/flume/image005.png[]\r\n---\r\n\r\n. 复杂结构\r\n** 多个agent之间串联\r\n+\r\nimage::{img}/img/hadoop/flume/image007.png[]\r\n---\r\n\r\n== Flume实战案例\r\n\r\n=== Flume的安装部署\r\n\r\n. Flume的安装非常简单，只需要解压即可，当然，前提是已有hadoop环境 +\r\n上传安装包到数据源所在节点上 +\r\n然后解压  `tar -zxvf apache-flume-1.6.0-bin.tar.gz` +\r\n然后进入 *flume* 的目录，修改 *conf* 下的 *flume-env.sh*，在里面配置 *JAVA_HOME*\r\n\r\n. 根据数据采集的需求配置采集方案，描述在配置文件中(文件名可任意自定义)\r\n. 指定采集方案配置文件，在相应的节点上启动 *flume agent*\r\n\r\n--\r\n\r\n例子::\r\n. 先在flume的conf目录下新建一个文件\r\n+\r\n.netcat-logger.conf\r\n```\r\n# 定义这个agent中各组件的名字\r\na1.sources = r1\r\na1.sinks = k1\r\na1.channels = c1\r\n\r\n# 描述和配置source组件：r1\r\na1.sources.r1.type = netcat\r\na1.sources.r1.bind = localhost\r\na1.sources.r1.port = 44444\r\n\r\n# 描述和配置sink组件：k1\r\na1.sinks.k1.type = logger\r\n\r\n# 描述和配置channel组件，此处使用是内存缓存的方式\r\na1.channels.c1.type = memory\r\na1.channels.c1.capacity = 1000\r\na1.channels.c1.transactionCapacity = 100\r\n\r\n# 描述和配置source  channel   sink之间的连接关系\r\na1.sources.r1.channels = c1\r\na1.sinks.k1.channel = c1\r\n```\r\n\r\n. 启动agent去采集数据\r\n+\r\n[source]\r\n----\r\nbin/flume-ng agent -c conf \\ \r\n-f conf/netcat-logger.conf \\ \r\n-n a1 \\ \r\n-Dflume.root.logger=INFO,console\r\n----\r\n -*c* *conf*   指定 *flume* 自身的配置文件所在目录\r\n -*f* *conf*/*netcat-logger.con*  指定我们所描述的采集方案\r\n -*n* *a1*  指定我们这个*agent*的名字\r\n\r\n. 测试\r\n先要往agent采集监听的端口上发送数据，让agent有数据可采\r\n随便在一个能跟agent节点联网的机器上\r\n+\r\n```\r\ntelnet anget-hostname  port   （telnet localhost 44444）\r\n```\r\n+\r\nimage::{img}/img/hadoop/flume/image009.png[]\r\n---\r\n--\r\n=== 采集案例\r\n\r\nQ & A ::\r\nhttp://www.voidcn.com/blog/lmh94604/article/p-6042484.html[]\r\n\r\n\r\n==== 采集目录到HDFS\r\n\r\n> 采集需求：某服务器的某特定目录下，会不断产生新的文件，每当有新文件出现，就需要把文件采集到HDFS中去\r\n--\r\n根据需求，首先定义以下3大要素\r\n--\r\n. *采集源*，即 *source* ——监控文件目录 :  *spooldir*\r\n. *下沉目标*，即 *sink*——*HDFS* 文件系统  :  *hdfs* *sink*\r\n. *source* 和 *sink* 之间的传递通道——*channel*，可用 *file* *channel* 也可以用内存 *channel*\r\n--\r\n配置文件编写\r\n\r\n[source]\r\n----\r\n#定义三大组件的名称\r\nagent1.sources = source1\r\nagent1.sinks = sink1\r\nagent1.channels = channel1\r\n\r\n# 配置source组件\r\nagent1.sources.source1.type = spooldir\r\nagent1.sources.source1.spoolDir = /home/hadoop/logs/\r\nagent1.sources.source1.fileHeader = false\r\n\r\n#配置拦截器\r\nagent1.sources.source1.interceptors = i1\r\nagent1.sources.source1.interceptors.i1.type = host\r\nagent1.sources.source1.interceptors.i1.hostHeader = hostname\r\n\r\n# 配置sink组件\r\nagent1.sinks.sink1.type = hdfs\r\nagent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M\r\nagent1.sinks.sink1.hdfs.filePrefix = access_log\r\nagent1.sinks.sink1.hdfs.maxOpenFiles = 5000\r\nagent1.sinks.sink1.hdfs.batchSize= 100\r\nagent1.sinks.sink1.hdfs.fileType = DataStream\r\nagent1.sinks.sink1.hdfs.writeFormat =Text\r\nagent1.sinks.sink1.hdfs.rollSize = 102400\r\nagent1.sinks.sink1.hdfs.rollCount = 1000000\r\nagent1.sinks.sink1.hdfs.rollInterval = 60\r\n#agent1.sinks.sink1.hdfs.round = true\r\n#agent1.sinks.sink1.hdfs.roundValue = 10\r\n#agent1.sinks.sink1.hdfs.roundUnit = minute\r\nagent1.sinks.sink1.hdfs.useLocalTimeStamp = true\r\n# Use a channel which buffers events in memory\r\nagent1.channels.channel1.type = memory\r\nagent1.channels.channel1.keep-alive = 120 \r\nagent1.channels.channel1.capacity = 500000 \r\nagent1.channels.channel1.transactionCapacity = 600 \r\n\r\n# Bind the source and sink to the channel\r\nagent1.sources.source1.channels = channel1\r\nagent1.sinks.sink1.channel = channel1\r\n----\r\n\r\n *capacity*：默认该通道中最大的可以存储的 *event* 数量\r\n *trasactionCapacity*：每次最大可以从 *source* 中拿到或者送到 *sink* 中的 *event* 数量\r\n *keep-alive*：*event* 添加到通道中或者移出的允许时间\r\n--\r\n==== 采集文件到HDFS\r\n\r\n> 采集需求： +\r\n比如业务系统使用log4j生成的日志，日志内容不断增加，需要把追加到日志文件中的数据实时采集到hdfs\r\n--\r\n根据需求，首先定义以下3大要素\r\n--\r\n** 采集源，即 *source* ——监控文件内容更新 : *exec*  '*tail* -*F* *file*'\r\n** 下沉目标，即 *sink*——*HDFS* 文件系统: *hdfs* *sink*\r\n** *Source* 和 *sink* 之间的传递通道—— *channel*，可用 *file* *channel* 也可以用 内存 *channel*\r\n--\r\n配置文件编写\r\n[source,java]\r\n----\r\nagent1.sources = source1\r\nagent1.sinks = sink1\r\nagent1.channels = channel1\r\n\r\n# Describe/configure tail -F source1\r\nagent1.sources.source1.type = exec\r\nagent1.sources.source1.command = tail -F /home/hadoop/logs/access_log\r\nagent1.sources.source1.channels = channel1\r\n\r\n#configure host for source\r\nagent1.sources.source1.interceptors = i1\r\nagent1.sources.source1.interceptors.i1.type = host\r\nagent1.sources.source1.interceptors.i1.hostHeader = hostname\r\n\r\n# Describe sink1\r\nagent1.sinks.sink1.type = hdfs\r\n#a1.sinks.k1.channel = c1\r\nagent1.sinks.sink1.hdfs.path =hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M\r\nagent1.sinks.sink1.hdfs.filePrefix = access_log\r\nagent1.sinks.sink1.hdfs.maxOpenFiles = 5000\r\nagent1.sinks.sink1.hdfs.batchSize= 100\r\nagent1.sinks.sink1.hdfs.fileType = DataStream\r\nagent1.sinks.sink1.hdfs.writeFormat =Text\r\nagent1.sinks.sink1.hdfs.rollSize = 102400\r\nagent1.sinks.sink1.hdfs.rollCount = 1000000\r\nagent1.sinks.sink1.hdfs.rollInterval = 60\r\nagent1.sinks.sink1.hdfs.round = true\r\nagent1.sinks.sink1.hdfs.roundValue = 10\r\nagent1.sinks.sink1.hdfs.roundUnit = minute\r\nagent1.sinks.sink1.hdfs.useLocalTimeStamp = true\r\n\r\n# Use a channel which buffers events in memory\r\nagent1.channels.channel1.type = memory\r\nagent1.channels.channel1.keep-alive = 120\r\nagent1.channels.channel1.capacity = 500000\r\nagent1.channels.channel1.transactionCapacity = 600\r\n\r\n# Bind the source and sink to the channel\r\nagent1.sources.source1.channels = channel1\r\nagent1.sinks.sink1.channel = channel1\r\n----\r\n--\r\n==== 更多source和sink组件\r\nFlume支持众多的source和sink类型，详细手册可参考官方文档\r\nhttp://flume.apache.org/FlumeUserGuide.html[FlumeUserGuide]\r\n\r\n== 工作流调度器azkaban\r\n\r\n=== 为什么需要工作流调度系统\r\n\r\n[circle]\r\n* 一个完整的数据分析系统通常都是由大量任务单元组成：\r\n*shell* 脚本程序，*java* 程序，*mapreduce* 程序、*hive* 脚本等\r\n* 各任务单元之间存在时间先后及前后依赖关系\r\n* 为了很好地组织起这样的复杂执行计划，需要一个工作流调度系统来调度执行；\r\n--\r\n例如，我们可能有这样一个需求，某个业务系统每天产生20G原始数据，我们每天都要对其进行处理，处理步骤如下所示：\r\n--\r\n[disc]\r\n* 通过 *Hadoop* 先将原始数据同步到 *HDFS* 上；\r\n* 借助 *MapReduce* 计算框架对原始数据进行转换，生成的数据以分区表的形式存储到多张 *Hive* 表中；\r\n* 需要对 *Hive* 中多个表的数据进行 *JOIN* 处理，得到一个明细数据 *Hive* 大表；\r\n* 将明细数据进行复杂的统计分析，得到结果报表信息；\r\n* 需要将统计分析得到的结果数据同步到业务系统中，供业务调用使用。\r\n\r\n=== 工作流调度实现方式\r\n简单的任务调度::\r\n直接使用linux的crontab来定义；\r\n复杂的任务调度::\r\n开发调度平台 +\r\n或使用现成的开源调度系统，比如ooize、azkaban等\r\n\r\n=== 常见工作流调度系统\r\n\r\n在hadoop领域，常见的工作流调度器有Oozie, Azkaban,Cascading,Hamake等\r\n\r\n=== Azkaban与Oozie对比\r\n\r\n> 对市面上最流行的两种调度器，给出以下详细对比，以供技术选型参考。总体来说，ooize相比azkaban是一个重量级的任务调度系统，功能全面，但配置使用也更复杂。如果可以不在意某些功能的缺失，轻量级调度器azkaban是很不错的候选对象。\r\n详情如下：\r\n[disc]\r\n* 功能\r\n+\r\n两者均可以调度mapreduce,pig,java,脚本工作流任务\r\n+\r\n两者均可以定时执行工作流任务\r\n\r\n* 工作流定义\r\n+\r\nAzkaban使用Properties文件定义工作流\r\n+\r\nOozie使用XML文件定义工作流\r\n\r\n* 工作流传参\r\n+\r\nAzkaban支持直接传参，例如${input}\r\n+\r\nOozie支持参数和EL表达式，例如${fs:dirSize(myInputDir)}\r\n\r\n* 定时执行\r\n+\r\nAzkaban的定时执行任务是基于时间的\r\n+\r\nOozie的定时执行任务基于时间和输入数据\r\n\r\n* 资源管理\r\n+\r\nAzkaban有较严格的权限控制，如用户对工作流进行读/写/执行等操作\r\n+\r\nOozie暂无严格的权限控制\r\n\r\n* 工作流执行\r\n+\r\nAzkaban有两种运行模式，分别是solo server mode(executor server和web server部署在同一台节点)和multi server mode(executor server和web server可以部署在不同节点)\r\n+\r\nOozie作为工作流服务器运行，支持多用户和多工作流\r\n\r\n* 工作流管理\r\n+\r\nAzkaban支持浏览器以及ajax方式操作工作流\r\n+\r\nOozie支持命令行、HTTP REST、Java API、浏览器操作工作流\r\n\r\n==== Azkaban介绍\r\n> Azkaban是由Linkedin开源的一个批量工作流任务调度器。用于在一个工作流内以一个特定的顺序运行一组工作和流程。Azkaban定义了一种KV文件格式来建立任务之间的依赖关系，并提供一个易于使用的web用户界面维护和跟踪你的工作流。\r\n--\r\n它有如下功能特点：\r\n[disc]\r\n* Web用户界面\r\n* 方便上传工作流\r\n* 方便设置任务之间的关系\r\n* 调度工作流\r\n* 认证/授权(权限的工作)\r\n* 能够杀死并重新启动工作流\r\n* 模块化和可插拔的插件机制\r\n* 项目工作区\r\n* 工作流和任务的日志记录和审计\r\n\r\n--\r\n\r\n==== Azkaban安装部署\r\n准备工作::\r\n+\r\n----\r\nAzkaban Web服务器\r\n    azkaban-web-server-2.5.0.tar.gz\r\nAzkaban执行服务器\r\n    azkaban-executor-server-2.5.0.tar.gz\r\n----\r\n\r\nMySQL::\r\n+\r\n----\r\n目前azkaban只支持 mysql,需安装mysql服务器,本文档中默认已安装好mysql服务器,并建立了 root用户,密码 root.\r\n\r\n下载地址:http://azkaban.github.io/downloads.html\r\n----\r\n\r\n安装::\r\n+\r\n----\r\n将安装文件上传到集群,最好上传到安装 hive、sqoop的机器上,方便命令的执行\r\n在当前用户目录下新建 azkabantools目录,用于存放源安装文件.新建azkaban目录,用于存放azkaban运行程序\r\n\r\nazkaban web服务器安装\r\n解压azkaban-web-server-2.5.0.tar.gz\r\n命令:\r\n    tar –zxvf azkaban-web-server-2.5.0.tar.gz\r\n将解压后的 azkaban-web-server-2.5.0 移动到 azkaban目录中,并重新命名 webserver\r\n命令:\r\n    mv azkaban-web-server-2.5.0 ../azkaban\r\n    cd ../azkaban\r\n    mv azkaban-web-server-2.5.0  server\r\n----\r\nazkaban 执行服器安装::\r\n+\r\n----\r\n解压 azkaban-executor-server-2.5.0.tar.gz\r\n命令:\r\n    tar –zxvf azkaban-executor-server-2.5.0.tar.gz\r\n将解压后的 azkaban-executor-server-2.5.0 移动到 azkaban目录中,并重新命名 executor\r\n命令:\r\n    mv azkaban-executor-server-2.5.0  ../azkaban\r\n    cd ../azkaban\r\n    mv azkaban-executor-server-2.5.0  executor\r\n----\r\nazkaban脚本导入::\r\n+\r\n----\r\n解压:\r\n    azkaban-sql-script-2.5.0.tar.gz\r\n命令:\r\n    tar –zxvf azkaban-sql-script-2.5.0.tar.gz\r\n将解压后的mysql 脚本,导入到mysql中:\r\n进入mysql\r\nmysql> create database azkaban;\r\nmysql> use azkaban;\r\nDatabase changed\r\nmysql> source /home/hadoop/azkaban-2.5.0/create-all-sql-2.5.0.sql;\r\n----\r\n\r\n\r\n创建SSL配置::\r\n+\r\n----\r\n参考地址:\r\n    http://docs.codehaus.org/display/JETTY/How+to+configure+SSL\r\n命令:\r\n    keytool -keystore keystore -alias jetty -genkey -keyalg RSA\r\n运行此命令后,会提示输入当前生成 keystor的密码及相应信息,输入的密码请劳记,信息如下:\r\n\r\n输入keystore密码：\r\n再次输入新密码:\r\n您的名字与姓氏是什么？\r\n  [Unknown]：\r\n您的组织单位名称是什么？\r\n  [Unknown]：\r\n您的组织名称是什么？\r\n  [Unknown]：\r\n您所在的城市或区域名称是什么？\r\n  [Unknown]：\r\n您所在的州或省份名称是什么？\r\n  [Unknown]：\r\n该单位的两字母国家代码是什么\r\n  [Unknown]：  CN\r\nCN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=CN 正确吗？\r\n  [否]：  y\r\n\r\n输入的主密码\r\n        （如果和 keystore 密码相同，按回车）：\r\n再次输入新密码:\r\n完成上述工作后,将在当前目录生成 keystore 证书文件,将keystore 考贝到 azkaban web服务器根目录中.\r\n如: cp keystore azkaban/server\r\n----\r\n配置文件::\r\n+\r\n----\r\n注：先配置好服务器节点上的时区\r\n1、先生成时区配置文件Asia/Shanghai，用交互式命令 tzselect 即可\r\n2、拷贝该时区文件，覆盖系统本地时区配置\r\ncp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\r\n----\r\n\r\n\r\nazkaban web服务器配置::\r\n进入azkaban web服务器安装目录 conf目录\r\n+\r\n.azkaban.properties\r\n```\r\n#Azkaban Personalization Settings\r\nazkaban.name=Test                           #服务器UI名称,用于服务器上方显示的名字\r\nazkaban.label=My Local Azkaban                               #描述\r\nazkaban.color=#FF3601                                                 #UI颜色\r\nazkaban.default.servlet.path=/index                         #\r\nweb.resource.dir=web/                                                 #默认根web目录\r\ndefault.timezone.id=Asia/Shanghai                           #默认时区,已改为亚洲/上海 默认为美国\r\n\r\n#Azkaban UserManager class\r\nuser.manager.class=azkaban.user.XmlUserManager   #用户权限管理默认类\r\nuser.manager.xml.file=conf/azkaban-users.xml              #用户配置,具体配置参加下文\r\n\r\n#Loader for projects\r\nexecutor.global.properties=conf/global.properties    # global配置文件所在位置\r\nazkaban.project.dir=projects                                                #\r\n\r\ndatabase.type=mysql                                                              #数据库类型\r\nmysql.port=3306                                                                       #端口号\r\nmysql.host=localhost                                                      #数据库连接IP\r\nmysql.database=azkaban                                                       #数据库实例名\r\nmysql.user=root                                                                 #数据库用户名\r\nmysql.password=root                                                          #数据库密码\r\nmysql.numconnections=100                                                  #最大连接数\r\n\r\n# Velocity dev mode\r\nvelocity.dev.mode=false\r\n# Jetty服务器属性.\r\njetty.maxThreads=25                                                               #最大线程数\r\njetty.ssl.port=8443                                                                   #Jetty SSL端口\r\njetty.port=8081                                                                         #Jetty端口\r\njetty.keystore=keystore                                                          #SSL文件名\r\njetty.password=123456                                                             #SSL文件密码\r\njetty.keypassword=123456                                                      #Jetty主密码 与 keystore文件相同\r\njetty.truststore=keystore                                                                #SSL文件名\r\njetty.trustpassword=123456                                                   # SSL文件密码\r\n\r\n# 执行服务器属性\r\nexecutor.port=12321                                                               #执行服务器端口\r\n\r\n# 邮件设置\r\nmail.sender=xxxxxxxx@163.com                                       #发送邮箱\r\nmail.host=smtp.163.com                                                       #发送邮箱smtp地址\r\nmail.user=xxxxxxxx                                       #发送邮件时显示的名称\r\nmail.password=**********                                                 #邮箱密码\r\njob.failure.email=xxxxxxxx@163.com                              #任务失败时发送邮件的地址\r\njob.success.email=xxxxxxxx@163.com                            #任务成功时发送邮件的地址\r\nlockdown.create.projects=false                                           #\r\ncache.directory=cache                                                            #缓存目录\r\n```\r\n\r\nazkaban 执行服务器executor配置 ::\r\n进入执行服务器安装目录conf,修改azkaban.properties\r\n+\r\n.azkaban.properties\r\n```\r\n#Azkaban\r\ndefault.timezone.id=Asia/Shanghai                                              #时区\r\n\r\n# Azkaban JobTypes 插件配置\r\nazkaban.jobtype.plugin.dir=plugins/jobtypes                   #jobtype 插件所在位置\r\n\r\n#Loader for projects\r\nexecutor.global.properties=conf/global.properties\r\nazkaban.project.dir=projects\r\n\r\n#数据库设置\r\ndatabase.type=mysql                                                                       #数据库类型(目前只支持mysql)\r\nmysql.port=3306                                                                                #数据库端口号\r\nmysql.host=192.168.20.200                                                           #数据库IP地址\r\nmysql.database=azkaban                                                                #数据库实例名\r\nmysql.user=root                                                                       #数据库用户名\r\nmysql.password=root #数据库密码\r\nmysql.numconnections=100                                                           #最大连接数\r\n\r\n# 执行服务器配置\r\nexecutor.maxThreads=50                                                                #最大线程数\r\nexecutor.port=12321                                                               #端口号(如修改,请与web服务中一致)\r\nexecutor.flow.threads=30                                                                #线程数\r\n```\r\n\r\n\r\n用户配置::\r\n进入azkaban web服务器conf目录,修改azkaban-users.xml\r\nvi azkaban-users.xml 增加 管理员用户\r\n+\r\n.azkaban-users.xml\r\n```\r\n\r\n        \r\n        \r\n        \r\n        \r\n        \r\n\r\n```\r\n\r\n\r\n启动::\r\n+\r\n----\r\nweb服务器\r\n    在azkaban web服务器目录下执行启动命令\r\n        bin/azkaban-web-start.sh\r\n    注:在web服务器根目录运行\r\n或者启动到后台\r\n    nohup  bin/azkaban-web-start.sh  1>/tmp/azstd.out  2>/tmp/azerr.out &\r\n执行服务器\r\n    在执行服务器目录下执行启动命令\r\n        bin/azkaban-executor-start.sh\r\n    注:只能要执行服务器根目录运行\r\n\r\n启动完成后,在浏览器(建议使用谷歌浏览器)中输入\r\nhttps://服务器IP地址:8443 ,即可访问azkaban服务了.\r\n在登录中输入刚才新的户用名及密码,点击 login.\r\n----\r\n\r\n==== Azkaban实战\r\n> Azkaba内置的任务类型支持command、java\r\n\r\nCommand类型单一job示例::\r\n. 创建job描述文件\r\n+\r\n```\r\nvi command.job\r\n#command.job\r\ntype=command\r\ncommand=echo 'hello'\r\n```\r\n\r\n. 将job资源文件打包成zip文件\r\n+\r\n```\r\nzip command.job\r\n```\r\n\r\n. 通过azkaban的web管理平台创建project并上传job压缩包\r\n首先创建project\r\n+\r\nimage::{img}/img/hadoop/flume/image011.png[]\r\n---\r\n上传zip包\r\n+\r\nimage::{img}/img/hadoop/flume/image013.png[]\r\n---\r\n\r\n. 启动执行该job\r\n\r\nimage::{img}/img/hadoop/flume/image015.png[]\r\n---\r\n\r\n===== Command类型多job工作流flow\r\n\r\n. 创建有依赖关系的多个job描述\r\n第一个job：foo.job\r\n+\r\n```\r\n# foo.job\r\ntype=command\r\ncommand=echo foo\r\n```\r\n第二个job：bar.job依赖foo.job\r\n+\r\n```\r\n# bar.job\r\ntype=command\r\ndependencies=foo\r\ncommand=echo bar\r\n```\r\n\r\n. 将所有job资源文件打到一个zip包中\r\n+\r\nimage::{img}/img/hadoop/flume/image017.png[]\r\n---\r\n\r\n. 在azkaban的web管理界面创建工程并上传zip包\r\n. 启动工作流flow\r\n\r\n===== HDFS操作任务\r\n\r\n. 创建job描述文件\r\n+\r\n```\r\n# fs.job\r\ntype=command\r\ncommand=/home/hadoop/apps/hadoop-2.6.1/bin/hadoop fs -mkdir /azaz\r\n```\r\n\r\n. 将job资源文件打包成zip文件\r\n+\r\nimage::{img}/img/hadoop/flume/image019.png[]\r\n---\r\n\r\n. 通过azkaban的web管理平台创建project并上传job压缩包\r\n. 启动执行该job\r\n\r\n===== MAPREDUCE任务\r\n\r\nMr任务依然可以使用command的job类型来执行\r\n\r\n. 创建job描述文件，及mr程序jar包（示例中直接使用hadoop自带的example jar）\r\n+\r\n```\r\n# mrwc.job\r\ntype=command\r\ncommand=/home/hadoop/apps/hadoop-2.6.1/bin/hadoop  jar hadoop-mapreduce-examples-2.6.1.jar wordcount /wordcount/input /wordcount/azout\r\n```\r\n\r\n\r\n. 将所有job资源文件打到一个zip包中\r\n+\r\nimage::{img}/img/hadoop/flume/image021.png[]\r\n---\r\n\r\n. 在azkaban的web管理界面创建工程并上传zip包\r\n. 启动job\r\n\r\n===== HIVE脚本任务\r\n\r\n. 创建job描述文件和hive脚本\r\nHive脚本： test.sql\r\n+\r\n```\r\nuse default;\r\ndrop table aztest;\r\ncreate table aztest(id int,name string) row format delimited fields terminated by ',';\r\nload data inpath '/aztest/hiveinput' into table aztest;\r\ncreate table azres as select * from aztest;\r\ninsert overwrite directory '/aztest/hiveoutput' select count(1) from aztest;\r\n```\r\nJob描述文件：hivef.job\r\n+\r\n```\r\n# hivef.job\r\ntype=command\r\ncommand=/home/hadoop/apps/hive/bin/hive -f 'test.sql'\r\n```\r\n\r\n. 将所有job资源文件打到一个zip包中\r\n. 在azkaban的web管理界面创建工程并上传zip包\r\n. 启动job\r\n\r\n== sqoop数据迁移\r\n\r\n> sqoop是apache旗下一款“Hadoop和关系数据库服务器之间传送数据”的工具。\r\n导入数据：MySQL，Oracle导入数据到Hadoop的HDFS、HIVE、HBASE等数据存储系统；\r\n导出数据：从Hadoop的文件系统中导出数据到关系数据库\r\n\r\n=== sqoop安装\r\n安装sqoop的前提是已经具备java和hadoop的环境\r\n. 下载并解压 +\r\n最新版下载地址http://ftp.wayne.edu/apache/sqoop/1.4.6/\r\n\r\n\r\n. 修改配置文件\r\n+\r\n```\r\n$ cd $SQOOP_HOME/conf\r\n$ mv sqoop-env-template.sh sqoop-env.sh\r\n#打开sqoop-env.sh并编辑下面几行：\r\nexport HADOOP_COMMON_HOME=/home/hadoop/apps/hadoop-2.6.1/\r\nexport HADOOP_MAPRED_HOME=/home/hadoop/apps/hadoop-2.6.1/\r\nexport HIVE_HOME=/home/hadoop/apps/hive-1.2.1\r\n```\r\n\r\n\r\n. 加入mysql的jdbc驱动包\r\n+\r\n```\r\ncp  ~/app/hive/lib/mysql-connector-java-5.1.28.jar   $SQOOP_HOME/lib/\r\n```\r\n. 验证启动\r\n+\r\n```\r\n$ cd $SQOOP_HOME/bin\r\n$ sqoop -version\r\n# 预期的输出：\r\n15/12/17 14:52:32 INFO sqoop.Sqoop: Running Sqoop version: 1.4.6\r\nSqoop 1.4.6 git commit id 5b34accaca7de251fc91161733f906af2eddbe83\r\nCompiled by abe on Fri Aug 1 11:19:26 PDT 2015\r\n```\r\n到这里，整个Sqoop安装工作完成。\r\n\r\n\r\n=== Sqoop的数据导入\r\n\r\n“导入工具”导入单个表从RDBMS到HDFS。表中的每一行被视为HDFS的记录。所有记录都存储为文本文件的文本数据（或者Avro、sequence文件等二进制数据）\r\n\r\n语法 ::\r\n下面的语法用于将数据导入HDFS。\r\n+\r\n```\r\n$ sqoop import (generic-args) (import-args)\r\n```\r\n\r\n\r\n==== 示例\r\n\r\n表数据 ::\r\n在mysql中有一个库userdb中三个表：emp, emp_add和emp_contact\r\n+\r\n*表emp*:\r\n+\r\n----\r\nid      name    deg     salary  dept\r\n1201    gopal   manager 50,000  TP\r\n1202    manisha Proof reader    50,000  TP\r\n1203    khalil  php dev 30,000  AC\r\n1204    prasanth    php dev 30,000  AC\r\n1205    kranthi admin   20,000  TP\r\n----\r\n表emp_add:\r\n+\r\n----\r\nid      hno     street  city\r\n1201    288A    vgiri   jublee\r\n1202    108I    aoc sec-bad\r\n1203    144Z    pgutta  hyd\r\n1204    78B old city    sec-bad\r\n1205    720X    hitec   sec-bad\r\n----\r\n表emp_conn:\r\n+\r\n----\r\nid      phno    email\r\n1201    2356742 gopal@tp.com\r\n1202    1661663 manisha@tp.com\r\n1203    8887776 khalil@ac.com\r\n1204    9988774 prasanth@ac.com\r\n1205    1231231 kranthi@tp.com\r\n----\r\n\r\n===== 导入表表数据到HDFS\r\n下面的命令用于从MySQL数据库服务器中的emp表导入HDFS。\r\n+\r\n```\r\n$bin/sqoop import \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --table emp   \\\r\n  --m 1\r\n```\r\n\r\n为了验证在HDFS导入的数据，请使用以下命令查看导入的数据::\r\n+\r\n```\r\n$ $HADOOP_HOME/bin/hadoop fs -cat /user/hadoop/emp/part-m-00000\r\n```\r\n\r\nemp表的数据和字段之间用逗号(,)表示::\r\n+\r\n----\r\n1201, gopal,    manager, 50000, TP\r\n1202, manisha,  preader, 50000, TP\r\n1203, kalil,    php dev, 30000, AC\r\n1204, prasanth, php dev, 30000, AC\r\n1205, kranthi,  admin,   20000, TP\r\n----\r\n\r\n===== 导入关系表到HIVE\r\n\r\n+\r\n```\r\nbin/sqoop import --connect jdbc:mysql://hdp-node-01:3306/test --username root --password root --table emp --hive-import --m 1\r\n```\r\n\r\n===== 导入到HDFS指定目录\r\n\r\n在导入表数据到HDFS使用Sqoop导入工具，我们可以指定目标目录。\r\n以下是指定目标目录选项的Sqoop导入命令的语法。::\r\n+\r\n```\r\n--target-dir \r\n```\r\n\r\n下面的命令是用来导入emp_add表数据到'/queryresult'目录。::\r\n+\r\n```\r\nbin/sqoop import \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --target-dir /queryresult \\\r\n  --table emp --m 1\r\n```\r\n\r\n\r\n下面的命令是用来验证 /queryresult 目录中 emp_add表导入的数据形式。::\r\n+\r\n```\r\n$HADOOP_HOME/bin/hadoop fs -cat /queryresult/part-m-*\r\n```\r\n\r\n\r\n它会用逗号（，）分隔emp_add表的数据和字段。 ::\r\n+\r\n----\r\n1201, 288A, vgiri,   jublee\r\n1202, 108I, aoc,     sec-bad\r\n1203, 144Z, pgutta,  hyd\r\n1204, 78B,  oldcity, sec-bad\r\n1205, 720C, hitech,  sec-bad\r\n----\r\n\r\n===== 导入表数据子集\r\n我们可以导入表的使用Sqoop导入工具，\"where\"子句的一个子集。它执行在各自的数据库服务器相应的SQL查询，并将结果存储在HDFS的目标目录。\r\nwhere子句的语法如下。\r\n+\r\n```\r\n--where \r\n```\r\n\r\n下面的命令用来导入emp_add表数据的子集。子集查询检索员工ID和地址，居住城市为：Secunderabad ::\r\n+\r\n```\r\nbin/sqoop import \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --where \"city ='sec-bad'\" \\\r\n  --target-dir /wherequery \\\r\n  --table emp_add --m 1\r\n```\r\n\r\n按需导入::\r\n+\r\n```\r\nbin/sqoop import \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --target-dir /wherequery2 \\\r\n  --query 'select id,name,deg from emp WHERE  id>1207 and $CONDITIONS' \\\r\n  --split-by id \\\r\n  --fields-terminated-by '\\t' \\\r\n  --m 1\r\n```\r\n\r\n下面的命令用来验证数据从emp_add表导入/wherequery目录::\r\n+\r\n```\r\n$HADOOP_HOME/bin/hadoop fs -cat /wherequery/part-m-*\r\n```\r\n\r\n\r\n它用逗号（，）分隔 emp_add表数据和字段。::\r\n+\r\n----\r\n1202, 108I, aoc, sec-bad\r\n1204, 78B, oldcity, sec-bad\r\n1205, 720C, hitech, sec-bad\r\n----\r\n\r\n===== 增量导入\r\n增量导入是仅导入新添加的表中的行的技术。\r\n它需要添加‘incremental’, ‘check-column’, 和 ‘last-value’选项来执行增量导入。\r\n下面的语法用于Sqoop导入命令增量选项。\r\n+\r\n```\r\n--incremental \r\n--check-column \r\n--last value \r\n```\r\n\r\n\r\n假设新添加的数据转换成emp表如下：\r\n+\r\n----\r\n1206, satish p, grp des, 20000, GR\r\n----\r\n下面的命令用于在EMP表执行增量导入。::\r\n+\r\n```\r\nbin/sqoop import \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --table emp --m 1 \\\r\n  --incremental append \\\r\n  --check-column id \\\r\n  --last-value 1208\r\n```\r\n\r\n\r\n以下命令用于从emp表导入HDFS emp/ 目录的数据验证。::\r\n+\r\n```\r\n$ $HADOOP_HOME/bin/hadoop fs -cat /user/hadoop/emp/part-m-*\r\n```\r\n它用逗号（，）分隔 emp_add表数据和字段。::\r\n+\r\n```\r\n1201, gopal,    manager, 50000, TP\r\n1202, manisha,  preader, 50000, TP\r\n1203, kalil,    php dev, 30000, AC\r\n1204, prasanth, php dev, 30000, AC\r\n1205, kranthi,  admin,   20000, TP\r\n1206, satish p, grp des, 20000, GR\r\n```\r\n\r\n下面的命令是从表emp 用来查看修改或新添加的行::\r\n+\r\n```\r\n$ $HADOOP_HOME/bin/hadoop fs -cat /emp/part-m-*1\r\n```\r\n这表示新添加的行用逗号（，）分隔emp表的字段。\r\n1206, satish p, grp des, 20000, GR\r\n\r\n=== Sqoop的数据导出\r\n----\r\n将数据从HDFS导出到RDBMS数据库\r\n导出前，目标表必须存在于目标数据库中。\r\n   默认操作是从将文件中的数据使用INSERT语句插入到表中\r\n   更新模式下，是生成UPDATE语句更新表数据\r\n语法\r\n以下是export命令语法。\r\n----\r\n+\r\n```\r\n$ sqoop export (generic-args) (export-args)\r\n```\r\n\r\n----\r\n示例\r\n数据是在HDFS 中“EMP/”目录的emp_data文件中。所述emp_data如下：\r\n1201, gopal,     manager, 50000, TP\r\n1202, manisha,   preader, 50000, TP\r\n1203, kalil,     php dev, 30000, AC\r\n1204, prasanth,  php dev, 30000, AC\r\n1205, kranthi,   admin,   20000, TP\r\n1206, satish p,  grp des, 20000, GR\r\n----\r\n\r\n\r\n. 首先需要手动创建mysql中的目标表\r\n+\r\n```\r\n$ mysql\r\nmysql> USE db;\r\nmysql> CREATE TABLE employee (\r\n   id INT NOT NULL PRIMARY KEY,\r\n   name VARCHAR(20),\r\n   deg VARCHAR(20),\r\n   salary INT,\r\n   dept VARCHAR(10));\r\n```\r\n\r\n. 然后执行导出命令\r\n+\r\n```\r\nbin/sqoop export \\\r\n  --driver com.mysql.jdbc.Driver \\\r\n  --connect jdbc:mysql://hdp-node-01:3306/test \\\r\n  --username root \\\r\n  --password root \\\r\n  --table employee \\\r\n  --export-dir /user/hadoop/emp/\r\n```\r\n\r\n. 验证表mysql命令行。\r\n+\r\n```\r\nmysql>select * from employee;\r\n```\r\n如果给定的数据存储成功，那么可以找到数据在如下的employee表。\r\n+\r\n----\r\n+------+--------------+-------------+-------------------+--------+\r\n| Id   | Name         | Designation | Salary            | Dept   |\r\n+------+--------------+-------------+-------------------+--------+\r\n| 1201 | gopal        | manager     | 50000             | TP     |\r\n| 1202 | manisha      | preader     | 50000             | TP     |\r\n| 1203 | kalil        | php dev     | 30000             | AC     |\r\n| 1204 | prasanth     | php dev     | 30000             | AC     |\r\n| 1205 | kranthi      | admin       | 20000             | TP     |\r\n| 1206 | satish p     | grp des     | 20000             | GR     |\r\n+------+--------------+-------------+-------------------+--------+\r\n----\r\n\r\n\r\n=== Sqoop作业\r\n注：Sqoop作业——将事先定义好的数据导入导出任务按照指定流程运行\r\n语法\r\n以下是创建Sqoop作业的语法。\r\n+\r\n```\r\n$ sqoop job (generic-args) (job-args)\r\n   [-- [subtool-name] (subtool-args)]\r\n\r\n$ sqoop-job (generic-args) (job-args)\r\n   [-- [subtool-name] (subtool-args)]\r\n```\r\n\r\n\r\n\r\n\r\n创建作业(--create) ::\r\n在这里，我们创建一个名为myjob，这可以从RDBMS表的数据导入到HDFS作业。\r\n+\r\n```\r\nbin/sqoop job --create myimportjob -- import --connect jdbc:mysql://hdp-node-01:3306/test --username root --password root --table emp --m 1\r\n```\r\n该命令创建了一个从db库的employee表导入到HDFS文件的作业。\r\n\r\n\r\n验证作业 (--list)\r\n----\r\n‘--list’ 参数是用来验证保存的作业。下面的命令用来验证保存Sqoop作业的列表。\r\n$ sqoop job --list\r\n它显示了保存作业列表。\r\nAvailable jobs:\r\nmyimportjob\r\n检查作业(--show)\r\n‘--show’ 参数用于检查或验证特定的工作，及其详细信息。以下命令和样本输出用来验证一个名为myjob的作业。\r\n$ sqoop job --show myjob\r\n它显示了工具和它们的选择，这是使用在myjob中作业情况。\r\nJob: myjob\r\n Tool: import Options:\r\n ----------------------------\r\n direct.import = true\r\n codegen.input.delimiters.record = 0\r\n hdfs.append.dir = false\r\n db.table = employee\r\n ...\r\n incremental.last.value = 1206\r\n ...\r\n\r\n----\r\n\r\n\r\n执行作业 (--exec)\r\n‘--exec’ 选项用于执行保存的作业。下面的命令用于执行保存的作业称为myjob。\r\n$ sqoop job --exec myjob\r\n它会显示下面的输出。\r\n10/08/19 13:08:45 INFO tool.CodeGenTool: Beginning code generation\r\n...\r\n\r\n\r\n\r\nSqoop的原理\r\n概述\r\nSqoop的原理其实就是将导入导出命令转化为mapreduce程序来执行，sqoop在接收到命令后，都要生成mapreduce程序\r\n\r\n使用sqoop的代码生成工具可以方便查看到sqoop所生成的java代码，并可在此基础之上进行深入定制开发\r\n\r\n\r\n\r\n代码定制\r\n以下是Sqoop代码生成命令的语法：\r\n$ sqoop-codegen (generic-args) (codegen-args)\r\n$ sqoop-codegen (generic-args) (codegen-args)\r\n\r\n\r\n示例：以USERDB数据库中的表emp来生成Java代码为例。\r\n下面的命令用来生成导入\r\n$ sqoop-codegen \\\r\n--import\r\n--connect jdbc:mysql://localhost/userdb \\\r\n--username root \\\r\n--table emp\r\n\r\n\r\n如果命令成功执行，那么它就会产生如下的输出。\r\n14/12/23 02:34:40 INFO sqoop.Sqoop: Running Sqoop version: 1.4.5\r\n14/12/23 02:34:41 INFO tool.CodeGenTool: Beginning code generation\r\n……………….\r\n14/12/23 02:34:42 INFO orm.CompilationManager: HADOOP_MAPRED_HOME is /usr/local/hadoop\r\nNote: /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/emp.java uses or overrides a deprecated API.\r\nNote: Recompile with -Xlint:deprecation for details.\r\n14/12/23 02:34:47 INFO orm.CompilationManager: Writing jar file: /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/emp.jar\r\n\r\n\r\n\r\n验证: 查看输出目录下的文件\r\n$ cd /tmp/sqoop-hadoop/compile/9a300a1f94899df4a9b10f9935ed9f91/\r\n$ ls\r\nemp.class\r\nemp.jar\r\nemp.java\r\n\r\n如果想做深入定制导出，则可修改上述代码文件\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hadoop-shell",
        "title": "hadoop-shell",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hadoop-shell\r\n\r\n= hadoop-shell\r\n\r\n== hdfs\r\n\r\n. 列表\r\n+\r\n```\r\nhadoop fs -ls /\r\n```\r\n. 上传文件\r\n+\r\n```\r\nhadoop fs -put /test.ee /\r\n```\r\n. 查看文件内容\r\n+\r\n```\r\nhadoop fs -cat /test.ee\r\n```\r\n. 下载文件\r\n+\r\n```\r\nhadoop fs -get /test.ee /\r\n```\r\n. 创建目录\r\n+\r\n```\r\nhadoop fs -mkdir -p /wordcount/input\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hadoop-upload",
        "content": "ClientClientNameNodeNameNodeDataNode2DataNode2DataNode1DataNode1DataNode3DataNode31. 向 namenode 请求上传文件 /a/sss.txt2. 响应,可以上传3. rpc 请求上传第一个 block(0-128M), 请求返回 datanode4. 返回 (datanode1,datanode2,datanode3)考虑因素: 空间/距离[Not supported by viewer]元数据元数据上传数据时, datanode 的选择策略1. 第一个副本先考虑跟 client 离最近的 (同机架)2. 第二个副本再考虑跨机架挑选一个 datanode, 增加副本的可靠性3. 第三个副本就在第一个副本同机架另外挑选一台 datanode 存放[Not supported by viewer]5. 请求建立 block 传输通道 channel5. 请求建立 block 传输通道 channelDataNode4DataNode45.1. 请求建立通道5.1. 请求建立通道5.2. 请求建立通道5.2. 请求建立通道6.1. 应答成功6.1. 应答成功6.2. 应答成功6.2. 应答成功PIPE LINEPIPE LINE6.2. 应答成功6.2. 应答成功文件[Not supported by viewer]300M300MByteBufByteBufByteBufByteBuf128M128M256M256MHDFS 文件上传HDFS 文件上传",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hadoop2",
        "title": "hadoop2.4.1集群搭建",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hadoop\r\n\r\n= hadoop2.4.1集群搭建\r\n\r\n== *CentOS* 安装\r\n\r\n=== 准备Linux环境\r\n\r\n. 先将虚拟机的网络模式选为NAT\r\n. 修改主机名\r\n+\r\n```\r\nvi /etc/sysconfig/network\r\n\r\nNETWORKING=yes\r\nHOSTNAME=mini1    ###\r\n```\r\n. 修改IP\r\n+\r\n```\r\nvim /etc/sysconfig/network-scripts/ifcfg-eth0\r\n\r\nDEVICE=\"eth0\"\r\nBOOTPROTO=\"static\"               ###\r\nHWADDR=\"00:0C:29:3C:BF:E7\"\r\nIPV6INIT=\"yes\"\r\nNM_CONTROLLED=\"yes\"\r\nONBOOT=\"yes\"\r\nTYPE=\"Ethernet\"\r\nUUID=\"ce22eeca-ecde-4536-8cc2-ef0dc36d4a8c\"\r\nIPADDR=\"192.168.1.101\"           ###\r\nNETMASK=\"255.255.255.0\"          ###\r\nGATEWAY=\"192.168.1.1\"            ###\r\n```\r\n\r\n. 修改主机名和IP的映射关系\r\n+\r\n```\r\nvim /etc/hosts\r\n\r\n192.168.1.101   itcast\r\n```\r\n\r\n. 关闭防火墙\r\n+\r\n```\r\n#查看防火墙状态\r\nservice iptables status\r\n#关闭防火墙\r\nservice iptables stop\r\n#查看防火墙开机启动状态\r\nchkconfig iptables --list\r\n#关闭防火墙开机启动\r\nchkconfig iptables off\r\n```\r\n\r\n. 修改sudo\r\n+\r\n```\r\nsu root\r\nvim /etc/sudoers\r\n给hadoop用户添加执行的权限\r\n```\r\n\r\n=== 安装 *JDK*\r\n\r\n. 上传 *jdk-7u_65-i585.tar.gz*\r\n. 解压 *jdk*\r\n+\r\n```\r\n#创建文件夹\r\nmkdir /home/hadoop/app\r\n#解压\r\ntar -zxvf jdk-7u55-linux-i586.tar.gz -C /home/hadoop/app\r\n```\r\n. 将 *java* 添加到环境变量中\r\n+\r\n```\r\nvim /etc/profile\r\n#在文件最后添加\r\nexport JAVA_HOME=/home/hadoop/app/jdk-7u_65-i585\r\nexport PATH=$PATH:$JAVA_HOME/bin\r\n\r\n#刷新配置\r\nsource /etc/profile\r\n```\r\n\r\n=== 安装 *hadoop2.4.1*\r\n\r\n[TIP]\r\n先上传 hadoop 的安装包到服务器上去 /home/hadoop/ +\r\n注意：hadoop2.x 的配置文件 $HADOOP_HOME/etc/hadoop +\r\n伪分布式需要修改5个配置文件\r\n\r\n. 配置 hadoop\r\n+\r\n.hadoop-env.sh\r\n```\r\nvim hadoop-env.sh\r\n#第27行\r\nexport JAVA_HOME=/usr/java/jdk1.7.0_65\r\n```\r\n\r\n. *core-site.xml*\r\n+\r\n```\r\n\r\n\r\n    fs.defaultFS\r\n    hdfs://weekend-1206-01:9000\r\n\r\n\r\n\r\n    hadoop.tmp.dir\r\n    /home/hadoop/hadoop-2.4.1/tmp\r\n\r\n```\r\n\r\n. *hdfs-site.xml*\r\n+\r\n```\r\n\r\n\r\n    dfs.replication\r\n    1\r\n\r\n\r\n\r\n    dfs.secondary.http.address\r\n    192.168.1.152:50090\r\n\r\n```\r\n\r\n. *mapred-site.xml*\r\n+\r\n```\r\nmv mapred-site.xml.template mapred-site.xml\r\nvim mapred-site.xml\r\n\r\n\r\n    mapreduce.framework.name\r\n    yarn\r\n\r\n```\r\n\r\n. *yarn-site.xml*\r\n+\r\n```\r\n\r\n\r\n    yarn.resourcemanager.hostname\r\n    weekend-1206-01\r\n\r\n\r\n\r\n    yarn.nodemanager.aux-services\r\n    mapreduce_shuffle\r\n\r\n```\r\n\r\n==== 将 *hadoop* 添加到环境变量\r\n\r\n```\r\nvim /etc/proflie\r\n\r\nexport JAVA_HOME=/usr/java/jdk1.7.0_65\r\nexport HADOOP_HOME=/itcast/hadoop-2.4.1\r\nexport PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\r\n\r\nsource /etc/profile\r\n```\r\n\r\n==== 格式化 *namenode*（是对 *namenode* 进行初始化）\r\n\r\n```\r\nhdfs namenode -format\r\n或\r\nhadoop namenode -format\r\n```\r\n\r\n==== 启动 *hadoop*\r\n\r\n```\r\n# 先启动HDFS\r\nsbin/start-dfs.sh\r\n\r\n# 再启动YARN\r\nsbin/start-yarn.sh\r\n\r\n# 启动 namenode\r\nsbin/hadoop-daemon.sh start namenode\r\n\r\n# 启动 dataNode\r\nsbin/hadoop-daemon.sh start datanode\r\n```\r\n\r\n==== 验证是否启动成功\r\n\r\n```\r\n# jps\r\n27408 NameNode\r\n28218 Jps\r\n27643 SecondaryNameNode\r\n28066 NodeManager\r\n27803 ResourceManager\r\n27512 DataNode\r\n```\r\n\r\n```\r\nhttp://192.168.1.101:50070 （HDFS管理界面）\r\nhttp://192.168.1.101:8088 （MR管理界面）\r\n```\r\n\r\n=== 配置ssh免登陆\r\n\r\n```\r\n#生成ssh免登陆密钥\r\n#进入到我的home目录\r\ncd ~/.ssh\r\n\r\nssh-keygen -t rsa （四个回车）\r\n# 执行完这个命令后，会生成两个文件id_rsa（私钥）、id_rsa.pub（公钥）\r\n# 将公钥拷贝到要免密登陆的目标机器上\r\nssh-copy-id localhost\r\n# ssh免登陆：\r\n# 生成key:\r\nssh-keygen\r\n# 复制从A复制到B上:\r\nssh-copy-id B\r\n# 验证：\r\nssh localhost/exit，ps -e|grep ssh\r\nssh A  #在B中执行\r\n```\r\n\r\n== docker 方式\r\n\r\n=== compose\r\n\r\n.hadoop.yml\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/docker/compose/hadoop.yml[]\r\n----\r\n\r\n---\r\n\r\n* core-site.xml\r\n+\r\n```\r\n\r\n  \r\n      fs.defaultFS\r\n      hdfs://mini1:9000\r\n  \r\n  \r\n      hadoop.tmp.dir\r\n      /hadoop-2.4.1/tmp\r\n  \r\n\r\n```\r\n\r\nps: `cd $HADOOP_PREFIX`\r\n\r\n* hadoop.sh\r\n+\r\n```\r\nexport PATH=$HADOOP_PREFIX/bin:HADOOP_PREFIX/sbin:$PATH\r\n```\r\n\r\n== Example\r\n\r\n=== wordcount\r\n\r\n. input\r\n+\r\n.a.txt\r\n```\r\na\r\nb\r\nabc\r\nef\r\nefg\r\nabc\r\nef\r\nh\r\naakk\r\nef\r\nh\r\n```\r\n. 上传到 *HDFS*\r\n+\r\n```\r\n# 目录不存在,创建目录 ( `hadoop fs -mkdir -p /wordcount/input` )\r\nhadoop fs -put /a.txt /wordcount/input\r\n```\r\n. https://git.oschina.net/dishui/bigdata/tree/heartbeat02/[WordCount 代码]\r\n. 上传打包好的jar\r\n. 执行\r\n+\r\n```\r\nhadoop jar hadoop-demo-1.0-SNAPSHOT.jar wordcount.WordCountDriver /wordcount/input/ /wordcount/output/\r\n```\r\n. 查看输出结果\r\n+\r\n```\r\nhadoop fs -cat /wordcount/output/part-r-00000\r\n```\r\n\r\n== hdfs 文件上传流程\r\n\r\n\r\nimage::{host}/post/bigdata/hadoop/hadoop-upload.svg[]\r\n\r\n\r\n== 参考\r\n\r\n. https://github.com/kiwenlau/hadoop-cluster-docker[hadoop-cluster-docker]\r\n\r\n. http://www.aboutyun.com/forum.php[aboutyun]\r\n\r\n. http://lxw1234.com/\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hadoop文件上传",
        "content": "7V1tc5s6Fv41zLQf4gGBQHwEJ757Z7adzvTO7N6PxCYOU2yymDTJ/fUrCQmjF2yZ8JI2SdopCBDSOUfnec6RRC13uXv+o0we7r8UmzS3gL15ttxrCwDHDxH+h5S81CVeENYF2zLbsJuOBd+zf1JWaLPSx2yTHoQbq6LIq+xBLFwX+326roSypCyLJ/G2uyIX3/qQbFOl4Ps6ydXS/2Sb6r4uRcA/lv8rzbb3/M24x/WV22T9Y1sWj3v2Pgu4d/SnvrxLeF2so4f7ZFM8tYrcG8tdlkVR1Ue752WaE9lysdXPrTquNu0u031l8gCoH/iZ5I+s68s8I8/WrateuETwY1j4+CR+us+q9PtDsiZXnrD+cdl9tcvxmYMP77I8XxZ5UeLzfbEnT9wV+2qV7LKcWMNfyX2xS1gp07zj4fMkz7Z7fLLGr0/x07HaF9a9n2lZpc+tIta3P9Jil1blC76FXUVMzC/i6dNRpw43ufuWPiErS5gZbZuKj6LEB0yaesm6imS/Jrv0Kx4qimwnkygRXIatPGIXbouqKnbDiNp3RFl7hrJ2PPh6YXuKsK+TKiHCBvNJewChekAUqmubSjUYwIRhp1SdX1qqwIUzStXvlKr7S0tVdgDTShUpUlUhbL+JCDcg/c6TwyFb444fqqSs1OK2kI0kmj5n1X/ZE+T4b3xsLyA52+OukEs2Pzle6xT7oXgs16mA0bih27QSwCXdCDRGVU1L9PAEzpVpnlTZT5H86LTB3vCtyAhFaMaTL2recSWF1r1hT7XZiFSR6+jxmtdTi0Cph9pG02sjcwk15uLnWCzxJvuJD7fk0FngW6wbaIW2FWKp2HuM4HuK4LgYWdHKigPrxrdix0LAuvGsGFkoogdLK7LJpdC3UEBLYiv2yYNgleC/h8NhUT1X/K24pPViTVtA0xbXQtfkII6sEOPekhyjFWlM/ZYIalpi+hqXvKZ8WBv3MLCiJfnDLtnsIIoIGc6L9Y9P9pUD0JfPpKX6SpEVr0hXSOdiK7whcQP2iLWgDdvtLVjlSlWfeF1YgUt+DFrH7mfjt5AX4C4ilxyEITGK+k21JGKPHLgRbQoWTEh0dINvo5ewtZL2BVZ4Ta/6RFkdb5Y8F/bAleiUyvSQ/ZPc0huIX3kgY4KOEhhb8Lrl4vP0rtJQv1222ZCn4zy5TfO4CVs4nBwDF9XX6T3iAcNUtt/+VTywNrECfAaa9xTlJi0lyFKdIHfmMvY0AR/rudUOmnSYdGUvcDTqC07lCgzi9K4cR2QRVxKPLe7uDulr/RR3iG1HRcY7pEaI3Qv2A9TPYJ8Q3SiGQ1WabpjR/FJswhWhAAYKmUAaRPMGoBKOo8rciEtcTBpE9ZwiCpxe2Aq9MKIQrkohuGW9EQ4BpVDdsUE/DqEYjlRPB4fA2kxeWrcxh9rZXh9oqcrRxOoKe497NTGjwyNWROyKOkfuu/3/PRb1DZiFBzT9dCziWKalK6I/ISUB5S1LAZUpvoWRhTyCbwQSQ/pQTECPgNs1IT7kHkj4yBHl6paKrT8Lu4yHdVMN4hFDyoBwe+t7ah+JdIhdg/CKCIzluuwjINc1oIZLOMeeYi7ByCBasvsIvvuEZ8S+OYsAanciWuXp7lCddHUnQmqLqEaW9J5GRxqWdtTqklHMCJAKyDsjahZqcxrlN9QzJLSmtiFcfRRcxjgV5YZnpIGNNK7J15L2/ULb6NAh7w89iDxqwydkSG/GLZFGBqTmXysE33vTm+QdqrL4kcqQrKK0KdXT4b8ZUA0A6FdQCu6cACqQ3uS72ggDhsB0NR07EqZ3oTgQYHzhO6gF5c7C5qff0jLD3SM8ilahRek+OQM4J7xL6K5E9qbo7kjoDuRUw0Dw7kDpPd7A+K5mrCEPYeX4GNLcQUSdXEwwlkXW9PYGuxHxNKHL/FRIA0/kkBKMc/cJDpvyEVxO59TCYE5HEwQqtt/pdBzO/rgaHTWMaExocJ/TnT/3FFVMHJu9SqrIFgfHtJleR02gz+nKxYQvgL1dNlRdtj+ny3aAHEj19dmBWJEnW8FwaV0+vH832/BV23BmxfNAnph0/X7GIcfRridVNKBxqHNEcOEYo64GWN8bnHoS+2rma9qO3xsLTtU5G7gAH+ozV58f+ufVNxYb4p54AteszZUGwlysI3rt4BLXPF8MJY0+1NPnKs5brmg4n6tZmfN2tA5ByAv6R91vJsRW1l+gsJ95uPBMRQOahxoi+Ytm2r2e4WbpZI+m4hBJ3dWZSZLBfW8ePOBzU7Jq2h7cHsuDq4GXvwAfyupkS0BaZhZq4HY0ZamR0Lc/v5EFEf/+86s6Ufy2lUHPWWM5IrQWKtj4Z7UaRmmuEo9MyZH6rmIbBS3thes3oS7LUjfnw6SpNTkPMCeGNouR+RyFvJ7AOOchmZFS0VB5auk9XBBD5ak1C+U+fP6pEEtSx5Qun3ulrjUDLUXwxQBEH1dMtGQumElXXSzA6jk8JHttRWzpAamj3N5+InOi9Xxy6+izbhGCukKymSytX3Z6rYBkXxdk0TFupM4GpsFFKNR6erUiuGMp06+iReMbQz9wE38Y+5KoueOr8xk6cPKHMC91WRRG3i/vb4xLcZZ2p8toY3yyeewuaz9OYfNM999WKwteX3IQMCUOXWPy3DC6lGrwYfF2uIZENaC0ftQ4gy7VY0v1DMQ05PV5A0+Iu5MligwM2w6t9tqMhjHLtntqxeZUdg1Us541DeVIWUpPdnvGFFpOQxlOG15Mob1xKTTU7TWZxbIv25s0lQEjpFqwG85pwr40Yd175tuXTBjKPGy4TGpgMPNNdng8WF0ESL+14qLgRxpJnq1mJ7Vqk6Yfeu3/AwajrM8e9l8zTgDymguoklSdKpwBNmMjA47ae2PKb6IOzcjQLn094buM1aHOscyEP2LIIG55OcIRDycmwx/N5hg0a2QgWwuUmY/xTN65JVzD4Q8yWXn1fvyvAoVT+l+DWYR35n9NmMlo/vfN8P+Z/O85ss9dx5tZaCNbS2//64eT+V/+phmtzGD7qhqBzoryaE4rc6VECey7J0ZerwMN98T0ydKZcMn3g/LInQ/lXQNYeWcor6hjQpT3JtuVcjnKTzbFMmvWDslRU19/ivyOUd078fwaXFfJfPxSpfHjnWJePSZe2195GXn2NVRNl5hbNFSGJZQX2yFl7PPFPYIrlta29vtgiMEXQ8ZOvgIXSQIAigC069YGEYAB+xxAAM75sGC0LvLvkYzdRXu2LoYmgWpPcncHye9r/cQ5MuHTH3xlWyYb8mmP1rVb+mvsbGp1n9SDbofrIJZmEsq9dz3o1+LoNjSNpSWTr0R9aEkg3S/i6QRa0uz5fL9aOq2jQCRQnuZTCaNp6QN5jGmuHJu4k2kJfOCS8XSDPJbUTx2NpqUPXDLVkhLnTziWTJY7fmjJIkk9eSx502lpxHT3b6YlOONYUlOvA6bIptmbMHJ2zPfF5JDHo5cpsmOarajqKDqmxpnAL8mLn5KeMiRsmyXMj7Mj9YzlZpWRTly0nXGuZLe8DygMxBqMc91n6hnw6zuarYTkw/AGY9TgY+ePVXFgcySqV5SHakU+US5+r/zK01uU3uxGGqWyMgJfGaTa2cQB9hU5ms2DAPof2mlpR/z0ArBH0w4+Pf4PYPVQO/43a+7N/wE=",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hbase",
        "title": "hbase",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hbase\r\n\r\n= Hbase\r\n\r\n\r\n== 安装\r\n\r\n. 上传\r\n首先确保用户是 *hadoop* ，用工具将 *hbase* 安装包 *hbase-0.99.2-bin.tar.gz* 上传到 */home/hadoop* 下，确保 *hbase-0.99.2-bin.tar.gz* 的用户是 *hadoop*，如果不是，执行 *chown* 命令\r\n. 解压\r\n+\r\n```\r\nsu – hadoop\r\ntar –zxvf hbase-0.99.2-bin.tar.gz\r\n```\r\n. 重命名\r\n+\r\n```\r\nmv hbase-0.99.2hbase\r\n```\r\n. 修改环境变量\r\n.. 在master机器上执行下面命令：\r\n+\r\n```\r\nsu – root\r\nvi/etc/profile\r\n添加内容：\r\nexport HBASE_HOME=/home/hadoop/hbase\r\nexport PATH=$PATH:$HBASE_HOME/bin\r\n执行命令：\r\nsource /etc/profile\r\nsu – hadoop\r\n```\r\n.. 在其他机器上执行上述操作。\r\n. 修改配置文件\r\n+\r\n```\r\nsu – hadoop\r\n```\r\n将配置文件 上传到 */home/hadoop/hbase/conf* 文件夹下。\r\n每个文件的解释如下：\r\n+\r\n.hbase-env.sh\r\n```\r\nexport JAVA_HOME=/usr/jdk   //jdk安装目录\r\nexport HBASE_CLASSPATH=/home/hadoop/hadoop/conf   //hadoop配置文件的位置\r\nexport HBASE_MANAGES_ZK=true   #如果使用独立安装的zookeeper这个地方就是false\r\n```\r\n+\r\n.hbase-site.xml\r\n```\r\n\r\n    \r\n        hbase.master       #hbasemaster的主机和端口\r\n        master1:60000\r\n    \r\n    \r\n        hbase.master.maxclockskew    #时间同步允许的时间差\r\n        180000\r\n    \r\n    \r\n        hbase.rootdir\r\n        hdfs:// hadoop-cluster1/hbase#hbase共享目录，持久化hbase数据\r\n    \r\n    \r\n        hbase.cluster.distributed  #是否分布式运行，false即为单机\r\n        true\r\n    \r\n    \r\n        hbase.zookeeper.quorum#zookeeper地址\r\n        slave1, slave2,slave3\r\n    \r\n    \r\n        hbase.zookeeper.property.dataDir#zookeeper配置信息快照的位置\r\n        /home/hadoop/hbase/tmp/zookeeper\r\n    \r\n\r\n```\r\nRegionservers    //是从机器的域名\r\nslave1\r\nslave2\r\nslave3\r\n\r\n. 把hadoop的hdfs-site.xml和core-site.xml 放到hbase/conf下\r\n+\r\n```\r\ncp /home/hadoop/hadoop/etc/hadoop/hdfs-site.xml /home/hadoop/hbase/conf\r\ncp /home/hadoop/hadoop/etc/hadoop/core-site.xml /home/hadoop/hbase/conf\r\n```\r\n. 发送到其他机器\r\n+\r\n```\r\nsu - hadoop\r\nscp –r /home/hadoop/hbase hadoop@slave1:/home/hadoop\r\nscp –r /home/hadoop/hbase hadoop@slave2:/home/hadoop\r\nscp –r /home/hadoop/hbase hadoop@slave3:/home/hadoop\r\n```\r\n. 启动\r\n+\r\n```\r\nsu – hadoop\r\nstart-hbase.sh\r\n```\r\n. 查看\r\n+\r\n```\r\n进程：jps\r\n进入hbase的shell：hbase shell\r\n退出hbase的shell：quit\r\n页面：http://master:60010/\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n+\r\n----\r\ncreate 'user','info1','info2'\r\n\r\ndescribe 'user'\r\n\r\nexists 'user'\r\n\r\nput 'user','1234','info1:name','zhangsan'\r\nput 'user','1234','info2:name','zhangsan'\r\n\r\nscan 'user'\r\n----\r\n\r\n\r\n[cols=\">,^\"]\r\n|===\r\n|名称\r\n|命令表达式\r\n\r\n|创建表\r\n|create '表名', '列族名1','列族名2','列族名N'\r\n\r\n|查看所有表\r\n|list\r\n\r\n|描述表\r\n|describe '表名'\r\n\r\n|判断表存在\r\n|exists '表名'\r\n\r\n|判断是否禁用启用表\r\n|is_enabled '表名' is_disabled ‘表名’\r\n\r\n|添加记录\r\n|put  ‘表名’, ‘rowKey’, ‘列族 : 列‘  ,  '值'\r\n\r\n|查看记录rowkey下的所有数据\r\n|get  '表名' , 'rowKey'\r\n\r\n|查看表中的记录总数\r\n|count  '表名'\r\n\r\n|获取某个列族\r\n|get '表名','rowkey','列族'\r\n\r\n|获取某个列族的某个列\r\n|get '表名','rowkey','列族：列’\r\n\r\n|删除记录\r\n|delete  ‘表名’ ,‘行名’ , ‘列族：列'\r\n\r\n|删除整行\r\n|deleteall '表名','rowkey'\r\n\r\n|删除一张表\r\n|先要屏蔽该表，才能对该表进行删除\r\n第一步 disable ‘表名’，第二步  drop '表名'\r\n\r\n|清空表\r\n|truncate '表名'\r\n\r\n|查看所有记录\r\n|scan \"表名\"\r\n\r\n|查看某个表某个列中所有数据\r\n|scan \"表名\" , {COLUMNS=>'列族名:列名'}\r\n\r\n|更新记录\r\n|就是重写一遍，进行覆盖，hbase没有修改，都是追加\r\n\r\n|===\r\n\r\n\r\n\r\n\r\n== HBase 性能优化\r\n\r\n. 修改Linux最大文件数\r\n+\r\n----\r\nLinux系统最大可打开文件数一般默认的参数值是1024，如果你不进行修改并发量上来的时候会出现“Too Many Open Files”的错误，导致整个HBase不可运行\r\n查看： ulimit -a    结果：open files (-n) 1024\r\n临时修改： ulimit -n 4096\r\n持久修改：\r\nvi /etc/security/limits.conf在文件最后加上：\r\n* soft nofile 65535\r\n* hard nofile 65535\r\n* soft nproc 65535\r\n* hard nproc 65535\r\n----\r\n. 修改 JVM 配置\r\n+\r\n----\r\n修改hbase-env.sh文件中的配置参数\r\nHBASE_HEAPSIZE 4000 #HBase使用的 JVM 堆的大小\r\nHBASE_OPTS \"‐server ‐XX:+UseConcMarkSweepGC\"JVM #GC 选项\r\n参数解释：\r\n-client，-server\r\n这两个参数用于设置虚拟机使用何种运行模式，client模式启动比较快，但运行时性能和内存管理效率不如server模式，通常用于客户端应用程序。相反，server模式启动比client慢，但可获得更高的运行性能。\r\n‐XX:+UseConcMarkSweepGC：设置为并发收集\r\n----\r\n. 修改HBase配置：hbase-site.xml\r\n.. zookeeper.session.timeout\r\n+\r\n----\r\n默认值：3分钟（180000ms）,可以改成1分钟\r\n说明：RegionServer与Zookeeper间的连接超时时间。当超时时间到后，ReigonServer会被Zookeeper从RS集群清单中移除，HMaster收到移除通知后，会对这台server负责的regions重新balance，让其他存活的RegionServer接管.\r\n调优：\r\n这个timeout决定了RegionServer是否能够及时的failover。设置成1分钟或更低，可以减少因等待超时而被延长的failover时间。\r\n不过需要注意的是，对于一些Online应用，RegionServer从宕机到恢复时间本身就很短的（网络闪断，crash等故障，运维可快速介入），如果调低timeout时间，反而会得不偿失。因为当ReigonServer被正式从RS集群中移除时，HMaster就开始做balance了（让其他RS根据故障机器记录的WAL日志进行恢复）。当故障的RS在人工介入恢复后，这个balance动作是毫无意义的，反而会使负载不均匀，给RS带来更多负担。特别是那些固定分配regions的场景。\r\n----\r\n.. hbase.regionserver.handler.count\r\n+\r\n----\r\n默认值：10\r\n说明：RegionServer的请求处理IO线程数。\r\n调优：\r\n这个参数的调优与内存息息相关。\r\n较少的IO线程，适用于处理单次请求内存消耗较高的Big PUT场景（大容量单次PUT或设置了较大cache的scan，均属于Big PUT）或ReigonServer的内存比较紧张的场景。\r\n较多的IO线程，适用于单次请求内存消耗低，TPS（吞吐量）要求非常高的场景。\r\n----\r\n.. hbase.hregion.max.filesize\r\n+\r\n----\r\n默认值：256M\r\n说明：在当前ReigonServer上单个Reigon的最大存储空间，单个Region超过该值时，这个Region会被自动split成更小的region。\r\n调优：\r\n小region对split和compaction友好，因为拆分region或compact小region里的storefile速度很快，内存占用低。缺点是split和compaction会很频繁。\r\n特别是数量较多的小region不停地split, compaction，会导致集群响应时间波动很大，region数量太多不仅给管理上带来麻烦，甚至会引发一些Hbase的bug。\r\n一般512以下的都算小region。\r\n大region，则不会经常split和compaction，因为做一次compact和split会产生较长时间的停顿，对应用的读写性能冲击非常大。\r\n----\r\n.. hfile.block.cache.size\r\n+\r\n----\r\n默认值：0.2\r\n说明：storefile的读缓存占用内存的大小百分比，0.2表示20%。该值直接影响数据读的性能。\r\n调优：当然是越大越好，如果写比读少很多，开到0.4-0.5也没问题。如果读写较均衡，0.3左右。如果写比读多，果断默认吧。\r\nHBase上Regionserver的内存分为两个部分，一部分作为Memstore，主要用来写；另外一部分作为BlockCache，主要用于读。\r\n写请求会先写入Memstore，Regionserver会给每个region提供一个Memstore，当Memstore满64MB以后，会启动 flush刷新到磁盘。\r\n读请求先到Memstore中查数据，查不到就到BlockCache中查，再查不到就会到磁盘上读，并把读的结果放入BlockCache。由于BlockCache采用的是LRU策略（Least Recently Used 近期最少使用算法），因此BlockCache达到上限(heapsize * hfile.block.cache.size * 0.85)后，会启动淘汰机制，淘汰掉最老的一批数据。\r\n一个Regionserver上有一个BlockCache和N个Memstore，它们的大小之和不能大于等于内存 * 0.8，否则HBase不能启动。默认BlockCache为0.2，而Memstore为0.4。对于注重读响应时间的系统，可以将 BlockCache设大些，比如设置BlockCache=0.4，Memstore=0.39，以加大缓存的命中率。\r\n----\r\n.. hbase.hregion.memstore.block.multiplier\r\n+\r\n----\r\n默认值：2\r\n说明：当一个region里的memstore占用内存大小超过hbase.hregion.memstore.flush.size两倍的大小时，block该region的所有请求，进行flush，释放内存。\r\n虽然我们设置了region所占用的memstores总内存大小，比如64M，但想象一下，在最后63.9M的时候，我Put了一个200M的数据，此时memstore的大小会瞬间暴涨到超过预期的hbase.hregion.memstore.flush.size的几倍。这个参数的作用是当memstore的大小增至超过hbase.hregion.memstore.flush.size 2倍时，block所有请求，遏制风险进一步扩大。\r\n调优： 这个参数的默认值还是比较靠谱的。如果你预估你的正常应用场景（不包括异常）不会出现突发写或写的量可控，那么保持默认值即可。\r\n----\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hive-on-spark",
        "title": "hive on spark",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hive on spark\r\n\r\n= hive on spark\r\n\r\n== 环境\r\n\r\n|===\r\n|名称|版本|下载地址\r\n\r\n|Docker\r\n|Docker version 17.04.0-ce, build 4845c56\r\n|https://www.docker.com/[]\r\n\r\n|VirtualBox\r\n|4.3.12\r\n|https://www.virtualbox.org/[]\r\n\r\n|Vagrant\r\n|Vagrant 1.8.1\r\n|https://www.vagrantup.com/downloads.html[]\r\n\r\n|etcd\r\n|3.1.8\r\n|https://github.com/coreos/etcd/releases/download/v3.1.8/etcd-v3.1.8-linux-amd64.tar.gz[etcd-v3.1.8-linux-amd64.tar.gz]\r\n\r\n|flanneld\r\n|v0.7.1\r\n|https://github.com/coreos/flannel/releases/download/v0.7.1/flanneld-amd64[flanneld-amd64]\r\n\r\n|mk-docker-opts.sh\r\n|\r\n|https://raw.githubusercontent.com/coreos/flannel/master/dist/mk-docker-opts.sh[mk-docker-opts.sh]\r\n\r\n|JDK\r\n|java version \"1.7.0_45\"\r\n|\r\n\r\n|Hadoop\r\n|Hadoop 2.6.5\r\n|http://hadoop.apache.org/releases.html\r\n\r\n|Spark\r\n|1.5.3\r\n|https://github.com/apache/spark/tree/branch-1.5\r\n\r\n|Hive\r\n|Hive 2.1.1\r\n|http://hive.apache.org/downloads.html\r\n|===\r\n\r\n==  *vagrant* 配置文件\r\n\r\n[source,ruby]\r\n----\r\n# -*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\napp_servers = {\r\n    :slave1 => '192.168.123.124',\r\n    :slave2 => '192.168.123.125'\r\n}\r\nVagrant.configure(2) do |config|\r\n  config.vm.synced_folder \".\", \"/vagrant\", disabled: true\r\n  config.ssh.insert_key = false\r\n\r\n  app_servers.each do |app_server_name, app_server_ip|\r\n    config.vm.define app_server_name do |coreos|\r\n      coreos.vm.box = \"CentOS-7\"\r\n      coreos.vm.hostname = app_server_name.to_s\r\n      coreos.vm.network :public_network, ip: app_server_ip\r\n      coreos.vm.provider \"virtualbox\" do |vb|\r\n        vb.memory = \"1024\"\r\n      end\r\n    end\r\n  end\r\nend\r\n----\r\n\r\n== 配置\r\n\r\n. 编辑 *hosts* 文件\r\n+\r\n[source,]\r\n----\r\ncat >> /etc/hosts \r\n    \r\n      hive.execution.engine\r\n      spark\r\n    \r\n    \r\n      spark.enentLog.enabled\r\n      true\r\n    \r\n    \r\n      spark.enentLog.dir\r\n      hdfs://master:9000/hive-spark-log\r\n    \r\n    \r\n      spark.serializer\r\n      org.apache.spark.serializer.KryoSerializer\r\n    \r\n    \r\n      spark.executor.memeory\r\n      512m\r\n    \r\n    \r\n      spark.driver.memeory\r\n      512m\r\n    \r\n    \r\n      spark.executor.extraJavaOptions\r\n      -XX:+PrintGCDetails -Dkey=value -Dnumbers=\"one two three\"\r\n    \r\n\r\n----\r\n+\r\n[TIP]\r\n拷贝 *mysql-connector-java-5.1.35-bin.jar* 到 *$HIVE_HOME/lib* 下\r\n\r\n== 启动\r\n\r\n. 启动 *Hadoop* 集群\r\n+\r\n[source,]\r\n----\r\ncat > start-hadoop.sh ",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hive",
        "title": "hive",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hive\r\n\r\n= hive\r\n\r\n== Hive只在一个节点上安装即可\r\n\r\n. 上传tar包\r\n\r\n. 解压\r\n+\r\n```\r\ntar -zxvf hive-1.2.1.tar.gz -C /hadoop/\r\n```\r\n\r\n. 安装mysql数据库（切换到root用户）（装在哪里没有限制，只有能联通hadoop集群的节点）\r\n+\r\n.mysql.yml\r\n```\r\nversion: '2'\r\nservices:\r\n  mysql:\r\n    image: dishui.io:5000/mysql:5.5.52\r\n    container_name: mysql\r\n    environment:\r\n      - \"MYSQL_ROOT_PASSWORD=111111\"\r\n    ports:\r\n      - \"3306:3306\"\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true\r\n```\r\n\r\n. 配置 *hive*\r\n.. 配置 *HIVE_HOME* 环境变量  *vi conf/hive-env.sh* 配置其中的 *$hadoop_home*\r\n.. 配置元数据库信息   *vi hive-site.xml*\r\n+\r\n```\r\n\r\n\t\r\n\t\tjavax.jdo.option.ConnectionURL\r\n\t\tjdbc:mysql://mysql:3306/hive?createDatabaseIfNotExist=true\r\n\t\tJDBC connect string for a JDBC metastore\r\n\t\r\n\r\n\t\r\n\t\tjavax.jdo.option.ConnectionDriverName\r\n\t\tcom.mysql.jdbc.Driver\r\n\t\tDriver class name for a JDBC metastore\r\n\t\r\n\r\n\t\r\n\t\tjavax.jdo.option.ConnectionUserName\r\n\t\troot\r\n\t\tusername to use against metastore database\r\n\t\r\n\r\n\t\r\n\t\tjavax.jdo.option.ConnectionPassword\r\n\t\t111111\r\n\t\tpassword to use against metastore database\r\n\t\r\n\r\n```\r\n\r\n. 安装 *hive* 和 *mysql* 完成后，将 *mysql* 的连接 *jar* 包拷贝到 *$HIVE_HOME/lib* 目录下\r\n+\r\n--\r\n如果出现没有权限的问题，在 *mysql* 授权(在安装 *mysql* 的机器上执行) +\r\n```\r\nmysql -uroot -p\r\n```\r\n执行下面的语句  *.*:所有库下的所有表   %：任何IP地址或主机都可以连接\r\n```\r\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '111111' WITH GRANT OPTION;\r\nFLUSH PRIVILEGES;\r\n```\r\n--\r\n\r\n. *Jline* 包版本不一致的问题，需要拷贝 *hive* 的 *lib* 目录中 *jline.2.12.jar* 的 *jar* 包替换掉 *hadoop* 中的\r\n*/home/hadoop/app/hadoop-2.6.4/share/hadoop/yarn/lib/jline-0.9.94.jar*\r\n\r\n\r\n. 启动 *hive*\r\n+\r\n```\r\nbin/hive\r\n```\r\n\r\n\r\n. 建表(默认是内部表)\r\n+\r\n```\r\ncreate table trade_detail(id bigint, account string, income double, expenses double, time string) row format delimited fields terminated by '\\t';\r\n# 建分区表\r\ncreate table td_part(id bigint, account string, income double, expenses double, time string) partitioned by (logdate string) row format delimited fields terminated by '\\t';\r\n# 建外部表\r\ncreate external table td_ext(id bigint, account string, income double, expenses double, time string) row format delimited fields terminated by '\\t' location '/td_ext';\r\n```\r\n\r\n. 创建分区表\r\n+\r\n```\r\n\r\n# 普通表和分区表区别：有大量数据增加的需要建分区表\r\ncreate table book (id bigint, name string) partitioned by (pubdate string) row format delimited fields terminated by '\\t';\r\n\r\n# 分区表加载数据\r\nload data local inpath './book.txt' overwrite into table book partition (pubdate='2010-08-22');\r\n\r\nload data local inpath '/root/data.am' into table beauty partition (nation=\"USA\");\r\n\r\nselect nation, avg(size) from beauties group by nation order by avg(size);\r\n```\r\n\r\n== hive 参考\r\n\r\n=== transactions\r\n. https://acadgild.com/blog/transactions-in-hive/[]\r\n. https://cwiki.apache.org//confluence/display/Hive/Hive+on+Spark:+Getting+Started[hive on spark]\r\n. https://www.iteblog.com/archives/1493.html[]\r\n. http://lxw1234.com/archives/2015/06/269.htm[]\r\n. http://www.cnblogs.com/breg/p/5552342.html[]\r\n. http://blog.csdn.net/u014695188/article/details/54646575[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/hive详解",
        "title": "hive详解",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hive详解\r\n\r\n= Hive 基本概念\r\n\r\n== Hive简介\r\n\r\n=== 什么是Hive\r\n\r\nHive是基于Hadoop的一个数据仓库工具，可以将结构化的数据文件映射为一张数据库表，并提供类SQL查询功能。\r\n\r\n=== 为什么使用Hive\r\n\r\n直接使用hadoop所面临的问题 ::\r\n\t人员学习成本太高 +\r\n\t项目周期要求太短 +\r\n\tMapReduce实现复杂查询逻辑开发难度太大\r\n\r\n为什么要使用Hive ::\r\n\t避免了去写MapReduce，减少开发人员的学习成本。+\r\n\t扩展功能很方便。\r\n\r\n\r\n=== Hive的特点\r\n\r\n可扩展 ::\r\n\tHive可以自由的扩展集群的规模，一般情况下不需要重启服务。\r\n\r\n延展性 ::\r\n\tHive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。\r\n\r\n容错 ::\r\n\t良好的容错性，节点出现问题SQL仍可完成执行\r\n\r\n== *Hive* 架构\r\n\r\nimage::{img}/img/hadoop/2017-03-17_155621.png[]\r\n---\r\n\r\nJobtracker ::\r\nhadoop1.x中的组件，它的功能相当于： Resourcemanager+AppMaster\r\n\r\nTaskTracker ::\r\n相当于：  Nodemanager  +  yarnchild\r\n\r\n=== 基本组成\r\n\r\n用户接口::\r\n包括 CLI、JDBC/ODBC、WebGUI。\r\n元数据存储::\r\n通常是存储在关系数据库如 mysql,derby中。\r\n\r\n解释器、编译器、优化器、执行器::\r\n-\r\n\r\n=== 各组件的基本功能\r\n\r\n用户接口主要由三个::\r\nCLI、JDBC/ODBC和WebGUI。其中，CLI为shell命令行；JDBC/ODBC是Hive的JAVA实现，与传统数据库JDBC类似；WebGUI是通过浏览器访问Hive。\r\n\r\n元数据存储 ::\r\nHive 将元数据存储在数据库中。Hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等。\r\n\r\n解释器、编译器、优化器 ::\r\n完成 HQL 查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在 HDFS 中，并在随后有 MapReduce 调用执行。\r\n\r\n=== Hive与Hadoop的关系\r\n\r\n> Hive利用HDFS存储数据，利用MapReduce查询数据\r\n\r\nimage::{img}/img/hadoop/2017-03-17_160404.png[]\r\n---\r\n\r\n=== Hive与传统数据库对比\r\n\r\nimage::{img}/img/hadoop/2017-03-17_160454.png[]\r\n---\r\n\r\n> 总结：hive具有sql数据库的外表，但应用场景完全不同，hive只适合用来做批量数据统计分析\r\n\r\n=== 对比\r\n. 查询语言。由于 SQL 被广泛的应用在数据仓库中，因此，专门针对 Hive 的特性设计了类 SQL 的查询语言 HQL。熟悉 SQL 开发的开发者可以很方便的使用 Hive 进行开发。\r\n. 数据存储位置。Hive 是建立在 Hadoop 之上的，所有 Hive 的数据都是存储在 HDFS 中的。而数据库则可以将数据保存在块设备或者本地文件系统中。\r\n. 数据格式。Hive 中没有定义专门的数据格式，数据格式可以由用户指定，用户定义数据格式需要指定三个属性：列分隔符（通常为空格、”\\t”、”\\x001″）、行分隔符（”\\n”）以及读取文件数据的方法（Hive 中默认有三个文件格式 TextFile，SequenceFile 以及 RCFile）。由于在加载数据的过程中，不需要从用户数据格式到 Hive 定义的数据格式的转换，因此，Hive 在加载的过程中不会对数据本身进行任何修改，而只是将数据内容复制或者移动到相应的 HDFS 目录中。而在数据库中，不同的数据库有不同的存储引擎，定义了自己的数据格式。所有数据都会按照一定的组织存储，因此，数据库加载数据的过程会比较耗时。\r\n. 数据更新。由于 Hive 是针对数据仓库应用设计的，而数据仓库的内容是读多写少的。因此，Hive 中不支持对数据的改写和添加，所有的数据都是在加载的时候中确定好的。而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO ...  VALUES 添加数据，使用 UPDATE ... SET 修改数据。\r\n. 索引。之前已经说过，Hive 在加载数据的过程中不会对数据进行任何处理，甚至不会对数据进行扫描，因此也没有对数据中的某些 Key\r\n\r\n=== Hive的数据存储\r\n\r\n. *Hive* 中所有的数据都存储在 *HDFS*  中，没有专门的数据存储格式（可支持*Text* ，*SequenceFile* ，*ParquetFile* ，*RCFILE* 等）\r\n. 只需要在创建表的时候告诉 *Hive*  数据中的列分隔符和行分隔符，*Hive*  就可以解析数据。\r\n. *Hive*  中包含以下数据模型：*DB* 、*Table* ，*External*  *Table* ，*Partition* ，*Bucket* 。\r\n.. *db* ：在 *hdfs* 中表现为${*hive* .*metastore* .*warehouse* .*dir* }目录下一个文件夹\r\n.. *table* ：在 *hdfs* 中表现所属*db* 目录下一个文件夹\r\n.. *external table* ：外部表, 与*table* 类似，不过其数据存放位置可以在任意指定路径\r\n普通表: 删除表后, *hdfs* 上的文件都删了\r\n.. *External* 外部表删除后, *hdfs* 上的文件没有删除, 只是把文件删除了\r\n.. *partition* ：在 *hdfs* 中表现为 *table* 目录下的子目录\r\n.. *bucket* ：桶, 在 *hdfs* 中表现为同一个表目录下根据 *hash* 散列之后的多个文件, 会根据不同的文件把数据放到不同的文件中\r\n\r\n=== *HIVE* 的安装部署\r\n\r\nlink:/post/bigdata/hadoop/hive[hive 安装]\r\n\r\n==== 使用方式\r\n\r\n. Hive交互shell\r\n+\r\n```\r\nbin/hive\r\n```\r\n\r\n. Hive thrift服务\r\n+\r\n--\r\n启动方式，（假如是在hadoop01上）\r\n\r\n启动为前台 ::\r\n+\r\n```\r\nbin/hiveserver2\r\n```\r\n启动为后台 ::\r\n+\r\n```\r\nnohup bin/hiveserver2 1>/var/log/hiveserver.log 2>/var/log/hiveserver.err &\r\n```\r\n\r\n启动成功后，可以在别的节点上用beeline去连接\r\n\r\n方式（1）::\r\n`hive/bin/beeline`  回车，进入beeline的命令界面 +\r\n输入命令连接 `hiveserver2`\r\n+\r\n```\r\nbeeline> !connect jdbc:hive2//mini1:10000\r\n```\r\n（hadoop01是hiveserver2所启动的那台主机名，端口默认是10000）\r\n方式（2） ::\r\n或者启动就连接：\r\n+\r\n```\r\nbin/beeline -u jdbc:hive2://mini1:10000 -n hadoop\r\n```\r\n\r\n接下来就可以做正常sql查询了\r\n--\r\n\r\n== Hive基本操作\r\n\r\n=== DDL操作\r\n\r\n==== 创建表\r\n\r\n建表语法::\r\n+\r\n```\r\nCREATE [EXTERNAL] TABLE [IF NOT EXISTS] table_name\r\n   [(col_name data_type [COMMENT col_comment], ...)]\r\n   [COMMENT table_comment]\r\n   [PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)]\r\n   [CLUSTERED BY (col_name, col_name, ...)\r\n   [SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS]\r\n   [ROW FORMAT row_format]\r\n   [STORED AS file_format]\r\n   [LOCATION hdfs_path]\r\n```\r\n\r\n说明：\r\n\r\n. *CREATE* *TABLE* 创建一个指定名字的表。如果相同名字的表已经存在，则抛出异常；用户可以用 *IF* *NOT* *EXISTS* 选项来忽略这个异常。\r\n. *EXTERNAL* 关键字可以让用户创建一个外部表，在建表的同时指定一个指向实际数据的路径（*LOCATION*），*Hive* 创建内部表时，会将数据移动到数据仓库指向的路径；若创建外部表，仅记录数据所在的路径，不对数据的位置做任何改变。在删除表的时候，内部表的元数据和数据会被一起删除，而外部表只删除元数据，不删除数据。\r\n. *LIKE* 允许用户复制现有的表结构，但是不复制数据。\r\n. *ROW* *FORMAT*\r\n+\r\n```\r\nDELIMITED [FIELDS TERMINATED BY char] [COLLECTION ITEMS TERMINATED BY char] [MAP KEYS TERMINATED BY char] [LINES TERMINATED BY char]\r\n| SERDE serde_name [WITH SERDEPROPERTIES (property_name=property_value, property_name=property_value, ...)]\r\n```\r\n用户在建表的时候可以自定义 *SerDe* 或者使用自带的 *SerDe*。如果没有指定 *ROW* *FORMAT* 或者 *ROW* *FORMAT* *DELIMITED*，将会使用自带的 *SerDe*。在建表的时候，用户还需要为表指定列，用户在指定表的列的同时也会指定自定义的 *SerDe*，*Hive*通过 *SerDe* 确定表的具体的列的数据。\r\n. *STORED* *AS*\r\n*SEQUENCEFILE*|*TEXTFILE*|*RCFILE*\r\n如果文件数据是纯文本，可以使用 *STORED* *AS* *TEXTFILE*。如果数据需要压缩，使用 *STORED* *AS* *SEQUENCEFILE*。\r\n. *CLUSTERED* *BY*\r\n对于每一个表（*table*）或者分区， *Hive* 可以进一步组织成桶，也就是说桶是更为细粒度的数据范围划分。*Hive* 也是 针对某一列进行桶的组织。*Hive* 采用对列值哈希，然后除以桶的个数求余的方式决定该条记录存放在哪个桶当中。\r\n把表（或者分区）组织成桶（*Bucket*）有两个理由：\r\n+\r\n--\r\n. 获得更高的查询处理效率。桶为表加上了额外的结构，*Hive* 在处理有些查询时能利用这个结构。具体而言，连接两个在（包含连接列的）相同列上划分了桶的表，可以使用 *Map* 端连接 （*Map*-*side* *join*）高效的实现。比如 *JOIN* 操作。对于 *JOIN* 操作两个表有一个相同的列，如果对这两个表都进行了桶操作。那么将保存相同列值的桶进行 *JOIN* 操作就可以，可以大大较少 *JOIN* 的数据量。\r\n. 使取样（*sampling*）更高效。在处理大规模数据集时，在开发和修改查询的阶段，如果能在数据集的一小部分数据上试运行查询，会带来很多方便。\r\n--\r\n\r\n\r\n===== 具体实例\r\n\r\n. 创建内部表mytable\r\n+\r\nimage::{img}/img/hadoop/image010.png[]\r\n---\r\n. 创建外部表pageview\r\n+\r\nimage::{img}/img/hadoop/image012.png[]\r\n---\r\n. 创建分区表invites\r\n+\r\n```\r\ncreate table student_p(Sno int,Sname string,Sex string,Sage int,Sdept string) partitioned by(part string) row format delimited fields terminated by ','stored as textfile;\r\n```\r\n+\r\nimage::{img}/img/hadoop/image014.png[]\r\n---\r\n. 创建带桶的表student\r\n+\r\nimage::{img}/img/hadoop/image016.png[]\r\n---\r\n\r\n==== 修改表\r\n\r\n===== 增加/删除分区\r\n\r\n语法结构::\r\n+\r\n```\r\nALTER TABLE table_name ADD [IF NOT EXISTS] partition_spec [ LOCATION 'location1' ] partition_spec [ LOCATION 'location2' ] ...\r\npartition_spec:\r\n: PARTITION (partition_col = partition_col_value, partition_col = partiton_col_value, ...)\r\n\r\nALTER TABLE table_name DROP partition_spec, partition_spec,...\r\n```\r\n\r\n具体实例::\r\n+\r\n```\r\nalter table student_p add partition(part='a') partition(part='b');\r\n```\r\n+\r\nimage::{img}/img/hadoop/image018.png[]\r\n---\r\n+\r\nimage::{img}/img/hadoop/image020.png[]\r\n---\r\n\r\n===== 重命名表\r\n\r\n语法结构::\r\n+\r\n```\r\nALTER TABLE table_name RENAME TO new_table_name\r\n```\r\n\r\n具体实例::\r\n+\r\nimage::{img}/img/hadoop/image022.png[]\r\n---\r\n\r\n===== 增加/更新列\r\n\r\n语法结构::\r\n+\r\n```\r\nALTER TABLE table_name ADD|REPLACE COLUMNS (col_name data_type [COMMENT col_comment], ...)\r\n```\r\n> 注：ADD是代表新增一字段，字段位置在所有列后面(partition列前)，REPLACE则是表示替换表中所有字段。\r\n+\r\n```\r\nALTER TABLE table_name CHANGE [COLUMN] col_old_name col_new_name column_type [COMMENT col_comment] [FIRST|AFTER column_name]\r\n```\r\n\r\n具体实例::\r\n+\r\nimage::{img}/img/hadoop/image024.png[]\r\n---\r\n\r\n===== 显示命令\r\n\r\n```\r\nshow tables\r\nshow databases\r\nshow partitions\r\nshow functions\r\ndesc extended t_name;\r\ndesc formatted table_name;\r\n```\r\n\r\n==== DML操作\r\n\r\n===== Load\r\n\r\n语法结构::\r\n+\r\n```\r\nLOAD DATA [LOCAL] INPATH 'filepath' [OVERWRITE] INTO\r\nTABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)]\r\n```\r\n\r\n说明::\r\n. Load 操作只是单纯的复制/移动操作，将数据文件移动到 Hive 表对应的位置。\r\n. filepath\r\n+\r\n--\r\n相对路径，例如：*project/data1* +\r\n绝对路径，例如：*/user/hive/project/data1* +\r\n包含模式的完整 URI，列如：+\r\n*hdfs://namenode:9000/user/hive/project/data1*\r\n--\r\n. LOCAL关键字\r\n+\r\n--\r\n如果指定了 LOCAL， load 命令会去查找本地文件系统中的 filepath。 +\r\n如果没有指定 LOCAL 关键字，则根据inpath中的uri 查找文件\r\n--\r\n\r\n\r\n. OVERWRITE 关键字\r\n+\r\n--\r\n如果使用了 OVERWRITE 关键字，则目标表（或者分区）中的内容会被删除，然后再将 filepath 指向的文件/目录中的内容添加到表/分区中。 +\r\n如果目标表（分区）已经有一个文件，并且文件名和 filepath 中的文件名冲突，那么现有的文件会被新文件所替代。\r\n--\r\n\r\n具体实例::\r\n. 加载相对路径数据\r\n+\r\nimage::{img}/img/hadoop/image026.png[]\r\n---\r\n. 加载绝对路径数据\r\n+\r\nimage::{img}/img/hadoop/image028.png[]\r\n---\r\n. 加载包含模式数据\r\n+\r\nimage::{img}/img/hadoop/image030.png[]\r\n---\r\n. OVERWRITE关键字使用\r\n+\r\nimage::{img}/img/hadoop/image032.png[]\r\n---\r\n\r\n===== Insert\r\n\r\n语法结构::\r\n+\r\n```\r\nINSERT OVERWRITE TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...)] select_statement1 FROM from_statement\r\n\r\nMultiple inserts:\r\nFROM from_statement\r\nINSERT OVERWRITE TABLE tablename1 [PARTITION (partcol1=val1, partcol2=val2 ...)] select_statement1\r\n[INSERT OVERWRITE TABLE tablename2 [PARTITION ...] select_statement2] ...\r\n\r\nDynamic partition inserts:\r\nINSERT OVERWRITE TABLE tablename PARTITION (partcol1[=val1], partcol2[=val2] ...) select_statement FROM from_statement\r\n```\r\n\r\n具体实例::\r\n. 基本模式插入\r\n+\r\nimage::{img}/img/hadoop/image034.png[]\r\n---\r\n. 多插入模式\r\n+\r\nimage::{img}/img/hadoop/image036.png[]\r\n---\r\n. 自动分区模式\r\n+\r\nimage::{img}/img/hadoop/image038.png[]\r\n---\r\n\r\n====== 导出表数据\r\n\r\n语法结构::\r\n+\r\n```\r\nINSERT OVERWRITE [LOCAL] DIRECTORY directory1 SELECT ... FROM ...\r\n\r\n\r\nmultiple inserts:\r\nFROM from_statement\r\nINSERT OVERWRITE [LOCAL] DIRECTORY directory1 select_statement1\r\n[INSERT OVERWRITE [LOCAL] DIRECTORY directory2 select_statement2] ...\r\n```\r\n\r\n具体实例::\r\n. 导出文件到本地\r\n+\r\nimage::{img}/img/hadoop/image040.png[]\r\n---\r\n> 说明：\r\n数据写入到文件系统时进行文本序列化，且每列用^A来区分，\\n为换行符。用more命令查看时不容易看出分割符，可以使用:sed -e 's/\\x01/|/g' filename 来查看。\r\n\r\n. 导出数据到HDFS\r\n+\r\nimage::{img}/img/hadoop/image042.png[]\r\n---\r\n\r\n\r\n===== SELECT\r\n\r\n语法结构::\r\n+\r\n```\r\nSELECT [ALL | DISTINCT] select_expr, select_expr, ...\r\nFROM table_reference\r\n[WHERE where_condition]\r\n[GROUP BY col_list [HAVING condition]]\r\n[CLUSTER BY col_list\r\n  | [DISTRIBUTE BY col_list] [SORT BY| ORDER BY col_list]\r\n]\r\n[LIMIT number]\r\n```\r\n\r\n注：\r\n. order by 会对输入做全局排序，因此只有一个reducer，会导致当输入规模较大时，需要较长的计算时间。\r\n. sort by不是全局排序，其在数据进入reducer前完成排序。因此，如果用sort by进行排序，并且设置mapred.reduce.tasks>1，则sort by只保证每个reducer的输出有序，不保证全局有序。\r\n. distribute by根据distribute by指定的内容将数据分到同一个reducer。\r\n. Cluster by 除了具有Distribute by的功能外，还会对该字段进行排序。因此，常常认为cluster by = distribute by + sort by\r\n\r\n具体实例::\r\n. 获取年龄大的3个学生\r\n+\r\nimage::{img}/img/hadoop/image044.png[]\r\n---\r\n. 查询学生信息按年龄，降序排序\r\n+\r\nimage::{img}/img/hadoop/image046.png[]\r\n---\r\n+\r\nimage::{img}/img/hadoop/image048.png[]\r\n---\r\n+\r\nimage::{img}/img/hadoop/image050.png[]\r\n---\r\n+\r\nimage::{img}/img/hadoop/image052.png[]\r\n---\r\n. 按学生名称汇总学生年龄\r\n+\r\nimage::{img}/img/hadoop/image054.png[]\r\n---\r\n\r\n==== Hive Join\r\n\r\n语法结构::\r\n+\r\n```\r\njoin_table:\r\n  table_reference JOIN table_factor [join_condition]\r\n  | table_reference {LEFT|RIGHT|FULL} [OUTER] JOIN table_reference join_condition\r\n  | table_reference LEFT SEMI JOIN table_reference join_condition\r\n```\r\n+\r\n--\r\nHive 支持等值连接（*equality joins*）、外连接（*outer joins*）和（*left/right joins*）。Hive 不支持非等值的连接，因为非等值连接非常难转化到 map/reduce 任务。\r\n另外，Hive 支持多于 2 个表的连接。\r\n--\r\n写 join 查询时，需要注意几个关键点：\r\n. 只支持等值join\r\n例如：\r\n+\r\n```\r\n  SELECT a.* FROM a JOIN b ON (a.id = b.id)\r\n  SELECT a.* FROM a JOIN b\r\n    ON (a.id = b.id AND a.department = b.department)\r\n是正确的，然而:\r\n  SELECT a.* FROM a JOIN b ON (a.id>b.id)\r\n是错误的。\r\n```\r\n\r\n. 可以 join 多于 2 个表。\r\n+\r\n```\r\n例如\r\n  SELECT a.val, b.val, c.val FROM a JOIN b\r\n    ON (a.key = b.key1) JOIN c ON (c.key = b.key2)\r\n如果join中多个表的 join key 是同一个，则 join 会被转化为单个 map/reduce 任务，例如：\r\n  SELECT a.val, b.val, c.val FROM a JOIN b\r\n    ON (a.key = b.key1) JOIN c\r\n    ON (c.key = b.key1)\r\n被转化为单个 map/reduce 任务，因为 join 中只使用了 b.key1 作为 join key。\r\nSELECT a.val, b.val, c.val FROM a JOIN b ON (a.key = b.key1)\r\n  JOIN c ON (c.key = b.key2)\r\n而这一 join 被转化为 2 个 map/reduce 任务。因为 b.key1 用于第一次 join 条件，而 b.key2 用于第二次 join。\r\n```\r\n\r\n. join 时\r\n+\r\n--\r\n每次 map/reduce 任务的逻辑\r\nreducer 会缓存 join 序列中除了最后一个表的所有表的记录，再通过最后一个表将结果序列化到文件系统。这一实现有助于在 reduce 端减少内存的使用量。实践中，应该把最大的那个表写在最后（否则会因为缓存浪费大量内存）。例如：\r\n--\r\n+\r\n```\r\nSELECT a.val, b.val, c.val FROM a\r\n    JOIN b ON (a.key = b.key1) JOIN c ON (c.key = b.key1)\r\n```\r\n所有表都使用同一个 *join key*（使用 1 次 *map/reduce* 任务计算）。\r\n*Reduce* 端会缓存 *a* 表和 *b* 表的记录，然后每次取得一个 c 表的记录就计算一次 *join* 结果，类似的还有：\r\n+\r\n```\r\n  SELECT a.val, b.val, c.val FROM a\r\n    JOIN b ON (a.key = b.key1) JOIN c ON (c.key = b.key2)\r\n```\r\n这里用了 2 次 *map/reduce* 任务。第一次缓存 *a* 表，用 *b* 表序列化；第二次缓存第一次 *map/reduce* 任务的结果，然后用 c 表序列化。\r\n\r\n. *LEFT*，*RIGHT* 和 *FULL* *OUTER* 关键字用于处理 *join* 中空记录的情况\r\n例如：\r\n+\r\n```\r\n  SELECT a.val, b.val FROM\r\n    a LEFT OUTER JOIN b ON (a.key=b.key)\r\n```\r\n对应所有 *a* 表中的记录都有一条记录输出。 +\r\n输出的结果应该是 *a.val*, *b.val*，当 *a.key*=*b.key* 时，而当 *b.key* 中找不到等值的 *a.key* 记录时也会输出:\r\n*a.val*, *NULL*\r\n所以 *a* 表中的所有记录都被保留了；\r\n*a* *RIGHT* *OUTER* *JOIN* *b* 会保留所有 *b* 表的记录。\r\n\r\n.. *Join* 发生在 *WHERE* 子句之前。如果你想限制 *join* 的输出，应该在 *WHERE* 子句中写过滤条件——或是在 *join* 子句中写。这里面一个容易混淆的问题是表分区的情况：\r\n+\r\n```\r\n  SELECT a.val, b.val FROM a\r\n  LEFT OUTER JOIN b ON (a.key=b.key)\r\n  WHERE a.ds='2009-07-07' AND b.ds='2009-07-07'\r\n```\r\n会 *join* *a* 表到 *b* 表（*OUTER* *JOIN*），列出 *a.val* 和 *b.val* 的记录。*WHERE* 从句中可以使用其他列作为过滤条件。但是，如前所述，如果 *b* 表中找不到对应 *a* 表的记录，*b* 表的所有列都会列出 *NULL*，包括 *ds* 列。也就是说，*join* 会过滤 *b* 表中不能找到匹配 *a* 表 *join* *key* 的所有记录。这样的话，*LEFT* *OUTER* 就使得查询结果与 *WHERE* 子句无关了。解决的办法是在 *OUTER* *JOIN* 时使用以下语法：\r\n+\r\n```\r\n  SELECT a.val, b.val FROM a LEFT OUTER JOIN b\r\n  ON (a.key=b.key AND\r\n      b.ds='2009-07-07' AND\r\n      a.ds='2009-07-07')\r\n```\r\n这一查询的结果是预先在 *join* 阶段过滤过的，所以不会存在上述问题。这一逻辑也可以应用于 *RIGHT* 和 *FULL* 类型的 *join* 中。\r\n\r\n.. *Join* 是不能交换位置的。无论是 *LEFT* 还是 *RIGHT* *join*，都是左连接的。\r\n+\r\n```\r\nSELECT a.val1, a.val2, b.val, c.val\r\n  FROM a\r\n  JOIN b ON (a.key = b.key)\r\n  LEFT OUTER JOIN c ON (a.key = c.key)\r\n```\r\n先 *join* *a* 表到 *b* 表，丢弃掉所有 *join* *key* 中不匹配的记录，然后用这一中间结果和 *c* 表做 *join*。这一表述有一个不太明显的问题，就是当一个 *key* 在 *a* 表和 *c* 表都存在，但是 *b* 表中不存在的时候：整个记录在第一次 *join*，即 *a* *JOIN* *b* 的时候都被丢掉了（包括*a.val*1，*a.val*2和*a.key*），然后我们再和 *c* 表 *join* 的时候，如果 *c.key* 与 *a.key* 或 *b.key* 相等，就会得到这样的结果：*NULL*, *NULL*, *NULL*, *c.val*\r\n\r\n具体实例::\r\n. 获取已经分配班级的学生姓名\r\n+\r\nimage::{img}/img/hadoop/image056.png[]\r\n---\r\n. 获取尚未分配班级的学生姓名\r\n+\r\nimage::{img}/img/hadoop/image058.png[]\r\n---\r\n. LEFT  SEMI  JOIN是IN/EXISTS的高效实现\r\n+\r\nimage::{img}/img/hadoop/image060.png[]\r\n---\r\n\r\n== Hive Shell参数\r\n\r\n=== Hive命令行\r\n\r\n语法结构::\r\n+\r\n```\r\nhive [-hiveconf x=y]* []* [|] [-S]\r\n```\r\n说明：\r\n+\r\n--\r\n*-i* 从文件初始化HQL。 +\r\n*-e* 从命令行执行指定的HQL +\r\n*-f* 执行HQL脚本 +\r\n*-v* 输出执行的HQL语句到控制台 +\r\n*-p*  connect to Hive Server on port number +\r\n*-hiveconf* x=y Use this to set hive/hadoop configuration variables. +\r\n--\r\n具体实例::\r\n. 运行一个查询\r\n+\r\nimage::{img}/img/hadoop/image062.png[]\r\n---\r\n. 运行一个文件\r\n+\r\nimage::{img}/img/hadoop/image064.png[]\r\n---\r\n. 运行参数文件\r\n+\r\nimage::{img}/img/hadoop/image066.png[]\r\n---\r\n\r\n=== Hive参数配置方式\r\n\r\nHive参数大全::\r\nhttps://cwiki.apache.org/confluence/display/Hive/Configuration+Properties[]\r\n\r\n  开发Hive应用时，不可避免地需要设定Hive的参数。设定Hive的参数可以调优HQL代码的执行效率，或帮助定位问题。然而实践中经常遇到的一个问题是，为什么设定的参数没有起作用？这通常是错误的设定方式导致的。\r\n\r\n对于一般参数，有以下三种设定方式::\r\n. 配置文件\r\n. 命令行参数\r\n. 参数声明\r\n\r\n配置文件::\r\nHive的配置文件包括\r\n+\r\n用户自定义配置文件：`$HIVE_CONF_DIR/hive-site.xml` +\r\n默认配置文件：`$HIVE_CONF_DIR/hive-default.xml` +\r\n用户自定义配置会覆盖默认配置。\r\n另外，*Hive* 也会读入 *Hadoop* 的配置，因为*Hive*是作为*Hadoop*的客户端启动的， *Hive* 的配置会覆盖 *Hadoop* 的配置。\r\n配置文件的设定对本机启动的所有Hive进程都有效。\r\n\r\n命令行参数::\r\n启动 *Hive*（客户端或Server方式）时，可以在命令行添加 *-hiveconf param=value* 来设定参数， +\r\n例如：\r\n+\r\n```\r\nbin/hive -hiveconf hive.root.logger=INFO,console\r\n```\r\n这一设定对本次启动的 *Session*（对于 *Server* 方式启动，则是所有请求的 *Sessions* ）有效。\r\n\r\n参数声明::\r\n可以在 *HQL* 中使用 *SET* 关键字设定参数，例如：\r\n+\r\n```\r\nset mapred.reduce.tasks=100;\r\n```\r\n这一设定的作用域也是 *session* 级的。 +\r\n上述三种设定方式的优先级依次递增。即参数声明覆盖命令行参数，命令行参数覆盖配置文件设定。 +\r\n注意某些系统级的参数，例如 *log4j* 相关的设定，必须用前两种方式设定，因为那些参数的读取在 *Session* 建立以前已经完成了。\r\n\r\n== Hive函数\r\n\r\n=== 内置运算符\r\n内容较多，见《Hive官方文档》\r\n\r\n=== 内置函数\r\n内容较多，见《Hive官方文档》\r\n\r\n=== Hive自定义函数和Transform\r\n\r\n当 *Hive* 提供的内置函数无法满足你的业务处理需要时，此时就可以考虑使用用户自定义函数（*UDF：user-defined function*）。\r\n\r\n=== 自定义函数类别\r\nUDF:: 作用于单个数据行，产生一个数据行作为输出。（数学函数，字符串函数）\r\n*UDAF*（用户定义聚集函数）：接收多个输入数据行，并产生一个输出数据行。（*count*，*max*）\r\n\r\n=== UDF开发实例\r\n\r\n. 先开发一个 *java* 类，继承 *UDF* ，并重载 *evaluate* 方法\r\n+\r\n```\r\npackage cn.itcast.bigdata.udf\r\nimport org.apache.hadoop.hive.ql.exec.UDF;\r\nimport org.apache.hadoop.io.Text;\r\n\r\npublic final class Lower extends UDF{\r\n  public Text evaluate(final Text s){\r\n    if(s==null){return null;}\r\n    return new Text(s.toString().toLowerCase());\r\n  }\r\n}\r\n```\r\n\r\n. 打成 *jar* 包上传到服务器\r\n. 将 *jar* 包添加到 *hive* 的 *classpath*\r\n+\r\n```\r\nhive>add JAR /home/hadoop/udf.jar;\r\n```\r\n. 创建临时函数与开发好的 *java class* 关联\r\n+\r\n```\r\nhive>create temporary function toprovince as 'cn.itcast.bigdata.udf.ToProvince';\r\n```\r\n. 即可在 *hql* 中使用自定义的函数 *strip*\r\n+\r\n```\r\nselect strip(name),age from t_test;\r\n```\r\n\r\n=== Transform实现\r\n\r\n> *Hive* 的 *TRANSFORM* 关键字提供了在SQL中调用自写脚本的功能\r\n适合实现 *Hive* 中没有的功能又不想写UDF的情况\r\n\r\n使用示例1::\r\n下面这句sql就是借用了 *weekday_mapper.py* 对数据进行了处理\r\n+\r\n```\r\nCREATE TABLE u_data_new (\r\n  movieid INT,\r\n  rating INT,\r\n  weekday INT,\r\n  userid INT)\r\nROW FORMAT DELIMITED\r\nFIELDS TERMINATED BY '\\t';\r\n\r\nadd FILE weekday_mapper.py;\r\n\r\nINSERT OVERWRITE TABLE u_data_new\r\nSELECT\r\n  TRANSFORM (movieid, rating, unixtime,userid)\r\n  USING 'python weekday_mapper.py'\r\n  AS (movieid, rating, weekday,userid)\r\nFROM u_data;\r\n```\r\n+\r\n.weekday_mapper.py\r\n```\r\n#!/bin/python\r\nimport sys\r\nimport datetime\r\n\r\nfor line in sys.stdin:\r\n  line = line.strip()\r\n  movieid, rating, unixtime,userid = line.split('\\t')\r\n  weekday = datetime.datetime.fromtimestamp(float(unixtime)).isoweekday()\r\n  print '\\t'.join([movieid, rating, str(weekday),userid])\r\n```\r\n\r\n使用示例2::\r\n下面的例子则是使用了 *shell* 的 *cat* 命令来处理数据\r\n+\r\n```\r\nFROM invites a INSERT OVERWRITE TABLE events SELECT TRANSFORM(a.foo, a.bar) AS (oof, rab) USING '/bin/cat' WHERE a.ds > '2008-08-09';\r\n```\r\n\r\n== Hive实战\r\n\r\n=== Hive 实战案例1——数据ETL\r\n\r\n需求::\r\n对web点击流日志基础数据表进行etl（按照仓库模型设计） +\r\n按各时间维度统计来源域名top10\r\n\r\n已有数据表 t_orgin_weblog ::\r\n+\r\n----\r\n+------------------+------------+----------+--+\r\n|     col_name     | data_type  | comment  |\r\n+------------------+------------+----------+--+\r\n| valid            | string     |          |\r\n| remote_addr      | string     |          |\r\n| remote_user      | string     |          |\r\n| time_local       | string     |          |\r\n| request          | string     |          |\r\n| status           | string     |          |\r\n| body_bytes_sent  | string     |          |\r\n| http_referer     | string     |          |\r\n| http_user_agent  | string     |          |\r\n+------------------+------------+----------+--+\r\n----\r\n\r\n数据示例::\r\n+\r\n----\r\n| true|1.162.203.134| - | 18/Sep/2013:13:47:35| /images/my.jpg                        | 200| 19939 | \"http://www.angularjs.cn/A0d9\"                      | \"Mozilla/5.0 (Windows   |\r\n\r\n| true|1.202.186.37 | - | 18/Sep/2013:15:39:11| /wp-content/uploads/2013/08/windjs.png| 200| 34613 | \"http://cnodejs.org/topic/521a30d4bee8d3cb1272ac0f\" | \"Mozilla/5.0 (Macintosh;|\r\n----\r\n\r\n\r\n实现步骤::\r\n. 对原始数据进行抽取转换\r\n将来访 *url* 分离出 *host*  *path*  *query*  *query* *id*\r\n+\r\n```\r\ndrop table if exists t_etl_referurl;\r\ncreate table t_etl_referurl as\r\nSELECT a.*,b.*\r\nFROM t_orgin_weblog a LATERAL VIEW parse_url_tuple(regexp_replace(http_referer, \"\\\"\", \"\"), 'HOST', 'PATH','QUERY', 'QUERY:id') b as host, path, query, query_id\r\n```\r\n\r\n\r\n. 从前述步骤进一步分离出日期时间形成 *ETL* 明细表 *t_etl_detail*    day tm\r\n+\r\n```\r\ndrop table if exists t_etl_detail;\r\ncreate table t_etl_detail as\r\nselect b.*,substring(time_local,0,11) as daystr,\r\nsubstring(time_local,13) as tmstr,\r\nsubstring(time_local,4,3) as month,\r\nsubstring(time_local,0,2) as day,\r\nsubstring(time_local,13,2) as hour\r\nfrom t_etl_referurl b;\r\n```\r\n. 对 *etl* 数据进行分区(包含所有数据的结构化信息)\r\n+\r\n```\r\ndrop table t_etl_detail_prt;\r\ncreate table t_etl_detail_prt(\r\nvalid                   string,\r\nremote_addr            string,\r\nremote_user            string,\r\ntime_local               string,\r\nrequest                 string,\r\nstatus                  string,\r\nbody_bytes_sent         string,\r\nhttp_referer             string,\r\nhttp_user_agent         string,\r\nhost                   string,\r\npath                   string,\r\nquery                  string,\r\nquery_id               string,\r\ndaystr                 string,\r\ntmstr                  string,\r\nmonth                  string,\r\nday                    string,\r\nhour                   string)\r\npartitioned by (mm string,dd string);\r\n```\r\n.. 导入数据\r\n+\r\n```\r\ninsert into table t_etl_detail_prt partition(mm='Sep',dd='18')\r\nselect * from t_etl_detail where daystr='18/Sep/2013';\r\n\r\ninsert into table t_etl_detail_prt partition(mm='Sep',dd='19')\r\nselect * from t_etl_detail where daystr='19/Sep/2013';\r\n```\r\n\r\n.. 分个时间维度统计各 *referer_host* 的访问次数并排序\r\n+\r\n```\r\ncreate table t_refer_host_visit_top_tmp as\r\nselect referer_host,count(*) as counts,mm,dd,hh from t_display_referer_counts group by hh,dd,mm,referer_host order by hh asc,dd asc,mm asc,counts desc;\r\n```\r\n\r\n\r\n. 来源访问次数 *topn* 各时间维度 *URL*\r\n取各时间维度的 *referer_host* 访问次数 *topn*\r\n+\r\n```\r\nselect * from (select referer_host,counts,concat(hh,dd),row_number() over (partition by concat(hh,dd) order by concat(hh,dd) asc) as od from t_refer_host_visit_top_tmp) t where od",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/log-analysis",
        "title": "log",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 日志分析\r\n\r\n= 日志采集分析\r\n\r\n== 点击流数据模型\r\n点击流概念\r\n　　点击流这个概念更注重用户浏览网站的整个流程，网站日志中记录的用户点击就像是图上的“点”，而点击流更像是将这些“点”串起来形成的“线”。也可以把“点”认为是网站的Page，而“线”则是访问网站的Session。所以点击流数据是由网站日志中整理得到的，它可以比网站日志包含更多的信息，从而使基于点击流数据统计得到的结果更加丰富和高效。\r\n　　\r\n\r\n\r\n\r\n\r\n=== 点击流模型生成\r\n　　点击流数据在具体操作上是由散点状的点击日志数据梳理所得，从而，点击数据在数据建模时应该存在两张模型表（Pageviews和visits）：\r\n　　\r\n. 用于生成点击流的访问日志表\r\n\r\n|===\r\n|时间戳 |IP地址 |Cookie |Session |请求URL |Referal\r\n\r\n|2012-01-01 12:31:12\r\n|101.0.0.1\r\n|User01\r\n|S001\r\n|/a/...\r\n|somesite.com\r\n|2012-01-01 12:31:16\r\n|201.0.0.2\r\n|User02\r\n|S002\r\n|/a/...\r\n|-\r\n|2012-01-01 12:33:06\r\n|101.0.0.2\r\n|User03\r\n|S002\r\n|/b/...\r\n|baidu.com\r\n|2012-01-01 15:16:39\r\n|234.0.0.3\r\n|User01\r\n|S003\r\n|/c/...\r\n|google.com\r\n|2012-01-01 15:17:11\r\n|101.0.0.1\r\n|User01\r\n|S004\r\n|/d/...\r\n|/c/...\r\n|2012-01-01 15:19:23\r\n|101.0.0.1\r\n|User01\r\n|S004\r\n|/e/...\r\n|/d/....\r\n\r\n|===\r\n\r\n\r\n. 页面点击流模型Pageviews表(按session聚集的访问页面信息)(每个session中的每个url也即是访问页面,的记录信息, 想差半个小时了就认为是下一个session了)\r\n\r\n|===\r\n|Session |userid |时间 |访问页面URL |停留时长 |第几步\r\n\r\n|S001\r\n|User01\r\n|2012-01-01 12:31:12\r\n|/a/....\r\n|30\r\n|1\r\n|S002\r\n|User02\r\n|2012-01-01 12:31:16\r\n|/a/....\r\n|10\r\n|1\r\n|S002\r\n|User02\r\n|2012-01-01 12:33:06\r\n|/b/....\r\n|110\r\n|2\r\n|S002\r\n|User02\r\n|2012-01-01 12:35:06\r\n|/e/....\r\n|30\r\n|3\r\n\r\n|===\r\n\r\n. 点击流模型Visits表\r\n\r\n|===\r\n|Session |起始时间 |结束时间 |进入页面 |离开页面 |访问页面数 |IP |cookie |referal\r\n\r\n|S001\r\n|2012-01-01 12:31:12\r\n|2012-01-01 12:31:12\r\n|/a/...\r\n|/a/...\r\n|1\r\n|101.0.0.1\r\n|User01\r\n|somesite.com\r\n|S002\r\n|2012-01-01 12:31:16\r\n|2012-01-01 12:35:06\r\n|/a/...\r\n|/e/...\r\n|3\r\n|201.0.0.2\r\n|User02\r\n|-\r\n|S003\r\n|2012-01-01 12:35:42\r\n|2012-01-01 12:35:42\r\n|/c/...\r\n|/c/...\r\n|1\r\n|234.0.0.3\r\n|User03\r\n|baidu.com\r\n|S004\r\n|2012-01-01 15:16:39\r\n|2012-01-01 15:19:23\r\n|/c/...\r\n|/e/...\r\n|3\r\n|101.0.0.1\r\n|User01\r\n|google.com\r\n|……\r\n|……\r\n|……\r\n|……\r\n|……\r\n|……\r\n|……\r\n|……\r\n|……\r\n|===\r\n\r\n　　这就是点击流模型。当WEB日志转化成点击流数据的时候，很多网站分析度量的计算变得简单了，这就是点击流的“魔力”所在。基于点击流数据我们可以统计出许多常见的网站分析度量\r\n\r\n== 整体技术流程及架构\r\n\r\n=== 数据处理流程\r\n该项目是一个纯粹的数据分析项目，其整体流程基本上就是依据数据的处理流程进行，依此有以下几个大的步骤：\r\n\r\n. 数据采集\r\n+\r\n----\r\n首先，通过页面嵌入JS代码的方式获取用户访问行为，并发送到web服务的后台记录日志\r\n然后，将各服务器上生成的点击流日志通过实时或批量的方式汇聚到HDFS文件系统中\r\n\r\n当然，一个综合分析系统，数据源可能不仅包含点击流数据，还有数据库中的业务数据（如用户信息、商品信息、订单信息等）及对分析有益的外部数据。\r\n----\r\n\r\n. 数据预处理\r\n+\r\n----\r\n通过mapreduce程序对采集到的点击流数据进行预处理，比如清洗，格式整理，滤除脏数据等\r\n\r\n----\r\n. 数据入库\r\n+\r\n----\r\n将预处理之后的数据导入到HIVE仓库中相应的库和表中\r\n----\r\n\r\n. 数据分析\r\n+\r\n----\r\n项目的核心内容，即根据需求开发ETL分析语句，得出各种统计结果\r\n----\r\n\r\n. 数据展现\r\n+\r\n----\r\n将分析所得数据进行可视化\r\n----\r\n\r\n== Flume日志采集系统搭建\r\n. 数据源信息\r\n+\r\n----\r\n本项目分析的数据用nginx服务器所生成的流量日志，存放在各台nginx服务器上，如：\r\n/var/log/httpd/access_log.2015-11-10-13-00.log\r\n/var/log/httpd/access_log.2015-11-10-14-00.log\r\n/var/log/httpd/access_log.2015-11-10-15-00.log\r\n/var/log/httpd/access_log.2015-11-10-16-00.log\r\n----\r\n\r\n. 数据内容样例\r\n数据的具体内容在采集阶段其实不用太关心。\r\n+\r\n----\r\n58.215.204.118 - - [18/Sep/2013:06:51:35 +0000] \"GET /wp-includes/js/jquery/jquery.js?ver=1.10.2 HTTP/1.1\" 304 0 \"http://blog.fens.me/nodejs-socketio-chat/\" \"Mozilla/5.0 (Windows NT 5.1; rv:23.0) Gecko/20100101 Firefox/23.0\"\r\n----\r\n\r\n字段解析 ::\r\n.. 访客ip地址：   58.215.204.118\r\n.. 访客用户信息：  - -\r\n.. 请求时间：[18/Sep/2013:06:51:35 +0000]\r\n.. 请求方式：GET\r\n.. 请求的url：/wp-includes/js/jquery/jquery.js?ver=1.10.2\r\n.. 请求所用协议：HTTP/1.1\r\n.. 响应码：304\r\n.. 返回的数据流量：0\r\n.. 访客的来源url：http://blog.fens.me/nodejs-socketio-chat/\r\n.. 访客所用浏览器：Mozilla/5.0 (Windows NT 5.1; rv:23.0) Gecko/20100101 Firefox/23.0\r\n\r\n\r\n. 日志文件生成规律\r\n+\r\n----\r\n基本规律为：\r\n当前正在写的文件为access_log；\r\n文件体积达到256M，或时间间隔达到60分钟，即滚动重命名切换成历史日志文件；\r\n形如： access_log.2015-11-10-13-00.log\r\n----\r\n+\r\n当然，每个公司的web服务器日志策略不同，可在web程序的log4j.properties中定义，如下：\r\n+\r\n```\r\nlog4j.appender.logDailyFile = org.apache.log4j.DailyRollingFileAppender\r\nlog4j.appender.logDailyFile.layout = org.apache.log4j.PatternLayout\r\nlog4j.appender.logDailyFile.layout.ConversionPattern = [%-5p][%-22d{yyyy/MM/dd HH:mm:ssS}][%l]%n%m%n\r\nlog4j.appender.logDailyFile.Threshold = DEBUG\r\nlog4j.appender.logDailyFile.ImmediateFlush = TRUE\r\nlog4j.appender.logDailyFile.Append = TRUE\r\nlog4j.appender.logDailyFile.File = /var/logs/access_log\r\nlog4j.appender.logDailyFile.DatePattern = '.'yyyy-MM-dd-HH-mm'.log'\r\nlog4j.appender.logDailyFile.Encoding = UTF-8\r\n```\r\n\r\n\r\n\r\n. Flume采集实现\r\n+\r\nFlume采集系统的搭建相对简单：\r\n+\r\n.. 在个web服务器上部署agent节点，修改配置文件\r\n.. 启动agent节点，将采集到的数据汇聚到指定的HDFS目录中\r\n+\r\n如下图：\r\n\r\n+\r\n版本选择::\r\n    apache-flume-1.6.0\r\n+\r\n采集规则设计::\r\n采集源：nginx服务器日志目录 +\r\n存放地：hdfs目录/home/hadoop/weblogs/\r\n\r\n采集规则配置详情::\r\n+\r\n```\r\nagent1.sources = source1\r\nagent1.sinks = sink1\r\nagent1.channels = channel1\r\n\r\n# Describe/configure spooldir source1\r\n#agent1.sources.source1.type = spooldir\r\n#agent1.sources.source1.spoolDir = /var/logs/nginx/\r\n#agent1.sources.source1.fileHeader = false\r\n\r\n# Describe/configure tail -F source1\r\n#使用exec作为数据源source组件\r\nagent1.sources.source1.type = exec\r\n#使用tail -F命令实时收集新产生的日志数据\r\nagent1.sources.source1.command = tail -F /var/logs/nginx/access_log\r\nagent1.sources.source1.channels = channel1\r\n\r\n#configure host for source\r\n#配置一个拦截器插件\r\nagent1.sources.source1.interceptors = i1\r\nagent1.sources.source1.interceptors.i1.type = host\r\n#使用拦截器插件获取agent所在服务器的主机名\r\nagent1.sources.source1.interceptors.i1.hostHeader = hostname\r\n\r\n#配置sink组件为hdfs\r\nagent1.sinks.sink1.type = hdfs\r\n#a1.sinks.k1.channel = c1\r\n#agent1.sinks.sink1.hdfs.path=hdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H%M%S\r\n#指定文件sink到hdfs上的路径\r\nagent1.sinks.sink1.hdfs.path=\r\nhdfs://hdp-node-01:9000/weblog/flume-collection/%y-%m-%d/%H-%M_%hostname\r\n#指定文件名前缀\r\nagent1.sinks.sink1.hdfs.filePrefix = access_log\r\nagent1.sinks.sink1.hdfs.maxOpenFiles = 5000\r\n#指定每批下沉数据的记录条数\r\nagent1.sinks.sink1.hdfs.batchSize= 100\r\nagent1.sinks.sink1.hdfs.fileType = DataStream\r\nagent1.sinks.sink1.hdfs.writeFormat =Text\r\n#指定下沉文件按1G大小滚动\r\nagent1.sinks.sink1.hdfs.rollSize = 1024*1024*1024\r\n#指定下沉文件按1000000条数滚动\r\nagent1.sinks.sink1.hdfs.rollCount = 1000000\r\n#指定下沉文件按30分钟滚动\r\nagent1.sinks.sink1.hdfs.rollInterval = 30\r\n#agent1.sinks.sink1.hdfs.round = true\r\n#agent1.sinks.sink1.hdfs.roundValue = 10\r\n#agent1.sinks.sink1.hdfs.roundUnit = minute\r\nagent1.sinks.sink1.hdfs.useLocalTimeStamp = true\r\n\r\n# Use a channel which buffers events in memory\r\n#使用memory类型channel\r\nagent1.channels.channel1.type = memory\r\nagent1.channels.channel1.keep-alive = 120\r\nagent1.channels.channel1.capacity = 500000\r\nagent1.channels.channel1.transactionCapacity = 600\r\n\r\n# Bind the source and sink to the channel\r\nagent1.sources.source1.channels = channel1\r\nagent1.sinks.sink1.channel = channel1\r\n```\r\n\r\n启动采集::\r\n+\r\n在部署了flume的nginx服务器上，启动flume的agent，命令如下：\r\n+\r\n[source,]\r\n----\r\nbin/flume-ng agent --conf ./conf -f ./conf/weblog.properties.2 -n agent \r\n----\r\n 启动命令中的 -n 参数要给配置文件中配置的agent名称\r\n\r\n== 模块开发——数据预处理\r\n. 主要目的：\r\n+\r\n----\r\n过滤“不合规”数据\r\n格式转换和规整\r\n根据后续的统计需求，过滤分离出各种不同主题(不同栏目path)的基础数据\r\n----\r\n\r\n. 实现方式：\r\n开发一个mr程序WeblogPreProcess(内容太长，见工程代码)\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/hadoop/pom",
        "content": "\r\n\r\n    4.0.0\r\n\r\n    hadoop.mapreduce\r\n    mapreduce\r\n    0.0.1-SNAPSHOT\r\n    \r\n        2.7.2\r\n    \r\n    \r\n        \r\n        \r\n            org.apache.hadoop\r\n            hadoop-common\r\n            ${hadoop.version}\r\n        \r\n        \r\n            org.apache.hadoop\r\n            hadoop-mapreduce-client-jobclient\r\n            ${hadoop.version}\r\n        \r\n        \r\n            org.apache.hadoop\r\n            hadoop-mapreduce-client-common\r\n            ${hadoop.version}\r\n        \r\n        \r\n            org.apache.hadoop\r\n            hadoop-hdfs\r\n            ${hadoop.version}\r\n        \r\n        \r\n            org.apache.hadoop\r\n            hadoop-mapreduce-client-core\r\n            ${hadoop.version}\r\n        \r\n    \r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/scala/scala-Actor编程",
        "title": "Scala Actor编程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Scala Actor编程\r\n\r\n== Scala Actor编程\r\n\r\n=== 什么是Scala Actor\r\n\r\n==== 概念\r\nScala中的Actor能够实现并行编程的强大功能，它是基于事件模型的并发机制，Scala是运用消息（message）的发送、接收来实现多线程的。使用Scala能够更容易地实现多线程应用的开发。\r\n\r\n==== 传统java并发编程与Scala Actor编程的区别\r\n\r\nimage::{img}/img/scala/2017-04-05_095545.png[]\r\n---\r\n对于Java，我们都知道它的多线程实现需要对共享资源（变量、对象等）使用synchronized 关键字进行代码块同步、对象锁互斥等等。而且，常常一大块的try…catch语句块中加上wait方法、notify方法、notifyAll方法是让人很头疼的。原因就在于Java中多数使用的是可变状态的对象资源，对这些资源进行共享来实现多线程编程的话，控制好资源竞争与防止对象状态被意外修改是非常重要的，而对象状态的不变性也是较难以保证的。 而在Scala中，我们可以通过复制不可变状态的资源（即对象，Scala中一切都是对象，连函数、方法也是）的一个副本，再基于Actor的消息发送、接收机制进行并行编程\r\n\r\n==== Actor方法执行顺序\r\n\r\n. 首先调用start()方法启动Actor\r\n. 调用start()方法后其act()方法会被执行\r\n. 向Actor发送消息\r\n\r\n==== 发送消息的方式\r\n\r\n!\r\n发送异步消息，没有返回值。\r\n!?\r\n发送同步消息，等待返回值。\r\n!!\r\n发送异步消息，返回值是 Future[Any]。\r\n\r\n=== Actor实战\r\n\r\n==== 第一个例子\r\n\r\n```\r\nobject MyActor1 extends Actor{\r\n  //重新act方法\r\n  def act(){\r\n    for(i  {\r\n          println(\"stopping ...\")\r\n          Thread.sleep(5000)\r\n          println(\"stopped ...\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nobject MyActor {\r\n  def main(args: Array[String]) {\r\n    val actor = new MyActor\r\n    actor.start()\r\n    actor ! \"start\"\r\n    actor ! \"stop\"\r\n    println(\"消息发送完成！\")\r\n  }\r\n}\r\n```\r\n\r\n说明：在act()方法中加入了while (true) 循环，就可以不停的接收消息\r\n注意：发送start消息和stop的消息是异步的，但是Actor接收到消息执行的过程是同步的按顺序执行\r\n\r\n==== 第三个例子（react方式会复用线程，比receive更高效）\r\n\r\n```\r\nclass YourActor extends Actor {\r\n\r\n  override def act(): Unit = {\r\n    loop {\r\n      react {\r\n        case \"start\"=> {\r\n          println(\"starting ...\")\r\n          Thread.sleep(5000)\r\n          println(\"started\")\r\n        }\r\n        case \"stop\"=> {\r\n          println(\"stopping ...\")\r\n          Thread.sleep(8000)\r\n          println(\"stopped ...\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nobject YourActor {\r\n  def main(args: Array[String]) {\r\n    val actor = new YourActor\r\n    actor.start()\r\n    actor ! \"start\"\r\n    actor ! \"stop\"\r\n    println(\"消息发送完成！\")\r\n  }\r\n}\r\n```\r\n\r\n\r\n说明：?react 如果要反复执行消息处理，react外层要用loop，不能用while\r\n\r\n==== 第四个例子（结合case class发送消息）\r\n\r\n```\r\nclass AppleActor extends Actor {\r\n\r\n  def act(): Unit = {\r\n    while (true) {\r\n      receive {\r\n        case \"start\"=>println(\"starting ...\")\r\n        case SyncMsg(id, msg) => {\r\n          println(id + \",sync \"+ msg)\r\n          Thread.sleep(5000)\r\n          sender ! ReplyMsg(3,\"finished\")\r\n        }\r\n        case AsyncMsg(id, msg) => {\r\n          println(id + \",async \"+ msg)\r\n          Thread.sleep(5000)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nobject AppleActor {\r\n  def main(args: Array[String]) {\r\n    val a = new AppleActor\r\n    a.start()\r\n    //异步消息\r\n    a ! AsyncMsg(1, \"hello actor\")\r\n    println(\"异步消息发送完成\")\r\n    //同步消息\r\n    //val content = a.!?(1000, SyncMsg(2, \"hello actor\"))\r\n    //println(content)\r\n    val reply = a !! SyncMsg(2, \"hello actor\")\r\n    println(reply.isSet)\r\n    //println(\"123\")\r\n    val c = reply.apply()\r\n    println(reply.isSet)\r\n    println(c)\r\n  }\r\n}\r\ncase class SyncMsg(id : Int, msg: String)\r\ncase class AsyncMsg(id : Int, msg: String)\r\ncase class ReplyMsg(id : Int, msg: String)\r\n```\r\n\r\n\r\n=== 练习\r\n\r\n用actor并发编程写一个单机版的WorldCount，将多个文件作为输入，计算完成后将多个任务汇总，得到最终的结果\r\n```\r\nclass Task extends Actor {\r\n\r\n  override def act(): Unit = {\r\n    loop {\r\n      react {\r\n        case SubmitTask(fileName) => {\r\n          val contents = Source.fromFile(new File(fileName)).mkString\r\n          val arr = contents.split(\"\\r\\n\")\r\n          val result = arr.flatMap(_.split(\"\")).map((_, 1)).groupBy(_._1).mapValues(_.length)\r\n          //val result = arr.flatMap(_.split(\"\")).map((_, 1)).groupBy(_._1).mapValues(_.foldLeft(0)(_ + _._2))\r\n          sender ! ResultTask(result)\r\n        }\r\n        case StopTask => {\r\n          exit()\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```\r\nobject WorkCount {\r\n  def main(args: Array[String]) {\r\n    val files = Array(\"c://words.txt\", \"c://words.log\")\r\n\r\n    val replaySet = new mutable.HashSet[Future[Any]]\r\n    val resultList = new mutable.ListBuffer[ResultTask]\r\n\r\n    for(f 0){\r\n      val toCumpute = replaySet.filter(_.isSet)\r\n      for(r  x.foldLeft(0)(_ + _._2))\r\n    println(finalResult)\r\n  }\r\n}\r\n\r\ncase class SubmitTask(fileName: String)\r\ncase object StopTask\r\ncase class ResultTask(result: Map[String, Int])\r\n```\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/scala/scala基础",
        "title": "scala基础",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: scala基础\r\n\r\n== Scala基础\r\n\r\n=== 声明变量\r\n```\r\nobject VariableDemo {\r\n  def main(args: Array[String]) {\r\n    //使用val定义的变量值是不可变的，相当于java里用final修饰的变量\r\n    val i = 1\r\n    //使用var定义的变量是可变得，在Scala中鼓励使用val\r\n    var s = \"hello\"\r\n    //Scala编译器会自动推断变量的类型，必要的时候可以指定类型\r\n    //变量名在前，类型在后\r\n    val str: String = \"itcast\"\r\n  }\r\n}\r\n```\r\n\r\n\r\n=== 常用类型\r\n*Scala* 和 *Java* 一样，有7种数值类型 *Byte* 、 *Char* 、 *Short* 、 *Int* 、 *Long* 、 *Float* 和 *Double* （无包装类型）和一个 *Boolean* 类型\r\n\r\n=== 条件表达式\r\nScala的的条件表达式比较简洁，例如：\r\n```\r\nobject ConditionDemo {\r\n  def main(args: Array[String]) {\r\n    val x = 1\r\n    //判断x的值，将结果赋给y\r\n    val y = if (x > 0) 1 else -1\r\n    //打印y的值\r\n    println(y)\r\n\r\n    //支持混合类型表达式\r\n    val z = if (x > 1) 1 else \"error\"\r\n    //打印z的值\r\n    println(z)\r\n\r\n    //如果缺失else，相当于if (x > 2) 1 else ()\r\n    val m = if (x > 2) 1\r\n    println(m)\r\n\r\n    //在scala中每个表达式都有值，scala中有个Unit类，写做(),相当于Java中的void\r\n    val n = if (x > 2) 1 else ()\r\n    println(n)\r\n\r\n    //if和else if\r\n    val k = if (x < 0) 0\r\n    else if (x >= 1) 1 else -1\r\n    println(k)\r\n  }\r\n}\r\n```\r\n\r\n=== 块表达式\r\n```\r\nobject BlockExpressionDemo {\r\n  def main(args: Array[String]) {\r\n    val x = 0\r\n    //在scala中{}中课包含一系列表达式，块中最后一个表达式的值就是块的值\r\n    //下面就是一个块表达式\r\n    val result = {\r\n      if (x < 0){\r\n        -1\r\n      } else if(x >= 1) {\r\n        1\r\n      } else {\r\n        \"error\"\r\n      }\r\n    }\r\n    //result的值就是块表达式的结果\r\n    println(result)\r\n  }\r\n}\r\n```\r\n\r\n=== 循环\r\n> 在scala中有for循环和while循环，用for循环比较多\r\nfor循环语法结构：for (i  0){\r\n    sessions += new Session\r\n    counts -= 1\r\n  }\r\n\r\n  //在object中的方法相当于java中的静态方法\r\n  def getSession(): Session ={\r\n    sessions.remove(0)\r\n  }\r\n}\r\n```\r\n+\r\n```\r\nclass Session{\r\n\r\n}\r\n```\r\n\r\n==== 伴生对象\r\n> 在Scala的类中，与类名相同的对象叫做伴生对象，类和伴生对象之间可以相互访问私有的方法和属性\r\n\r\n```\r\nclass Dog {\r\n  val id = 1\r\n  private var name = \"itcast\"\r\n\r\n  def printName(): Unit ={\r\n    //在Dog类中可以访问伴生对象Dog的私有属性\r\n    println(Dog.CONSTANT + name )\r\n  }\r\n}\r\n```\r\n```\r\n/**\r\n  * 伴生对象\r\n  */\r\nobject Dog {\r\n\r\n  //伴生对象中的私有属性\r\n  private val CONSTANT = \"汪汪汪 : \"\r\n\r\n  def main(args: Array[String]) {\r\n    val p = new Dog\r\n    //访问私有的字段name\r\n    p.name = \"123\"\r\n    p.printName()\r\n  }\r\n}\r\n```\r\n\r\n==== apply方法\r\n> 通常我们会在类的伴生对象中定义apply方法，当遇到类名(参数1,...参数n)时apply方法会被调用\r\n\r\n```\r\nobject ApplyDemo {\r\n  def main(args: Array[String]) {\r\n    //调用了Array伴生对象的apply方法\r\n    //def apply(x: Int, xs: Int*): Array[Int]\r\n    //arr1中只有一个元素5\r\n    val arr1 = Array(5)\r\n    println(arr1.toBuffer)\r\n\r\n    //new了一个长度为5的array，数组里面包含5个null\r\n    var arr2 = new Array(5)\r\n  }\r\n}\r\n```\r\n\r\n\r\n==== 应用程序对象\r\n> Scala程序都必须从一个对象的main方法开始，可以通过扩展App特质，不写main方法。\r\n\r\n```\r\nobject AppObjectDemo extends App{\r\n  //不用写main方法\r\n  println(\"I love you Scala\")\r\n}\r\n```\r\n\r\n=== 继承\r\n\r\n==== 扩展类\r\n在Scala中扩展类的方式和Java一样都是使用extends关键字\r\n\r\n==== 重写方法\r\n在Scala中重写一个非抽象的方法必须使用override修饰符\r\n\r\n==== 类型检查和转换\r\n----\r\nScala\r\nJava\r\nobj.isInstanceOf[C]\r\nobj instanceof C\r\nobj.asInstanceOf[C]\r\n(C)obj\r\nclassOf[C]\r\nC.class\r\n----\r\n\r\n==== 超类的构造\r\n\r\n```\r\nobject ClazzDemo {\r\n  def main(args: Array[String]) {\r\n    //val h = new Human\r\n    //println(h.fight)\r\n  }\r\n}\r\n```\r\n\r\n```\r\ntrait Flyable{\r\n  def fly(): Unit ={\r\n    println(\"I can fly\")\r\n  }\r\n\r\n  def fight(): String\r\n}\r\n```\r\n\r\n```\r\nabstract class Animal {\r\n  def run(): Int\r\n  val name: String\r\n}\r\n```\r\n\r\n```\r\nclass Human extends Animal with Flyable{\r\n\r\n  val name = \"abc\"\r\n\r\n  //打印几次\"ABC\"?\r\n  val t1,t2,(a, b, c) = {\r\n    println(\"ABC\")\r\n    (1,2,3)\r\n  }\r\n\r\n  println(a)\r\n  println(t1._1)\r\n\r\n  //在Scala中重写一个非抽象方法必须用override修饰\r\n  override def fight(): String = {\r\n    \"fight with 棒子\"\r\n  }\r\n  //在子类中重写超类的抽象方法时，不需要使用override关键字，写了也可以\r\n  def run(): Int = {\r\n    1\r\n  }\r\n}\r\n```\r\n\r\n\r\n== 模式匹配和样例类\r\nScala有一个十分强大的模式匹配机制，可以应用到很多场合：如switch语句、类型检查等。\r\n并且Scala还提供了样例类，对模式匹配进行了优化，可以快速进行匹配\r\n\r\n=== 匹配字符串\r\n```\r\nimport scala.util.Random\r\n\r\nobject CaseDemo01 extends App{\r\n  val arr = Array(\"YoshizawaAkiho\", \"YuiHatano\", \"AoiSola\")\r\n  val name = arr(Random.nextInt(arr.length))\r\n  name match {\r\n    case \"YoshizawaAkiho\" => println(\"吉泽老师...\")\r\n    case \"YuiHatano\" => println(\"波多老师...\")\r\n    case _ => println(\"真不知道你们在说什么...\")\r\n  }\r\n}\r\n```\r\n\r\n\r\n=== 匹配类型\r\n```\r\nimport scala.util.Random\r\n\r\nobject CaseDemo01 extends App{\r\n  //val v = if(x >= 5) 1 else if(x < 2) 2.0 else \"hello\"\r\n  val arr = Array(\"hello\", 1, 2.0, CaseDemo)\r\n  val v = arr(Random.nextInt(4))\r\n  println(v)\r\n  v match {\r\n    case x: Int => println(\"Int \" + x)\r\n    case y: Double if(y >= 0) => println(\"Double \"+ y)\r\n    case z: String => println(\"String \" + z)\r\n    case _ => throw new Exception(\"not match exception\")\r\n  }\r\n}\r\n```\r\n\r\n注意：case y: Double if(y >= 0) => ...\r\n模式匹配的时候还可以添加守卫条件。如不符合守卫条件，将掉入case _中\r\n\r\n=== 匹配数组、元组\r\n\r\n```\r\nobject CaseDemo03 extends App{\r\n\r\n  val arr = Array(1, 3, 5)\r\n  arr match {\r\n    case Array(1, x, y) => println(x + \" \" + y)\r\n    case Array(0) => println(\"only 0\")\r\n    case Array(0, _*) => println(\"0 ...\")\r\n    case _ => println(\"something else\")\r\n  }\r\n\r\n  val lst = List(3, -1)\r\n  lst match {\r\n    case 0 :: Nil => println(\"only 0\")\r\n    case x :: y :: Nil => println(s\"x: $x y: $y\")\r\n    case 0 :: tail => println(\"0 ...\")\r\n    case _ => println(\"something else\")\r\n  }\r\n\r\n  val tup = (2, 3, 7)\r\n  tup match {\r\n    case (1, x, y) => println(s\"1, $x , $y\")\r\n    case (_, z, 5) => println(z)\r\n    case  _ => println(\"else\")\r\n  }\r\n}\r\n```\r\n\r\n--\r\n\r\n[IMPORTANT]\r\n在Scala中列表要么为空（Nil表示空列表）要么是一个head元素加上一个tail列表。 +\r\n9 :: List(5, 2)  :: 操作符是将给定的头和尾创建一个新的列表 +\r\n:: 操作符是右结合的，如9 :: 5 :: 2 :: Nil相当于 9 :: (5 :: (2 :: Nil))\r\n--\r\n=== 样例类\r\n> 在Scala中样例类是一中特殊的类，可用于模式匹配。case class是多例的，后面要跟构造参数，case object是单例的\r\n\r\n```\r\nimport scala.util.Random\r\n\r\ncase class SubmitTask(id: String, name: String)\r\ncase class HeartBeat(time: Long)\r\ncase object CheckTimeOutTask\r\n\r\nobject CaseDemo04 extends App{\r\n  val arr = Array(CheckTimeOutTask, HeartBeat(12333), SubmitTask(\"0001\", \"task-0001\"))\r\n\r\n  arr(Random.nextInt(arr.length)) match {\r\n    case SubmitTask(id, name) => {\r\n      println(s\"$id, $name\")//前面需要加上s, $id直接取id的值\r\n    }\r\n    case HeartBeat(time) => {\r\n      println(time)\r\n    }\r\n    case CheckTimeOutTask => {\r\n      println(\"check\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n=== Option类型\r\n> 在Scala中Option类型样例类用来表示可能存在或也可能不存在的值(Option的子类有Some和None)。Some包装了某个值，None表示没有值\r\n\r\n```\r\nobject OptionDemo {\r\n  def main(args: Array[String]) {\r\n    val map = Map(\"a\" -> 1, \"b\" -> 2)\r\n    val v = map.get(\"b\") match {\r\n      case Some(i) => i\r\n      case None => 0\r\n    }\r\n    println(v)\r\n    //更好的方式\r\n    val v1 = map.getOrElse(\"c\", 0)\r\n    println(v1)\r\n  }\r\n}\r\n```\r\n\r\n=== 偏函数\r\n> 被包在花括号内没有match的一组case语句是一个偏函数，它是PartialFunction[A, B]的一个实例，A代表参数类型，B代表返回类型，常用作输入模式匹配\r\n\r\n```\r\nobject PartialFuncDemo  {\r\n\r\n  def func1: PartialFunction[String, Int] = {\r\n    case \"one\" => 1\r\n    case \"two\" => 2\r\n    case _ => -1\r\n  }\r\n\r\n  def func2(num: String) : Int = num match {\r\n    case \"one\" => 1\r\n    case \"two\" => 2\r\n    case _ => -1\r\n  }\r\n\r\n  def main(args: Array[String]) {\r\n    println(func1(\"one\"))\r\n    println(func2(\"one\"))\r\n  }\r\n}\r\n```\r\n\r\n== 单机版 wordcount\r\n\r\n[source]\r\n----\r\nval lines = List(\"hello tom hello jerry\",\"hello tom kitty hello hello\")\r\n\r\nlines.flatMap(_.split(\" \")) \r\n    .map((_,1)) \r\n    .groupBy(_._1) \r\n    .map(t => (t._1,t._2.size)) \r\n    .toList.sortBy(_._2) \r\n----\r\n `res2: List[String] = List(hello, tom, hello, jerry, hello, tom, kitty, hello, hello)`\r\n `res4: List[(String, Int)] = List((hello,1), (tom,1), (hello,1), (jerry,1), (hello,1), (tom,1), (kitty,1), (hello,1), (hello,1))`\r\n `res5: scala.collection.immutable.Map[String,List[(String, Int)]] = Map(tom -> List((tom,1), (tom,1)), kitty -> List((kitty,1)), jerry -> List((jerry,1)), hello -> List((hello,1), (hello,1), (hello,1), (hello,1), (hello,1)))`\r\n `res6: scala.collection.immutable.Map[String,Int] = Map(tom -> 2, kitty -> 1, jerry -> 1, hello -> 5)`\r\n `res7: List[(String, Int)] = List((kitty,1), (jerry,1), (tom,2), (hello,5))`\r\n\r\n```\r\n lines.flatMap(_.split(\" \")).map((_,1)).groupBy(_._1).mapValues(_.foldLeft(0)(_+_._2))\r\n```\r\n\r\n\r\n== 参考\r\n\r\n. http://hongjiang.info/scala/[]\r\n. http://www.scalatest.org/quick_start[Scala单元测试]\r\n. http://guozhongxin.com/pages/2014/10/15/spark_source_code.html\r\n\r\n== SBT+IDEA搭建阅读Spark源码\r\n=== 配置SBT\r\n. 下载+\r\nhttp://www.scala-sbt.org/download.html[sbt-0.13.15]\r\n. windows下配置环境变量\r\n\r\n. 阿里云仓库配置文件\r\n+\r\n```\r\n$ ~/.sbt/repositories\r\n[repositories]\r\n  public: http://maven.aliyun.com/nexus/content/groups/public/\r\n  typesafe:http://dl.bintray.com/typesafe/ivy-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext], bootOnly\r\n  ivy-sbt-plugin:http://dl.bintray.com/sbt/sbt-plugin-releases/, [organization]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[revision]/[type]s/[artifact](-[classifier]).[ext]\r\n  sonatype-oss-releases\r\n\r\n  sonatype-oss-snapshots\r\n```\r\n\r\n. 指定仓库\r\n+\r\n```\r\nsbt -Dsbt.override.build.repos=true -Dsbt.repository.config=C:\\Users\\dishui\\.sbt\\repositories\r\n```\r\n\r\n=== IDEA\r\n\r\n\r\nimage::{img}/img/spark/2017-05-04_112358.png[]\r\n---\r\n\r\nimage::{img}/img/spark/2017-05-04_112513.png[]\r\n---\r\n\r\n```\r\n-XX:MaxPermSize=384M\r\n-Dsbt.override.build.repos=true\r\n-Dsbt.repository.config=C:\\Users\\dishui\\.sbt\\repositories\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/scala/scala实战",
        "title": "Scala实战",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Scala实战\r\n\r\n== Scala实战\r\n\r\n== 项目概述\r\n\r\n=== 需求\r\n\r\n----\r\n目前大多数的分布式架构底层通信都是通过RPC实现的，RPC框架非常多，比如前我们学过的Hadoop项目的RPC通信框架，但是Hadoop在设计之初就是为了运行长达数小时的批量而设计的，在某些极端的情况下，任务提交的延迟很高，所有Hadoop的RPC显得有些笨重。\r\n\r\nSpark 的RPC是通过Akka类库实现的，Akka用Scala语言开发，基于Actor并发模型实现，Akka具有高可靠、高性能、可扩展等特点，使用Akka可以轻松实现分布式RPC功能。\r\n----\r\n\r\n=== Akka简介\r\n\r\n> Akka基于Actor模型，提供了一个用于构建可扩展的（Scalable）、弹性的（Resilient）、快速响应的（Responsive）应用程序的平台。\r\n\r\nActor模型::\r\n在计算机科学领域，Actor模型是一个并行计算（Concurrent Computation）模型，它把actor作为并行计算的基本元素来对待：为响应一个接收到的消息，一个actor能够自己做出一些决策，如创建更多的actor，或发送更多的消息，或者确定如何去响应接收到的下一个消息。\r\n+\r\nimage::{img}/img/scala/2017-04-07_151513.png[]\r\n\r\nActor::\r\n是Akka中最核心的概念，它是一个封装了状态和行为的对象，Actor之间可以通过交换消息的方式进行通信，每个Actor都有自己的收件箱（Mailbox）。通过Actor能够简化锁及线程管理，可以非常容易地开发出正确地并发程序和并行系统，Actor具有如下特性：\r\n\r\n. 提供了一种高级抽象，能够简化在并发（Concurrency）/并行（Parallelism）应用场景下的编程开发\r\n. 提供了异步非阻塞的、高性能的事件驱动编程模型\r\n. 超级轻量级事件处理（每GB堆内存几百万Actor）\r\n\r\n== 项目实现\r\n\r\n=== 架构图\r\n\r\nimage::{img}/img/scala/2017-04-07_151523.png[]\r\n---\r\n=== 重要类介绍\r\n\r\n==== ActorSystem\r\n在 *Akka* 中， *ActorSystem* 是一个重量级的结构，他需要分配多个线程，所以在实际应用中， *ActorSystem* 通常是一个单例对象，我们可以使用这个 *ActorSystem* 创建很多 *Actor* 。\r\n\r\n==== Actor\r\n在Akka中，Actor负责通信，在Actor中有一些重要的生命周期方法。\r\n\r\n.  *preStart()* 方法：该方法在 *Actor* 对象构造方法执行后执行，整个 *Actor* 生命周期中仅执行一次。\r\n.  *receive()* 方法：该方法在 *Actor* 的 *preStart* 方法执行完成后执行，用于接收消息，会被反复执行。\r\n\r\n=== Master类\r\n\r\n```\r\nimport scala.concurrent.duration._\r\nimport akka.actor.{Props, ActorSystem, Actor}\r\nimport akka.actor.Actor.Receive\r\nimport com.typesafe.config.ConfigFactory\r\n\r\nimport scala.collection.mutable\r\n\r\n/**\r\n  * Master为整个集群中的主节点\r\n  * Master继承了Actor\r\n  */\r\nclass Master extends Actor{\r\n\r\n  //保存WorkerID和Work信息的map\r\n  val idToWorker = new mutable.HashMap[String, WorkerInfo]\r\n  //保存所有Worker信息的Set\r\n  val workers = new mutable.HashSet[WorkerInfo]\r\n  //Worker超时时间\r\n  val WORKER_TIMEOUT = 10 * 1000\r\n  //重新receive方法\r\n\r\n  //导入隐式转换，用于启动定时器\r\n  import context.dispatcher\r\n\r\n  //构造方法执行完执行一次\r\n  override def preStart(): Unit = {\r\n    //启动定时器，定时执行\r\n    context.system.scheduler.schedule(0 millis, WORKER_TIMEOUT millis, self, CheckOfTimeOutWorker)\r\n  }\r\n\r\n  //该方法会被反复执行，用于接收消息，通过case class模式匹配接收消息\r\n  override def receive: Receive = {\r\n    //Worker向Master发送的注册消息\r\n    case RegisterWorker(id, workerHost, memory, cores) => {\r\n      if(!idToWorker.contains(id)) {\r\n        val worker = new WorkerInfo(id, workerHost, memory, cores)\r\n        workers.add(worker)\r\n        idToWorker(id) = worker\r\n        sender ! RegisteredWorker(\"192.168.10.1\")\r\n      }\r\n    }\r\n\r\n    //Worker向Master发送的心跳消息\r\n    case HeartBeat(workerId) => {\r\n      val workerInfo = idToWorker(workerId)\r\n      workerInfo.lastHeartbeat = System.currentTimeMillis()\r\n    }\r\n\r\n    //Master自己向自己发送的定期检查超时Worker的消息\r\n    case CheckOfTimeOutWorker => {\r\n      val currentTime = System.currentTimeMillis()\r\n      val toRemove = workers.filter(w => currentTime - w.lastHeartbeat >WORKER_TIMEOUT).toArray\r\n      for(worker  {\r\n      import context.dispatcher\r\n      //启动定时任务，向Master发送心跳\r\n      context.system.scheduler.schedule(0 millis, 5000 millis, self, SendHeartBeat)\r\n    }\r\n\r\n    case SendHeartBeat => {\r\n      println(\"worker send heartbeat\")\r\n      master ! HeartBeat(id)\r\n    }\r\n  }\r\n}\r\n\r\nobject Worker {\r\n  def main(args: Array[String]) {\r\n    val clientPort = 2552\r\n    //创建WorkerActorSystem的必要参数\r\n    val configStr =\r\n      s\"\"\"\r\n         |akka.actor.provider = \"akka.remote.RemoteActorRefProvider\"\r\n         |akka.remote.netty.tcp.port = $clientPort\r\n\"\"\".stripMargin\r\n    val config = ConfigFactory.parseString(configStr)\r\n    val actorSystem = ActorSystem(\"WorkerActorSystem\", config)\r\n    //启动Actor，Master会被实例化，生命周期方法会被调用\r\n    actorSystem.actorOf(Props[Worker], \"Worker\")\r\n  }\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/scala/scala高级特性",
        "title": "Scala高级特性",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Scala高级特性\r\n\r\n== 高阶函数\r\n\r\n=== 概念\r\nScala混合了面向对象和函数式的特性，我们通常将可以做为参数传递到方法中的表达式叫做函数。在函数式编程语言中，函数是“头等公民”，高阶函数包含：作为值的函数、匿名函数、闭包、柯里化等等。\r\n\r\n=== 作为值的函数\r\n可以像任何其他数据类型一样被传递和操作的函数，每当你想要给算法传入具体动作时这个特性就会变得非常有用。\r\n\r\nimage::{img}/img/scala/2017-04-07_145546.png[]\r\n\r\n定义函数时格式：val 变量名 =(输入参数类型和个数)=>函数实现和返回值类型和个数\r\n“=”表示将函数赋给一个变量\r\n“=>”左面表示输入参数名称、类型和个数，右边表示函数的实现和返回值类型和参数个数\r\n\r\n=== 匿名函数\r\n在Scala中，你不需要给每一个函数命名，没有将函数赋给变量的函数叫做匿名函数\r\n\r\nimage::{img}/img/scala/2017-04-07_145555.png[]\r\n\r\n由于Scala可以自动推断出参数的类型，所有可以写的跟精简一些\r\n\r\nimage::{img}/img/scala/2017-04-07_145603.png[]\r\n\r\n还记得神奇的下划线吗？这才是终极方式\r\n\r\nimage::{img}/img/scala/2017-04-07_145612.png[]\r\n\r\n\r\n=== 将方法转换成函数\r\n在Scala中，方法和函数是不一样的，最本质的区别是函数可以做为参数传递到方法中\r\n但是方法可以被转换成函数，神奇的下划线又出场了\r\n\r\nimage::{img}/img/scala/2017-04-07_145620.png[]\r\n\r\n\r\n=== 柯里化\r\n柯里化指的是将原来接受两个参数的方法变成新的接受一个参数的方法的过程\r\n\r\nimage::{img}/img/scala/2017-04-07_145627.png[]\r\n\r\n=== 例子\r\n\r\n```\r\nobject FunDemo {\r\n  def main(args: Array[String]) {\r\n    def f2(x: Int) = x * 2\r\n    val f3 = (x: Int) => x * 3\r\n    val f4: (Int) => Int = { x => x * 4 }\r\n    val f4a: (Int) => Int = _ * 4\r\n    val f5 = (_: Int) * 5\r\n    val list = List(1, 2, 3, 4, 5)\r\n    var new_list: List[Int] = null\r\n    //第一种：最直观的方式 (Int) => Int\r\n    //new_list = list.map((x: Int) => x * 3)\r\n\r\n    //第二种：由于map方法知道你会传入一个类型为(Int) => Int的函数，你可以简写\r\n    //new_list = list.map((x) => x * 3)\r\n\r\n    //第三种：对于只有一个参数的函数，你可以省去参数外围的()\r\n    //new_list = list.map(x => x * 3)\r\n\r\n    //第四种：(终极方式)如果参数在=>右侧只出现一次，可以使用_\r\n    new_list = list.map(_ * 3)\r\n\r\n    new_list.foreach(println(_))\r\n\r\n    var a = Array(1,2,3)\r\n    a.map(_* 3)\r\n  }\r\n}\r\n```\r\n\r\n== 隐式转换和隐式参数\r\n\r\n=== 概念\r\n隐式转换和隐式参数是Scala中两个非常强大的功能，利用隐式转换和隐式参数，你可以提供优雅的类库，对类库的使用者隐匿掉那些枯燥乏味的细节。\r\n\r\n=== 作用\r\n隐式的对类的方法进行增强，丰富现有类库的功能\r\n\r\n=== 隐式转换函数\r\n是指那种以implicit关键字声明的带有单个参数的函数\r\n\r\n=== 隐式转换例子\r\n\r\n```\r\n//隐式的增强File类的方法\r\nclass RichFile(val from: File) {\r\n  def read = Source.fromFile(from.getPath).mkString\r\n}\r\n\r\nobject RichFile {\r\n  //隐式转换方法\r\n  implicit def file2RichFile(from: File) = new RichFile(from)\r\n\r\n}\r\n\r\nobject MainApp{\r\n  def main(args: Array[String]): Unit = {\r\n    //导入隐式转换\r\n    import RichFile._\r\n    //import RichFile.file2RichFile\r\n    println(new File(\"c://words.txt\").read)\r\n\r\n  }\r\n}\r\n```\r\n\r\n\r\n```\r\nimport java.awt.GridLayout\r\n\r\nobject ImplicitContext {\r\n\r\n  //implicit def girl2Ordered(g : Girl) = new Ordered[Girl]{\r\n  //  override def compare(that: Girl): Int = if (g.faceValue > that.faceValue) 1 else -1\r\n  //}\r\n\r\n  implicit object OrderingGirl extends Ordering[Girl] {\r\n    override def compare(x: Girl, y: Girl): Int = if (x.faceValue > y.faceValue) 1 else -1\r\n  }\r\n\r\n}\r\n\r\nclass Girl(var name: String, var faceValue: Double) {\r\n  override def toString: String = s\"name : $name, faveValue : $faceValue\"\r\n}\r\n\r\n//class MissRight[T  s) f else s\r\n//}\r\n//class MissRight[T](f: T, s: T){\r\n//  def choose()(implicit ord: T => Ordered[T]) = if (f > s) f else s\r\n//}\r\n\r\nclass MissRight[T: Ordering](val f: T, val s: T) {\r\n  def choose()(implicit ord: Ordering[T]) = if (ord.gt(f, s)) f else s\r\n}\r\n\r\nobject MissRight {\r\n  def main(args: Array[String]) {\r\n    import ImplicitContext.OrderingGirl\r\n    val g1 = new Girl(\"yuihatano\", 99)\r\n    val g2 = new Girl(\"jzmb\", 98)\r\n    val mr = new MissRight(g1, g2)\r\n    val result = mr.choose()\r\n    println(result)\r\n  }\r\n}\r\n```\r\n\r\n==== 隐式转换变量值\r\n\r\nimage::{svg}/scala-implic.svg[]\r\n\r\n==== 隐式转换方法\r\n\r\nimage::{svg}/scala-implic2.svg[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/file-logstash-kafka",
        "content": "version: \"2\"\r\n\r\nservices:\r\n  logstash-file:\r\n    image: dishui.io:5000/logstash:2.4\r\n    container_name: logstash-file\r\n    command: \"-f /flow-kafka.conf\"\r\n    # volumes_from:\r\n    #   - nginx-log\r\n    volumes:\r\n      - ./nginx_logs:/var/nginx_logs/\r\n      - ./conf/flow-kafka.conf:/flow-kafka.conf\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/kafka-logstash-es",
        "content": "version: \"2\"\r\n\r\nservices:\r\n  logstash-file:\r\n    image: dishui.io:5000/logstash:2.4\r\n    container_name: logstash-file\r\n    command: \"-f /flow.conf\"\r\n    volumes:\r\n      - ./game_logs:/var/game_logs/\r\n      - ./conf/flow-file-to-kafka.conf:/flow.conf\r\n    networks:\r\n      - hadoop\r\n  es:\r\n    image: dishui.io:5000/dishuigit/elastic:1.2\r\n    container_name: es\r\n    ports:\r\n      - \"9200:9200\"\r\n    networks:\r\n      - hadoop\r\n  logstash-es:\r\n    image: dishui.io:5000/logstash:2.4\r\n    container_name: logstash-es\r\n    command: \"-f /flow.conf\"\r\n    volumes:\r\n      - ./game_logs:/var/game_logs/\r\n      - ./conf/flow-kafka-to-es.conf:/flow.conf\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/kafka",
        "content": "version: '2'\r\nservices:\r\n  zookeeper:\r\n    image: dishui.io:5000/wurstmeister/zookeeper\r\n    ports:\r\n      - \"2181:2181\"\r\n    networks:\r\n      - hadoop\r\n  kafka:\r\n    image: dishui.io:5000/wurstmeister/kafka\r\n    ports:\r\n      - \"9092\"\r\n    environment:\r\n      KAFKA_ADVERTISED_LISTENERS: \"PLAINTEXT://kafka:9092\"\r\n      KAFKA_BROKER_ID: 1\r\n      KAFKA_CREATE_TOPICS: \"test:1:1\"\r\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n    networks:\r\n      - hadoop\r\n  kafka2:\r\n    image: dishui.io:5000/wurstmeister/kafka\r\n    ports:\r\n      - \"9092\"\r\n    environment:\r\n      KAFKA_ADVERTISED_LISTENERS: \"PLAINTEXT://kafka2:9092\"\r\n      KAFKA_BROKER_ID: 2\r\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true\r\n    # driver: bridge",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/logstash-nginx-log",
        "content": "version: \"2\"\r\n\r\nservices:\r\n  nginx-log:\r\n    image: dishui.io:5000/nginx-log:1.1\r\n    container_name: nginx-log\r\n    ports:\r\n      - \"8080:80\"\r\n    volumes:\r\n      - ./nginx_logs:/var/nginx_logs/\r\n    networks:\r\n      - hadoop\r\n  logstash:\r\n    image: dishui.io:5000/logstash:5\r\n    container_name: logstash\r\n    command: \"-f /flow-kafka.conf\"\r\n    # volumes_from:\r\n    #   - nginx-log\r\n    volumes:\r\n      - ./nginx_logs:/var/nginx_logs/\r\n      - ./conf/flow-kafka.conf:/flow-kafka.conf\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/spark1.5",
        "content": "version: \"2\"\r\n\r\nservices:\r\n  master:\r\n    image: dishui.io:5000/singularities/spark:1.5\r\n    command: start-spark master\r\n    hostname: master\r\n    container_name: spark-master\r\n    ports:\r\n      - \"6066:6066\"\r\n      - \"7070:7070\"\r\n      - \"8080:8080\"\r\n      - \"8081:8081\"\r\n      - \"50070:50070\"\r\n    network_mode: \"bridge\"\r\n  worker:\r\n    image: dishui.io:5000/singularities/spark:1.5\r\n    command: start-spark worker master\r\n    # command: start-spark worker\r\n    container_name: spark-worker\r\n    environment:\r\n      SPARK_WORKER_CORES: 1\r\n      SPARK_WORKER_MEMORY: 1g\r\n    links:\r\n      - master\r\n    network_mode: \"bridge\"\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/compose/spark1.6",
        "content": "version: '2'\r\nservices:\r\n  spark-master:\r\n    image: dishui.io:5000/harisekhon/spark:1.6\r\n    container_name: spark-master\r\n    ports:\r\n      - 8080:8080\r\n      - 8081:8081\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/conf/flow-file-to-kafka",
        "content": "input {\r\n  file {\r\n    path => \"/var/game_logs/*\"\r\n    discover_interval => 5\r\n    start_position => \"beginning\"\r\n  }\r\n}\r\n\r\noutput {\r\n  kafka {\r\n    topic_id => \"gamelogs\"\r\n    codec => plain {\r\n      format => \"%{message}\"\r\n      charset => \"UTF-8\"\r\n    }\r\n    bootstrap_servers => \"kafka:9092,kafka2:9092\"\r\n  }\r\n}",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/conf/flow-kafka-to-es-2.4",
        "content": "input {\r\n\r\n  kafka {\r\n    type => \"gamelogs\"\r\n    auto_offset_reset => \"smallest\"\r\n    codec => \"plain\"\r\n    group_id => \"elas2\"\r\n    topic_id => \"gamelogs\"\r\n    zk_connect => \"zookeeper:2181\"\r\n  }\r\n}\r\n\r\nfilter {\r\n\r\n  if [type] == \"gamelogs\" {\r\n    mutate {\r\n      split => { \"message\" => \" \" }\r\n      add_field => {\r\n        \"event_type\" => \"%{message[3]}\"\r\n        \"current_map\" => \"%{message[4]}\"\r\n        \"current_X\" => \"%{message[5]}\"\r\n        \"current_y\" => \"%{message[6]}\"\r\n        \"user\" => \"%{message[7]}\"\r\n        \"item\" => \"%{message[8]}\"\r\n        \"item_id\" => \"%{message[9]}\"\r\n        \"current_time\" => \"%{message[12]}\"\r\n     }\r\n     remove_field => [ \"message\" ]\r\n   }\r\n  }\r\n}\r\n\r\noutput {\r\n\r\n  if [type] == \"gamelogs\" {\r\n    elasticsearch {\r\n      index => \"gamelogs\"\r\n      codec => plain {\r\n        charset => \"UTF-16BE\"\r\n      }\r\n      hosts => [\"196.168.1.33:9200\"]\r\n    }\r\n  }\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/conf/flow-kafka",
        "content": "input {\r\n  file {\r\n    path => \"/var/nginx_logs/*.log\"\r\n    discover_interval => 5\r\n    start_position => \"beginning\"\r\n  }\r\n}\r\n\r\noutput {\r\n  kafka {\r\n    topic_id => \"tracklog\"\r\n    codec => plain {\r\n      format => \"%{message}\"\r\n      charset => \"UTF-8\"\r\n    }\r\n    bootstrap_servers => \"kafka:9092,kafka2:9092\"\r\n  }\r\n}",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/docker/conf/kafka-es解决ES乱码问题",
        "content": "input {\n  kafka {\n    type => \"accesslogs\"\n    codec => \"plain\"\n    auto_offset_reset => \"smallest\"\n    group_id => \"elas1\"\n    topic_id => \"accesslogs\"\n    zk_connect => \"172.16.0.11:2181,172.16.0.12:2181,172.16.0.13:2181\"\n  }\n\n  kafka {\n    type => \"gamelogs\"\n    auto_offset_reset => \"smallest\"\n    codec => \"plain\"\n    group_id => \"elas2\"\n    topic_id => \"gamelogs\"\n    zk_connect => \"172.16.0.11:2181,172.16.0.12:2181,172.16.0.13:2181\"\n  }\n}\n\nfilter {\n  if [type] == \"accesslogs\" {\n    json {\n      source => \"message\"\n\t  remove_field => [ \"message\" ]\n\t  target => \"access\"\n    }\n  }\n\n  if [type] == \"gamelogs\" {\n    mutate {\n      split => { \"message\" => \"\t\" }\n      add_field => {\n        \"event_type\" => \"%{message[3]}\"\n        \"current_map\" => \"%{message[4]}\"\n        \"current_X\" => \"%{message[5]}\"\n        \"current_y\" => \"%{message[6]}\"\n        \"user\" => \"%{message[7]}\"\n        \"item\" => \"%{message[8]}\"\n        \"item_id\" => \"%{message[9]}\"\n        \"current_time\" => \"%{message[12]}\"\n     }\n     remove_field => [ \"message\" ]\n   }\n  }\n}\n\noutput {\n\n  if [type] == \"accesslogs\" {\n    elasticsearch {\n      index => \"accesslogs\"\n\t  codec => \"json\"\n      hosts => [\"172.16.0.14:9200\", \"172.16.0.15:9200\", \"172.16.0.16:9200\"]\n    } \n  }\n\n  if [type] == \"gamelogs\" {\n    elasticsearch {\n      index => \"gamelogs\"\n      codec => plain {\n        charset => \"UTF-16BE\"\n      }\n      hosts => [\"172.16.0.14:9200\", \"172.16.0.15:9200\", \"172.16.0.16:9200\"]\n    } \n  }\n}\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/nginx-log",
        "title": "采集日志服务 nginx log",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: log\r\n\r\n= 日志采集服务部署\r\n\r\n== Docker 方式\r\n\r\n```\r\ndocker pull registry.cn-hangzhou.aliyuncs.com/dishui/nginx-log:1.0\r\ndocker run -d -p 80:80 registry.cn-hangzhou.aliyuncs.com/dishui/nginx-log:1.0\r\n```\r\n\r\n访问 ::\r\nlink:/tmp/a/[]\r\n\r\n\r\n== 安装\r\n=== 安装依赖\r\n```\r\nyum -y install gcc perl pcre-devel openssl openssl-devel\r\n```\r\n\r\n=== 上传LuaJIT-2.0.4.tar.gz并安装LuaJIT\r\n\r\n```\r\ntar -zxvf LuaJIT-2.0.4.tar.gz -C /usr/local/src/\r\ncd /usr/local/src/LuaJIT-2.0.4/\r\nmake && make install PREFIX=/usr/local/luajit\r\n```\r\n\r\n=== 设置环境变量\r\n```\r\nexport LUAJIT_LIB=/usr/local/luajit/lib\r\nexport LUAJIT_INC=/usr/local/luajit/include/luajit-2.0\r\n```\r\n\r\n=== 创建modules保存nginx的模块\r\n```\r\nmkdir -p /usr/local/nginx/modules\r\n```\r\n\r\n=== 上传openresty-1.9.7.3.tar.gz和依赖的模块lua-nginx-module-0.10.0.tar、ngx_devel_kit-0.2.19.tar、ngx_devel_kit-0.2.19.tar、echo-nginx-module-0.58.tar.gz\r\n\r\n=== 将依赖的模块直接解压到/usr/local/nginx/modules目录即可，不需要编译安装\r\n```\r\ntar -zxvf lua-nginx-module-0.10.0.tar.gz -C /usr/local/nginx/modules/\r\ntar -zxvf set-misc-nginx-module-0.29.tar.gz -C /usr/local/nginx/modules/\r\ntar -zxvf ngx_devel_kit-0.2.19.tar.gz -C /usr/local/nginx/modules/\r\ntar -zxvf echo-nginx-module-0.58.tar.gz -C /usr/local/nginx/modules/\r\n```\r\n　　\r\n=== 解压openresty-1.9.7.3.tar.gz\r\n```\r\ntar -zxvf openresty-1.9.7.3.tar.gz -C /usr/local/src/\r\ncd /usr/local/src/openresty-1.9.7.3/\r\n```\r\n=== 编译安装openresty\r\n```\r\n./configure --prefix=/usr/local/openresty --with-luajit && make && make install\r\n```\r\n\r\n=== 上传nginx\r\n```\r\ntar -zxvf nginx-1.8.1.tar.gz -C /usr/local/src/\r\ncd /usr/local/src/nginx-1.8.1/\r\n```\r\n=== 编译nginx并支持其他模块\r\n```\r\n　　./configure --prefix=/usr/local/nginx \\\r\n　　  --with-ld-opt=\"-Wl,-rpath,/usr/local/luajit/lib\" \\\r\n　　    --add-module=/usr/local/nginx/modules/ngx_devel_kit-0.2.19 \\\r\n　　    --add-module=/usr/local/nginx/modules/lua-nginx-module-0.10.0 \\\r\n　　    --add-module=/usr/local/nginx/modules/set-misc-nginx-module-0.29 \\\r\n　　    --add-module=/usr/local/nginx/modules/echo-nginx-module-0.58\r\n　　make -j2\r\n　　make install\r\n```\r\n\r\n=== 修改nginx配置文件\r\n\r\n```\r\nworker_processes  2;\r\n\r\nevents {\r\n    worker_connections  1024;\r\n}\r\n\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n\r\nlog_format tick \"$msec^A$remote_addr^A$u_domain^A$u_url^A$u_title^A$u_referrer^A$u_sh^A$u_sw^A$u_cd^A$u_lang^A$http_user_agent^A$u_utrace^A$u_account\";\r\n\r\n    access_log  logs/access.log  tick;\r\n\r\n    sendfile        on;\r\n\r\n    keepalive_timeout  65;\r\n\r\n    server {\r\n        listen       80;\r\n        server_name  localhost;\r\n        location /1.gif {\r\n            #伪装成gif文件\r\n            default_type image/gif;\r\n            #本身关闭access_log，通过subrequest记录log\r\n            access_log off;\r\n\r\n            access_by_lua \"\r\n                -- 用户跟踪cookie名为__utrace\r\n                local uid = ngx.var.cookie___utrace\r\n                if not uid then\r\n                    -- 如果没有则生成一个跟踪cookie，算法为md5(时间戳+IP+客户端信息)\r\n                    uid = ngx.md5(ngx.now() .. ngx.var.remote_addr .. ngx.var.http_user_agent)\r\n                end\r\n                ngx.header['Set-Cookie'] = {'__utrace=' .. uid .. '; path=/'}\r\n                if ngx.var.arg_domain then\r\n                -- 通过subrequest到/i-log记录日志，将参数和用户跟踪cookie带过去\r\n                    ngx.location.capture('/i-log?' .. ngx.var.args .. '&utrace=' .. uid)\r\n                end\r\n            \";\r\n\r\n            #此请求不缓存\r\n            add_header Expires \"Fri, 01 Jan 1980 00:00:00 GMT\";\r\n            add_header Pragma \"no-cache\";\r\n            add_header Cache-Control \"no-cache, max-age=0, must-revalidate\";\r\n\r\n            #返回一个1×1的空gif图片\r\n            empty_gif;\r\n        }\r\n\r\n        location /i-log {\r\n            #内部location，不允许外部直接访问\r\n            internal;\r\n\r\n            #设置变量，注意需要unescape\r\n            set_unescape_uri $u_domain $arg_domain;\r\n            set_unescape_uri $u_url $arg_url;\r\n            set_unescape_uri $u_title $arg_title;\r\n            set_unescape_uri $u_referrer $arg_referrer;\r\n            set_unescape_uri $u_sh $arg_sh;\r\n            set_unescape_uri $u_sw $arg_sw;\r\n            set_unescape_uri $u_cd $arg_cd;\r\n            set_unescape_uri $u_lang $arg_lang;\r\n            set_unescape_uri $u_utrace $arg_utrace;\r\n            set_unescape_uri $u_account $arg_account;\r\n\r\n            #打开日志\r\n            log_subrequest on;\r\n            #记录日志到ma.log，实际应用中最好加buffer，格式为tick\r\n            access_log /var/nginx_logs/ma.log tick;\r\n\r\n            #输出空字符串\r\n            echo '';\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n=== 在nginx所在的服务器上添加一个ma.js\r\n\r\n```\r\n(function () {\r\n    var params = {};\r\n    //Document对象数据\r\n    if(document) {\r\n        params.domain = document.domain || '';\r\n        params.url = document.URL || '';\r\n        params.title = document.title || '';\r\n        params.referrer = document.referrer || '';\r\n    }\r\n    //Window对象数据\r\n    if(window && window.screen) {\r\n        params.sh = window.screen.height || 0;\r\n        params.sw = window.screen.width || 0;\r\n        params.cd = window.screen.colorDepth || 0;\r\n    }\r\n    //navigator对象数据\r\n    if(navigator) {\r\n        params.lang = navigator.language || '';\r\n    }\r\n    //解析_maq配置\r\n    // if(_maq) {\r\n    //     for(var i in _maq) {\r\n    //         switch(_maq[i][0]) {\r\n    //             case '_setAccount':\r\n    //                 params.account = _maq[i][1];\r\n    //                 break;\r\n    //             default:\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    // }\r\n    //拼接参数串\r\n    var args = '';\r\n    for(var i in params) {\r\n        if(args != '') {\r\n            args += '&';\r\n        }\r\n        args += i + '=' + encodeURIComponent(params[i]);\r\n    }\r\n\r\n    //通过Image对象请求后端脚本\r\n    var img = new Image(1, 1);\r\n    img.src = 'http://flow.itcast.zx/log.gif?' + args;\r\n})();\r\n```\r\n\r\n=== 在要统计的页面添加js\r\n\r\n```\r\n\r\n    var _maq = _maq || [];\r\n    _maq.push(['_setAccount', 'zx5352']);\r\n\r\n    (function() {\r\n        var ma = document.createElement('script');\r\n        ma.type = 'text/javascript';\r\n        ma.async = true;\r\n        ma.src = 'http://flow.itcast.zx/ma.js';\r\n        var s = document.getElementsByTagName('script')[0];\r\n        s.parentNode.insertBefore(ma, s);\r\n    })();\r\n\r\n```\r\n　　\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-rdd-api",
        "title": "Zhen He spark rdd api",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: spark\r\n\r\n== part1\r\n\r\n=== aggregate\r\n\r\n> The aggregate function allows the user to apply two different reduce functions to the RDD. The first reduce function is applied within each partition to reduce the data within each partition into a single result. The second reduce function is used to combine the different reduced results of all partitions together to arrive at one final result. The ability to have two separate reduce functions for intra partition versus across partition reducing adds a lot of flexibility. For example the first reduce function can be the max function and the second one can be the sum function. The user also specifies an initial value. Here are some important facts.\r\n\r\n[disc]\r\n* The initial value is applied at both levels of reduce. So both at the intra partition reduction and across partition reduction.\r\n* Both reduce functions have to be commutative and associative.\r\n* Do not assume any execution order for either partition computations or combining partitions.\r\n* Why would one want to use two input data types? Let us assume we do an archaeological site survey using a metal detector. While walking through the site we take GPS coordinates of important findings based on the output of the metal detector. Later, we intend to draw an image of a map that highlights these locations using the aggregate function. In this case the zeroValue could be an area map with no highlights. The possibly huge set of input data is stored as GPS coordinates across many partitions. seqOp (first reducer) could convert the GPS coordinates to map coordinates and put a marker on the map at the respective position. combOp (second reducer) will receive these highlights as partial maps and combine them into a single final output map.\r\n\r\n--\r\n\r\n*Listing Variants* ::\r\n+\r\n```\r\ndef aggregate[U: ClassTag](zeroValue: U)(seqOp: (U, T) => U, combOp: (U, U) => U): U\r\n```\r\n\r\nExamples 1 ::\r\n+\r\n```\r\nval z = sc.parallelize(List(1,2,3,4,5,6), 2)\r\n\r\n// lets first print out the contents of the RDD with partition labels\r\ndef myfunc(index: Int, iter: Iterator[(Int)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\n\r\nz.mapPartitionsWithIndex(myfunc).collect\r\nres28: Array[String] = Array([partID:0, val: 1], [partID:0, val: 2], [partID:0, val: 3], [partID:1, val: 4], [partID:1, val: 5], [partID:1, val: 6])\r\n\r\nz.aggregate(0)(math.max(_, _), _ + _)\r\nres40: Int = 9\r\n\r\n// This example returns 16 since the initial value is 5\r\n// reduce of partition 0 will be max(5, 1, 2, 3) = 5\r\n// reduce of partition 1 will be max(5, 4, 5, 6) = 6\r\n// final reduce across partitions will be 5 + 5 + 6 = 16\r\n// note the final reduce include the initial value\r\nz.aggregate(5)(math.max(_, _), _ + _)\r\nres29: Int = 16\r\n\r\n\r\nval z = sc.parallelize(List(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"),2)\r\n\r\n//lets first print out the contents of the RDD with partition labels\r\ndef myfunc(index: Int, iter: Iterator[(String)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\n\r\nz.mapPartitionsWithIndex(myfunc).collect\r\nres31: Array[String] = Array([partID:0, val: a], [partID:0, val: b], [partID:0, val: c], [partID:1, val: d], [partID:1, val: e], [partID:1, val: f])\r\n\r\nz.aggregate(\"\")(_ + _, _+_)\r\nres115: String = abcdef\r\n\r\n// See here how the initial value \"x\" is applied three times.\r\n//  - once for each partition\r\n//  - once when combining all the partitions in the second reduce function.\r\nz.aggregate(\"x\")(_ + _, _+_)\r\nres116: String = xxdefxabc\r\n\r\n// Below are some more advanced examples. Some are quite tricky to work out.\r\n\r\nval z = sc.parallelize(List(\"12\",\"23\",\"345\",\"4567\"),2)\r\nz.aggregate(\"\")((x,y) => math.max(x.length, y.length).toString, (x,y) => x + y)\r\nres141: String = 42\r\n\r\nz.aggregate(\"\")((x,y) => math.min(x.length, y.length).toString, (x,y) => x + y)\r\nres142: String = 11\r\n\r\nval z = sc.parallelize(List(\"12\",\"23\",\"345\",\"\"),2)\r\nz.aggregate(\"\")((x,y) => math.min(x.length, y.length).toString, (x,y) => x + y)\r\nres143: String = 10\r\n```\r\n----\r\nThe main issue with the code above is that the result of the inner min is a string of length 1.\r\nThe zero in the output is due to the empty string being the last string in the list. We see this result because we are not recursively reducing any further within the partition for the final string.\r\n----\r\n\r\n\r\nExamples 2 ::\r\n+\r\n```\r\nval z = sc.parallelize(List(\"12\",\"23\",\"\",\"345\"),2)\r\nz.aggregate(\"\")((x,y) => math.min(x.length, y.length).toString, (x,y) => x + y)\r\nres144: String = 11\r\n```\r\n----\r\nIn contrast to the previous example, this example has the empty string at the beginning of the second partition. This results in length of zero being input to the second reduce which then upgrades it a length of 1. (Warning: The above example shows bad design since the output is dependent on the order of the data inside the partitions.)\r\n----\r\n\r\n--\r\n\r\n=== aggregateByKey [Pair]\r\n\r\n> Works like the aggregate function except the aggregation is applied to the values with the same key. Also unlike the aggregate function the initial value is not applied to the second reduce.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef aggregateByKey[U](zeroValue: U)(seqOp: (U, V) ⇒ U, combOp: (U, U) ⇒ U)(implicit arg0: ClassTag[U]): RDD[(K, U)]\r\ndef aggregateByKey[U](zeroValue: U, numPartitions: Int)(seqOp: (U, V) ⇒ U, combOp: (U, U) ⇒ U)(implicit arg0: ClassTag[U]): RDD[(K, U)]\r\ndef aggregateByKey[U](zeroValue: U, partitioner: Partitioner)(seqOp: (U, V) ⇒ U, combOp: (U, U) ⇒ U)(implicit arg0: ClassTag[U]): RDD[(K, U)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval pairRDD = sc.parallelize(List( (\"cat\",2), (\"cat\", 5), (\"mouse\", 4),(\"cat\", 12), (\"dog\", 12), (\"mouse\", 2)), 2)\r\n\r\n// lets have a look at what is in the partitions\r\ndef myfunc(index: Int, iter: Iterator[(String, Int)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\npairRDD.mapPartitionsWithIndex(myfunc).collect\r\n\r\nres2: Array[String] = Array([partID:0, val: (cat,2)], [partID:0, val: (cat,5)], [partID:0, val: (mouse,4)], [partID:1, val: (cat,12)], [partID:1, val: (dog,12)], [partID:1, val: (mouse,2)])\r\n\r\npairRDD.aggregateByKey(0)(math.max(_, _), _ + _).collect\r\nres3: Array[(String, Int)] = Array((dog,12), (cat,17), (mouse,6))\r\n\r\npairRDD.aggregateByKey(100)(math.max(_, _), _ + _).collect\r\nres4: Array[(String, Int)] = Array((dog,100), (cat,200), (mouse,200))\r\n\r\n```\r\n\r\n\r\n=== cartesian\r\n\r\n> Computes the cartesian product between two RDDs (i.e. Each item of the first RDD is joined with each item of the second RDD) and returns them as a new RDD. (Warning: Be careful when using this function.! Memory consumption can quickly become an issue!)\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef cartesian[U: ClassTag](other: RDD[U]): RDD[(T, U)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval x = sc.parallelize(List(1,2,3,4,5))\r\nval y = sc.parallelize(List(6,7,8,9,10))\r\nx.cartesian(y).collect\r\nres0: Array[(Int, Int)] = Array((1,6), (1,7), (1,8), (1,9), (1,10), (2,6), (2,7), (2,8), (2,9), (2,10), (3,6), (3,7), (3,8), (3,9), (3,10), (4,6), (5,6), (4,7), (5,7), (4,8), (5,8), (4,9), (4,10), (5,9), (5,10))\r\n```\r\n\r\n=== checkpoint\r\n\r\n> Will create a checkpoint when the RDD is computed next. Checkpointed RDDs are stored as a binary file within the checkpoint directory which can be specified using the Spark context. (Warning: Spark applies lazy evaluation. Checkpointing will not occur until an action is invoked.)\r\n\r\nImportant note: the directory  \"my_directory_name\" should exist in all slaves. As an alternative you could use an HDFS directory URL as well.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef checkpoint()\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nsc.setCheckpointDir(\"my_directory_name\")\r\nval a = sc.parallelize(1 to 4)\r\na.checkpoint\r\na.count\r\n14/02/25 18:13:53 INFO SparkContext: Starting job: count at :15\r\n...\r\n14/02/25 18:13:53 INFO MemoryStore: Block broadcast_5 stored as values to memory (estimated size 115.7 KB, free 296.3 MB)\r\n14/02/25 18:13:53 INFO RDDCheckpointData: Done checkpointing RDD 11 to file:/home/cloudera/Documents/spark-0.9.0-incubating-bin-cdh4/bin/my_directory_name/65407913-fdc6-4ec1-82c9-48a1656b95d6/rdd-11, new parent is RDD 12\r\nres23: Long = 4\r\n```\r\n\r\n\r\n\r\n=== coalesce, repartition\r\n\r\n> Coalesces the associated data into a given number of partitions. repartition(numPartitions) is simply an abbreviation for coalesce(numPartitions, shuffle = true).\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef coalesce ( numPartitions : Int , shuffle : Boolean = false ): RDD [T]\r\ndef repartition ( numPartitions : Int ): RDD [T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval y = sc.parallelize(1 to 10, 10)\r\nval z = y.coalesce(2, false)\r\nz.partitions.length\r\nres9: Int = 2\r\n```\r\n\r\n\r\n\r\n=== cogroup [Pair], groupWith [Pair]\r\n\r\n> A very powerful set of functions that allow grouping up to 3 key-value RDDs together using their keys.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef cogroup[W](other: RDD[(K, W)]): RDD[(K, (Iterable[V], Iterable[W]))]\r\ndef cogroup[W](other: RDD[(K, W)], numPartitions: Int): RDD[(K, (Iterable[V], Iterable[W]))]\r\ndef cogroup[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (Iterable[V], Iterable[W]))]\r\ndef cogroup[W1, W2](other1: RDD[(K, W1)], other2: RDD[(K, W2)]): RDD[(K, (Iterable[V], Iterable[W1], Iterable[W2]))]\r\ndef cogroup[W1, W2](other1: RDD[(K, W1)], other2: RDD[(K, W2)], numPartitions: Int): RDD[(K, (Iterable[V], Iterable[W1], Iterable[W2]))]\r\ndef cogroup[W1, W2](other1: RDD[(K, W1)], other2: RDD[(K, W2)], partitioner: Partitioner): RDD[(K, (Iterable[V], Iterable[W1], Iterable[W2]))]\r\ndef groupWith[W](other: RDD[(K, W)]): RDD[(K, (Iterable[V], Iterable[W]))]\r\ndef groupWith[W1, W2](other1: RDD[(K, W1)], other2: RDD[(K, W2)]): RDD[(K, (Iterable[V], IterableW1], Iterable[W2]))]\r\n```\r\n\r\nExamples ::\r\n+\r\n```\r\nval a = sc.parallelize(List(1, 2, 1, 3), 1)\r\nval b = a.map((_, \"b\"))\r\nval c = a.map((_, \"c\"))\r\nb.cogroup(c).collect\r\nres7: Array[(Int, (Iterable[String], Iterable[String]))] = Array(\r\n(2,(ArrayBuffer(b),ArrayBuffer(c))),\r\n(3,(ArrayBuffer(b),ArrayBuffer(c))),\r\n(1,(ArrayBuffer(b, b),ArrayBuffer(c, c)))\r\n)\r\n\r\nval d = a.map((_, \"d\"))\r\nb.cogroup(c, d).collect\r\nres9: Array[(Int, (Iterable[String], Iterable[String], Iterable[String]))] = Array(\r\n(2,(ArrayBuffer(b),ArrayBuffer(c),ArrayBuffer(d))),\r\n(3,(ArrayBuffer(b),ArrayBuffer(c),ArrayBuffer(d))),\r\n(1,(ArrayBuffer(b, b),ArrayBuffer(c, c),ArrayBuffer(d, d)))\r\n)\r\n\r\nval x = sc.parallelize(List((1, \"apple\"), (2, \"banana\"), (3, \"orange\"), (4, \"kiwi\")), 2)\r\nval y = sc.parallelize(List((5, \"computer\"), (1, \"laptop\"), (1, \"desktop\"), (4, \"iPad\")), 2)\r\nx.cogroup(y).collect\r\nres23: Array[(Int, (Iterable[String], Iterable[String]))] = Array(\r\n(4,(ArrayBuffer(kiwi),ArrayBuffer(iPad))),\r\n(2,(ArrayBuffer(banana),ArrayBuffer())),\r\n(3,(ArrayBuffer(orange),ArrayBuffer())),\r\n(1,(ArrayBuffer(apple),ArrayBuffer(laptop, desktop))),\r\n(5,(ArrayBuffer(),ArrayBuffer(computer))))\r\n```\r\n\r\n\r\n\r\n=== collect, toArray\r\n\r\n> Converts the RDD into a Scala array and returns it. If you provide a standard map-function (i.e. f = T -> U) it will be applied before inserting the values into the result array.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef collect(): Array[T]\r\ndef collect[U: ClassTag](f: PartialFunction[T, U]): RDD[U]\r\ndef toArray(): Array[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\", \"Gnu\", \"Rat\"), 2)\r\nc.collect\r\nres29: Array[String] = Array(Gnu, Cat, Rat, Dog, Gnu, Rat)\r\n```\r\n\r\n\r\n\r\n=== collectAsMap [Pair]\r\n\r\n> Similar to collect, but works on key-value RDDs and converts them into Scala maps to preserve their key-value structure.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef collectAsMap(): Map[K, V]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(List(1, 2, 1, 3), 1)\r\nval b = a.zip(a)\r\nb.collectAsMap\r\nres1: scala.collection.Map[Int,Int] = Map(2 -> 2, 1 -> 1, 3 -> 3)\r\n```\r\n\r\n\r\n\r\n=== combineByKey[Pair]\r\n\r\n> Very efficient implementation that combines the values of a RDD consisting of two-component tuples by applying multiple aggregators one after another.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef combineByKey[C](createCombiner: V => C, mergeValue: (C, V) => C, mergeCombiners: (C, C) => C): RDD[(K, C)]\r\ndef combineByKey[C](createCombiner: V => C, mergeValue: (C, V) => C, mergeCombiners: (C, C) => C, numPartitions: Int): RDD[(K, C)]\r\ndef combineByKey[C](createCombiner: V => C, mergeValue: (C, V) => C, mergeCombiners: (C, C) => C, partitioner: Partitioner, mapSideCombine: Boolean = true, serializerClass: String = null): RDD[(K, C)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(List(\"dog\",\"cat\",\"gnu\",\"salmon\",\"rabbit\",\"turkey\",\"wolf\",\"bear\",\"bee\"), 3)\r\nval b = sc.parallelize(List(1,1,2,2,2,1,2,2,2), 3)\r\nval c = b.zip(a)\r\nval d = c.combineByKey(List(_), (x:List[String], y:String) => y :: x, (x:List[String], y:List[String]) => x ::: y)\r\nd.collect\r\nres16: Array[(Int, List[String])] = Array((1,List(cat, dog, turkey)), (2,List(gnu, rabbit, salmon, bee, bear, wolf)))\r\n```\r\n\r\n\r\n\r\n=== compute\r\n\r\n> Executes dependencies and computes the actual representation of the RDD. This function should not be called directly by users.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef compute(split: Partition, context: TaskContext): Iterator[T]\r\n\r\n```\r\n\r\n=== context, sparkContext\r\n> Returns the SparkContext that was used to create the RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef compute(split: Partition, context: TaskContext): Iterator[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\"), 2)\r\nc.context\r\nres8: org.apache.spark.SparkContext = org.apache.spark.SparkContext@58c1c2f1\r\n```\r\n\r\n\r\n\r\n=== count\r\n> Returns the number of items stored within a RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef count(): Long\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\"), 2)\r\nc.count\r\nres2: Long = 4\r\n```\r\n\r\n\r\n\r\n=== countApprox\r\n> Marked as experimental feature! Experimental features are currently not covered by this document!\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef (timeout: Long, confidence: Double = 0.95): PartialResult[BoundedDouble]\r\n```\r\n\r\n\r\n\r\n\r\n=== countApproxDistinct\r\n\r\nComputes the approximate number of distinct values. For large RDDs which are spread across many nodes, this function may execute faster than other counting methods. The parameter relativeSD controls the accuracy of the computation.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countApproxDistinct(relativeSD: Double = 0.05): Long\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(1 to 10000, 20)\r\nval b = a++a++a++a++a\r\nb.countApproxDistinct(0.1)\r\nres14: Long = 8224\r\n\r\nb.countApproxDistinct(0.05)\r\nres15: Long = 9750\r\n\r\nb.countApproxDistinct(0.01)\r\nres16: Long = 9947\r\n\r\nb.countApproxDistinct(0.001)\r\nres0: Long = 10000\r\n```\r\n\r\n\r\n=== countApproxDistinctByKey [Pair]\r\n\r\n> Similar to countApproxDistinct, but computes the approximate number of distinct values for each distinct key. Hence, the RDD must consist of two-component tuples. For large RDDs which are spread across many nodes, this function may execute faster than other counting methods. The parameter relativeSD controls the accuracy of the computation.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countApproxDistinctByKey(relativeSD: Double = 0.05): RDD[(K, Long)]\r\ndef countApproxDistinctByKey(relativeSD: Double, numPartitions: Int): RDD[(K, Long)]\r\ndef countApproxDistinctByKey(relativeSD: Double, partitioner: Partitioner): RDD[(K, Long)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\"), 2)\r\nval b = sc.parallelize(a.takeSample(true, 10000, 0), 20)\r\nval c = sc.parallelize(1 to b.count().toInt, 20)\r\nval d = b.zip(c)\r\nd.countApproxDistinctByKey(0.1).collect\r\nres15: Array[(String, Long)] = Array((Rat,2567), (Cat,3357), (Dog,2414), (Gnu,2494))\r\n\r\nd.countApproxDistinctByKey(0.01).collect\r\nres16: Array[(String, Long)] = Array((Rat,2555), (Cat,2455), (Dog,2425), (Gnu,2513))\r\n\r\nd.countApproxDistinctByKey(0.001).collect\r\nres0: Array[(String, Long)] = Array((Rat,2562), (Cat,2464), (Dog,2451), (Gnu,2521))\r\n```\r\n\r\n== part2\r\n=== countByKey [Pair]\r\n> Very similar to count, but counts the values of a RDD consisting of two-component tuples for each distinct key separately.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countByKey(): Map[K, Long]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List((3, \"Gnu\"), (3, \"Yak\"), (5, \"Mouse\"), (3, \"Dog\")), 2)\r\nc.countByKey\r\nres3: scala.collection.Map[Int,Long] = Map(3 -> 3, 5 -> 1)\r\n```\r\n\r\n=== countByKeyApprox [Pair]\r\n> Marked as experimental feature! Experimental features are currently not covered by this document!\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countByKeyApprox(timeout: Long, confidence: Double = 0.95): PartialResult[Map[K, BoundedDouble]]\r\n```\r\n\r\n=== countByValue\r\n\r\n> Returns a map that contains all unique values of the RDD and their respective occurrence counts. (Warning: This operation will finally aggregate the information in a single reducer.)\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countByValue(): Map[T, Long]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval b = sc.parallelize(List(1,2,3,4,5,6,7,8,2,4,2,1,1,1,1,1))\r\nb.countByValue\r\nres27: scala.collection.Map[Int,Long] = Map(5 -> 1, 8 -> 1, 3 -> 1, 6 -> 1, 1 -> 6, 2 -> 3, 4 -> 2, 7 -> 1)\r\n```\r\n\r\n\r\n\r\n\r\n=== countByValueApprox\r\n> Marked as experimental feature! Experimental features are currently not covered by this document!\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef countByValueApprox(timeout: Long, confidence: Double = 0.95): PartialResult[Map[T, BoundedDouble]]\r\n```\r\n\r\n=== dependencies\r\n\r\n> Returns the RDD on which this RDD depends.\r\n\r\nListing Variants ::\r\n+\r\n```\r\nfinal def dependencies: Seq[Dependency[_]]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval b = sc.parallelize(List(1,2,3,4,5,6,7,8,2,4,2,1,1,1,1,1))\r\nb: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[32] at parallelize at :12\r\nb.dependencies.length\r\nInt = 0\r\n\r\nb.map(a => a).dependencies.length\r\nres40: Int = 1\r\n\r\nb.cartesian(a).dependencies.length\r\nres41: Int = 2\r\n\r\nb.cartesian(a).dependencies\r\nres42: Seq[org.apache.spark.Dependency[_]] = List(org.apache.spark.rdd.CartesianRDD$$anon$1@576ddaaa, org.apache.spark.rdd.CartesianRDD$$anon$2@6d2efbbd)\r\n```\r\n\r\n=== distinct\r\n\r\n> Returns a new RDD that contains each unique value only once.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef distinct(): RDD[T]\r\ndef distinct(numPartitions: Int): RDD[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\", \"Gnu\", \"Rat\"), 2)\r\nc.distinct.collect\r\nres6: Array[String] = Array(Dog, Gnu, Cat, Rat)\r\n\r\nval a = sc.parallelize(List(1,2,3,4,5,6,7,8,9,10))\r\na.distinct(2).partitions.length\r\nres16: Int = 2\r\n\r\na.distinct(3).partitions.length\r\nres17: Int = 3\r\n```\r\n\r\n=== first\r\n\r\n> Looks for the very first data item of the RDD and returns it.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef first(): T\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\"), 2)\r\nc.first\r\nres1: String = Gnu\r\n```\r\n\r\n=== filter\r\n\r\n> Evaluates a boolean function for each data item of the RDD and puts the items for which the function returned true into the resulting RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef filter(f: T => Boolean): RDD[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(1 to 10, 3)\r\nval b = a.filter(_ % 2 == 0)\r\nb.collect\r\nres3: Array[Int] = Array(2, 4, 6, 8, 10)\r\nWhen you provide a filter function, it must be able to handle all data items contained in the RDD. Scala provides so-called partial functions to deal with mixed data-types. (Tip: Partial functions are very useful if you have some data which may be bad and you do not want to handle but for the good data (matching data) you want to apply some kind of map function. The following article is good. It teaches you about partial functions in a very nice way and explains why case has to be used for partial functions:  article)\r\n```\r\n\r\nExamples for mixed data without partial functions  ::\r\n+\r\n```\r\nval b = sc.parallelize(1 to 8)\r\nb.filter(_ < 4).collect\r\nres15: Array[Int] = Array(1, 2, 3)\r\n\r\nval a = sc.parallelize(List(\"cat\", \"horse\", 4.0, 3.5, 2, \"dog\"))\r\na.filter(_ < 4).collect\r\n:15: error: value < is not a member of Any\r\n```\r\nThis fails because some components of a are not implicitly comparable against integers. Collect uses the isDefinedAt property of a function-object to determine whether the test-function is compatible with each data item. Only data items that pass this test (=filter) are then mapped using the function-object.\r\n\r\nExamples for mixed data with partial functions ::\r\n+\r\n```\r\nval a = sc.parallelize(List(\"cat\", \"horse\", 4.0, 3.5, 2, \"dog\"))\r\na.collect({case a: Int    => \"is integer\" |\r\n           case b: String => \"is string\" }).collect\r\nres17: Array[String] = Array(is string, is string, is integer, is string)\r\n\r\nval myfunc: PartialFunction[Any, Any] = {\r\n  case a: Int    => \"is integer\" |\r\n  case b: String => \"is string\" }\r\nmyfunc.isDefinedAt(\"\")\r\nres21: Boolean = true\r\n\r\nmyfunc.isDefinedAt(1)\r\nres22: Boolean = true\r\n\r\nmyfunc.isDefinedAt(1.5)\r\nres23: Boolean = false\r\n```\r\nBe careful! The above code works because it only checks the type itself! If you use operations on this type, you have to explicitly declare what type you want instead of any. Otherwise the compiler does (apparently) not know what bytecode it should produce:\r\n\r\n```\r\nval myfunc2: PartialFunction[Any, Any] = {case x if (x < 4) => \"x\"}\r\n:10: error: value < is not a member of Any\r\n\r\nval myfunc2: PartialFunction[Int, Any] = {case x if (x < 4) => \"x\"}\r\nmyfunc2: PartialFunction[Int,Any] = \r\n```\r\n\r\n\r\n\r\n\r\n=== filterByRange [Ordered]\r\n\r\n> Returns an RDD containing only the items in the key range specified. From our testing, it appears this only works if your data is in key value pairs and it has already been sorted by key.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef filterByRange(lower: K, upper: K): RDD[P]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval randRDD = sc.parallelize(List( (2,\"cat\"), (6, \"mouse\"),(7, \"cup\"), (3, \"book\"), (4, \"tv\"), (1, \"screen\"), (5, \"heater\")), 3)\r\nval sortedRDD = randRDD.sortByKey()\r\n\r\nsortedRDD.filterByRange(1, 3).collect\r\nres66: Array[(Int, String)] = Array((1,screen), (2,cat), (3,book))\r\n```\r\n\r\n=== filterWith  (deprecated)\r\n\r\n> This is an extended version of filter. It takes two function arguments. The first argument must conform to Int -> T and is executed once per partition. It will transform the partition index to type T. The second function looks like (U, T) -> Boolean. T is the transformed partition index and U are the data items from the RDD. Finally the function has to return either true or false (i.e. Apply the filter).\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef filterWith[A: ClassTag](constructA: Int => A)(p: (T, A) => Boolean): RDD[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(1 to 9, 3)\r\nval b = a.filterWith(i => i)((x,i) => x % 2 == 0 || i % 2 == 0)\r\nb.collect\r\nres37: Array[Int] = Array(1, 2, 3, 4, 6, 7, 8, 9)\r\n\r\nval a = sc.parallelize(List(1,2,3,4,5,6,7,8,9,10), 5)\r\na.filterWith(x=> x)((a, b) =>  b == 0).collect\r\nres30: Array[Int] = Array(1, 2)\r\n\r\na.filterWith(x=> x)((a, b) =>  a % (b+1) == 0).collect\r\nres33: Array[Int] = Array(1, 2, 4, 6, 8, 10)\r\n\r\na.filterWith(x=> x.toString)((a, b) =>  b == \"2\").collect\r\nres34: Array[Int] = Array(5, 6)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== flatMap\r\n\r\n> Similar to map, but allows emitting more than one item in the map function.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef flatMap[U: ClassTag](f: T => TraversableOnce[U]): RDD[U]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(1 to 10, 5)\r\na.flatMap(1 to _).collect\r\nres47: Array[Int] = Array(1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\r\n\r\nsc.parallelize(List(1, 2, 3), 2).flatMap(x => List(x, x, x)).collect\r\nres85: Array[Int] = Array(1, 1, 1, 2, 2, 2, 3, 3, 3)\r\n\r\n// The program below generates a random number of copies (up to 10) of the items in the list.\r\nval x  = sc.parallelize(1 to 10, 3)\r\nx.flatMap(List.fill(scala.util.Random.nextInt(10))(_)).collect\r\n\r\nres1: Array[Int] = Array(1, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n=== flatMapValues\r\n\r\nVery similar to mapValues, but collapses the inherent structure of the values during mapping.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef flatMapValues[U](f: V => TraversableOnce[U]): RDD[(K, U)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.flatMapValues(\"x\" + _ + \"x\").collect\r\nres6: Array[(Int, Char)] = Array((3,x), (3,d), (3,o), (3,g), (3,x), (5,x), (5,t), (5,i), (5,g), (5,e), (5,r), (5,x), (4,x), (4,l), (4,i), (4,o), (4,n), (4,x), (3,x), (3,c), (3,a), (3,t), (3,x), (7,x), (7,p), (7,a), (7,n), (7,t), (7,h), (7,e), (7,r), (7,x), (5,x), (5,e), (5,a), (5,g), (5,l), (5,e), (5,x))\r\n\r\n\r\n```\r\n\r\n\r\n=== flatMapWith (deprecated)\r\n\r\nSimilar to flatMap, but allows accessing the partition index or a derivative of the partition index from within the flatMap-function.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef flatMapWith[A: ClassTag, U: ClassTag](constructA: Int => A, preservesPartitioning: Boolean = false)(f: (T, A) => Seq[U]): RDD[U]\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(1,2,3,4,5,6,7,8,9), 3)\r\na.flatMapWith(x => x, true)((x, y) => List(y, x)).collect\r\nres58: Array[Int] = Array(0, 1, 0, 2, 0, 3, 1, 4, 1, 5, 1, 6, 2, 7, 2, 8, 2, 9)\r\n\r\n```\r\n\r\n\r\n=== fold\r\n\r\nAggregates the values of each partition. The aggregation variable within each partition is initialized with zeroValue.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef fold(zeroValue: T)(op: (T, T) => T): T\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(1,2,3), 3)\r\na.fold(0)(_ + _)\r\nres59: Int = 6\r\n```\r\n\r\n\r\n\r\n\r\n=== foldByKey [Pair]\r\n\r\nVery similar to fold, but performs the folding separately for each key of the RDD. This function is only available if the RDD consists of two-component tuples.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef foldByKey(zeroValue: V)(func: (V, V) => V): RDD[(K, V)]\r\ndef foldByKey(zeroValue: V, numPartitions: Int)(func: (V, V) => V): RDD[(K, V)]\r\ndef foldByKey(zeroValue: V, partitioner: Partitioner)(func: (V, V) => V): RDD[(K, V)]\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"cat\", \"owl\", \"gnu\", \"ant\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.foldByKey(\"\")(_ + _).collect\r\nres84: Array[(Int, String)] = Array((3,dogcatowlgnuant)\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.foldByKey(\"\")(_ + _).collect\r\nres85: Array[(Int, String)] = Array((4,lion), (3,dogcat), (7,panther), (5,tigereagle))\r\n\r\n```\r\n\r\n=== foreach\r\n\r\nExecutes an parameterless function for each data item.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef foreach(f: T => Unit)\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval c = sc.parallelize(List(\"cat\", \"dog\", \"tiger\", \"lion\", \"gnu\", \"crocodile\", \"ant\", \"whale\", \"dolphin\", \"spider\"), 3)\r\nc.foreach(x => println(x + \"s are yummy\"))\r\nlions are yummy\r\ngnus are yummy\r\ncrocodiles are yummy\r\nants are yummy\r\nwhales are yummy\r\ndolphins are yummy\r\nspiders are yummy\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== foreachPartition\r\n\r\nExecutes an parameterless function for each partition. Access to the data items contained in the partition is provided via the iterator argument.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef foreachPartition(f: Iterator[T] => Unit)\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval b = sc.parallelize(List(1, 2, 3, 4, 5, 6, 7, 8, 9), 3)\r\nb.foreachPartition(x => println(x.reduce(_ + _)))\r\n6\r\n15\r\n24\r\n\r\n```\r\n\r\n\r\n\r\n\r\n=== foreachWith (Deprecated)\r\n\r\nExecutes an parameterless function for each partition. Access to the data items contained in the partition is provided via the iterator argument.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef foreachWith[A: ClassTag](constructA: Int => A)(f: (T, A) => Unit)\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\na.foreachWith(i => i)((x,i) => if (x % 2 == 1 && i % 2 == 0) println(x) )\r\n1\r\n3\r\n7\r\n9\r\n\r\n```\r\n\r\n\r\n\r\n=== fullOuterJoin [Pair]\r\n\r\nPerforms the full outer join between two paired RDDs.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef fullOuterJoin[W](other: RDD[(K, W)], numPartitions: Int): RDD[(K, (Option[V], Option[W]))]\r\ndef fullOuterJoin[W](other: RDD[(K, W)]): RDD[(K, (Option[V], Option[W]))]\r\ndef fullOuterJoin[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (Option[V], Option[W]))]\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval pairRDD1 = sc.parallelize(List( (\"cat\",2), (\"cat\", 5), (\"book\", 4),(\"cat\", 12)))\r\nval pairRDD2 = sc.parallelize(List( (\"cat\",2), (\"cup\", 5), (\"mouse\", 4),(\"cat\", 12)))\r\npairRDD1.fullOuterJoin(pairRDD2).collect\r\n\r\nres5: Array[(String, (Option[Int], Option[Int]))] = Array((book,(Some(4),None)), (mouse,(None,Some(4))), (cup,(None,Some(5))), (cat,(Some(2),Some(2))), (cat,(Some(2),Some(12))), (cat,(Some(5),Some(2))), (cat,(Some(5),Some(12))), (cat,(Some(12),Some(2))), (cat,(Some(12),Some(12))))\r\n\r\n```\r\n\r\n\r\n\r\n\r\n== part3\r\n=== generator, setGenerator\r\n\r\nAllows setting a string that is attached to the end of the RDD's name when printing the dependency graph.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n@transient var generator\r\ndef setGenerator(_generator: String)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n=== getCheckpointFile\r\n\r\nReturns the path to the checkpoint file or null if RDD has not yet been checkpointed.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef getCheckpointFile: Option[String]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nsc.setCheckpointDir(\"/home/cloudera/Documents\")\r\nval a = sc.parallelize(1 to 500, 5)\r\nval b = a++a++a++a++a\r\nb.getCheckpointFile\r\nres49: Option[String] = None\r\n\r\nb.checkpoint\r\nb.getCheckpointFile\r\nres54: Option[String] = None\r\n\r\nb.collect\r\nb.getCheckpointFile\r\nres57: Option[String] = Some(file:/home/cloudera/Documents/cb978ffb-a346-4820-b3ba-d56580787b20/rdd-40)\r\n```\r\n\r\n\r\n\r\n\r\n=== preferredLocations\r\n\r\nReturns the hosts which are preferred by this RDD. The actual preference of a specific host depends on various assumptions.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\nfinal def preferredLocations(split: Partition): Seq[String]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== getStorageLevel\r\n\r\nRetrieves the currently set storage level of the RDD. This can only be used to assign a new storage level if the RDD does not have a storage level set yet. The example :: below shows the error you will get, when you try to reassign the storage level.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef getStorageLevel\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 100000, 2)\r\na.persist(org.apache.spark.storage.StorageLevel.DISK_ONLY)\r\na.getStorageLevel.description\r\nString = Disk Serialized 1x Replicated\r\n\r\na.cache\r\njava.lang.UnsupportedOperationException: Cannot change storage level of an RDD after it was already assigned a level\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== glom\r\n\r\nAssembles an array that contains all elements of the partition and embeds it in an RDD. Each returned array contains the contents of one partition.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef glom(): RDD[Array[T]]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 100, 3)\r\na.glom.collect\r\nres8: Array[Array[Int]] = Array(Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33), Array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66), Array(67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100))\r\n```\r\n\r\n\r\n\r\n\r\n=== groupBy\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef groupBy[K: ClassTag](f: T => K): RDD[(K, Iterable[T])]\r\ndef groupBy[K: ClassTag](f: T => K, numPartitions: Int): RDD[(K, Iterable[T])]\r\ndef groupBy[K: ClassTag](f: T => K, p: Partitioner): RDD[(K, Iterable[T])]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\na.groupBy(x => { if (x % 2 == 0) \"even\" else \"odd\" }).collect\r\nres42: Array[(String, Seq[Int])] = Array((even,ArrayBuffer(2, 4, 6, 8)), (odd,ArrayBuffer(1, 3, 5, 7, 9)))\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\ndef myfunc(a: Int) : Int =\r\n{\r\n  a % 2\r\n}\r\na.groupBy(myfunc).collect\r\nres3: Array[(Int, Seq[Int])] = Array((0,ArrayBuffer(2, 4, 6, 8)), (1,ArrayBuffer(1, 3, 5, 7, 9)))\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\ndef myfunc(a: Int) : Int =\r\n{\r\n  a % 2\r\n}\r\na.groupBy(x => myfunc(x), 3).collect\r\na.groupBy(myfunc(_), 1).collect\r\nres7: Array[(Int, Seq[Int])] = Array((0,ArrayBuffer(2, 4, 6, 8)), (1,ArrayBuffer(1, 3, 5, 7, 9)))\r\n\r\nimport org.apache.spark.Partitioner\r\nclass MyPartitioner extends Partitioner {\r\ndef numPartitions: Int = 2\r\ndef getPartition(key: Any): Int =\r\n{\r\n    key match\r\n    {\r\n      case null     => 0\r\n      case key: Int => key          % numPartitions\r\n      case _        => key.hashCode % numPartitions\r\n    }\r\n  }\r\n  override def equals(other: Any): Boolean =\r\n  {\r\n    other match\r\n    {\r\n      case h: MyPartitioner => true\r\n      case _                => false\r\n    }\r\n  }\r\n}\r\nval a = sc.parallelize(1 to 9, 3)\r\nval p = new MyPartitioner()\r\nval b = a.groupBy((x:Int) => { x }, p)\r\nval c = b.mapWith(i => i)((a, b) => (b, a))\r\nc.collect\r\nres42: Array[(Int, (Int, Seq[Int]))] = Array((0,(4,ArrayBuffer(4))), (0,(2,ArrayBuffer(2))), (0,(6,ArrayBuffer(6))), (0,(8,ArrayBuffer(8))), (1,(9,ArrayBuffer(9))), (1,(3,ArrayBuffer(3))), (1,(1,ArrayBuffer(1))), (1,(7,ArrayBuffer(7))), (1,(5,ArrayBuffer(5))))\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== groupByKey [Pair]\r\n\r\nVery similar to groupBy, but instead of supplying a function, the key-component of each pair will automatically be presented to the partitioner.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef groupByKey(): RDD[(K, Iterable[V])]\r\ndef groupByKey(numPartitions: Int): RDD[(K, Iterable[V])]\r\ndef groupByKey(partitioner: Partitioner): RDD[(K, Iterable[V])]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"spider\", \"eagle\"), 2)\r\nval b = a.keyBy(_.length)\r\nb.groupByKey.collect\r\nres11: Array[(Int, Seq[String])] = Array((4,ArrayBuffer(lion)), (6,ArrayBuffer(spider)), (3,ArrayBuffer(dog, cat)), (5,ArrayBuffer(tiger, eagle)))\r\n```\r\n\r\n\r\n\r\n\r\n=== histogram [Double]\r\n\r\nThese functions take an RDD of doubles and create a histogram with either even spacing (the number of buckets equals to bucketCount) or arbitrary spacing based on  custom bucket boundaries supplied by the user via an array of double values. The result type of both variants is slightly different, the first function will return a tuple consisting of two arrays. The first array contains the computed bucket boundary values and the second array contains the corresponding count of values (i.e. the histogram). The second variant of the function will just return the histogram as an array of integers.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef histogram(bucketCount: Int): Pair[Array[Double], Array[Long]]\r\ndef histogram(buckets: Array[Double], evenBuckets: Boolean = false): Array[Long]\r\n```\r\n\r\nExample  with even spacing ::\r\n+\r\n```\r\nval a = sc.parallelize(List(1.1, 1.2, 1.3, 2.0, 2.1, 7.4, 7.5, 7.6, 8.8, 9.0), 3)\r\na.histogram(5)\r\nres11: (Array[Double], Array[Long]) = (Array(1.1, 2.68, 4.26, 5.84, 7.42, 9.0),Array(5, 0, 0, 1, 4))\r\n\r\nval a = sc.parallelize(List(9.1, 1.0, 1.2, 2.1, 1.3, 5.0, 2.0, 2.1, 7.4, 7.5, 7.6, 8.8, 10.0, 8.9, 5.5), 3)\r\na.histogram(6)\r\nres18: (Array[Double], Array[Long]) = (Array(1.0, 2.5, 4.0, 5.5, 7.0, 8.5, 10.0),Array(6, 0, 1, 1, 3, 4))\r\n\r\n```\r\nExample with custom spacing ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(1.1, 1.2, 1.3, 2.0, 2.1, 7.4, 7.5, 7.6, 8.8, 9.0), 3)\r\na.histogram(Array(0.0, 3.0, 8.0))\r\nres14: Array[Long] = Array(5, 3)\r\n\r\nval a = sc.parallelize(List(9.1, 1.0, 1.2, 2.1, 1.3, 5.0, 2.0, 2.1, 7.4, 7.5, 7.6, 8.8, 10.0, 8.9, 5.5), 3)\r\na.histogram(Array(0.0, 5.0, 10.0))\r\nres1: Array[Long] = Array(6, 9)\r\n\r\na.histogram(Array(0.0, 5.0, 10.0, 15.0))\r\nres1: Array[Long] = Array(6, 8, 1)\r\n```\r\n\r\n\r\n\r\n\r\n=== id\r\n\r\nRetrieves the ID which has been assigned to the RDD by its device context.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\nval id: Int\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval y = sc.parallelize(1 to 10, 10)\r\ny.id\r\nres16: Int = 19\r\n```\r\n\r\n\r\n\r\n\r\n=== intersection\r\n\r\nReturns the elements in the two RDDs which are the same.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef intersection(other: RDD[T], numPartitions: Int): RDD[T]\r\ndef intersection(other: RDD[T], partitioner: Partitioner)(implicit ord: Ordering[T] = null): RDD[T]\r\ndef intersection(other: RDD[T]): RDD[T]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval x = sc.parallelize(1 to 20)\r\nval y = sc.parallelize(10 to 30)\r\nval z = x.intersection(y)\r\n\r\nz.collect\r\nres74: Array[Int] = Array(16, 12, 20, 13, 17, 14, 18, 10, 19, 15, 11)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== isCheckpointed\r\n\r\nIndicates whether the RDD has been checkpointed. The flag will only raise once the checkpoint has really been created.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef isCheckpointed: Boolean\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nsc.setCheckpointDir(\"/home/cloudera/Documents\")\r\nc.isCheckpointed\r\nres6: Boolean = false\r\n\r\nc.checkpoint\r\nc.isCheckpointed\r\nres8: Boolean = false\r\n\r\nc.collect\r\nc.isCheckpointed\r\nres9: Boolean = true\r\n```\r\n\r\n\r\n\r\n\r\n=== iterator\r\n\r\nReturns a compatible iterator object for a partition of this RDD. This function should never be called directly.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\nfinal def iterator(split: Partition, context: TaskContext): Iterator[T]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== join [Pair]\r\n\r\nPerforms an inner join using two key-value RDDs. Please note that the keys must be generally comparable to make this work.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef join[W](other: RDD[(K, W)]): RDD[(K, (V, W))]\r\ndef join[W](other: RDD[(K, W)], numPartitions: Int): RDD[(K, (V, W))]\r\ndef join[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (V, W))]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval b = a.keyBy(_.length)\r\nval c = sc.parallelize(List(\"dog\",\"cat\",\"gnu\",\"salmon\",\"rabbit\",\"turkey\",\"wolf\",\"bear\",\"bee\"), 3)\r\nval d = c.keyBy(_.length)\r\nb.join(d).collect\r\n\r\nres0: Array[(Int, (String, String))] = Array((6,(salmon,salmon)), (6,(salmon,rabbit)), (6,(salmon,turkey)), (6,(salmon,salmon)), (6,(salmon,rabbit)), (6,(salmon,turkey)), (3,(dog,dog)), (3,(dog,cat)), (3,(dog,gnu)), (3,(dog,bee)), (3,(rat,dog)), (3,(rat,cat)), (3,(rat,gnu)), (3,(rat,bee)))\r\n```\r\n\r\n\r\n\r\n=== keyBy\r\n\r\nConstructs two-component tuples (key-value pairs) by applying a function on each data item. The result of the function becomes the key and the original data item becomes the value of the newly created tuples.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef keyBy[K](f: T => K): RDD[(K, T)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval b = a.keyBy(_.length)\r\nb.collect\r\nres26: Array[(Int, String)] = Array((3,dog), (6,salmon), (6,salmon), (3,rat), (8,elephant))\r\n```\r\n\r\n\r\n\r\n\r\n=== keys [Pair]\r\n\r\nExtracts the keys from all contained tuples and returns them in a new RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef keys: RDD[K]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.keys.collect\r\nres2: Array[Int] = Array(3, 5, 4, 3, 7, 5)\r\n```\r\n\r\n\r\n\r\n\r\n=== leftOuterJoin [Pair]\r\n\r\nPerforms an left outer join using two key-value RDDs. Please note that the keys must be generally comparable to make this work correctly.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef leftOuterJoin[W](other: RDD[(K, W)]): RDD[(K, (V, Option[W]))]\r\ndef leftOuterJoin[W](other: RDD[(K, W)], numPartitions: Int): RDD[(K, (V, Option[W]))]\r\ndef leftOuterJoin[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (V, Option[W]))]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval b = a.keyBy(_.length)\r\nval c = sc.parallelize(List(\"dog\",\"cat\",\"gnu\",\"salmon\",\"rabbit\",\"turkey\",\"wolf\",\"bear\",\"bee\"), 3)\r\nval d = c.keyBy(_.length)\r\nb.leftOuterJoin(d).collect\r\n\r\nres1: Array[(Int, (String, Option[String]))] = Array((6,(salmon,Some(salmon))), (6,(salmon,Some(rabbit))), (6,(salmon,Some(turkey))), (6,(salmon,Some(salmon))), (6,(salmon,Some(rabbit))), (6,(salmon,Some(turkey))), (3,(dog,Some(dog))), (3,(dog,Some(cat))), (3,(dog,Some(gnu))), (3,(dog,Some(bee))), (3,(rat,Some(dog))), (3,(rat,Some(cat))), (3,(rat,Some(gnu))), (3,(rat,Some(bee))), (8,(elephant,None)))\r\n```\r\n\r\n\r\n\r\n\r\n=== lookup\r\n\r\nScans the RDD for all keys that match the provided value and returns their values as a Scala sequence.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef lookup(key: K): Seq[V]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.lookup(5)\r\nres0: Seq[String] = WrappedArray(tiger, eagle)\r\n```\r\n\r\n\r\n\r\n\r\n=== map\r\n\r\nApplies a transformation function on each item of the RDD and returns the result as a new RDD.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef map[U: ClassTag](f: T => U): RDD[U]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\nval a = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval b = a.map(_.length)\r\nval c = a.zip(b)\r\nc.collect\r\nres0: Array[(String, Int)] = Array((dog,3), (salmon,6), (salmon,6), (rat,3), (elephant,8))\r\n```\r\n\r\n\r\n\r\n\r\n=== mapPartitions\r\n\r\nThis is a specialized map that is called only once for each partition. The entire content of the respective partitions is available as a sequential stream of values via the input argument (Iterarator[T]). The custom function must return yet another Iterator[U]. The combined result iterators are automatically converted into a new RDD. Please note, that the tuples (3,4) and (6,7) are missing from the following result due to the partitioning we chose.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef mapPartitions[U: ClassTag](f: Iterator[T] => Iterator[U], preservesPartitioning: Boolean = false): RDD[U]\r\n```\r\n\r\nExample 1::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\ndef myfunc[T](iter: Iterator[T]) : Iterator[(T, T)] = {\r\n  var res = List[(T, T)]()\r\n  var pre = iter.next\r\n  while (iter.hasNext)\r\n  {\r\n    val cur = iter.next;\r\n    res .::= (pre, cur)\r\n    pre = cur;\r\n  }\r\n  res.iterator\r\n}\r\na.mapPartitions(myfunc).collect\r\nres0: Array[(Int, Int)] = Array((2,3), (1,2), (5,6), (4,5), (8,9), (7,8))\r\nExample :: 2\r\n\r\nval x = sc.parallelize(List(1, 2, 3, 4, 5, 6, 7, 8, 9,10), 3)\r\ndef myfunc(iter: Iterator[Int]) : Iterator[Int] = {\r\n  var res = List[Int]()\r\n  while (iter.hasNext) {\r\n    val cur = iter.next;\r\n    res = res ::: List.fill(scala.util.Random.nextInt(10))(cur)\r\n  }\r\n  res.iterator\r\n}\r\nx.mapPartitions(myfunc).collect\r\n// some of the number are not outputted at all. This is because the random number generated for it is zero.\r\nres8: Array[Int] = Array(1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 7, 7, 7, 9, 9, 10)\r\nThe above program can also be written using flatMap as follows.\r\n\r\nExample :: 2 using flatmap\r\n\r\nval x  = sc.parallelize(1 to 10, 3)\r\nx.flatMap(List.fill(scala.util.Random.nextInt(10))(_)).collect\r\n\r\nres1: Array[Int] = Array(1, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10)\r\n```\r\n\r\n\r\n\r\n\r\n=== mapPartitionsWithContext   (deprecated and developer API)\r\n\r\nSimilar to mapPartitions, but allows accessing information about the processing state within the mapper.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef mapPartitionsWithContext[U: ClassTag](f: (TaskContext, Iterator[T]) => Iterator[U], preservesPartitioning: Boolean = false): RDD[U]\r\n\r\nExample ::\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\nimport org.apache.spark.TaskContext\r\ndef myfunc(tc: TaskContext, iter: Iterator[Int]) : Iterator[Int] = {\r\n  tc.addOnCompleteCallback(() => println(\r\n    \"Partition: \"     + tc.partitionId +\r\n    \", AttemptID: \"   + tc.attemptId ))\r\n\r\n  iter.toList.filter(_ % 2 == 0).iterator\r\n}\r\na.mapPartitionsWithContext(myfunc).collect\r\n\r\n14/04/01 23:05:48 INFO SparkContext: Starting job: collect at :20\r\n...\r\n14/04/01 23:05:48 INFO Executor: Running task ID 0\r\nPartition: 0, AttemptID: 0, Interrupted: false\r\n...\r\n14/04/01 23:05:48 INFO Executor: Running task ID 1\r\n14/04/01 23:05:48 INFO TaskSetManager: Finished TID 0 in 470 ms on localhost (progress: 0/3)\r\n...\r\n14/04/01 23:05:48 INFO Executor: Running task ID 2\r\n14/04/01 23:05:48 INFO TaskSetManager: Finished TID 1 in 23 ms on localhost (progress: 1/3)\r\n14/04/01 23:05:48 INFO DAGScheduler: Completed ResultTask(0, 1)\r\n\r\n?\r\nres0: Array[Int] = Array(2, 6, 4, 8)\r\n```\r\n\r\n\r\n\r\n\r\n=== mapPartitionsWithIndex\r\n\r\nSimilar to mapPartitions, but takes two parameters. The first parameter is the index of the partition and the second is an iterator through all the items within this partition. The output is an iterator containing the list of items after applying whatever transformation the function encodes.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef mapPartitionsWithIndex[U: ClassTag](f: (Int, Iterator[T]) => Iterator[U], preservesPartitioning: Boolean = false): RDD[U]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval x = sc.parallelize(List(1,2,3,4,5,6,7,8,9,10), 3)\r\ndef myfunc(index: Int, iter: Iterator[Int]) : Iterator[String] = {\r\n  iter.toList.map(x => index + \",\" + x).iterator\r\n}\r\nx.mapPartitionsWithIndex(myfunc).collect()\r\nres10: Array[String] = Array(0,1, 0,2, 0,3, 1,4, 1,5, 1,6, 2,7, 2,8, 2,9, 2,10)\r\n\r\n```\r\n\r\n\r\n\r\n=== mapPartitionsWithSplit\r\n\r\nThis method has been marked as deprecated in the API. So, you should not use this method anymore. Deprecated methods will not be covered in this document.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef mapPartitionsWithSplit[U: ClassTag](f: (Int, Iterator[T]) => Iterator[U], preservesPartitioning: Boolean = false): RDD[U]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== mapValues [Pair]\r\n\r\nTakes the values of a RDD that consists of two-component tuples, and applies the provided function to transform each value. Then, it forms new two-component tuples using the key and the transformed value and stores them in a new RDD.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef mapValues[U](f: V => U): RDD[(K, U)]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.mapValues(\"x\" + _ + \"x\").collect\r\nres5: Array[(Int, String)] = Array((3,xdogx), (5,xtigerx), (4,xlionx), (3,xcatx), (7,xpantherx), (5,xeaglex))\r\n```\r\n\r\n\r\n\r\n\r\n=== mapWith  (deprecated)\r\n\r\nThis is an extended version of map. It takes two function arguments. The first argument must conform to Int -> T and is executed once per partition. It will map the partition index to some transformed partition index of type T. This is where it is nice to do some kind of initialization code once per partition. Like create a Random number generator object. The second function must conform to (U, T) -> U. T is the transformed partition index and U is a data item of the RDD. Finally the function has to return a transformed data item of type U.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef mapWith[A: ClassTag, U: ClassTag](constructA: Int => A, preservesPartitioning: Boolean = false)(f: (T, A) => U): RDD[U]\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\n// generates 9 random numbers less than 1000.\r\nval x = sc.parallelize(1 to 9, 3)\r\nx.mapWith(a => new scala.util.Random)((x, r) => r.nextInt(1000)).collect\r\nres0: Array[Int] = Array(940, 51, 779, 742, 757, 982, 35, 800, 15)\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\nval b = a.mapWith(\"Index:\" + _)((a, b) => (\"Value:\" + a, b))\r\nb.collect\r\nres0: Array[(String, String)] = Array((Value:1,Index:0), (Value:2,Index:0), (Value:3,Index:0), (Value:4,Index:1), (Value:5,Index:1), (Value:6,Index:1), (Value:7,Index:2), (Value:8,Index:2), (Value:9,Index:2)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n== part4\r\n=== max\r\n\r\nReturns the largest element in the RDD\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef max()(implicit ord: Ordering[T]): T\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval y = sc.parallelize(10 to 30)\r\ny.max\r\nres75: Int = 30\r\n\r\nval a = sc.parallelize(List((10, \"dog\"), (3, \"tiger\"), (9, \"lion\"), (18, \"cat\")))\r\na.max\r\nres6: (Int, String) = (18,cat)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== mean [Double], meanApprox [Double]\r\n\r\nCalls stats and extracts the mean component. The approximate version of the function can finish somewhat faster in some scenarios. However, it trades accuracy for speed.\r\n\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef mean(): Double\r\ndef meanApprox(timeout: Long, confidence: Double = 0.95): PartialResult[BoundedDouble]\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(9.1, 1.0, 1.2, 2.1, 1.3, 5.0, 2.0, 2.1, 7.4, 7.5, 7.6, 8.8, 10.0, 8.9, 5.5), 3)\r\na.mean\r\nres0: Double = 5.3\r\n```\r\n\r\n\r\n\r\n=== min\r\n\r\nReturns the smallest element in the RDD\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef min()(implicit ord: Ordering[T]): T\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval y = sc.parallelize(10 to 30)\r\ny.min\r\nres75: Int = 10\r\n\r\n\r\nval a = sc.parallelize(List((10, \"dog\"), (3, \"tiger\"), (9, \"lion\"), (8, \"cat\")))\r\na.min\r\nres4: (Int, String) = (3,tiger)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== name, setName\r\n\r\nAllows a RDD to be tagged with a custom name.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\n@transient var name: String\r\ndef setName(_name: String)\r\n\r\n```\r\nExample ::\r\n+\r\n```\r\n\r\nval y = sc.parallelize(1 to 10, 10)\r\ny.name\r\nres13: String = null\r\ny.setName(\"Fancy RDD Name\")\r\ny.name\r\nres15: String = Fancy RDD Name\r\n```\r\n\r\n\r\n\r\n\r\n=== partitionBy [Pair]\r\n\r\nRepartitions as key-value RDD using its keys. The partitioner implementation can be supplied as the first argument.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef partitionBy(partitioner: Partitioner): RDD[(K, V)]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== partitioner\r\n\r\nSpecifies a function pointer to the default partitioner that will be used for groupBy, subtract, reduceByKey (from PairedRDDFunctions), etc. functions.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\n@transient val partitioner: Option[Partitioner]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== partitions\r\n\r\nReturns an array of the partition objects associated with this RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\nfinal def partitions: Array[Partition]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval b = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\", \"Gnu\", \"Rat\"), 2)\r\nb.partitions\r\nres48: Array[org.apache.spark.Partition] = Array(org.apache.spark.rdd.ParallelCollectionPartition@18aa, org.apache.spark.rdd.ParallelCollectionPartition@18ab)\r\n```\r\n\r\n\r\n\r\n\r\n=== persist, cache\r\n\r\nThese functions can be used to adjust the storage level of a RDD. When freeing up memory, Spark will use the storage level identifier to decide which partitions should be kept. The parameterless variants persist() and cache() are just abbreviations for persist(StorageLevel.MEMORY_ONLY). (Warning: Once the storage level has been changed, it cannot be changed again!)\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef cache(): RDD[T]\r\ndef persist(): RDD[T]\r\ndef persist(newLevel: StorageLevel): RDD[T]\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval c = sc.parallelize(List(\"Gnu\", \"Cat\", \"Rat\", \"Dog\", \"Gnu\", \"Rat\"), 2)\r\nc.getStorageLevel\r\nres0: org.apache.spark.storage.StorageLevel = StorageLevel(false, false, false, false, 1)\r\nc.cache\r\nc.getStorageLevel\r\nres2: org.apache.spark.storage.StorageLevel = StorageLevel(false, true, false, true, 1)\r\n\r\n```\r\n\r\n\r\n\r\n=== pipe\r\n\r\nTakes the RDD data of each partition and sends it via stdin to a shell-command. The resulting output of the command is captured and returned as a RDD of string values.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef pipe(command: String): RDD[String]\r\ndef pipe(command: String, env: Map[String, String]): RDD[String]\r\ndef pipe(command: Seq[String], env: Map[String, String] = Map(), printPipeContext: (String => Unit) => Unit = null, printRDDElement: (T, String => Unit) => Unit = null): RDD[String]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 9, 3)\r\na.pipe(\"head -n 1\").collect\r\nres2: Array[String] = Array(1, 4, 7)\r\n\r\n```\r\n\r\n=== randomSplit\r\n\r\nRandomly splits an RDD into multiple smaller RDDs according to a weights Array which specifies the percentage of the total data elements that is assigned to each smaller RDD. Note the actual size of each smaller RDD is only approximately equal to the percentages specified by the weights Array. The second example :: below shows the number of items in each smaller RDD does not exactly match the weights Array.   A random optional seed can be specified. This function is useful for spliting data into a training set and a testing set for machine learning.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef randomSplit(weights: Array[Double], seed: Long = Utils.random.nextLong): Array[RDD[T]]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval y = sc.parallelize(1 to 10)\r\nval splits = y.randomSplit(Array(0.6, 0.4), seed = 11L)\r\nval training = splits(0)\r\nval test = splits(1)\r\ntraining.collect\r\nres:85 Array[Int] = Array(1, 4, 5, 6, 8, 10)\r\ntest.collect\r\nres86: Array[Int] = Array(2, 3, 7, 9)\r\n\r\nval y = sc.parallelize(1 to 10)\r\nval splits = y.randomSplit(Array(0.1, 0.3, 0.6))\r\n\r\nval rdd1 = splits(0)\r\nval rdd2 = splits(1)\r\nval rdd3 = splits(2)\r\n\r\nrdd1.collect\r\nres87: Array[Int] = Array(4, 10)\r\nrdd2.collect\r\nres88: Array[Int] = Array(1, 3, 5, 8)\r\nrdd3.collect\r\nres91: Array[Int] = Array(2, 6, 7, 9)\r\n```\r\n\r\n\r\n\r\n=== reduce\r\n\r\nThis function provides the well-known reduce functionality in Spark. Please note that any function f you provide, should be commutative in order to generate reproducible results.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef reduce(f: (T, T) => T): T\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 100, 3)\r\na.reduce(_ + _)\r\nres41: Int = 5050\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== reduceByKey [Pair],  reduceByKeyLocally [Pair], reduceByKeyToDriver [Pair]\r\n\r\nThis function provides the well-known reduce functionality in Spark. Please note that any function f you provide, should be commutative in order to generate reproducible results.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef reduceByKey(func: (V, V) => V): RDD[(K, V)]\r\ndef reduceByKey(func: (V, V) => V, numPartitions: Int): RDD[(K, V)]\r\ndef reduceByKey(partitioner: Partitioner, func: (V, V) => V): RDD[(K, V)]\r\ndef reduceByKeyLocally(func: (V, V) => V): Map[K, V]\r\ndef reduceByKeyToDriver(func: (V, V) => V): Map[K, V]\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"cat\", \"owl\", \"gnu\", \"ant\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.reduceByKey(_ + _).collect\r\nres86: Array[(Int, String)] = Array((3,dogcatowlgnuant))\r\n\r\nval a = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval b = a.map(x => (x.length, x))\r\nb.reduceByKey(_ + _).collect\r\nres87: Array[(Int, String)] = Array((4,lion), (3,dogcat), (7,panther), (5,tigereagle))\r\n\r\n\r\n```\r\n\r\n=== repartition\r\n\r\nThis function changes the number of partitions to the number specified by the numPartitions parameter\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef repartition(numPartitions: Int)(implicit ord: Ordering[T] = null): RDD[T]\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval rdd = sc.parallelize(List(1, 2, 10, 4, 5, 2, 1, 1, 1), 3)\r\nrdd.partitions.length\r\nres2: Int = 3\r\nval rdd2  = rdd.repartition(5)\r\nrdd2.partitions.length\r\nres6: Int = 5\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== repartitionAndSortWithinPartitions [Ordered]\r\n\r\nRepartition the RDD according to the given partitioner and, within each resulting partition, sort records by their keys.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef repartitionAndSortWithinPartitions(partitioner: Partitioner): RDD[(K, V)]\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\n// first we will do range partitioning which is not sorted\r\nval randRDD = sc.parallelize(List( (2,\"cat\"), (6, \"mouse\"),(7, \"cup\"), (3, \"book\"), (4, \"tv\"), (1, \"screen\"), (5, \"heater\")), 3)\r\nval rPartitioner = new org.apache.spark.RangePartitioner(3, randRDD)\r\nval partitioned = randRDD.partitionBy(rPartitioner)\r\ndef myfunc(index: Int, iter: Iterator[(Int, String)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\npartitioned.mapPartitionsWithIndex(myfunc).collect\r\n\r\nres0: Array[String] = Array([partID:0, val: (2,cat)], [partID:0, val: (3,book)], [partID:0, val: (1,screen)], [partID:1, val: (4,tv)], [partID:1, val: (5,heater)], [partID:2, val: (6,mouse)], [partID:2, val: (7,cup)])\r\n\r\n\r\n// now lets repartition but this time have it sorted\r\nval partitioned = randRDD.repartitionAndSortWithinPartitions(rPartitioner)\r\ndef myfunc(index: Int, iter: Iterator[(Int, String)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\npartitioned.mapPartitionsWithIndex(myfunc).collect\r\n\r\nres1: Array[String] = Array([partID:0, val: (1,screen)], [partID:0, val: (2,cat)], [partID:0, val: (3,book)], [partID:1, val: (4,tv)], [partID:1, val: (5,heater)], [partID:2, val: (6,mouse)], [partID:2, val: (7,cup)])\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== rightOuterJoin [Pair]\r\n\r\nPerforms an right outer join using two key-value RDDs. Please note that the keys must be generally comparable to make this work correctly.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef rightOuterJoin[W](other: RDD[(K, W)]): RDD[(K, (Option[V], W))]\r\ndef rightOuterJoin[W](other: RDD[(K, W)], numPartitions: Int): RDD[(K, (Option[V], W))]\r\ndef rightOuterJoin[W](other: RDD[(K, W)], partitioner: Partitioner): RDD[(K, (Option[V], W))]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval b = a.keyBy(_.length)\r\nval c = sc.parallelize(List(\"dog\",\"cat\",\"gnu\",\"salmon\",\"rabbit\",\"turkey\",\"wolf\",\"bear\",\"bee\"), 3)\r\nval d = c.keyBy(_.length)\r\nb.rightOuterJoin(d).collect\r\n\r\nres2: Array[(Int, (Option[String], String))] = Array((6,(Some(salmon),salmon)), (6,(Some(salmon),rabbit)), (6,(Some(salmon),turkey)), (6,(Some(salmon),salmon)), (6,(Some(salmon),rabbit)), (6,(Some(salmon),turkey)), (3,(Some(dog),dog)), (3,(Some(dog),cat)), (3,(Some(dog),gnu)), (3,(Some(dog),bee)), (3,(Some(rat),dog)), (3,(Some(rat),cat)), (3,(Some(rat),gnu)), (3,(Some(rat),bee)), (4,(None,wolf)), (4,(None,bear)))\r\n\r\n```\r\n\r\n\r\n\r\n\r\n=== sample\r\n\r\nRandomly selects a fraction of the items of a RDD and returns them in a new RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef sample(withReplacement: Boolean, fraction: Double, seed: Int): RDD[T]\r\n\r\n```\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval a = sc.parallelize(1 to 10000, 3)\r\na.sample(false, 0.1, 0).count\r\nres24: Long = 960\r\n\r\na.sample(true, 0.3, 0).count\r\nres25: Long = 2888\r\n\r\na.sample(true, 0.3, 13).count\r\nres26: Long = 2985\r\n\r\n```\r\n\r\n\r\n\r\n\r\n=== sampleByKey [Pair]\r\n\r\nRandomly samples the key value pair RDD according to the fraction of each key you want to appear in the final RDD.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef sampleByKey(withReplacement: Boolean, fractions: Map[K, Double], seed: Long = Utils.random.nextLong): RDD[(K, V)]\r\n```\r\n\r\n\r\nExample ::\r\n+\r\n```\r\n\r\nval randRDD = sc.parallelize(List( (7,\"cat\"), (6, \"mouse\"),(7, \"cup\"), (6, \"book\"), (7, \"tv\"), (6, \"screen\"), (7, \"heater\")))\r\nval sampleMap = List((7, 0.4), (6, 0.6)).toMap\r\nrandRDD.sampleByKey(false, sampleMap,42).collect\r\n\r\nres6: Array[(Int, String)] = Array((7,cat), (6,mouse), (6,book), (6,screen), (7,heater))\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== sampleByKeyExact [Pair, experimental]\r\n\r\nThis is labelled as experimental and so we do not document it.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef sampleByKeyExact(withReplacement: Boolean, fractions: Map[K, Double], seed: Long = Utils.random.nextLong): RDD[(K, V)]\r\n```\r\n\r\n\r\n\r\n=== saveAsHadoopFile [Pair], saveAsHadoopDataset [Pair], saveAsNewAPIHadoopFile [Pair]\r\n\r\nSaves the RDD in a Hadoop compatible format using any Hadoop outputFormat class the user specifies.\r\n\r\nListing Variants ::\r\n+\r\n```\r\n\r\ndef saveAsHadoopDataset(conf: JobConf)\r\ndef saveAsHadoopFile[F  Similar to zip. But provides more control over the zipping process.\r\n\r\nListing Variants::\r\n+\r\n```\r\ndef zipPartitions[B: ClassTag, V: ClassTag](rdd2: RDD[B])(f: (Iterator[T], Iterator[B]) => Iterator[V]): RDD[V]\r\ndef zipPartitions[B: ClassTag, V: ClassTag](rdd2: RDD[B], preservesPartitioning: Boolean)(f: (Iterator[T], Iterator[B]) => Iterator[V]): RDD[V]\r\ndef zipPartitions[B: ClassTag, C: ClassTag, V: ClassTag](rdd2: RDD[B], rdd3: RDD[C])(f: (Iterator[T], Iterator[B], Iterator[C]) => Iterator[V]): RDD[V]\r\ndef zipPartitions[B: ClassTag, C: ClassTag, V: ClassTag](rdd2: RDD[B], rdd3: RDD[C], preservesPartitioning: Boolean)(f: (Iterator[T], Iterator[B], Iterator[C]) => Iterator[V]): RDD[V]\r\ndef zipPartitions[B: ClassTag, C: ClassTag, D: ClassTag, V: ClassTag](rdd2: RDD[B], rdd3: RDD[C], rdd4: RDD[D])(f: (Iterator[T], Iterator[B], Iterator[C], Iterator[D]) => Iterator[V]): RDD[V]\r\ndef zipPartitions[B: ClassTag, C: ClassTag, D: ClassTag, V: ClassTag](rdd2: RDD[B], rdd3: RDD[C], rdd4: RDD[D], preservesPartitioning: Boolean)(f: (Iterator[T], Iterator[B], Iterator[C], Iterator[D]) => Iterator[V]): RDD[V]\r\n```\r\n\r\nExample::\r\n+\r\n```\r\nval a = sc.parallelize(0 to 9, 3)\r\nval b = sc.parallelize(10 to 19, 3)\r\nval c = sc.parallelize(100 to 109, 3)\r\ndef myfunc(aiter: Iterator[Int], biter: Iterator[Int], citer: Iterator[Int]): Iterator[String] =\r\n{\r\n  var res = List[String]()\r\n  while (aiter.hasNext && biter.hasNext && citer.hasNext)\r\n  {\r\n    val x = aiter.next + \" \" + biter.next + \" \" + citer.next\r\n    res ::= x\r\n  }\r\n  res.iterator\r\n}\r\na.zipPartitions(b, c)(myfunc).collect\r\nres50: Array[String] = Array(2 12 102, 1 11 101, 0 10 100, 5 15 105, 4 14 104, 3 13 103, 9 19 109, 8 18 108, 7 17 107, 6 16 106)\r\n```\r\n\r\n\r\n\r\n=== zipWithIndex\r\n\r\n> Zips the elements of the RDD with its element indexes. The indexes start from 0. If the RDD is spread across multiple partitions then a spark Job is started to perform this operation.\r\n\r\nListing Variants ::\r\n+\r\n```\r\ndef zipWithIndex(): RDD[(T, Long)]\r\n```\r\n\r\nExample::\r\n+\r\n```\r\nval z = sc.parallelize(Array(\"A\", \"B\", \"C\", \"D\"))\r\nval r = z.zipWithIndex\r\nres110: Array[(String, Long)] = Array((A,0), (B,1), (C,2), (D,3))\r\n\r\nval z = sc.parallelize(100 to 120, 5)\r\nval r = z.zipWithIndex\r\nr.collect\r\nres11: Array[(Int, Long)] = Array((100,0), (101,1), (102,2), (103,3), (104,4), (105,5), (106,6), (107,7), (108,8), (109,9), (110,10), (111,11), (112,12), (113,13), (114,14), (115,15), (116,16), (117,17), (118,18), (119,19), (120,20))\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== zipWithUniqueId\r\n\r\n> This is different from zipWithIndex since just gives a unique id to each data element but the ids may not match the index number of the data element. This operation does not start a spark job even if the RDD is spread across multiple partitions.\r\nCompare the results of the example below with that of the 2nd example of zipWithIndex. You should be able to see the difference.\r\n\r\nListing Variants::\r\n+\r\n```\r\ndef zipWithUniqueId(): RDD[(T, Long)]\r\n```\r\n\r\nExample::\r\n+\r\n```\r\nval z = sc.parallelize(100 to 120, 5)\r\nval r = z.zipWithUniqueId\r\nr.collect\r\n\r\nres12: Array[(Int, Long)] = Array((100,0), (101,5), (102,10), (103,15), (104,1), (105,6), (106,11), (107,16), (108,2), (109,7), (110,12), (111,17), (112,3), (113,8), (114,13), (115,18), (116,4), (117,9), (118,14), (119,19), (120,24))\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-rdd",
        "title": "spark-rdd",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: spark rdd\r\n\r\n\r\n== mapPartitionsWithIndex\r\n\r\nasciinema::slave[\"/src/records/spark/2017-04-10.json\",\"95\",\"22\",\"2\"]\r\n\r\n```\r\nmap是对每个元素操作, mapPartitions是对其中的每个partition操作\r\n\r\nmapPartitionsWithIndex : 把每个partition中的分区号和对应的值拿出来, 看源码\r\nval func = (index: Int, iter: Iterator[(Int)]) => {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\nval rdd1 = sc.parallelize(List(1,2,3,4,5,6,7,8,9), 2)\r\nrdd1.mapPartitionsWithIndex(func).collect\r\n```\r\n\r\n== aggregate\r\n\r\nasciinema::slave[\"/src/records/spark/aggregate.json\",\"95\",\"22\",\"2\"]\r\n\r\n```\r\ndef func1(index: Int, iter: Iterator[(Int)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\nval rdd1 = sc.parallelize(List(1,2,3,4,5,6,7,8,9), 2)\r\nrdd1.mapPartitionsWithIndex(func1).collect\r\n###是action操作, 第一个参数是初始值, 二:是2个函数[每个函数都是2个参数(第一个参数:先对个个分区进行合并, 第二个:对个个分区合并后的结果再进行合并), 输出一个参数]\r\n###0 + (0+1+2+3+4   +   0+5+6+7+8+9)\r\nrdd1.aggregate(0)(_+_, _+_)\r\nrdd1.aggregate(0)(math.max(_, _), _ + _)\r\n###5和1比, 得5再和234比得5 --> 5和6789比,得9 --> 5 + (5+9)\r\nrdd1.aggregate(5)(math.max(_, _), _ + _)\r\n\r\n\r\nval rdd2 = sc.parallelize(List(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"),2)\r\ndef func2(index: Int, iter: Iterator[(String)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\nrdd2.aggregate(\"\")(_ + _, _ + _)\r\nrdd2.aggregate(\"=\")(_ + _, _ + _)\r\n\r\nval rdd3 = sc.parallelize(List(\"12\",\"23\",\"345\",\"4567\"),2)\r\nrdd3.aggregate(\"\")((x,y) => math.max(x.length, y.length).toString, (x,y) => x + y)\r\n\r\nval rdd4 = sc.parallelize(List(\"12\",\"23\",\"345\",\"\"),2)\r\nrdd4.aggregate(\"\")((x,y) => math.min(x.length, y.length).toString, (x,y) => x + y)\r\n\r\nval rdd5 = sc.parallelize(List(\"12\",\"23\",\"\",\"345\"),2)\r\nrdd5.aggregate(\"\")((x,y) => math.min(x.length, y.length).toString, (x,y) => x + y)\r\n```\r\n\r\n== aggregateByKey\r\n\r\nasciinema::slave[\"/src/records/spark/aggregateByKey.json\",\"95\",\"22\",\"2\"]\r\n\r\n```\r\nval pairRDD = sc.parallelize(List( (\"cat\",2), (\"cat\", 5), (\"mouse\", 4),(\"cat\", 12), (\"dog\", 12), (\"mouse\", 2)), 2)\r\ndef func2(index: Int, iter: Iterator[(String, Int)]) : Iterator[String] = {\r\n  iter.toList.map(x => \"[partID:\" +  index + \", val: \" + x + \"]\").iterator\r\n}\r\npairRDD.mapPartitionsWithIndex(func2).collect\r\npairRDD.aggregateByKey(0)(math.max(_, _), _ + _).collect\r\npairRDD.aggregateByKey(100)(math.max(_, _), _ + _).collect\r\n```\r\n\r\n== checkpoint\r\n\r\n```\r\nsc.setCheckpointDir(\"hdfs://node-1.itcast.cn:9000/ck\")\r\nval rdd = sc.textFile(\"hdfs://node-1.itcast.cn:9000/wc\").flatMap(_.split(\" \")).map((_, 1)).reduceByKey(_+_)\r\nrdd.checkpoint\r\nrdd.isCheckpointed\r\nrdd.count\r\nrdd.isCheckpointed\r\nrdd.getCheckpointFile\r\n\r\ncoalesce, repartition\r\nval rdd1 = sc.parallelize(1 to 10, 10)\r\nval rdd2 = rdd1.coalesce(2, false)\r\nrdd2.partitions.length\r\n\r\ncollectAsMap : Map(b -> 2, a -> 1)\r\nval rdd = sc.parallelize(List((\"a\", 1), (\"b\", 2)))\r\nrdd.collectAsMap\r\n```\r\n\r\n== combineByKey\r\n\r\nasciinema::slave[\"/src/records/spark/combineByKey.json\",\"95\",\"22\",\"2\"]\r\n\r\n```\r\n和reduceByKey是相同的效果\r\n###第一个参数x:原封不动取出来, 第二个参数:是函数, 局部运算, 第三个:是函数, 对局部运算后的结果再做运算\r\n###每个分区中每个key中value中的第一个值, (hello,1)(hello,1)(good,1)-->(hello(1,1),good(1))-->x就相当于hello的第一个1, good中的1\r\n\r\n\r\n\r\nval rdd1 = sc.textFile(\"hdfs://master:9000/wordcount/input/\").flatMap(_.split(\" \")).map((_, 1))\r\nval rdd2 = rdd1.combineByKey(x => x, (a: Int, b: Int) => a + b, (m: Int, n: Int) => m + n)\r\nrdd1.collect\r\nrdd2.collect\r\n\r\n###当input下有3个文件时(有3个block块, 不是有3个文件就有3个block, ), 每个会多加3个10\r\nval rdd3 = rdd1.combineByKey(x => x + 10, (a: Int, b: Int) => a + b, (m: Int, n: Int) => m + n)\r\nrdd3.collect\r\n\r\n\r\nval rdd4 = sc.parallelize(List(\"dog\",\"cat\",\"gnu\",\"salmon\",\"rabbit\",\"turkey\",\"wolf\",\"bear\",\"bee\"), 3)\r\nval rdd5 = sc.parallelize(List(1,1,2,2,2,1,2,2,2), 3)\r\n\r\nval rdd7 = rdd6.combineByKey(List(_), (x: List[String], y: String) => x :+ y, (m: List[String], n: List[String]) => m ++ n)\r\n```\r\n\r\n== countByKey\r\n\r\n```\r\nval rdd1 = sc.parallelize(List((\"a\", 1), (\"b\", 2), (\"b\", 2), (\"c\", 2), (\"c\", 1)))\r\nrdd1.countByKey\r\nrdd1.countByValue\r\n```\r\n\r\n== filterByRange\r\n\r\n```\r\nval rdd1 = sc.parallelize(List((\"e\", 5), (\"c\", 3), (\"d\", 4), (\"c\", 2), (\"a\", 1)))\r\nval rdd2 = rdd1.filterByRange(\"b\", \"d\")\r\nrdd2.collect\r\n\r\nflatMapValues  :  Array((a,1), (a,2), (b,3), (b,4))\r\nval rdd3 = sc.parallelize(List((\"a\", \"1 2\"), (\"b\", \"3 4\")))\r\nval rdd4 = rdd3.flatMapValues(_.split(\" \"))\r\nrdd4.collect\r\n```\r\n\r\n== foldByKey\r\n\r\n```\r\nval rdd1 = sc.parallelize(List(\"dog\", \"wolf\", \"cat\", \"bear\"), 2)\r\nval rdd2 = rdd1.map(x => (x.length, x))\r\nval rdd3 = rdd2.foldByKey(\"\")(_+_)\r\n\r\nval rdd = sc.textFile(\"hdfs://node-1.itcast.cn:9000/wc\").flatMap(_.split(\" \")).map((_, 1))\r\nrdd.foldByKey(0)(_+_)\r\n```\r\n\r\n== foreachPartition\r\n\r\n```\r\nval rdd1 = sc.parallelize(List(1, 2, 3, 4, 5, 6, 7, 8, 9), 3)\r\nrdd1.foreachPartition(x => println(x.reduce(_ + _)))\r\n\r\nkeyBy : 以传入的参数做key\r\nval rdd1 = sc.parallelize(List(\"dog\", \"salmon\", \"salmon\", \"rat\", \"elephant\"), 3)\r\nval rdd2 = rdd1.keyBy(_.length)\r\nrdd2.collect\r\n```\r\n\r\n== keys values\r\n\r\n```\r\nval rdd1 = sc.parallelize(List(\"dog\", \"tiger\", \"lion\", \"cat\", \"panther\", \"eagle\"), 2)\r\nval rdd2 = rdd1.map(x => (x.length, x))\r\nrdd2.keys.collect\r\nrdd2.values.collect\r\n```\r\n\r\n= tmp\r\n\r\n----\r\nssh root@196.168.1.34\r\n\r\ndocker exec -it spark-master /bin/bash\r\n\r\ncd $SPARK_HOME \\\r\n&& bin/spark-shell --master spark://master:7077\r\n----\r\n\r\n\r\n\r\n(1,(CompactBuffer(b, b),CompactBuffer(c, c))),\r\n(3,(CompactBuffer(b),CompactBuffer(c))),\r\n(2,(CompactBuffer(b),CompactBuffer(c)))\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-sql",
        "title": "SparkSql",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: SparkSql\r\n\r\n== Spark SQL\r\n\r\n> Spark SQL是Spark用来处理结构化数据的一个模块，它提供了一个编程抽象叫做DataFrame并且作为分布式SQL查询引擎的作用。\r\n\r\n=== 为什么要学习Spark SQL\r\n我们已经学习了Hive，它是将Hive SQL转换成MapReduce然后提交到集群上执行，大大简化了编写MapReduce的程序的复杂性，由于MapReduce这种计算模型执行效率比较慢。所有Spark SQL的应运而生，它是将Spark SQL转换成RDD，然后提交到集群执行，执行效率非常快！\r\n\r\n. 易整合\r\n\r\nimage::{img}/img/spark/2017-04-17_164810.png[]\r\n---\r\n. 统一的数据访问方式\r\n\r\nimage::{img}/img/spark/2017-04-17_164822.png[]\r\n---\r\n. 兼容Hive\r\n\r\nimage::{img}/img/spark/2017-04-17_164830.png[]\r\n---\r\n. 标准的数据连接\r\n\r\nimage::{img}/img/spark/2017-04-17_164839.png[]\r\n---\r\n\r\n=== DataFrames\r\n\r\n==== 什么是DataFrames\r\n\r\n> 与RDD类似，DataFrame也是一个分布式数据容器。然而DataFrame更像传统数据库的二维表格，除了数据以外，还记录数据的结构信息，即schema。同时，与Hive类似，DataFrame也支持嵌套数据类型（struct、array和map）。从API易用性的角度上 看，DataFrame API提供的是一套高层的关系操作，比函数式的RDD API要更加友好，门槛更低。由于与R和Pandas的DataFrame类似，Spark DataFrame很好地继承了传统单机数据分析的开发体验。\r\n\r\nimage::{img}/img/spark/2017-04-17_164848.png[]\r\n---\r\n\r\n==== 创建DataFrames\r\n\r\n在SparkSQL中SQLContext是创建DataFrames和执行SQL的入口，在spark-1.5.2中已经内置了一个sqlContext\r\n\r\nimage::{img}/img/spark/2017-04-17_164857.png[]\r\n---\r\n\r\n. 在本地创建一个文件，有三列，分别是id、name、age，用空格分隔，然后上传到hdfs上\r\n+\r\n```\r\ncat > /person.txt = 18).show\r\n\r\nimage::{img}/img/spark/2017-04-17_164924.png[]\r\n---\r\n\r\n//按年龄进行分组并统计相同年龄的人数\r\npersonDF.groupBy(\"age\").count().show()\r\n```\r\nimage::{img}/img/spark/2017-04-17_164930.png[]\r\n---\r\n\r\n==== SQL风格语法\r\n\r\n如果想使用SQL风格的语法，需要将DataFrame注册成表\r\n```\r\npersonDF.registerTempTable(\"t_person\")\r\n//查询年龄最大的前两名\r\nsqlContext.sql(\"select * from t_person order by age desc limit 2\").show\r\n```\r\n\r\nimage::{img}/img/spark/2017-04-17_164936.png[]\r\n---\r\n\r\n```\r\n//显示表的Schema信息\r\nsqlContext.sql(\"desc t_person\").show\r\n```\r\n\r\nimage::{img}/img/spark/2017-04-17_164943.png[]\r\n---\r\n\r\n== 以编程方式执行Spark SQL查询\r\n\r\n=== 编写Spark SQL查询程序\r\n\r\n前面我们学习了如何在Spark Shell中使用SQL完成查询，现在我们来实现在自定义的程序中编写Spark SQL查询程序。首先在maven项目的pom.xml中添加Spark SQL的依赖\r\n\r\n```\r\n\r\norg.apache.spark\r\nspark-sql_2.10\r\n1.5.2\r\n\r\n```\r\n\r\n==== 通过反射推断Schema\r\n\r\n```\r\nimport org.apache.spark.{SparkConf, SparkContext}\r\nimport org.apache.spark.sql.SQLContext\r\n\r\nobject InferringSchema {\r\ndef main(args: Array[String]) {\r\n\r\n//创建SparkConf()并设置App名称\r\nval conf = new SparkConf().setAppName(\"SQL-1\")\r\n//SQLContext要依赖SparkContext\r\nval sc = new SparkContext(conf)\r\n//创建SQLContext\r\nval sqlContext = new SQLContext(sc)\r\n\r\n//从指定的地址创建RDD\r\nval lineRDD = sc.textFile(args(0)).map(_.split(\"\"))\r\n\r\n//创建case class\r\n    //将RDD和case class关联\r\nval personRDD = lineRDD.map(x =>Person(x(0).toInt, x(1), x(2).toInt))\r\n//导入隐式转换，如果不导入无法将RDD转换成DataFrame\r\n    //将RDD转换成DataFrame\r\nimport sqlContext.implicits._\r\nval personDF = personRDD.toDF\r\n//注册表\r\npersonDF.registerTempTable(\"t_person\")\r\n//传入SQL\r\nval df = sqlContext.sql(\"select * from t_person order by age desc limit 2\")\r\n//将结果以JSON的方式存储到指定位置\r\ndf.write.json(args(1))\r\n//停止Spark Context\r\nsc.stop()\r\n  }\r\n}\r\n//case class一定要放到外面\r\ncase class Person(id: Int, name: String, age: Int)\r\n```\r\n\r\n将程序打成jar包，上传到spark集群，提交Spark任务\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-submit \\\r\n--class cn.itcast.spark.sql.InferringSchema \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n/root/spark-mvn-1.0-SNAPSHOT.jar \\\r\nhdfs://node1.itcast.cn:9000/person.txt \\\r\nhdfs://node1.itcast.cn:9000/out\r\n```\r\n\r\n查看运行结果\r\n```\r\nhdfs dfs -cat  hdfs://node1.itcast.cn:9000/out/part-r-*\r\n```\r\n\r\nimage::{img}/img/spark/2017-04-17_164952.png[]\r\n---\r\n\r\n\r\n==== 通过StructType直接指定Schema\r\n\r\n```\r\nimport org.apache.spark.sql.{Row, SQLContext}\r\nimport org.apache.spark.sql.types._\r\nimport org.apache.spark.{SparkContext, SparkConf}\r\n\r\nobject SpecifyingSchema {\r\ndef main(args: Array[String]) {\r\n//创建SparkConf()并设置App名称\r\nval conf = new SparkConf().setAppName(\"SQL-2\")\r\n//SQLContext要依赖SparkContext\r\nval sc = new SparkContext(conf)\r\n//创建SQLContext\r\nval sqlContext = new SQLContext(sc)\r\n//从指定的地址创建RDD\r\nval personRDD = sc.textFile(args(0)).map(_.split(\"\"))\r\n//通过StructType直接指定每个字段的schema\r\nval schema = StructType(\r\nList(\r\nStructField(\"id\", IntegerType, true),\r\nStructField(\"name\", StringType, true),\r\nStructField(\"age\", IntegerType, true)\r\n      )\r\n    )\r\n//将RDD映射到rowRDD\r\nval rowRDD = personRDD.map(p =>Row(p(0).toInt, p(1).trim, p(2).toInt))\r\n//将schema信息应用到rowRDD上\r\nval personDataFrame = sqlContext.createDataFrame(rowRDD, schema)\r\n//注册表\r\npersonDataFrame.registerTempTable(\"t_person\")\r\n//执行SQL\r\nval df = sqlContext.sql(\"select * from t_person order by age desc limit 4\")\r\n//将结果以JSON的方式存储到指定位置\r\ndf.write.json(args(1))\r\n//停止Spark Context\r\nsc.stop()\r\n  }\r\n}\r\n```\r\n\r\n将程序打成jar包，上传到spark集群，提交Spark任务\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-submit \\\r\n--class cn.itcast.spark.sql.InferringSchema \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n/root/spark-mvn-1.0-SNAPSHOT.jar \\\r\nhdfs://node1.itcast.cn:9000/person.txt \\\r\nhdfs://node1.itcast.cn:9000/out1\r\n```\r\n\r\n查看结果\r\n```\r\nhdfs dfs -cat  hdfs://node1.itcast.cn:9000/out1/part-r-*\r\n```\r\n\r\nimage::{img}/img/spark/2017-04-17_165001.png[]\r\n---\r\n\r\n== 数据源\r\n=== JDBC\r\nSpark SQL可以通过JDBC从关系型数据库中读取数据的方式创建DataFrame，通过对DataFrame一系列的计算后，还可以将数据再写回关系型数据库中。\r\n==== 从MySQL中加载数据（Spark Shell方式）\r\n. 启动Spark Shell，必须指定mysql连接驱动jar包\r\n+\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-shell \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n--jars /usr/local/spark-1.5.2-bin-hadoop2.6/mysql-connector-java-5.1.35-bin.jar \\\r\n--driver-class-path /usr/local/spark-1.5.2-bin-hadoop2.6/mysql-connector-java-5.1.35-bin.jar\r\n```\r\n\r\n. 从mysql中加载数据\r\n+\r\n```\r\nval jdbcDF = sqlContext.read.format(\"jdbc\").options(Map(\"url\" ->\"jdbc:mysql://192.168.10.1:3306/bigdata\", \"driver\" ->\"com.mysql.jdbc.Driver\", \"dbtable\" ->\"person\", \"user\" ->\"root\", \"password\" ->\"123456\")).load()\r\n```\r\n\r\n. 执行查询\r\n+\r\n```\r\njdbcDF.show()\r\n```\r\n\r\nimage::{img}/img/spark/2017-04-17_165008.png[]\r\n---\r\n\r\n==== 将数据写入到MySQL中（打jar包方式）\r\n. 编写Spark SQL程序\r\n+\r\n```\r\nimport java.util.Properties\r\nimport org.apache.spark.sql.{SQLContext, Row}\r\nimport org.apache.spark.sql.types.{StringType, IntegerType, StructField, StructType}\r\nimport org.apache.spark.{SparkConf, SparkContext}\r\n\r\nobject JdbcRDD {\r\ndef main(args: Array[String]) {\r\nval conf = new SparkConf().setAppName(\"MySQL-Demo\")\r\nval sc = new SparkContext(conf)\r\nval sqlContext = new SQLContext(sc)\r\n//通过并行化创建RDD\r\nval personRDD = sc.parallelize(Array(\"1 tom 5\", \"2 jerry 3\", \"3 kitty 6\")).map(_.split(\"\"))\r\n//通过StructType直接指定每个字段的schema\r\nval schema = StructType(\r\nList(\r\nStructField(\"id\", IntegerType, true),\r\nStructField(\"name\", StringType, true),\r\nStructField(\"age\", IntegerType, true)\r\n      )\r\n    )\r\n//将RDD映射到rowRDD\r\nval rowRDD = personRDD.map(p =>Row(p(0).toInt, p(1).trim, p(2).toInt))\r\n//将schema信息应用到rowRDD上\r\nval personDataFrame = sqlContext.createDataFrame(rowRDD, schema)\r\n//创建Properties存储数据库相关属性\r\nval prop = new Properties()\r\n    prop.put(\"user\", \"root\")\r\n    prop.put(\"password\", \"123456\")\r\n//将数据追加到数据库\r\npersonDataFrame.write.mode(\"append\").jdbc(\"jdbc:mysql://192.168.10.1:3306/bigdata\", \"bigdata.person\", prop)\r\n//停止SparkContext\r\nsc.stop()\r\n  }\r\n}\r\n```\r\n\r\n\r\n. 用maven将程序打包\r\n\r\n. 将Jar包提交到spark集群\r\n+\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-submit \\\r\n--class cn.itcast.spark.sql.JdbcRDD \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n--jars /usr/local/spark-1.5.2-bin-hadoop2.6/mysql-connector-java-5.1.35-bin.jar \\\r\n--driver-class-path /usr/local/spark-1.5.2-bin-hadoop2.6/mysql-connector-java-5.1.35-bin.jar \\\r\n/root/spark-mvn-1.0-SNAPSHOT.jar\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-streaming",
        "title": "SparkStreaming",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: stream\r\n\r\n== tmp\r\n\r\n```\r\n//监听 6066\r\nnc -lk 6066\r\n```\r\n\r\n== SprakStreaming Demo\r\n\r\n=== StreamingWordCount\r\n环境:\r\n|===\r\n|名称|下载地址\r\n\r\n|hadoop2.6\r\n|link:http://pan.baidu.com/s/1nvJkKeH[密码：roxm]\r\n\r\n|StreamingWordCount\r\n|link:https://git.oschina.net/dishui/bigdata/tree/heartbeat02[bigdata]\r\n|===\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-参考",
        "title": "spark参考",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: spark\r\n\r\n== RDD\r\n\r\n. http://homepage.cs.latrobe.edu.au/zhe/ZhenHeSparkRDDAPIExamples.html[SparkRDDAPIExamples]\r\n\r\n. https://zhuanlan.zhihu.com/p/21483985[]\r\n. http://tech.meituan.com/spark-tuning-basic.html[]\r\n. https://www.zhihu.com/question/23655827?rf=27642986[]\r\n. http://www.cnblogs.com/hseagle/category/569175.html[Apache Spark源码走读]\r\n. http://spark.apache.org/docs/1.5.1/quick-start.html[spark 1.5.1 docs]\r\n. http://spark.apache.org/docs/1.5.1/sql-programming-guide.html[spark hive]\r\n. http://spark.apache.org/docs/latest/building-spark.html[building-spark]\r\n\r\n. https://cwiki.apache.org//confluence/display/Hive/Hive+on+Spark:+Getting+Started#HiveonSpark:GettingStarted-SparkInstallation[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-基础",
        "title": "spark-基础",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: spark-基础\r\n\r\n== Spark集群安装\r\n\r\n=== 安装\r\n\r\n==== 机器部署\r\n准备两台以上Linux服务器，安装好JDK1.7\r\n\r\n==== 下载Spark安装包\r\n\r\n. 下载 +\r\nhttp://www.apache.org/dyn/closer.lua/spark/spark-1.5.2/spark-1.5.2-bin-hadoop2.6.tgz\r\n. 上传解压安装包\r\n+\r\n上传 *spark-1.5.2-bin-hadoop2.6.tgz* 安装包到Linux上\r\n. 解压安装包到指定位置\r\n+\r\n```\r\ntar -zxvf spark-1.5.2-bin-hadoop2.6.tgz -C /usr/local\r\n```\r\n\r\n==== 配置Spark\r\n\r\n. 进入到Spark安装目录\r\n+\r\n```\r\ncd /usr/local/spark-1.5.2-bin-hadoop2.6\r\n```\r\n. 进入conf目录并重命名并修改spark-env.sh.template文件\r\n+\r\n```\r\ncd conf/\r\nmv spark-env.sh.template spark-env.sh\r\nvi spark-env.sh\r\n```\r\n在该配置文件中添加如下配置\r\n+\r\n```\r\nexport JAVA_HOME=/usr/java/jdk1.7.0_45\r\nexport SPARK_MASTER_IP=node1.itcast.cn\r\nexport SPARK_MASTER_PORT=7077\r\n```\r\n. 重命名并修改slaves.template文件\r\n+\r\n```\r\nmv slaves.template slaves\r\nvi slaves\r\n//在该文件中添加子节点所在的位置（Worker节点）\r\nnode2.itcast.cn\r\nnode3.itcast.cn\r\nnode4.itcast.cn\r\n```\r\n. 将配置好的Spark拷贝到其他节点上\r\n+\r\n```\r\nscp -r spark-1.5.2-bin-hadoop2.6/ node2:/usr/local/\r\nscp -r spark-1.5.2-bin-hadoop2.6/ node3:/usr/local/\r\nscp -r spark-1.5.2-bin-hadoop2.6/ node4:/usr/local/\r\n```\r\n\r\n. Spark集群配置完毕，目前是1个 *Master* ，3个 *Work* ，在 *node1* 上启动 *Spark* 集群\r\n+\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/sbin/start-all.sh\r\n```\r\n\r\n. 启动后执行jps命令\r\n+\r\n----\r\n主节点上有Master进程，其他子节点上有Work进行，登录Spark管理界面查看集群状态（主节点）：\r\nhttp://node1:8080/\r\n到此为止，Spark集群安装完毕，但是有一个很大的问题，那就是Master节点存在单点故障，要解决此问题，就要借助zookeeper，并且启动至少两个Master节点来实现高可靠，配置方式比较简单：\r\n----\r\n\r\n\r\n. Spark集群规划\r\n+\r\n----\r\nnode1，node2是Master；node3，node4，node5是Worker\r\n安装配置zk集群，并启动zk集群\r\n停止spark所有服务，修改配置文件spark-env.sh，在该配置文件中删掉SPARK_MASTER_IP并添加如下配置\r\n----\r\n+\r\n```\r\nexport SPARK_DAEMON_JAVA_OPTS=\"-Dspark.deploy.recoveryMode=ZOOKEEPER -Dspark.deploy.zookeeper.url=zk1,zk2,zk3 -Dspark.deploy.zookeeper.dir=/spark\"\r\n```\r\n. 在 *node1* 节点上修改 *slaves* 配置文件内容指定 *worker* 节点\r\n. 在 *node1* 上执行 *sbin/start-all.sh* 脚本，然后在 *node2* 上执行 *sbin/start-master.sh* 启动第二个 *Master*\r\n. 执行Spark程序\r\n\r\n=== 执行第一个spark程序\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-submit \\\r\n--class org.apache.spark.examples.SparkPi \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n--executor-memory 1G \\\r\n--total-executor-cores 2 \\\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/lib/spark-examples-1.5.2-hadoop2.6.0.jar \\\r\n100\r\n```\r\n该算法是利用蒙特·卡罗算法求PI\r\n\r\n=== 启动Spark Shell\r\nspark-shell是Spark自带的交互式Shell程序，方便用户进行交互式编程，用户可以在该命令行下用scala编写spark程序。\r\n\r\n==== 启动spark shell\r\n[source]\r\n----\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-shell \\\r\n--master spark://node1.itcast.cn:7077 \\ \r\n--executor-memory 2g \\ \r\n--total-executor-cores 2 \r\n----\r\n master spark://node1.itcast.cn:7077 指定Master的地址\r\n executor-memory 2g 指定每个worker可用内存为2G\r\n total-executor-cores 2 指定整个集群使用的cup核数为2个\r\n\r\n[TIP]\r\n如果启动spark shell时没有指定master地址，但是也可以正常启动spark shell和执行spark shell中的程序，其实是启动了spark的local模式，该模式仅在本机启动一个进程，没有与集群建立联系。\r\n\r\nSpark Shell中已经默认将SparkContext类初始化为对象sc。用户代码如果需要用到，则直接应用sc即可\r\n\r\n==== 在spark shell中编写WordCount程序\r\n. 首先启动hdfs\r\n. 向hdfs上传一个文件到hdfs://node1.itcast.cn:9000/words.txt\r\n. 在spark shell中用scala语言编写spark程序\r\n+\r\n```\r\nsc.textFile(\"hdfs://node1.itcast.cn:9000/words.txt\").flatMap(_.split(\" \"))\r\n.map((_,1)).reduceByKey(_+_).saveAsTextFile(\"hdfs://node1.itcast.cn:9000/out\")\r\n```\r\n\r\n. 使用hdfs命令查看结果\r\n+\r\n```\r\nhdfs dfs -ls hdfs://node1.itcast.cn:9000/out/p*\r\n```\r\n\r\n[TIP]\r\n *sc* 是 *SparkContext* 对象，该对象时提交 *spark* 程序的入口\r\n*textFile(hdfs://node1.itcast.cn:9000/words.txt)* 是hdfs中读取数据\r\n*flatMap(_.split(\" \"))* 先map在压平\r\n*map((_,1))* 将单词和1构成元组\r\n*reduceByKey(_+_)* 按照 *key* 进行r *educe* ，并将v *alue* 累加\r\n*saveAsTextFile(\"hdfs://node1.itcast.cn:9000/out\")* 将结果写入到hdfs中\r\n\r\n=== 在IDEA中编写WordCount程序\r\n\r\nspark shell仅在测试和验证我们的程序时使用的较多，在生产环境中，通常会在IDE中编制程序，然后打成jar包，然后提交到集群，最常用的是创建一个Maven项目，利用Maven来管理jar包的依赖。\r\n\r\n. 创建一个项目\r\n\r\n\r\n\r\n. 选择Maven项目，然后点击next\r\n\r\n\r\n. 填写maven的GAV，然后点击next\r\n\r\n\r\n. 填写项目名称，然后点击finish\r\n\r\n\r\n. 创建好maven项目后，点击Enable Auto-Import\r\n\r\n\r\n. 配置Maven的pom.xml\r\n+\r\n```\r\n\r\n\r\n    4.0.0\r\n\r\n    cn.itcast.spark\r\n    spark-mvn\r\n    1.0-SNAPSHOT\r\n\r\n    \r\n        1.7\r\n        1.7\r\n        UTF-8\r\n        2.10.6\r\n        2.10\r\n    \r\n\r\n    \r\n        \r\n            org.scala-lang\r\n            scala-library\r\n            ${scala.version}\r\n        \r\n\r\n        \r\n            org.apache.spark\r\n            spark-core_2.10\r\n            1.5.2\r\n        \r\n\r\n        \r\n            org.apache.spark\r\n            spark-streaming_2.10\r\n            1.5.2\r\n        \r\n\r\n        \r\n            org.apache.hadoop\r\n            hadoop-client\r\n            2.6.2\r\n        \r\n    \r\n\r\n    \r\n        src/main/scala\r\n        src/test/scala\r\n        \r\n            \r\n                net.alchim31.maven\r\n                scala-maven-plugin\r\n                3.2.0\r\n                \r\n                    \r\n                        \r\n                            compile\r\n                            testCompile\r\n                        \r\n                        \r\n                            \r\n                                -make:transitive\r\n                                -dependencyfile\r\n                                ${project.build.directory}/.scala_dependencies\r\n                            \r\n                        \r\n                    \r\n                \r\n            \r\n            \r\n                org.apache.maven.plugins\r\n                maven-surefire-plugin\r\n                2.18.1\r\n                \r\n                    false\r\n                    true\r\n                    \r\n                        **/*Test.*\r\n                        **/*Suite.*\r\n                    \r\n                \r\n            \r\n\r\n            \r\n                org.apache.maven.plugins\r\n                maven-shade-plugin\r\n                2.3\r\n                \r\n                    \r\n                        package\r\n                        \r\n                            shade\r\n                        \r\n                        \r\n                            \r\n                                \r\n                                    *:*\r\n                                    \r\n                                        META-INF/*.SF\r\n                                        META-INF/*.DSA\r\n                                        META-INF/*.RSA\r\n                                    \r\n                                \r\n                            \r\n                            \r\n                                \r\n                                    cn.itcast.spark.WordCount\r\n                                \r\n                            \r\n                        \r\n                    \r\n                \r\n            \r\n        \r\n    \r\n\r\n```\r\n\r\n. 将src/main/java和src/test/java分别修改成src/main/scala和src/test/scala，与pom.xml中的配置保持一致\r\n\r\n\r\n\r\n\r\n. 新建一个scala class，类型为Object\r\n\r\n\r\n. 编写spark程序\r\n+\r\n```\r\npackage cn.itcast.spark\r\n\r\nimport org.apache.spark.{SparkContext, SparkConf}\r\n\r\nobject WordCount {\r\n  def main(args: Array[String]) {\r\n    //创建SparkConf()并设置App名称\r\n    val conf = new SparkConf().setAppName(\"WC\")\r\n    //创建SparkContext，该对象是提交spark App的入口\r\n    val sc = new SparkContext(conf)\r\n    //使用sc创建RDD并执行相应的transformation和action\r\n    sc.textFile(args(0)).flatMap(_.split(\" \")).map((_, 1)).reduceByKey(_+_, 1).sortBy(_._2, false).saveAsTextFile(args(1))\r\n    //停止sc，结束该任务\r\n    sc.stop()\r\n  }\r\n}\r\n```\r\n\r\n. 使用Maven打包：首先修改pom.xml中的main class\r\n\r\n\r\n点击idea右侧的Maven Project选项\r\n\r\n\r\n点击Lifecycle,选择clean和package，然后点击Run Maven Build\r\n\r\n\r\n. 选择编译成功的jar包，并将该jar上传到Spark集群中的某个节点上\r\n\r\n\r\n. 首先启动hdfs和Spark集群\r\n启动hdfs\r\n+\r\n```\r\n/usr/local/hadoop-2.6.1/sbin/start-dfs.sh\r\n```\r\n启动spark\r\n+\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/sbin/start-all.sh\r\n```\r\n\r\n. 使用spark-submit命令提交Spark应用（注意参数的顺序）\r\n+\r\n```\r\n/usr/local/spark-1.5.2-bin-hadoop2.6/bin/spark-submit \\\r\n--class cn.itcast.spark.WordCount \\\r\n--master spark://node1.itcast.cn:7077 \\\r\n--executor-memory 2G \\\r\n--total-executor-cores 4 \\\r\n/root/spark-mvn-1.0-SNAPSHOT.jar \\\r\nhdfs://node1.itcast.cn:9000/words.txt \\\r\nhdfs://node1.itcast.cn:9000/out\r\n```\r\n\r\n. 查看程序执行结果\r\n+\r\n```\r\nhdfs dfs -cat hdfs://node1.itcast.cn:9000/out/part-00000\r\n(hello,6)\r\n(tom,3)\r\n(kitty,2)\r\n(jerry,1)\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/spark-源码",
        "title": "spark-源码",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: spark-基础\r\n\r\n== SparkContext\r\n\r\nimage::{host}/post/bigdata/spark/uml/sparkContext.svg[]\r\n\r\n== job的提交和运行\r\n\r\n[plantuml, spark-job-1, svg]\r\n----\r\nautonumber\r\nparticipant MyJobTest as my\r\nparticipant SparkContext as sc\r\nparticipant HadoopRDD as hr\r\nparticipant MapPartitionsRDD as mpr\r\nparticipant RDD as r\r\nparticipant DAGScheduler as dag\r\nparticipant DAGSchedulerEventProcessLoop as dagsep\r\nparticipant ActiveJob as aj\r\n\r\nmy -> my: main()\r\nactivate my #ffffcc\r\n\r\nmy -> sc\r\n\r\nsc -> sc: sc.textFile()\r\nactivate sc #ffffcc\r\ndeactivate my\r\nsc -> hr\r\ndeactivate sc\r\n\r\nhr -> r: filter\r\nactivate r #ffffcc\r\n\r\nr -> r: filter()\r\nr -> mpr: new MapPartitionsRDD()\r\nnote left: 返回 MapPartitionsRDD\r\ndeactivate r\r\nactivate mpr #ffffcc\r\nmpr -> r: count\r\ndeactivate mpr\r\n\r\n\r\nactivate r #ffffcc\r\nr -> r: count\r\nr -> sc\r\ndeactivate r\r\n\r\nsc -> sc: sc.runJob()\r\nactivate sc #ffffcc\r\n\r\nsc -> dag: dagScheduler.runJob()\r\nnote left: 调用 DagScheduler.runJob()\r\ndeactivate sc\r\n\r\nactivate dag #ffffcc\r\ndag -> dag: runJob()\r\ndag -> dag: submitJob()\r\nactivate dag #ffff99\r\ndag -> dagsep\r\ndeactivate dag\r\ndeactivate dag\r\n\r\nactivate dagsep #ffffcc\r\ndagsep -> dagsep: post(JobSubmitted)\r\n\r\ndagsep -> dag: onReceive(JobSubmitted)\r\ndeactivate dagsep\r\nactivate dag #ffffcc\r\n\r\ndag -> dag: handleJobSubmitted()\r\nactivate dag #ffff99\r\ndeactivate dag\r\ndag -> dag: newStage()\r\nnote right: 计算宽依赖/窄依赖\r\ndag -> aj: new()\r\ndeactivate dag\r\n----\r\n\r\n---\r\n\r\n[plantuml, spark-job-2, svg]\r\n----\r\nparticipant DAGScheduler as dag\r\nparticipant LiveListenerBus as llb\r\nparticipant SparkListenerBus as slb\r\nparticipant TaskSchedulerImpl as tsi\r\nparticipant SchedulerBackend as sb\r\nparticipant LocalBackend as lb\r\nparticipant Executor as e\r\nparticipant TaskRunner as tr\r\nparticipant ThreadPoolExecutor as tpe\r\n\r\ndag -> llb: post(SparkListenerJobStart)\r\n\r\nactivate llb #ffffcc\r\ndeactivate llb\r\n\r\ndag -> dag: submitStage()\r\ndag -> dag: submitMissingTasks()\r\ndag -> llb\r\nllb -> llb: post(SparkListenerStageSubmitted)\r\n\r\ndag -> tsi\r\ntsi -> tsi: submitTasks\r\n\r\nactivate tsi #ffffcc\r\ntsi -> sb\r\nsb -> sb: reviveOffers()\r\nsb -> lb: receiveWithLogging(case ReviveOffers)\r\nlb -> lb: reviveOffers()\r\nlb -> e\r\ne -> e: launchTask()\r\ne -> tr: new()\r\ne -> tpe\r\ntpe -> tpe: execute(tr)\r\n\r\n\r\nllb -> slb\r\nslb -> slb: onPostEvent(case jobStart: SparkListenerJobStart)\r\n\r\ndeactivate dag\r\n----\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/tmp",
        "content": "(php.itcast.cn,http://php.itcast.cn/php/course.shtml,459),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/base.shtml,543),\r\n(java.itcast.cn,http://java.itcast.cn/java/video.shtml,496),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/android.shtml,501),\r\n(net.itcast.cn,http://net.itcast.cn/net/video.shtml,521),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/hadoop.shtml,506),\r\n(net.itcast.cn,http://net.itcast.cn/net/course.shtml,521),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/cloud.shtml,1028),\r\n(php.itcast.cn,http://php.itcast.cn/php/video.shtml,490),\r\n(java.itcast.cn,http://java.itcast.cn/java/teacher.shtml,482),\r\n(php.itcast.cn,http://php.itcast.cn/php/teacher.shtml,464),\r\n(net.itcast.cn,http://net.itcast.cn/net/teacher.shtml,512),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/javaee.shtml,1000),\r\n(java.itcast.cn,http://java.itcast.cn/java/course/javaeeadvanced.shtml,477)\r\n\r\n\r\n\r\n\r\n\r\n(net.itcast.cn,CompactBuffer(\r\n    (net.itcast.cn,http://net.itcast.cn/net/video.shtml,521),\r\n    (net.itcast.cn,http://net.itcast.cn/net/course.shtml,521),\r\n    (net.itcast.cn,http://net.itcast.cn/net/teacher.shtml,512))),\r\n(java.itcast.cn,CompactBuffer(\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/base.shtml,543),\r\n    (java.itcast.cn,http://java.itcast.cn/java/video.shtml,496),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/android.shtml,501),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/hadoop.shtml,506),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/cloud.shtml,1028),\r\n    (java.itcast.cn,http://java.itcast.cn/java/teacher.shtml,482),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/javaee.shtml,1000),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/javaeeadvanced.shtml,477))),\r\n(php.itcast.cn,CompactBuffer(\r\n    (php.itcast.cn,http://php.itcast.cn/php/course.shtml,459),\r\n    (php.itcast.cn,http://php.itcast.cn/php/video.shtml,490),\r\n    (php.itcast.cn,http://php.itcast.cn/php/teacher.shtml,464)))\r\n\r\n\r\n\r\n\r\n(net.itcast.cn,List(\r\n    (net.itcast.cn,http://net.itcast.cn/net/course.shtml,521),\r\n    (net.itcast.cn,http://net.itcast.cn/net/video.shtml,521),\r\n    (net.itcast.cn,http://net.itcast.cn/net/teacher.shtml,512))),\r\n(java.itcast.cn,List(\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/cloud.shtml,1028),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/javaee.shtml,1000),\r\n    (java.itcast.cn,http://java.itcast.cn/java/course/base.shtml,543))),\r\n(php.itcast.cn,List(\r\n    (php.itcast.cn,http://php.itcast.cn/php/video.shtml,490),\r\n    (php.itcast.cn,http://php.itcast.cn/php/teacher.shtml,464),\r\n    (php.itcast.cn,http://php.itcast.cn/php/course.shtml,459)))\r\n\r\n\r\n\r\n2017-04-17_164810.png\r\n2017-04-17_164822.png\r\n2017-04-17_164830.png\r\n2017-04-17_164839.png\r\n2017-04-17_164848.png\r\n2017-04-17_164857.png\r\n2017-04-17_164909.png\r\n2017-04-17_164916.png\r\n2017-04-17_164924.png\r\n2017-04-17_164930.png\r\n2017-04-17_164936.png\r\n2017-04-17_164943.png\r\n2017-04-17_164952.png\r\n2017-04-17_165001.png\r\n2017-04-17_165008.png\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/uml/job的提交和运行",
        "content": "@startuml\r\n\r\nautonumber\r\nparticipant MyJobTest as my\r\nparticipant SparkContext as sc\r\nparticipant HadoopRDD as hr\r\nparticipant MapPartitionsRDD as mpr\r\nparticipant RDD as r\r\nparticipant DAGScheduler as dag\r\nparticipant DAGSchedulerEventProcessLoop as dagsep\r\nparticipant ActiveJob as aj\r\n\r\nmy -> my: main()\r\nactivate my #ffffcc\r\n\r\nmy -> sc\r\n\r\nsc -> sc: sc.textFile()\r\nactivate sc #ffffcc\r\ndeactivate my\r\nsc -> hr\r\ndeactivate sc\r\n\r\nhr -> r: filter\r\nactivate r #ffffcc\r\n\r\nr -> r: filter()\r\nr -> mpr: new MapPartitionsRDD()\r\ndeactivate r\r\nactivate mpr #ffffcc\r\nmpr -> r: count\r\ndeactivate mpr\r\n\r\n\r\nactivate r #ffffcc\r\nr -> r: count\r\nr -> sc\r\ndeactivate r\r\n\r\nsc -> sc: sc.runJob()\r\nactivate sc #ffffcc\r\n\r\nsc -> dag: dagScheduler.runJob()\r\ndeactivate sc\r\n\r\nactivate dag #ffffcc\r\ndag -> dag: runJob()\r\ndag -> dag: submitJob()\r\nactivate dag #ffff99\r\ndag -> dagsep\r\ndeactivate dag\r\ndeactivate dag\r\n\r\nactivate dagsep #ffffcc\r\ndagsep -> dagsep: post(JobSubmitted)\r\n\r\ndagsep -> dag: onReceive(JobSubmitted)\r\ndeactivate dagsep\r\nactivate dag #ffffcc\r\n\r\ndag -> dag: handleJobSubmitted()\r\nactivate dag #ffff99\r\ndeactivate dag\r\ndag -> dag: newStage()\r\ndag -> aj: new()\r\ndeactivate dag\r\n\r\n@enduml\r\n\r\n@startuml\r\nparticipant DAGScheduler as dag\r\nparticipant LiveListenerBus as llb\r\nparticipant SparkListenerBus as slb\r\nparticipant TaskSchedulerImpl as tsi\r\nparticipant SchedulerBackend as sb\r\nparticipant LocalBackend as lb\r\nparticipant Executor as e\r\nparticipant TaskRunner as tr\r\nparticipant ThreadPoolExecutor as tpe\r\n\r\ndag -> llb: post(SparkListenerJobStart)\r\n\r\nactivate llb #ffffcc\r\ndeactivate llb\r\n\r\ndag -> dag: submitStage()\r\ndag -> dag: submitMissingTasks()\r\ndag -> llb\r\nllb -> llb: post(SparkListenerStageSubmitted)\r\n\r\ndag -> tsi\r\ntsi -> tsi: submitTasks\r\n\r\nactivate tsi #ffffcc\r\ntsi -> sb\r\nsb -> sb: reviveOffers()\r\nsb -> lb: receiveWithLogging(case ReviveOffers)\r\nlb -> lb: reviveOffers()\r\nlb -> e\r\ne -> e: launchTask()\r\ne -> tr: new()\r\ne -> tpe\r\ntpe -> tpe: execute(tr)\r\n\r\n\r\nllb -> slb\r\nslb -> slb: onPostEvent(case jobStart: SparkListenerJobStart)\r\n\r\ndeactivate dag\r\n\r\n@enduml",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/uml/sparkContext",
        "content": "SparkContextSparkContextSparkEnvSparkEnvTaskSchedulerImplTaskSchedulerImplSparkDeploySchedulerBackendSparkDeploySchedulerBackendAkkaUtilsAkkaUtilsUtilsUtilsActorSystemActorSystemDAGSchedulerDAGScheduler1createSparkEnv2createDriverEnv3create()4createActorSystem()5startServiceOnPort()6doCreateActorSystem()7apply()8createTaskScheduler9new()10new()11initialize()12new()13start()",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/spark/uml/sparkContext",
        "content": "@startuml\r\n\r\nautonumber\r\nparticipant SparkContext as sc\r\nparticipant SparkEnv as se\r\nparticipant TaskSchedulerImpl as ts\r\nparticipant SparkDeploySchedulerBackend as sdsb\r\nparticipant AkkaUtils as au\r\nparticipant Utils as u\r\nparticipant ActorSystem as asy\r\nparticipant DAGScheduler as dd\r\n\r\nactivate sc #ffffcc\r\n\r\nsc -> sc: createSparkEnv\r\nactivate sc #ffff99\r\ndeactivate sc\r\n\r\nsc -> se: createDriverEnv\r\nactivate se #ffffcc\r\n\r\nse -> se: create()\r\nse -> au: createActorSystem()\r\nactivate au #ffffcc\r\nactivate se #ffff99\r\ndeactivate se\r\ndeactivate se\r\n\r\n\r\nau -> u: startServiceOnPort()\r\nactivate u #ffffcc\r\ndeactivate u\r\n\r\nau -> au: doCreateActorSystem()\r\nactivate au #ffff99\r\n\r\n\r\nau -> asy: apply()\r\nactivate asy #ffffcc\r\ndeactivate asy\r\ndeactivate au\r\n\r\ndeactivate au\r\n\r\nsc -> sc: createTaskScheduler\r\nactivate sc #ffff99\r\n\r\nsc -> ts: new()\r\nactivate ts #ffffcc\r\ndeactivate ts\r\n\r\nsc -> sdsb: new()\r\nactivate sdsb #ffffcc\r\ndeactivate sdsb\r\n\r\nsc -> ts: initialize()\r\nactivate ts #ffffcc\r\ndeactivate ts\r\ndeactivate sc\r\n\r\nsc -> dd: new()\r\nactivate dd #ffffcc\r\ndeactivate dd\r\n\r\nsc -> ts: start()\r\nactivate ts #ffffcc\r\ndeactivate ts\r\n\r\ndeactivate sc\r\n\r\n@enduml",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/docker/conf/storm",
        "content": "#指定storm使用的zk集群\r\nstorm.zookeeper.servers:\r\n     - \"zookeeper\"\r\n#指定storm本地状态保存地址\r\nstorm.local.dir: \"/data\"\r\n#日志\r\nstorm.log.dir: \"/logs\"\r\n#指定storm集群中的nimbus节点所在的服务器\r\nnimbus.host: \"nimbus\"\r\n#指定nimbus启动JVM最大可用内存大小\r\nnimbus.childopts: \"-Xmx1024m\"\r\n#指定supervisor启动JVM最大可用内存大小\r\nsupervisor.childopts: \"-Xmx1024m\"\r\n#指定supervisor节点上，每个worker启动JVM最大可用内存大小\r\nworker.childopts: \"-Xmx768m\"\r\n#指定ui启动JVM最大可用内存大小，ui服务一般与nimbus同在一个节点上。\r\nui.childopts: \"-Xmx768m\"\r\n#指定supervisor节点上，启动worker时对应的端口号，每个端口对应槽，每个槽位对应一个worker\r\nsupervisor.slots.ports:\r\n    - 6700\r\n    - 6701\r\n    - 6702\r\n    - 6703\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/docker/storm-compose",
        "content": "version: '2'\r\nservices:\r\n  zookeeper:\r\n    image: dishui.io:5000/zookeeper:3.4\r\n    container_name: zookeeper\r\n    restart: always\r\n    networks:\r\n      - hadoop\r\n  nimbus:\r\n    image: dishui.io:5000/storm:1.0\r\n    container_name: nimbus\r\n    command: storm nimbus\r\n    depends_on:\r\n      - zookeeper\r\n    links:\r\n      - zookeeper\r\n    restart: always\r\n    ports:\r\n      - 6627:6627\r\n    volumes:\r\n      - ./conf/storm.yaml:/conf/storm.yaml\r\n    networks:\r\n      - hadoop\r\n  supervisor:\r\n    image: dishui.io:5000/storm:1.0\r\n    container_name: supervisor\r\n    command: storm supervisor\r\n    depends_on:\r\n      - nimbus\r\n      - zookeeper\r\n    links:\r\n      - nimbus\r\n      - zookeeper\r\n    restart: always\r\n    volumes:\r\n      - ./conf/storm.yaml:/conf/storm.yaml\r\n    networks:\r\n      - hadoop\r\n  storm-ui:\r\n    image: dishui.io:5000/storm:1.0\r\n    container_name: storm-ui\r\n    command: storm ui\r\n    depends_on:\r\n      - nimbus\r\n      - zookeeper\r\n    links:\r\n      - nimbus\r\n    restart: always\r\n    ports:\r\n      - 8080:8080\r\n    volumes:\r\n      - ./conf/storm.yaml:/conf/storm.yaml\r\n    networks:\r\n      - hadoop\r\nnetworks:\r\n  hadoop:\r\n    external: true",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/docker/storm-default",
        "content": "java.library.path: \"/usr/local/lib:/opt/local/lib:/usr/lib\"\r\n\r\n### storm.* configs are general configurations\r\n# the local dir is where jars are kept\r\nstorm.local.dir: \"storm-local\"\r\nstorm.log4j2.conf.dir: \"log4j2\"\r\nstorm.zookeeper.servers:\r\n    - \"localhost\"\r\nstorm.zookeeper.port: 2181\r\nstorm.zookeeper.root: \"/storm\"\r\nstorm.zookeeper.session.timeout: 20000\r\nstorm.zookeeper.connection.timeout: 15000\r\nstorm.zookeeper.retry.times: 5\r\nstorm.zookeeper.retry.interval: 1000\r\nstorm.zookeeper.retry.intervalceiling.millis: 30000\r\nstorm.zookeeper.auth.user: null\r\nstorm.zookeeper.auth.password: null\r\nstorm.exhibitor.port: 8080\r\nstorm.exhibitor.poll.uripath: \"/exhibitor/v1/cluster/list\"\r\nstorm.cluster.mode: \"distributed\" # can be distributed or local\r\nstorm.local.mode.zmq: false\r\nstorm.thrift.transport: \"org.apache.storm.security.auth.SimpleTransportPlugin\"\r\nstorm.principal.tolocal: \"org.apache.storm.security.auth.DefaultPrincipalToLocal\"\r\nstorm.group.mapping.service: \"org.apache.storm.security.auth.ShellBasedGroupsMapping\"\r\nstorm.group.mapping.service.params: null\r\nstorm.messaging.transport: \"org.apache.storm.messaging.netty.Context\"\r\nstorm.nimbus.retry.times: 5\r\nstorm.nimbus.retry.interval.millis: 2000\r\nstorm.nimbus.retry.intervalceiling.millis: 60000\r\nstorm.auth.simple-white-list.users: []\r\nstorm.auth.simple-acl.users: []\r\nstorm.auth.simple-acl.users.commands: []\r\nstorm.auth.simple-acl.admins: []\r\nstorm.cluster.state.store: \"org.apache.storm.cluster_state.zookeeper_state_factory\"\r\nstorm.meta.serialization.delegate: \"org.apache.storm.serialization.GzipThriftSerializationDelegate\"\r\nstorm.codedistributor.class: \"org.apache.storm.codedistributor.LocalFileSystemCodeDistributor\"\r\nstorm.workers.artifacts.dir: \"workers-artifacts\"\r\nstorm.health.check.dir: \"healthchecks\"\r\nstorm.health.check.timeout.ms: 5000\r\n\r\n### nimbus.* configs are for the master\r\nnimbus.seeds : [\"localhost\"]\r\nnimbus.thrift.port: 6627\r\nnimbus.thrift.threads: 64\r\nnimbus.thrift.max_buffer_size: 1048576\r\nnimbus.childopts: \"-Xmx1024m\"\r\nnimbus.task.timeout.secs: 30\r\nnimbus.supervisor.timeout.secs: 60\r\nnimbus.monitor.freq.secs: 10\r\nnimbus.cleanup.inbox.freq.secs: 600\r\nnimbus.inbox.jar.expiration.secs: 3600\r\nnimbus.code.sync.freq.secs: 120\r\nnimbus.task.launch.secs: 120\r\nnimbus.file.copy.expiration.secs: 600\r\nnimbus.topology.validator: \"org.apache.storm.nimbus.DefaultTopologyValidator\"\r\ntopology.min.replication.count: 1\r\ntopology.max.replication.wait.time.sec: 60\r\nnimbus.credential.renewers.freq.secs: 600\r\nnimbus.impersonation.authorizer: \"org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer\"\r\nnimbus.queue.size: 100000\r\nscheduler.display.resource: false\r\n\r\n### ui.* configs are for the master\r\nui.host: 0.0.0.0\r\nui.port: 8080\r\nui.childopts: \"-Xmx768m\"\r\nui.actions.enabled: true\r\nui.filter: null\r\nui.filter.params: null\r\nui.users: null\r\nui.header.buffer.bytes: 4096\r\nui.http.creds.plugin: org.apache.storm.security.auth.DefaultHttpCredentialsPlugin\r\n\r\nlogviewer.port: 8000\r\nlogviewer.childopts: \"-Xmx128m\"\r\nlogviewer.cleanup.age.mins: 10080\r\nlogviewer.appender.name: \"A1\"\r\nlogviewer.max.sum.worker.logs.size.mb: 4096\r\nlogviewer.max.per.worker.logs.size.mb: 2048\r\n\r\nlogs.users: null\r\n\r\ndrpc.port: 3772\r\ndrpc.worker.threads: 64\r\ndrpc.max_buffer_size: 1048576\r\ndrpc.queue.size: 128\r\ndrpc.invocations.port: 3773\r\ndrpc.invocations.threads: 64\r\ndrpc.request.timeout.secs: 600\r\ndrpc.childopts: \"-Xmx768m\"\r\ndrpc.http.port: 3774\r\ndrpc.https.port: -1\r\ndrpc.https.keystore.password: \"\"\r\ndrpc.https.keystore.type: \"JKS\"\r\ndrpc.http.creds.plugin: org.apache.storm.security.auth.DefaultHttpCredentialsPlugin\r\ndrpc.authorizer.acl.filename: \"drpc-auth-acl.yaml\"\r\ndrpc.authorizer.acl.strict: false\r\n\r\ntransactional.zookeeper.root: \"/transactional\"\r\ntransactional.zookeeper.servers: null\r\ntransactional.zookeeper.port: null\r\n\r\n## blobstore configs\r\nsupervisor.blobstore.class: \"org.apache.storm.blobstore.NimbusBlobStore\"\r\nsupervisor.blobstore.download.thread.count: 5\r\nsupervisor.blobstore.download.max_retries: 3\r\nsupervisor.localizer.cache.target.size.mb: 10240\r\nsupervisor.localizer.cleanup.interval.ms: 600000\r\n\r\nnimbus.blobstore.class: \"org.apache.storm.blobstore.LocalFsBlobStore\"\r\nnimbus.blobstore.expiration.secs: 600\r\n\r\nstorm.blobstore.inputstream.buffer.size.bytes: 65536\r\nclient.blobstore.class: \"org.apache.storm.blobstore.NimbusBlobStore\"\r\nstorm.blobstore.replication.factor: 3\r\n\r\n### supervisor.* configs are for node supervisors\r\n# Define the amount of workers that can be run on this machine. Each worker is assigned a port to use for communication\r\nsupervisor.slots.ports:\r\n    - 6700\r\n    - 6701\r\n    - 6702\r\n    - 6703\r\nsupervisor.childopts: \"-Xmx256m\"\r\nsupervisor.run.worker.as.user: false\r\n#how long supervisor will wait to ensure that a worker process is started\r\nsupervisor.worker.start.timeout.secs: 120\r\n#how long between heartbeats until supervisor considers that worker dead and tries to restart it\r\nsupervisor.worker.timeout.secs: 30\r\n#how many seconds to sleep for before shutting down threads on worker\r\nsupervisor.worker.shutdown.sleep.secs: 1\r\n#how frequently the supervisor checks on the status of the processes it's monitoring and restarts if necessary\r\nsupervisor.monitor.frequency.secs: 3\r\n#how frequently the supervisor heartbeats to the cluster state (for nimbus)\r\nsupervisor.heartbeat.frequency.secs: 5\r\nsupervisor.enable: true\r\nsupervisor.supervisors: []\r\nsupervisor.supervisors.commands: []\r\nsupervisor.memory.capacity.mb: 3072.0\r\n#By convention 1 cpu core should be about 100, but this can be adjusted if needed\r\n# using 100 makes it simple to set the desired value to the capacity measurement\r\n# for single threaded bolts\r\nsupervisor.cpu.capacity: 400.0\r\n\r\n### worker.* configs are for task workers\r\nworker.heap.memory.mb: 768\r\nworker.childopts: \"-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump\"\r\nworker.gc.childopts: \"\"\r\n\r\n# Unlocking commercial features requires a special license from Oracle.\r\n# See http://www.oracle.com/technetwork/java/javase/terms/products/index.html\r\n# For this reason, profiler features are disabled by default.\r\nworker.profiler.enabled: false\r\nworker.profiler.childopts: \"-XX:+UnlockCommercialFeatures -XX:+FlightRecorder\"\r\nworker.profiler.command: \"flight.bash\"\r\nworker.heartbeat.frequency.secs: 1\r\n\r\n# check whether dynamic log levels can be reset from DEBUG to INFO in workers\r\nworker.log.level.reset.poll.secs: 30\r\n\r\n# control how many worker receiver threads we need per worker\r\ntopology.worker.receiver.thread.count: 1\r\n\r\ntask.heartbeat.frequency.secs: 3\r\ntask.refresh.poll.secs: 10\r\ntask.credentials.poll.secs: 30\r\n\r\n# now should be null by default\r\ntopology.backpressure.enable: true\r\nbackpressure.disruptor.high.watermark: 0.9\r\nbackpressure.disruptor.low.watermark: 0.4\r\n\r\nzmq.threads: 1\r\nzmq.linger.millis: 5000\r\nzmq.hwm: 0\r\n\r\n\r\nstorm.messaging.netty.server_worker_threads: 1\r\nstorm.messaging.netty.client_worker_threads: 1\r\nstorm.messaging.netty.buffer_size: 5242880 #5MB buffer\r\n# Since nimbus.task.launch.secs and supervisor.worker.start.timeout.secs are 120, other workers should also wait at least that long before giving up on connecting to the other worker. The reconnection period need also be bigger than storm.zookeeper.session.timeout(default is 20s), so that we can abort the reconnection when the target worker is dead.\r\nstorm.messaging.netty.max_retries: 300\r\nstorm.messaging.netty.max_wait_ms: 1000\r\nstorm.messaging.netty.min_wait_ms: 100\r\n\r\n# If the Netty messaging layer is busy(netty internal buffer not writable), the Netty client will try to batch message as more as possible up to the size of storm.messaging.netty.transfer.batch.size bytes, otherwise it will try to flush message as soon as possible to reduce latency.\r\nstorm.messaging.netty.transfer.batch.size: 262144\r\n# Sets the backlog value to specify when the channel binds to a local address\r\nstorm.messaging.netty.socket.backlog: 500\r\n\r\n# By default, the Netty SASL authentication is set to false.  Users can override and set it true for a specific topology.\r\nstorm.messaging.netty.authentication: false\r\n\r\n# Default plugin to use for automatic network topology discovery\r\nstorm.network.topography.plugin: org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\r\n\r\n# default number of seconds group mapping service will cache user group\r\nstorm.group.mapping.service.cache.duration.secs: 120\r\n\r\n### topology.* configs are for specific executing storms\r\ntopology.enable.message.timeouts: true\r\ntopology.debug: false\r\ntopology.workers: 1\r\ntopology.acker.executors: null\r\ntopology.eventlogger.executors: 0\r\ntopology.tasks: null\r\n# maximum amount of time a message has to complete before it's considered failed\r\ntopology.message.timeout.secs: 30\r\ntopology.multilang.serializer: \"org.apache.storm.multilang.JsonSerializer\"\r\ntopology.shellbolt.max.pending: 100\r\ntopology.skip.missing.kryo.registrations: false\r\ntopology.max.task.parallelism: null\r\ntopology.max.spout.pending: null\r\ntopology.state.synchronization.timeout.secs: 60\r\ntopology.stats.sample.rate: 0.05\r\ntopology.builtin.metrics.bucket.size.secs: 60\r\ntopology.fall.back.on.java.serialization: true\r\ntopology.worker.childopts: null\r\ntopology.worker.logwriter.childopts: \"-Xmx64m\"\r\ntopology.executor.receive.buffer.size: 1024 #batched\r\ntopology.executor.send.buffer.size: 1024 #individual messages\r\ntopology.transfer.buffer.size: 1024 # batched\r\ntopology.tick.tuple.freq.secs: null\r\ntopology.worker.shared.thread.pool.size: 4\r\ntopology.spout.wait.strategy: \"org.apache.storm.spout.SleepSpoutWaitStrategy\"\r\ntopology.sleep.spout.wait.strategy.time.ms: 1\r\ntopology.error.throttle.interval.secs: 10\r\ntopology.max.error.report.per.interval: 5\r\ntopology.kryo.factory: \"org.apache.storm.serialization.DefaultKryoFactory\"\r\ntopology.tuple.serializer: \"org.apache.storm.serialization.types.ListDelegateSerializer\"\r\ntopology.trident.batch.emit.interval.millis: 500\r\ntopology.testing.always.try.serialize: false\r\ntopology.classpath: null\r\ntopology.environment: null\r\ntopology.bolts.outgoing.overflow.buffer.enable: false\r\ntopology.disruptor.wait.timeout.millis: 1000\r\ntopology.disruptor.batch.size: 100\r\ntopology.disruptor.batch.timeout.millis: 1\r\ntopology.disable.loadaware: false\r\ntopology.state.checkpoint.interval.ms: 1000\r\n\r\n# Configs for Resource Aware Scheduler\r\n# topology priority describing the importance of the topology in decreasing importance starting from 0 (i.e. 0 is the highest priority and the priority importance decreases as the priority number increases).\r\n# Recommended range of 0-29 but no hard limit set.\r\ntopology.priority: 29\r\ntopology.component.resources.onheap.memory.mb: 128.0\r\ntopology.component.resources.offheap.memory.mb: 0.0\r\ntopology.component.cpu.pcore.percent: 10.0\r\ntopology.worker.max.heap.size.mb: 768.0\r\ntopology.scheduler.strategy: \"org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy\"\r\nresource.aware.scheduler.eviction.strategy: \"org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy\"\r\nresource.aware.scheduler.priority.strategy: \"org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy\"\r\n\r\ndev.zookeeper.path: \"/tmp/dev-storm-zookeeper\"\r\n\r\npacemaker.host: \"localhost\"\r\npacemaker.port: 6699\r\npacemaker.base.threads: 10\r\npacemaker.max.threads: 50\r\npacemaker.thread.timeout: 10\r\npacemaker.childopts: \"-Xmx1024m\"\r\npacemaker.auth.method: \"NONE\"\r\npacemaker.kerberos.users: []\r\n\r\n#default storm daemon metrics reporter plugins\r\nstorm.daemon.metrics.reporter.plugins:\r\n     - \"org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter\"",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/kafka",
        "title": "Kafka集群安装部署、Kafka生产者、Kafka消费者",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: kafka\r\n\r\n= kafka\r\n\r\n= Kafka是什么\r\n> 在流式计算中，Kafka一般用来缓存数据，Storm通过消费Kafka的数据进行计算。\r\nKAFKA + STORM +REDIS\r\n\r\n[disc]　\r\n* Apache Kafka是一个开源消息系统，由Scala写成。是由Apache软件基金会开发的一个开源消息系统项目。\r\n* Kafka最初是由LinkedIn开发，并于2011年初开源。2012年10月从Apache Incubator毕业。该项目的目标是为处理实时数据提供一个统一、高通量、低等待的平台。\r\n* Kafka是一个分布式消息队列：生产者、消费者的功能。它提供了类似于JMS的特性，但是在设计实现上完全不同，此外它并不是JMS规范的实现。\r\n* Kafka对消息保存时根据Topic进行归类，发送消息者称为Producer,消息接受者称为Consumer,此外kafka集群有多个kafka实例组成，每个实例(server)成为broker。\r\n* 无论是kafka集群，还是producer和consumer都依赖于zookeeper集群保存一些meta信息，来保证系统可用性\r\n\r\n= JMS是什么\r\n\r\n== JMS的基础\r\n\r\n> JMS是什么：JMS是Java提供的一套技术规范\r\nJMS干什么用：用来异构系统 集成通信，缓解系统瓶颈，提高系统的伸缩性增强系统用户体验，使得系统模块化和组件化变得可行并更加灵活\r\n通过什么方式：生产消费者模式（生产者、服务器、消费者）\r\n\r\nimage::{img}/img/storm/2017-03-28_152744.png[]\r\n---\r\n\r\n　　jdk，kafka，activemq……\r\n\r\n== JMS消息传输模型\r\n\r\n[disc]\r\n* 点对点模式（一对一，消费者主动拉取数据，消息收到后消息清除）\r\n点对点模型通常是一个基于拉取或者轮询的消息传送模型，这种模型从队列中请求信息，而不是将消息推送到客户端。这个模型的特点是发送到队列的消息被一个且只有一个接收者接收处理，即使有多个消息监听者也是如此。\r\n* 发布/订阅模式（一对多，数据生产后，推送给所有订阅者）\r\n发布订阅模型则是一个基于推送的消息传送模型。发布订阅模型可以有多种不同的订阅者，临时订阅者只在主动监听主题时才接收消息，而持久订阅者则监听主题的所有消息，即时当前订阅者不可用，处于离线状态。\r\n\r\n\r\nimage::{img}/img/storm/2017-03-28_152816.png[]\r\n---\r\n\r\nqueue.put（object）  数据生产\r\nqueue.take(object)    数据消费\r\n\r\n== JMS核心组件\r\n\r\n[disc]\r\n* Destination：消息发送的目的地，也就是前面说的Queue和Topic。\r\n* Message [m1]：从字面上就可以看出是被发送的消息。\r\n* Producer： 消息的生产者，要发送一个消息，必须通过这个生产者来发送。\r\n* MessageConsumer： 与生产者相对应，这是消息的消费者或接收者，通过它来接收一个消息。\r\n\r\nimage::{img}/img/storm/2017-03-28_152836.png[]\r\n---\r\n\r\n通过与ConnectionFactory可以获得一个connection\r\n通过connection可以获得一个session会话。\r\n\r\n== 常见的类JMS消息服务器\r\n\r\n=== JMS消息服务器 ActiveMQ\r\n\r\n> ActiveMQ 是Apache出品，最流行的，能力强劲的开源消息总线。ActiveMQ 是一个完全支持JMS1.1和J2EE 1.4规范的。\r\n\r\n主要特点：\r\n\r\n[disc]\r\n* 多种语言和协议编写客户端。语言: Java, C, C++, C#, Ruby, Perl, Python, PHP。应用协议: OpenWire,Stomp REST,WS Notification,XMPP,AMQP\r\n* 完全支持JMS1.1和J2EE 1.4规范 (持久化,XA消息,事务)\r\n* 对Spring的支持,ActiveMQ可以很容易内嵌到使用Spring的系统里面去,而且也支持Spring2.0的特性\r\n* 通过了常见J2EE服务器(如 Geronimo,JBoss 4, GlassFish,WebLogic)的测试,其中通过JCA 1.5 resource adaptors的配置,可以让ActiveMQ可以自动的部署到任何兼容J2EE 1.4 商业服务器上\r\n* 支持多种传送协议:in-VM,TCP,SSL,NIO,UDP,JGroups,JXTA\r\n* 支持通过JDBC和journal提供高速的消息持久化\r\n* 从设计上保证了高性能的集群,客户端-服务器,点对点\r\n* 支持Ajax\r\n* 支持与Axis的整合\r\n* 可以很容易得调用内嵌JMS provider,进行测试\r\n\r\n=== 分布式消息中间件 Metamorphosis\r\n\r\n> Metamorphosis (MetaQ) 是一个高性能、高可用、可扩展的分布式消息中间件，类似于LinkedIn的Kafka，具有消息存储顺序写、吞吐量大和支持本地和XA事务等特性，适用于大吞吐量、顺序消息、广播和日志数据传输等场景，在淘宝和支付宝有着广泛的应用，现已开源。\r\n\r\n主要特点：\r\n\r\n[disc]\r\n* 生产者、服务器和消费者都可分布\r\n* 消息存储顺序写\r\n* 性能极高,吞吐量大\r\n* 支持消息顺序\r\n* 支持本地和XA事务\r\n* 客户端pull，随机读,利用sendfile系统调用，zero-copy ,批量拉数据\r\n* 支持消费端事务\r\n* 支持消息广播模式\r\n* 支持异步发送消息\r\n* 支持http协议\r\n* 支持消息重试和recover\r\n* 数据迁移、扩容对用户透明\r\n* 消费状态保存在客户端\r\n* 支持同步和异步复制两种HA\r\n* 支持group commit\r\n\r\n\r\n=== 分布式消息中间件 RocketMQ\r\n> RocketMQ 是一款分布式、队列模型的消息中间件，具有以下特点：\r\n\r\n[disc]\r\n* 能够保证严格的消息顺序\r\n* 提供丰富的消息拉取模式\r\n* 高效的订阅者水平扩展能力\r\n* 实时的消息订阅机制\r\n* 亿级消息堆积能力\r\n* Metaq3.0 版本改名，产品名称改为RocketMQ\r\n\r\n=== 其他MQ\r\n[disc]\r\n* .NET消息中间件 DotNetMQ\r\n* 基于HBase的消息队列 HQueue\r\n* Go 的 MQ 框架 KiteQ\r\n* AMQP消息服务器 RabbitMQ\r\n* MemcacheQ 是一个基于 MemcacheDB 的消息队列服务器。\r\n\r\n\r\n= 为什么需要消息队列（重要）\r\n\r\n消息系统的核心作用就是三点：解耦，异步和并行\r\n以用户注册的案列来说明消息系统的作用\r\n\r\n== 用户注册的一般流程\r\n\r\nimage::{img}/img/storm/2017-03-28_152848.png[]\r\n---\r\n问题：随着后端流程越来越多，每步流程都需要额外的耗费很多时间，从而会导致用户更长的等待延迟。\r\n\r\n== 用户注册的并行执行\r\n\r\nimage::{img}/img/storm/2017-03-28_152855.png[]\r\n---\r\n问题：系统并行的发起了4个请求，4个请求中，如果某一个环节执行1分钟，其他环节再快，用户也需要等待1分钟。如果其中一个环节异常之后，整个服务挂掉了。\r\n\r\nimage::{img}/img/storm/2017-03-28_152902.png[]\r\n---\r\n\r\n== 用户注册的最终一致\r\n\r\nimage::{img}/img/storm/2017-03-28_152910.png[]\r\n---\r\n1、 保证主流程的正常执行、执行成功之后，发送MQ消息出去。\r\n2、 需要这个destination的其他系统通过消费数据再执行，最终一致。\r\n\r\nimage::{img}/img/storm/2017-03-28_152916.png[]\r\n---\r\n\r\n= Kafka核心组件\r\n\r\n[disc]\r\n* Topic ：消息根据Topic进行归类\r\n* Producer：发送消息者\r\n* Consumer：消息接受者\r\n* broker：每个kafka实例(server)\r\n* Zookeeper：依赖集群保存meta信息。\r\n\r\nimage::{img}/img/storm/2017-03-28_152924.png[]\r\n---\r\n= Kafka集群部署\r\n\r\n== 集群部署的基本流程\r\n\r\n　　下载安装包、解压安装包、修改配置文件、分发安装包、启动集群\r\n\r\n== 集群部署的基础环境准备\r\n\r\n　　安装前的准备工作（zk集群已经部署完毕）\r\n[disc]\r\n* 关闭防火墙\r\n+\r\n```\r\nchkconfig iptables off  && setenforce 0\r\n```\r\n* 创建用户\r\n+\r\n```\r\ngroupadd realtime &&　useradd realtime　&& usermod -a -G realtime realtime\r\n```\r\n* 创建工作目录并赋权\r\n+\r\n```\r\nmkdir /export\r\nmkdir /export/servers\r\nchmod 755 -R /export\r\n```\r\n* 切换到realtime用户下\r\n+\r\n```\r\nsu realtime\r\n```\r\n\r\n== Kafka集群部署\r\n\r\n=== 下载安装包\r\nhttp://kafka.apache.org/downloads.html[]\r\n在linux中使用wget命令下载安装包\r\n```\r\nwget http://mirrors.hust.edu.cn/apache/kafka/0.8.2.2/kafka_2.11-0.8.2.2.tgz\r\n```\r\n\r\n=== 解压安装包\r\n```\r\ntar -zxvf /export/software/kafka_2.11-0.8.2.2.tgz -C /export/servers/\r\ncd /export/servers/\r\nln -s kafka_2.11-0.8.2.2 kafka\r\n```\r\n\r\n=== 修改配置文件\r\n\r\n```\r\ncp /export/servers/kafka/config/server.properties /export/servers/kafka/config/server.properties.bak\r\n\r\nvi /export/servers/kafka/config/server.properties\r\n```\r\n\r\nimage::{img}/img/storm/2017-03-28_152939.png[]\r\n---\r\n\r\n=== 分发安装包\r\n```\r\nscp -r /export/servers/kafka_2.11-0.8.2.2 kafka02:/export/servers\r\n```\r\n然后分别在各机器上创建软连\r\n```\r\ncd /export/servers/\r\nln -s kafka_2.11-0.8.2.2 kafka\r\n```\r\n\r\n=== 再次修改配置文件（重要）\r\n依次修改各服务器上配置文件的的broker.id，分别是0,1,2不得重复。\r\n\r\n=== 启动集群\r\n依次在各节点上启动kafka\r\n```\r\nbin/kafka-server-start.sh config/server.properties\r\n```\r\n\r\n== Kafka常用操作命令\r\n[disc]\r\n* 查看当前服务器中的所有topic\r\n+\r\n```\r\nbin/kafka-topics.sh --list --zookeeper zookeeper:2181\r\n```\r\n* 创建topic\r\n+\r\n```\r\n./kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 3 --topic first\r\n```\r\n* 删除topic\r\n+\r\n```\r\nbin/kafka-topics.sh --delete --zookeeper zookeeper:2181 --topic test\r\n```\r\n需要server.properties中设置delete.topic.enable=true否则只是标记删除或者直接重启。\r\n* 通过shell命令发送消息\r\n+\r\n```\r\nbin/kafka-console-producer.sh --broker-list localhost:9092 --topic test\r\n```\r\n* 通过shell消费消息\r\n+\r\n```\r\nbin/kafka-console-consumer.sh --zookeeper zookeeper:2181 --from-beginning --topic test1\r\n```\r\n* 查看消费位置\r\n+\r\n```\r\nbin/kafka-run-class.sh kafka.tools.ConsumerOffsetChecker --zookeeper zookeeper:2181 --group testGroup\r\n```\r\n* 查看某个Topic的详情\r\n+\r\n```\r\nbin/kafka-topics.sh --topic test --describe --zookeeper zookeeper:2181\r\n```\r\n\r\n= Kafka生产者Java API\r\n\r\nimage::{img}/img/storm/2017-03-28_152953.png[]\r\n---\r\n\r\n= Kafka消费者Java API\r\n\r\nimage::{img}/img/storm/2017-03-28_153002.png[]\r\n---\r\n　　\r\nStreamMessage：Java 数据流消息，用标准流操作来顺序的填充和读取。\r\nMapMessage：一个Map类型的消息；名称为 string 类型，而值为 Java 的基本类型。\r\nTextMessage：普通字符串消息，包含一个String。\r\nObjectMessage：对象消息，包含一个可序列化的Java 对象\r\nBytesMessage：二进制数组消息，包含一个byte[]。\r\nXMLMessage:  一个XML类型的消息。\r\n最常用的是TextMessage和ObjectMessage。\r\n\r\n== 参考\r\n\r\nhttp://kafka.apache.org/08/documentation/#quickstart[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/Kafka负载均衡-自定义Partition-文件存储机制",
        "title": "Kafka负载均衡-自定义Partition-文件存储机制",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: kafka\r\n\r\n= kafka\r\n\r\n\r\n== Kafka整体结构图\r\nKafka名词解释和工作方式\r\n\r\nProducer :: 消息生产者，就是向kafka broker发消息的客户端。\r\nConsumer :: 消息消费者，向kafka broker取消息的客户端\r\nTopic :: 咋们可以理解为一个队列。\r\nConsumer Group （CG）:: 这是 *kafka* 用来实现一个 *topic* 消息的广播（发给所有的 *consumer* ）和单播（发给任意一个 *consumer* ）的手段。一个 *topic* 可以有多个 *CG* 。*topic* 的消息会复制（不是真的复制，是概念上的）到所有的 *CG* ，但每个 *partion* 只会把消息发给该 *CG* 中的一个 *consumer* 。如果需要实现广播，只要每个 *consumer* 有一个独立的 *CG* 就可以了。要实现单播只要所有的 *consumer* 在同一个 *CG* 。用 *CG* 还可以将 *consumer* 进行自由的分组而不需要多次发送消息到不同的 *topic* 。\r\nBroker :: 一台 *kafka* 服务器就是一个 *broker* 。一个集群由多个 *broker* 组成。一个 *broker* 可以容纳多个 *topic* 。\r\nPartition:: 为了实现扩展性，一个非常大的 *topic* 可以分布到多个 *broker* （即服务器）上，一个 *topic* 可以分为多个 *partition* ，每个 *partition* 是一个有序的队列。 *partition* 中的每条消息都会被分配一个有序的 *id* （ *offset* ）。 *kafka* 只保证按一个 *partition* 中的顺序将消息发给 *consumer* ，不保证一个 *topic* 的整体（多个 *partition* 间）的顺序。\r\nOffset::  *kafka* 的存储文件都是按照 *offset.kafka* 来命名，用 *offset* 做名字的好处是方便查找。例如你想找位于2049的位置，只要找到 *2048.kafka* 的文件即可。当然 *the first offset* 就是 *00000000000.kafka*\r\n\r\n== Consumer与topic关系\r\n本质上 *kafka* 只支持 *Topic*\r\n[disc]\r\n* 每个 *group* 中可以有多个 *consumer* ，每个 *consumer* 属于一个 *consumer*   *group* ；\r\n　　通常情况下，一个 *group* 中会包含多个 *consumer* ，这样不仅可以提高 *topic* 中消息的并发消费能力，而且还能提高\"故障容错\"性，如果 *group* 中的某个 *consumer* 失效那么其消费的 *partitions* 将会有其他 *consumer* 自动接管。\r\n* 对于 *Topic* 中的一条特定的消息，只会被订阅此 *Topic* 的每个 *group* 中的其中一个 *consumer* 消费，此消息不会发送给一个 *group* 的多个 *consumer* ；\r\n　　那么一个 *group* 中所有的 *consumer* 将会交错的消费整个 *Topic* ，每个 *group* 中 *consumer* 消息消费互相独立，我们可以认为一个 *group* 是一个\"订阅\"者。\r\n* 在 *kafka* 中,一个 *partition* 中的消息只会被 *group* 中的一个 *consumer* 消费(同一时刻)；\r\n一个 *Topic* 中的每个 *partions* ，只会被一个\"订阅者\"中的一个 *consumer* 消费，不过一个 *consumer* 可以同时消费多个 *partitions* 中的消息。\r\n*  *kafka* 的设计原理决定,对于一个 *topic* ，同一个 *group* 中不能有多于 *partitions* 个数的 *consumer* 同时消费，否则将意味着某些 *consumer* 将无法得到消息。\r\n　　 *kafka* 只能保证一个 *partition* 中的消息被某个 *consumer* 消费时是顺序的；事实上，从 *Topic* 角度来说,当有多个 *partitions* 时,消息仍不是全局有序的。\r\n\r\n== Kafka消息的分发\r\n*Producer* 客户端负责消息的分发\r\n[disc]\r\n*  *kafka* 集群中的任何一个 *broker* 都可以向 *producer* 提供 *metadata* 信息,这些 *metadata* 中包含\"集群中存活的 *servers* 列表 *\"/\"partitions leader* 列表\"等信息；\r\n* 当 *producer* 获取到 *metadata* 信息之后,  *producer* 将会和 *Topic* 下所有 *partition*   *leader* 保持 *socket* 连接；\r\n* 消息由 *producer* 直接通过 *socket* 发送到 *broker* ，中间不会经过任何\"路由层\"，事实上，消息被路由到哪个 *partition* 上由 *producer* 客户端决定；\r\n　　比如可以采用\" *random* \"\" *key* - *hash* \"\"轮询\"等,如果一个 *topic* 中有多个 *partitions* ,那么在 *producer* 端实现\"消息均衡分发\"是必要的。\r\n* 在 *producer* 端的配置文件中,开发者可以指定 *partition* 路由的方式。\r\n\r\n　　Producer消息发送的应答机制\r\n　　设置发送数据是否需要服务端的反馈,有三个值0,1,-1\r\n　　0: producer不会等待broker发送ack\r\n　　1: 当leader接收到消息之后发送ack\r\n　　-1: 当所有的follower都同步消息成功后发送ack\r\n    request.required.acks=0\r\n\r\n== Consumer的负载均衡\r\n当一个 *group* 中,有 *consumer* 加入或者离开时,会触发 *partitions* 均衡.均衡的最终目的,是提升 *topic* 的并发消费能力，步骤如下：\r\n\r\n. 假如 *topic1* ,具有如下 *partitions: P0,P1,P2,P3*\r\n. 加入 *group* 中,有如下 *consumer: C1,C2*\r\n. 首先根据 *partition* 索引号对 *partitions* 排序:  *P0,P1,P2,P3*\r\n. 根据 *consumer.id* 排序:  *C0,C1*\r\n. 计算倍数:  *M = [P0,P1,P2,P3].size / [C0,C1].size* ,本例值 *M=2* (向上取整)\r\n. 然后依次分配 *partitions* :  *C0 = [P0,P1],C1=[P2,P3],即Ci = [P(i * M),P((i + 1) * M -1)]*\r\n\r\n\r\nimage::{img}/img/storm/2017-04-01_104025.png[]\r\n---\r\n\r\n== kafka文件存储机制\r\n\r\n=== Kafka文件存储基本结构\r\n[disc]\r\n* 在 *Kafka* 文件存储中，同一个 *topic* 下有多个不同 *partition* ，每个 *partition* 为一个目录， *partiton* 命名规则为 *topic* 名称+有序序号，第一个 *partiton* 序号从0开始，序号最大值为 *partitions* 数量减1。\r\n* 每个 *partion* (目录)相当于一个巨型文件被平均分配到多个大小相等 *segment* (段)数据文件中。但每个段 *segment file* 消息数量不一定相等，这种特性方便 *old*   *segment*   *file* 快速被删除。默认保留7天的数据。\r\n+\r\nimage::{img}/img/storm/2017-04-01_104135.png[]\r\n---\r\n* 每个 *partiton* 只需要支持顺序读写就行了， *segment* 文件生命周期由服务端配置参数决定。（什么时候创建，什么时候删除）\r\n+\r\nimage::{img}/img/storm/2017-04-01_104143.png[]\r\n---\r\n[qanda]\r\n数据有序的讨论？\r\n    一个 *partition* 的数据是否是有序的？::\r\n      间隔性有序，不连续\r\n      针对一个 *topic* 里面的数据，只能做到 *partition* 内部有序，不能做到全局有序。\r\n      特别加入消费者的场景后，如何保证消费者消费的数据全局有序的？伪命题。\r\n      只有一种情况下才能保证全局有序？就是只有一个 *partition* 。\r\n\r\n=== Kafka Partition Segment\r\n[disc]\r\n*  *Segment file* 组成：由2大部分组成，分别为 *index*   *file* 和 *data*   *file* ，此2个文件一一对应，成对出现，后缀 *.index* 和 *.log* 分别表示为 *segment* 索引文件、数据文件。\r\n+\r\nimage::{img}/img/storm/2017-04-01_104152.png[]\r\n---\r\n*  *Segment* 文件命名规则： *partion* 全局的第一个 *segment* 从0开始，后续每个 *segment* 文件名为上一个 *segment* 文件最后一条消息的 *offset* 值。数值最大为64位 *long* 大小，19位数字字符长度，没有数字用0填充。\r\n* 索引文件存储大量元数据，数据文件存储大量消息，索引文件中元数据指向对应数据文件中 *message* 的物理偏移地址。\r\n+\r\nimage::{img}/img/storm/2017-04-01_104159.png[]\r\n---\r\n3，497：当前log文件中的第几条信息，存放在磁盘上的那个地方\r\n\r\n上述图中索引文件存储大量元数据，数据文件存储大量消息，索引文件中元数据指向对应数据文件中message的物理偏移地址。\r\n其中以索引文件中元数据3,497为例，依次在数据文件中表示第3个message(在全局partiton表示第368772个message)、以及该消息的物理偏移地址为497。\r\n\r\n* segment data file由许多message组成， qq物理结构如下：\r\n关键字\r\n解释说明\r\n8 byte offset ::\r\n在parition(分区)内的每条消息都有一个有序的id号，这个id号被称为偏移(offset),它可以唯一确定每条消息在parition(分区)内的位置。即offset表示partiion的第多少message\r\n4 byte message size ::\r\nmessage大小\r\n4 byte CRC32 ::\r\n用crc32校验message\r\n1 byte “magic\" ::\r\n表示本次发布Kafka服务程序协议版本号\r\n1 byte “attributes\" ::\r\n表示为独立版本、或标识压缩类型、或编码类型。\r\n4 byte key length ::\r\n表示key的长度,当key为-1时，K byte key字段不填\r\nK byte key ::\r\n可选\r\nvalue bytes payload ::\r\n表示实际消息数据。\r\n\r\n\r\n=== Kafka 查找message\r\n读取offset=368776的message，需要通过下面2个步骤查找。\r\n\r\nimage::{img}/img/storm/2017-04-01_104213.png[]\r\n---\r\n==== 查找segment file\r\n----\r\n　　00000000000000000000.index表示最开始的文件，起始偏移量(offset)为0\r\n　　00000000000000368769.index的消息量起始偏移量为368770 = 368769 + 1\r\n　　00000000000000737337.index的起始偏移量为737338=737337 + 1\r\n　　其他后续文件依次类推。\r\n以起始偏移量命名并排序这些文件，只要根据offset **二分查找**文件列表，就可以快速定位到具体文件。当offset=368776时定位到00000000000000368769.index和对应log文件。\r\n5.3.2、通过segment file查找message\r\n当offset=368776时，依次定位到00000000000000368769.index的元数据物理位置和00000000000000368769.log的物理偏移地址\r\n　　然后再通过00000000000000368769.log顺序查找直到offset=368776为止。\r\n----\r\n\r\n== Kafka自定义Partition\r\n    见代码\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/storm",
        "title": "storm",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: storm 简介\r\n\r\n\r\n== 离线计算是什么？\r\n\r\n----\r\n    离线计算：批量获取数据、批量传输数据、周期性批量计算数据、数据展示\r\n    代表技术：Sqoop批量导入数据、HDFS批量存储数据、MapReduce批量计算数据、Hive批量计算数据、***任务调度\r\n1，hivesql\r\n2、调度平台\r\n3、Hadoop集群运维\r\n4、数据清洗（脚本语言）\r\n5、元数据管理\r\n6、数据稽查\r\n7、数据仓库模型架构\r\n----\r\n\r\n== 流式计算是什么\r\n\r\n流式计算：数据实时产生、数据实时传输、数据实时计算、实时展示\r\n代表技术：Flume实时获取数据、Kafka/metaq实时数据存储、Storm/JStorm实时数据计算、Redis实时结果缓存、持久化存储(mysql)。\r\n一句话总结：将源源不断产生的数据实时收集并实时计算，尽可能快的得到计算结果\r\n\r\n== 离线计算与实时计算的区别\r\n最大的区别：实时收集、实时计算、实时展示\r\n\r\n== Storm是什么？\r\n----\r\n\r\nFlume实时采集，低延迟\r\nKafka消息队列，低延迟\r\nStorm实时计算，低延迟\r\nRedis实时存储，低延迟\r\n\r\nStorm用来实时处理数据，特点：低延迟、高可用、分布式、可扩展、数据不丢失。提供简单容易理解的接口，便于开发。\r\n\r\n\r\n海量数据？数据类型很多，产生数据的终端很多，处理数据能力增强\r\n----\r\n\r\n== Storm与Hadoop的区别\r\n\r\n----\r\n   Storm用于实时计算，Hadoop用于离线计算。\r\n   Storm处理的数据保存在内存中，源源不断；Hadoop处理的数据保存在文件系统中，一批一批。\r\n   Storm的数据通过网络传输进来；Hadoop的数据保存在磁盘中。\r\n   Storm与Hadoop的编程模型相似\r\n\r\nJob：任务名称\r\nJobTracker：项目经理\r\nTaskTracker：开发组长、产品经理\r\nChild:负责开发的人员\r\nMapper/Reduce:开发人员中的两种角色，一种是服务器开发、一种是客户端开发\r\n\r\nTopology:任务名称\r\nNimbus:项目经理\r\nSupervisor:开组长、产品经理\r\nWorker:开人员\r\nSpout/Bolt：开人员中的两种角色，一种是服务器开发、一种是客户端开发\r\n----\r\n\r\n== Storm应用场景及行业案例\r\n----\r\n        Storm用来实时计算源源不断产生的数据，如同流水线生产。\r\n6.1、运用场景\r\n   日志分析\r\n从海量日志中分析出特定的数据，并将分析的结果存入外部存储器用来辅佐决策。\r\n   管道系统\r\n将一个数据从一个系统传输到另外一个系统，比如将数据库同步到Hadoop\r\n   消息转化器\r\n将接受到的消息按照某种格式进行转化，存储到另外一个系统如消息中间件\r\n----\r\n=== 典型案列\r\n----\r\n   一淘-实时分析系统：实时分析用户的属性，并反馈给搜索引擎\r\n最初，用户属性分析是通过每天在云梯上定时运行的MR job来完成的。为了满足实时性的要求，希望能够实时分析用户的行为日志，将最新的用户属性反馈给搜索引擎，能够为用户展现最贴近其当前需求的结果。\r\n   携程-网站性能监控：实时分析系统监控携程网的网站性能\r\n利用HTML5提供的performance标准获得可用的指标，并记录日志。Storm集群实时分析日志和入库。使用DRPC聚合成报表，通过历史数据对比等判断规则，触发预警事件。\r\n   阿里妈妈-用户画像：实时计算用户的兴趣数据\r\n为了更加精准投放广告，阿里妈妈后台计算引擎需要维护每个用户的兴趣点（理想状态是，你对什么感兴趣，就向你投放哪类广告）。用户兴趣主要基于用户的历史行为、用户的实时查询、用户的实时点击、用户的地理信息而得，其中实时查询、实时点击等用户行为都是实时数据。考虑到系统的实时性，阿里妈妈使用Storm维护用户兴趣数据，并在此基础上进行受众定向的广告投放。\r\n----\r\n== Storm核心组件（重要）\r\n\r\nimage::{img}/img/storm/2017-03-26-3.png[]\r\n---\r\n----\r\n   Nimbus：负责资源分配和任务调度。\r\n   Supervisor：负责接受nimbus分配的任务，启动和停止属于自己管理的worker进程。---通过配置文件设置当前supervisor上启动多少个worker。\r\n   Worker：运行具体处理组件逻辑的进程。Worker运行的任务类型只有两种，一种是Spout任务，一种是Bolt任务。\r\n   Task：worker中每一个spout/bolt的线程称为一个task. 在storm0.8之后，task不再与物理线程对应，不同spout/bolt的task可能会共享一个物理线程，该线程称为executor。\r\n----\r\n== Storm编程模型（重要）\r\n\r\nimage::{img}/img/storm/2017-03-26-2.png[]\r\n---\r\n----\r\n   Topology：Storm中运行的一个实时应用程序的名称。（拓扑）\r\n   Spout：在一个topology中获取源数据流的组件。\r\n通常情况下spout会从外部数据源中读取数据，然后转换为topology内部的源数据。\r\n   Bolt：接受数据然后执行处理的组件,用户可以在其中执行自己想要的操作。\r\n   Tuple：一次消息传递的基本单元，理解为一组消息就是一个Tuple。\r\n   Stream：表示数据的流向。\r\n----\r\n== 流式计算一般架构图（重要）\r\n\r\nimage::{img}/img/storm/2017-03-26-1.png[]\r\n---\r\n----\r\n   其中flume用来获取数据。\r\n   Kafka用来临时保存数据。\r\n   Strom用来计算数据。\r\n   Redis是个内存数据库，用来保存数据。\r\n----\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/Storm目录树、任务提交、消息容错",
        "title": "Storm目录树、任务提交、消息容错",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Storm\r\n\r\n= Storm\r\n\r\n== Storm程序的并发机制\r\n\r\n=== 概念\r\n\r\nWorkers (JVMs)::\r\n在一个物理节点上可以运行一个或多个独立的JVM 进程。一个Topology可以包含一个或多个worker(并行的跑在不同的物理机上), 所以worker process就是执行一个topology的子集, 并且worker只能对应于一个topology\r\nExecutors (threads)::\r\n在一个worker JVM进程中运行着多个Java线程。一个executor线程可以执行一个或多个tasks。但一般默认每个executor只执行一个task。一个worker可以包含一个或多个executor, 每个component (spout或bolt)至少对应于一个executor, 所以可以说executor执行一个compenent的子集, 同时一个executor只能对应于一个component。\r\nTasks(bolt/spout instances::\r\nTask就是具体的处理逻辑对象，每一个Spout和Bolt会被当作很多task在整个集群里面执行。每一个task对应到一个线程，而stream grouping则是定义怎么从一堆task发射tuple到另外一堆task。你可以调用TopologyBuilder.setSpout和TopBuilder.setBolt来设置并行度 — 也就是有多少个task。\r\n\r\n=== 配置并行度\r\n* 对于并发度的配置, 在storm里面可以在多个地方进行配置, 优先级为：\r\n+\r\n```\r\n　　defaults.yaml < storm.yaml < topology-specific configuration\r\n　　< internal component-specific configuration < external component-specific configuration\r\n```\r\n* worker processes的数目, 可以通过配置文件和代码中配置, worker就是执行进程, 所以考虑并发的效果, 数目至少应该大亍machines的数目\r\n* executor的数目, component的并发线程数，只能在代码中配置(通过setBolt和setSpout的参数), 例如, setBolt(\"green-bolt\", new GreenBolt(), 2)\r\n* tasks的数目, 可以不配置, 默认和executor1:1, 也可以通过setNumTasks()配置\r\n+\r\n```\r\nTopology的worker数通过config设置，即执行该topology的worker（java）进程数。它可以通过 storm rebalance 命令任意调整。\r\nConfig conf = newConfig();\r\nconf.setNumWorkers(2);//用2个worker\r\ntopologyBuilder.setSpout(\"blue-spout\",newBlueSpout(),2);//设置2个并发度\r\ntopologyBuilder.setBolt(\"green-bolt\",newGreenBolt(),2).setNumTasks(4).shuffleGrouping(\"blue-spout\");//设置2个并发度，4个任务\r\ntopologyBuilder.setBolt(\"yellow-bolt\",newYellowBolt(),6).shuffleGrouping(\"green-bolt\");//设置6个并发度\r\nStormSubmitter.submitTopology(\"mytopology\", conf, topologyBuilder.createTopology());\r\n```\r\n\r\nimage::{img}/img/storm/2017-03-28_163004.png[]\r\n---\r\n\r\n3个组件的并发度加起来是10，就是说拓扑一共有10个executor，一共有2个worker，每个worker产生10 / 2 = 5条线程。\r\n绿色的bolt配置成2个executor和4个task。为此每个executor为这个bolt运行2个task。\r\n\r\n* 动态的改变并行度\r\n　　Storm支持在不 restart topology 的情况下, 动态的改变(增减) worker processes 的数目和 executors 的数目, 称为rebalancing. 通过Storm web UI，或者通过storm rebalance命令实现：\r\nstorm rebalance mytopology -n 5 -e blue-spout=3 -e yellow-bolt=10\r\n\r\n\r\n\r\n== Storm通信机制\r\n   Worker间的通信经常需要通过网络跨节点进行，Storm使用ZeroMQ或Netty(0.9以后默认使用)作为进程间通信的消息框架。\r\n   Worker进程内部通信：不同worker的thread通信使用LMAX Disruptor来完成。\r\n   不同topologey之间的通信，Storm不负责，需要自己想办法实现，例如使用kafka等；\r\n\r\n== Worker进程间通信\r\n　　worker进程间消息传递机制，消息的接收和处理的大概流程见下图\r\n\r\nimage::{img}/img/storm/2017-03-28_163014.png[]\r\n---\r\n* 对于worker进程来说，为了管理流入和传出的消息，每个worker进程有一个独立的接收线程[m1](对配置的TCP端口supervisor.slots.ports进行监听);\r\n对应Worker接收线程，每个worker存在一个独立的发送线程[m2]，它负责从worker的transfer-queue[m3]中读取消息，并通过网络发送给其他worker\r\n* 每个executor有自己的incoming-queue[m4]和outgoing-queue[m5]。\r\nWorker接收线程将收到的消息通过task编号传递给对应的executor(一个或多个)的incoming-queues;\r\n每个executor有单独的线程分别来处理spout/bolt的业务逻辑，业务逻辑输出的中间数据会存放在outgoing-queue中，当executor的outgoing-queue中的tuple达到一定的阀值，executor的发送线程将批量获取outgoing-queue中的tuple,并发送到transfer-queue中。\r\n* 每个worker进程控制一个或多个executor线程，用户可在代码中进行配置。其实就是我们在代码中设置的并发度个数。\r\n\r\n== Worker进程间通信分析\r\n\r\nimage::{img}/img/storm/2017-03-28_163023.png[]\r\n---\r\n1、 Worker接受线程通过网络接受数据，并根据Tuple中包含的taskId，匹配到对应的executor；然后根据executor找到对应的incoming-queue，将数据存发送到incoming-queue队列中。\r\n2、 业务逻辑执行现成消费incoming-queue的数据，通过调用Bolt的execute(xxxx)方法，将Tuple作为参数传输给用户自定义的方法\r\n3、 业务逻辑执行完毕之后，将计算的中间数据发送给outgoing-queue队列，当outgoing-queue中的tuple达到一定的阀值，executor的发送线程将批量获取outgoing-queue中的tuple,并发送到Worker的transfer-queue中\r\n4、 Worker发送线程消费transfer-queue中数据，计算Tuple的目的地，连接不同的node+port将数据通过网络传输的方式传送给另一个的Worker。\r\n5、 另一个worker执行以上步骤1的操作。\r\n\r\n== Worker进程间技术(Netty、ZeroMQ)\r\n\r\n=== Netty\r\n　　Netty是一个NIO client-server(客户端服务器)框架，使用Netty可以快速开发网络应用，例如服务器和客户端协议。Netty提供了一种新的方式来使开发网络应用程序，这种新的方式使得它很容易使用和有很强的扩展性。Netty的内部实现时很复杂的，但是Netty提供了简单易用的api从网络处理代码中解耦业务逻辑。Netty是完全基于NIO实现的，所以整个Netty都是异步的。\r\n　　书籍：Netty权威指南\r\n\r\n=== ZeroMQ\r\nZeroMQ是一种基于消息队列的多线程网络库，其对套接字类型、连接处理、帧、甚至路由的底层细节进行抽象，提供跨越多种传输协议的套接字。ZeroMQ是网络通信中新的一层，介于应用层和传输层之间（按照TCP/IP划分），其是一个可伸缩层，可并行运行，分散在分布式系统间。\r\nZeroMQ定位为：一个简单好用的传输层，像框架一样的一个socket library，他使得Socket编程更加简单、简洁和性能更高。是一个消息处理队列库，可在多个线程、内核和主机盒之间弹性伸缩。ZMQ的明确目标是“成为标准网络协议栈的一部分，之后进入Linux内核”。\r\n\r\n== Worker 内部通信技术(Disruptor)\r\n\r\n=== Disruptor的来历\r\n* 一个公司的业务与技术的关系，一般可以分为三个阶段。第一个阶段就是跟着业务跑。第二个阶段是经历了几年的时间，才达到的驱动业务阶段。第三个阶段，技术引领业务的发展乃至企业的发展。所以我们在学习Disruptor这个技术时，不得不提LMAX这个机构，因为Disruptor这门技术就是由LMAX公司开发并开源的。\r\n* LMAX是在英国注册并受到FSA监管（监管号码为509778）的外汇黄金交易所。LMAX也是欧洲第一家也是唯一一家采用多边交易设施Multilateral Trading Facility（MTF）拥有交易所牌照和经纪商牌照的欧洲顶级金融公司\r\n* LAMX拥有最迅捷的交易平台，顶级技术支持。LMAX交易所使用“（MTF）分裂器Disruptor”技术，可以在极短时间内（一般在3百万秒之一内）处理订单，在一个线程里每秒处理6百万订单。所有订单均为撮合成交形式，无一例外。多边交易设施（MTF）曾经用来设计伦敦证券交易 所（london Stock Exchange）、德国证券及衍生工具交易所（Deutsche Borse）和欧洲证券交易所（Euronext）。\r\n* 2011年LMAX凭借该技术获得了金融行业技术评选大赛的最佳交易系统奖和甲骨文“公爵杯”创新编程框架奖。\r\n\r\n=== Disruptor是什么\r\n1、 简单理解：Disruptor是一个Queue。Disruptor是实现了“队列”的功能，而且是一个有界队列。而队列的应用场景自然就是“生产者-消费者”模型。\r\n2、 在JDK中Queue有很多实现类，包括不限于ArrayBlockingQueue、LinkBlockingQueue，这两个底层的数据结构分别是数组和链表。数组查询快，链表增删快，能够适应大多数应用场景。\r\n3、 但是ArrayBlockingQueue、LinkBlockingQueue都是线程安全的。涉及到线程安全，就会有synchronized、lock等关键字，这就意味着CPU会打架。\r\n4、 Disruptor一种线程之间信息无锁的交换方式（使用CAS（Compare And Swap/Set）操作）。\r\n\r\n=== Disruptor主要特点\r\n1、 没有竞争=没有锁=非常快。\r\n2、 所有访问者都记录自己的序号的实现方式，允许多个生产者与多个消费者共享相同的数据结构。\r\n3、 在每个对象中都能跟踪序列号（ring buffer，claim Strategy，生产者和消费者），加上神奇的cache line padding，就意味着没有为伪共享和非预期的竞争。\r\n2.4.2、 Disruptor 核心技术点\r\n　　Disruptor可以看成一个事件监听或消息机制，在队列中一边生产者放入消息，另外一边消费者并行取出处理.\r\n　　底层是单个数据结构：一个ring buffer。\r\n　　每个生产者和消费者都有一个次序计算器，以显示当前缓冲工作方式。\r\n　　每个生产者消费者能够操作自己的次序计数器的能够读取对方的计数器，生产者能够读取消费者的计算器确保其在没有锁的情况下是可写的。\r\n　　\r\n　　核心组件\r\n* Ring Buffer 环形的缓冲区，负责对通过 Disruptor 进行交换的数据（事件）进行存储和更新。\r\n* Sequence 通过顺序递增的序号来编号管理通过其进行交换的数据（事件），对数据(事件)的处理过程总是沿着序号逐个递增处理。\r\n* RingBuffer底层是个数组，次序计算器是一个64bit long 整数型，平滑增长。\r\n　　\r\n\r\nimage::{img}/img/storm/2017-03-28_163035.png[]\r\n---\r\n\r\n1、 接受数据并写入到脚标31的位置，之后会沿着序号一直写入，但是不会绕过消费者所在的脚标。\r\n2、 Joumaler和replicator同时读到24的位置，他们可以批量读取数据到30\r\n3、消费逻辑线程读到了14的位置，但是没法继续读下去，因为他的sequence暂停在15的位置上，需要等到他的sequence给他序号。如果sequence能正常工作，就能读取到30的数据。\r\n\r\n\r\n== Storm组件本地目录树\r\n\r\nimage::{img}/img/storm/2017-03-28_163042.png[]\r\n---\r\n== Storm zookeeper目录树\r\n\r\nimage::{img}/img/storm/2017-03-28_163050.png[]\r\n---\r\n== Storm 任务提交的过程\r\n\r\nimage::{img}/img/storm/2017-03-28_163058.png[]\r\n---\r\nTopologyMetricsRunnable.TaskStartEvent[oldAssignment=,newAssignment=Assignment[masterCodeDir=C:\\Users\\MAOXIA~1\\AppData\\Local\\Temp\\\\e73862a8-f7e7-41f3-883d-af494618bc9f\\nimbus\\stormdist\\double11-1-1458909887,nodeHost={61ce10a7-1e78-4c47-9fb3-c21f43a331ba=192.168.1.106},taskStartTimeSecs={1=1458909910, 2=1458909910, 3=1458909910, 4=1458909910, 5=1458909910, 6=1458909910, 7=1458909910, 8=1458909910},workers=[ResourceWorkerSlot[hostname=192.168.1.106,memSize=0,cpu=0,tasks=[1, 2, 3, 4, 5, 6, 7, 8],jvm=,nodeId=61ce10a7-1e78-4c47-9fb3-c21f43a331ba,port=6900]],timeStamp=1458909910633,type=Assign],task2Component=,clusterName=,topologyId=double11-1-1458909887,timestamp=0]\r\n\r\n\r\nimage::{img}/img/storm/2017-03-28_163734.png[]\r\n---\r\n\r\n== Storm 消息容错机制\r\n\r\n=== 总体介绍\r\n\r\n* 在storm中，可靠的信息处理机制是从spout开始的。\r\n* 一个提供了可靠的处理机制的spout需要记录他发射出去的tuple，当下游bolt处理tuple或者子tuple失败时spout能够重新发射。\r\n* Storm通过调用Spout的nextTuple()发送一个tuple。为实现可靠的消息处理，首先要给每个发出的tuple带上唯一的ID，并且将ID作为参数传递给SoputOutputCollector的emit()方法：collector.emit(new Values(\"value1\",\"value2\"), msgId); messageid就是用来标示唯一的tupke的，而rootid是随机生成的\r\n给每个tuple指定ID告诉Storm系统，无论处理成功还是失败，spout都要接收tuple树上所有节点返回的通知。如果处理成功，spout的ack()方法将会对编号是msgId的消息应答确认；如果处理失败或者超时，会调用fail()方法。\r\n\r\n=== 基本实现\r\n\r\nStorm 系统中有一组叫做\"acker\"的特殊的任务，它们负责跟踪DAG（有向无环图）中的每个消息。\r\nacker任务保存了spout id到一对值的映射。第一个值就是spout的任务id，通过这个id，acker就知道消息处理完成时该通知哪个spout任务。第二个值是一个64bit的数字，我们称之为\"ack val\"， 它是树中所有消息的随机id的异或计算结果。\r\n\r\nack val表示了整棵树的的状态，无论这棵树多大，只需要这个固定大小的数字就可以跟踪整棵树。当消息被创建和被应答的时候都会有相同的消息id发送过来做异或。 每当acker发现一棵树的ack val值为0的时候，它就知道这棵树已经被完全处理了\r\n\r\n\r\nimage::{img}/img/storm/2017-03-28_163743.png[]\r\n---\r\n\r\nimage::{img}/img/storm/2017-03-28_163751.png[]\r\n---\r\n\r\nimage::{img}/img/storm/2017-03-28_163757.png[]\r\n---\r\n\r\nimage::{img}/img/storm/2017-03-28_163804.png[]\r\n---\r\n\r\nimage::{img}/img/storm/2017-03-28_163811.png[]\r\n---\r\n\r\n=== 可靠性配置\r\n\r\n有三种方法可以去掉消息的可靠性：\r\n将参数Config.TOPOLOGY_ACKERS设置为0，通过此方法，当Spout发送一个消息的时候，它的ack方法将立刻被调用；\r\nSpout发送一个消息时，不指定此消息的messageID。当需要关闭特定消息可靠性的时候，可以使用此方法；\r\n最后，如果你不在意某个消息派生出来的子孙消息的可靠性，则此消息派生出来的子消息在发送时不要做锚定，即在emit方法中不指定输入消息。因为这些子孙消息没有被锚定在任何tuple tree中，因此他们的失败不会引起任何spout重新发送消息。\r\n\r\n一个worker进程运行一个专用的接收线程来负责将外部发送过来的消息移动到对应的executor线程的incoming-queue中\r\ntransfer-queue的大小由参数topology.transfer.buffer.size来设置。transfer-queue的每个元素实际上代表一个tuple的集合\r\ntransfer-queue的大小由参数topology.transfer.buffer.size来设置。\r\nexecutor的incoming-queue的大小用户可以自定义配置。\r\nexecutor的outgoing-queue的大小用户可以自定义配置\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/bigdata/storm/storm集群部署,单词计数,Stream Grouping",
        "title": "storm集群部署,单词计数,Stream Grouping",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: storm\r\n\r\n== 集群部署的基本流程\r\n----\r\n集群部署的流程：下载安装包、解压安装包、修改配置文件、分发安装包、启动集群\r\n注意：\r\n    所有的集群上都需要配置hosts\r\n----\r\n```\r\nvi  /etc/hosts\r\n192.168.239.128 storm01 zk01 hadoop01\r\n192.168.239.129 storm02 zk02 hadoop02\r\n192.168.239.130 storm03 zk03 hadoop03\r\n```\r\n\r\n== 集群部署的基础环境准备\r\n安装前的准备工作（zk集群已经部署完毕）\r\n\r\n. 关闭防火墙\r\n+\r\n```\r\nchkconfig iptables off  && setenforce 0\r\n```\r\n. 创建用户\r\n+\r\n```\r\ngroupadd realtime &&　useradd realtime　&& usermod -a -G realtime realtime\r\n```\r\n. 创建工作目录并赋权\r\n+\r\n```\r\nmkdir /export\r\nmkdir /export/servers\r\nchmod 755 -R /export\r\n```\r\n. 切换到realtime用户下\r\n+\r\n```\r\nsu realtime\r\n```\r\n\r\n== Storm集群部署\r\n. 下载安装包\r\n+\r\n```\r\nwget http://124.202.164.6/files/1139000006794ECA/apache.fayea.com/storm/apache-storm-0.9.5/apache-storm-0.9.5.tar.gz\r\n```\r\n\r\n. 解压安装包\r\n+\r\n```\r\ntar -zxvf apache-storm-0.9.5.tar.gz -C /export/servers/\r\ncd /export/servers/\r\nln -s apache-storm-0.9.5 storm\r\n```\r\n. 修改配置文件\r\n+\r\n```\r\nmv /export/servers/storm/conf/storm.yaml /export/servers/storm/conf/storm.yaml.bak\r\nvi /export/servers/storm/conf/storm.yaml\r\n```\r\n输入以下内容：\r\n+\r\nimage::{img}/img/storm/2017-03-28-01.png[]\r\n---\r\n\r\n. 分发安装包\r\n+\r\n```\r\nscp -r /export/servers/apache-storm-0.9.5 storm02:/export/servers\r\n#然后分别在各机器上创建软连接\r\ncd /export/servers/\r\nln -s apache-storm-0.9.5 storm\r\n```\r\n. 启动集群\r\n+\r\n```\r\n#在nimbus.host所属的机器上启动 nimbus服务\r\ncd /export/servers/storm/bin/\r\nnohup ./storm nimbus &\r\n#在nimbus.host所属的机器上启动ui服务\r\ncd /export/servers/storm/bin/\r\nnohup ./storm ui &\r\n#在其它个点击上启动supervisor服务\r\ncd /export/servers/storm/bin/\r\nnohup ./storm supervisor &\r\n```\r\n. 查看集群\r\n访问nimbus.host:/8080，即可看到storm的ui界面。\r\n+\r\nimage::{img}/img/storm/2017-03-28-02.png[]\r\n---\r\n\r\n== Storm常用操作命令\r\n\r\n> 有许多简单且有用的命令可以用来管理拓扑，它们可以提交、杀死、禁用、再平衡拓扑。\r\n\r\n提交任务命令格式::\r\nstorm jar 【jar路径】 【拓扑包名.拓扑类名】 【拓扑名称】\r\n+\r\n```\r\nbin/storm jar examples/storm-starter/storm-starter-topologies-0.9.6.jar storm.starter.WordCountTopology wordcount\r\n```\r\n杀死任务命令格式::\r\nstorm kill 【拓扑名称】 -w 10（执行kill命令时可以通过-w [等待秒数]指定拓扑停用以后的等待时间）\r\n+\r\n```\r\nstorm kill topology-name -w 10\r\n```\r\n停用任务命令格式::\r\nstorm deactivte  【拓扑名称】\r\n+\r\n```\r\nstorm deactivte topology-name\r\n```\r\n我们能够挂起或停用运行中的拓扑。当停用拓扑时，所有已分发的元组都会得到处理，但是spouts的nextTuple方法不会被调用。销毁一个拓扑，可以使用kill命令。它会以一种安全的方式销毁一个拓扑，首先停用拓扑，在等待拓扑消息的时间段内允许拓扑完成当前的数据流。\r\n启用任务命令格式::\r\nstorm activate【拓扑名称】\r\n+\r\n```\r\nstorm activate topology-name\r\n```\r\n重新部署任务命令格式::\r\nstorm rebalance  【拓扑名称】\r\n+\r\n```\r\nstorm rebalance topology-name\r\n```\r\n再平衡使你重分配集群任务。这是个很强大的命令。比如，你向一个运行中的集群增加了节点。再平衡命令将会停用拓扑，然后在相应超时时间之后重分配工人，并重启拓扑。\r\n\r\n== Storm集群的进程及日志熟悉\r\n\r\n. 部署成功之后，启动storm集群。\r\n    依次启动集群的各种角色\r\n\r\n. 查看nimbus的日志信息\r\n在nimbus的服务器上\r\n+\r\n```\r\ncd /export/servers/storm/logs\r\ntail -100f /export/servers/storm/logs/nimbus.log\r\n```\r\n\r\n. 查看ui运行日志信息\r\n在ui的服务器上，一般和nimbus一个服务器\r\n+\r\n```\r\ncd /export/servers/storm/logs\r\ntail -100f /export/servers/storm/logs/ui.log\r\n```\r\n\r\n. 查看supervisor运行日志信息\r\n在supervisor服务上\r\n+\r\n```\r\ncd /export/servers/storm/logs\r\ntail -100f /export/servers/storm/logs/supervisor.log\r\n```\r\n\r\n. 查看supervisor上worker运行日志信息\r\n在supervisor服务上\r\n+\r\n```\r\ncd /export/servers/storm/logs\r\ntail -100f /export/servers/storm/logs/worker-6702.log\r\n```\r\n+\r\nimage::{img}/img/storm/2017-03-28-03.png[]\r\n---\r\n(该worker正在运行wordcount程序)\r\n\r\n== Storm源码下载及目录熟悉\r\n. 在Storm官方网站上寻找源码地址 +\r\n    http://storm.apache.org/downloads.html\r\n\r\n. 点击文字标签进入github +\r\n点击Apache/storm文字标签，进入github\r\n      https://github.com/apache/storm\r\n. 拷贝storm源码地址 +\r\n在网页右侧，拷贝storm源码地址\r\n\r\n. 使用Subversion客户端下载 +\r\nhttps://github.com/apache/storm/tags/v0.9.5\r\n. Storm源码目录分析（重要） +\r\n扩展包中的三个项目，使storm能与hbase、hdfs、kafka交互\r\n\r\n\r\n== Storm单词技术案例（重点掌握）\r\n. 功能说明\r\n+\r\n----\r\n设计一个topology，来实现对文档里面的单词出现的频率进行统计。\r\n整个topology分为三个部分：\r\nRandomSentenceSpout：\r\n    数据源，在已知的英文句子中，随机发送一条句子出去。\r\nSplitSentenceBolt：\r\n    负责将单行文本记录（句子）切分成单词\r\nWordCountBolt：\r\n    负责对单词的频率进行累加\r\n----\r\n. 项目主要流程\r\n+\r\nimage::{img}/img/storm/2017-03-28-04.png[]\r\n---\r\n. RandomSentenceSpout的实现及生命周期\r\n+\r\nimage::{img}/img/storm/2017-03-28-05.png[]\r\n---\r\n. SplitSentenceBolt的实现及生命周期\r\n+\r\nimage::{img}/img/storm/2017-03-28-06.png[]\r\n---\r\n\r\n. WordCountBolt的实现及生命周期\r\n+\r\nimage::{img}/img/storm/2017-03-28-07.png[]\r\n---\r\n. Stream Grouping详解 +\r\nStorm里面有7种类型的stream grouping\r\nShuffle Grouping:: 随机分组， 随机派发stream里面的tuple，保证每个bolt接收到的tuple数目大致相同。\r\n\r\nFields Grouping:: 按字段分组，比如按userid来分组，具有同样userid的tuple会被分到相同的Bolts里的一个task，而不同的userid则会被分配到不同的bolts里的task。\r\n\r\nAll Grouping:: 广播发送，对于每一个tuple，所有的bolts都会收到。\r\n\r\nGlobal Grouping:: 全局分组， 这个tuple被分配到storm中的一个bolt的其中一个task。再具体一点就是分配给id值最低的那个task。\r\n\r\nNon Grouping:: 不分组，这stream grouping个分组的意思是说stream不关心到底谁会收到它的tuple。目前这种分组和Shuffle grouping是一样的效果， 有一点不同的是storm会把这个bolt放到这个bolt的订阅者同一个线程里面去执行。\r\n\r\nDirect Grouping:: 直接分组， 这是一种比较特别的分组方法，用这种分组意味着消息的发送者指定由消息接收者的哪个task处理这个消息。只有被声明为Direct Stream的消息流可以声明这种分组方法。而且这种消息tuple必须使用emitDirect方法来发射。消息处理者可以通过TopologyContext来获取处理它的消息的task的id （OutputCollector.emit方法也会返回task的id）。\r\n\r\nLocal or shuffle grouping:: 如果目标bolt有一个或者多个task在同一个工作进程中，tuple将会被随机发生给这些tasks。否则，和普通的Shuffle Grouping行为一致。\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/docker/docker-base",
        "title": "docker 基础命令",
        "content": "\r\n\r\ninclude::content/post/base.adoc[]\r\n:toc-title: docker-base\r\n\r\n\r\n=== 阿里云加速\r\n\r\n[quote]\r\n----\r\nhttps://7xefeire.mirror.aliyuncs.com\r\n----\r\n\r\n=== Dockerfile 参考\r\nhttps://docs.docker.com/engine/reference/builder/[]\r\n\r\n=== 使用\r\n\r\n==== 获取容器 ip\r\n[source,]\r\n----\r\ndocker inspect --format='{{.NetworkSettings.IPAddress}} {{.Config.Hostname}}' $CONTAINER_ID\r\n\r\ndocker ps --format='{{.ID}}'|xargs -I id docker inspect --format='{{.NetworkSettings.IPAddress}} {{.Config.Hostname}}' id\r\n----\r\n\r\n==== list 镜像\r\n```bash\r\ndocker images --format \"{{.ID}}: {{.Repository}}:{{.Tag}}\"\r\n```\r\n\r\n==== list 容器\r\n```bash\r\ndocker ps --format \"{{.ID}}: {{.Names}}\"\r\n```\r\n==== 启动 `docker`\r\n\r\n```bash\r\ndocker run -t -i ubuntu:14.04 /bin/bash\r\n```\r\n\r\n=== 操作 `Docker`\r\n\r\n==== `build`\r\n\r\n```bash\r\ndocker build -t csphere/centos:7.1 .\r\n```\r\n==== `run`\r\n\r\n```\r\n-it 前台,交互模式\r\n```\r\n==== `log`\r\n\r\n```bash\r\ndocker logs -f \r\n```\r\n==== 删除镜像\r\n\r\n```bash\r\ndocker rmi [-f] \r\n```\r\n==== 批量删除镜像\r\n```\r\ndocker images | awk '{if($1 ~ \"^zookeeper\"&&$2 != \"1.4\" ){print $1\":\"$2}}' | xargs docker rmi\r\n```\r\n\r\n```\r\ndocker images --format \"{{.ID}} {{.Repository}}:{{.Tag}}\" | awk '{if($0 ~ \"\" && NR != 1){print $1}}' | xargs docker rmi\r\n```\r\n\r\n==== 删除容器\r\n```bash\r\n=删除所有容器\r\ndocker rm $(docker ps -a -q)\r\n```\r\n==== 关闭所有容器\r\n```bash\r\ndocker stop $(docker ps -a -q)\r\n```\r\n==== 进入一个容器的交互模式\r\n```bash\r\ndocker exec -it  /bin/bash\r\n```\r\n==== 挂载目录\r\n```bash\r\ndocker run -it -v /src/webapp:/opt/webapp ubuntu:14.04 /bin/bash\r\n```\r\n==== 载入镜像\r\n```bash\r\ndocker load < ubuntu_14.04.tar\r\n```\r\n==== 查看 `docker` 网络\r\n```\r\ndocker network ls\r\n```\r\n==== 容器生成镜像\r\n```bash\r\ndocker commit 614122c0aabb aoct/apache2\r\n```\r\n==== 从主机到容器\r\n```bash\r\nsudo docker cp ./default.conf nginx:/etc/nginx/conf.d/suffusedDomain.conf\r\n```\r\n==== 从容器到主机\r\n```bash\r\nsudo docker cp centos7:/tmp/docker-compose-Linux-x86_64 ./docker-compose-Linux-x86_64\r\n```\r\n==== 删除不是 `dishui.io` 开头的镜像\r\n```bash\r\ndocker images | awk '{if($1 ~ \"\" && NR != 1){print $3}}' | xargs docker rmi\r\n```\r\n\r\n\r\n\r\n\r\n\r\n=== 修改 `Docker` 镜像的存储位置\r\n\r\n==== 备份fstab文件\r\n```bash\r\ncp /etc/fstab /etc/fstab.$(date +%Y-%m-%d)\r\n```\r\n==== 停止 `docker` ， 用 `rsync` 同步 `/var/lib/docker` 到新位置 如果 `rsync` 没有安装\r\n```bash\r\nyum -y install rsync\r\n```\r\n==== 停止 `docker`\r\n```bash\r\nservice docker stop\r\n```\r\n==== 同步数据\r\n```bash\r\n=在数据分区中建立要挂载的目录\r\nmkdir /data/docker\r\n=使用rsync工具同步\r\nrsync -aXS /var/lib/docker/.  /data/docker/\r\n```\r\n\r\n==== 修改 `fstab`\r\n```bash\r\n=vi /etc/fstab\r\n/data/docker /var/lib/docker  none bind 0 0\r\n```\r\n\r\n\r\n=== Mount AWS EFS, NFS or CIFS/Samba volumes in Docker\r\n\r\n. 下载 插件 百度网盘\r\n+\r\n[quote]\r\n----\r\nsrc/docker/docker-volume-netshare_0.32_linux_amd64-bin\r\n----\r\n\r\n. 启动 插件\r\n+\r\n```\r\nsudo nohup docker-volume-netshare cifs --username dishui --password dishui --domain storage &\r\n```\r\n\r\n. 启动容器\r\n+\r\n```\r\ndocker run -i -t --volume-driver=cifs -v 192.168.137.2/hugo:/hugo centos:7 /bin/bash\r\n```\r\n\r\n. 参考\r\n+\r\nhttp://netshare.containx.io/[docker-volume-netshare]\r\n\r\n[qanda]\r\n重启后 cifs 创建的volume丢失 ::\r\n\t`docker-volume-netshare` 插件机制引起的 +\r\n\tCoreOS 开机启动创建volume\r\n+\r\n```\r\n    - name: docker-volume-netshare.service\r\n      command: start\r\n      content: |\r\n        [Unit]\r\n        Description=docker-volume-netshare\r\n        After=docker.service\r\n        [Service]\r\n        User=root\r\n        ExecStart=/opt/bin/docker-volume-netshare cifs --username dishui --password dishui --domain storage\r\n        ExecStartPost=/usr/bin/docker volume create -d cifs --name 192.168.137.2/dishui\r\n        LimitNOFILE=40000\r\n        TimeoutStartSec=0\r\n\r\n        [Install]\r\n        WantedBy=multi-user.target\r\n```\r\n\r\n\r\n\r\n",
        "tags": [
            "docker"
        ]
    },
    {
        "uri": "//hugo/post/docker/etcd-flanneld",
        "title": "etcd flanneld",
        "content": "\r\n\r\ninclude::content/post/base.adoc[]\r\n:toc-title: etcd flanneld\r\n\r\n== 环境\r\n|===\r\n|名称|版本|下载地址\r\n\r\n|etcd\r\n|3.1.8\r\n|https://github.com/coreos/etcd/releases/download/v3.1.8/etcd-v3.1.8-linux-amd64.tar.gz[etcd-v3.1.8-linux-amd64.tar.gz]\r\n\r\n|flanneld\r\n|v0.7.1\r\n|https://github.com/coreos/flannel/releases/download/v0.7.1/flanneld-amd64[flanneld-amd64]\r\n\r\n|mk-docker-opts.sh\r\n|\r\n|https://raw.githubusercontent.com/coreos/flannel/master/dist/mk-docker-opts.sh[mk-docker-opts.sh]\r\n\r\n|===\r\n\r\n[TIP]\r\netcd flanneld mk-docker-opts.sh 下载到 $HOME/bin 下\r\n\r\n== 启动\r\n\r\n=== etcd\r\n\r\n[source,]\r\n----\r\nnohup etcd \\\r\n  --name my-etcd-1 \\\r\n  --data-dir ~/etcd-data \\\r\n  --listen-client-urls http://0.0.0.0:2379 \\\r\n  --advertise-client-urls http://0.0.0.0:2379 \\\r\n  --listen-peer-urls http://0.0.0.0:2380 \\\r\n  --initial-advertise-peer-urls http://0.0.0.0:2380 &\r\n----\r\n\r\n开机启动\r\n[source,]\r\n----\r\ncat > /usr/lib/systemd/system/etcd.service ",
        "tags": [
            "docker"
        ]
    },
    {
        "uri": "//hugo/post/editor/Intellij-keymap",
        "title": "IntelliJ IDEA 快捷键",
        "content": "\r\n快捷键 <转自极客学院\r\n\r\n 说明\r\n\r\nIntelliJ IDEA 的便捷操作性，快捷键的功劳占了一大半，对于各个快捷键组合请认真对待。IntelliJ IDEA 本身的设计思维是提倡键盘优先于鼠标的，所以各种快捷键组合层出不穷，对于快捷键设置也有各种支持，对于其他 IDE 的快捷键组合也有预设模板进行支持。\r\n\r\n关于各个快捷键的频率分类上可能每个人都有各自的看法，下面的整理也只是以我个人的使用习惯来划分的，而我应该是可以代表某一部分小众人员。但是我个人还是强烈建议你可以在我的基础上整理一份属于你的快捷键目录（删除掉多余的字眼，只保留快捷键内容），本篇文章也只是起到一个工具和引子的作用。\r\n\r\n对于下面各个快捷键的使介绍描述也许用我个人语言翻译起来不够准确或是不全面，且在不同的文件类型上按出来的效果也可能结果不太一样,所以 强烈建议 你自己把各个快捷键都亲自操作下体会下各个快捷键的实际用法。\r\n\r\n前提\r\n\r\n由于文化的不同，我们使用的电脑必备一个软件就是中文输入法，而目前大多数人都使用搜狗拼音输入法或是其他类似的。而这些输入法跟 IntelliJ IDEA 有一个万恶的冲突永恒不变：快捷键冲突。所以为了配合 IntelliJ IDEA，我们要去掉这些输入法下的所有快捷键。\r\n\r\n\r\n\r\n * 如上图红色圈住内容所示，默认是 逗号 我改为了 ESC 键下的 波浪号，Ctrl + 逗号 这个快捷键适合做智能提示用，下面的快捷键列表会讲。\r\n\r\n\r\n\r\n * 如上图红色圈住内容所示，这些快捷键很容易跟 IntelliJ IDEA 快捷键冲突，需要全部去掉。\r\n\r\n\r\n\r\n * 如上图红色圈住内容所示，QQ 这些快捷键也很容易跟 IntelliJ IDEA 快捷键冲突，需要全部去掉，最多保持一个截图功能即可。\r\n\r\n可能还有其他一些软件，比如网易云音乐、有道词典等等这些软件都可能存在快捷键冲突，所以为了 IntelliJ IDEA 这些软件的快捷键都是值得舍弃的，如果你在开发的时候。\r\n\r\n Ctrl\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Ctrl + F|在当前文件进行文本查找 （必备） |\r\n|Ctrl + R|在当前文件进行文本替换 （必备） |\r\n|Ctrl + Z|撤销 （必备） |\r\n|Ctrl + Y|删除光标所在行 或 删除选中的行 （必备） |\r\n|Ctrl + X|剪切光标所在行 或 剪切选择内容|\r\n|Ctrl + C|复制光标所在行 或 复制选择内容|\r\n|Ctrl + D|复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 （必备） |\r\n|Ctrl + W|递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围 （必备） |\r\n|Ctrl + E|显示最近打开的文件记录列表|\r\n|Ctrl + N|根据输入的 类名 查找类文件|\r\n|Ctrl + G|在当前文件跳转到指定行处|\r\n|Ctrl + J|插入自定义动态代码模板|\r\n|Ctrl + P|方法参数提示显示|\r\n|Ctrl + Q|光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容|\r\n|Ctrl + U|前往当前光标所在的方法的父类的方法 / 接口定义|\r\n|Ctrl + B|进入光标所在的方法/变量的接口或是定义处，等效于 Ctrl + 左键单击 |\r\n|Ctrl + K|版本控制提交项目，需要此项目有加入到版本控制才可用|\r\n|Ctrl + T|版本控制更新项目，需要此项目有加入到版本控制才可用|\r\n|Ctrl + H|显示当前类的层次结构|\r\n|Ctrl + O|选择可重写的方法|\r\n|Ctrl + I|选择可继承的方法|\r\n|Ctrl + \\+|展开代码|\r\n|Ctrl + \\-|折叠代码|\r\n|Ctrl + /|注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 （必备） |\r\n|Ctrl + \\[|移动光标到当前所在代码的花括号开始位置|\r\n|Ctrl + \\]|移动光标到当前所在代码的花括号结束位置|\r\n|Ctrl + F1|在光标所在的错误代码处显示错误信息|\r\n|Ctrl + F3|调转到所选中的词的下一个引用位置|\r\n|Ctrl + F4|关闭当前编辑文件|\r\n|Ctrl + F8|在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点|\r\n|Ctrl + F9|执行 Make Project 操作|\r\n|Ctrl + F11|选中文件 / 文件夹，使用助记符设定 / 取消书签|\r\n|Ctrl + F12|弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选|\r\n|Ctrl + Tab|编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口|\r\n|Ctrl + Enter|智能分隔行|\r\n|Ctrl + End|跳到文件尾|\r\n|Ctrl + Home|跳到文件头|\r\n|Ctrl + Space|基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl + 逗号 （必备） |\r\n|Ctrl + Delete|删除光标后面的单词或是中文句|\r\n|Ctrl + BackSpace|删除光标前面的单词或是中文句|\r\n|Ctrl + 1,2,3...9|定位到对应数值的书签位置|\r\n|Ctrl + 左键单击|在打开的文件标题上，弹出该文件路径|\r\n|Ctrl + 光标定位|按 Ctrl 不要松开，会显示光标所在的类信息摘要|\r\n|Ctrl + 左方向键|光标跳转到当前单词 / 中文句的左侧开头位置|\r\n|Ctrl + 右方向键|光标跳转到当前单词 / 中文句的右侧开头位置|\r\n|Ctrl + 前方向键|等效于鼠标滚轮向前效果|\r\n|Ctrl + 后方向键|等效于鼠标滚轮向后效果|\r\n\r\nAlt\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Alt + \\`|显示版本控制常用操作菜单弹出层|\r\n|Alt + Q|弹出一个提示，显示当前类的声明 / 上下文信息|\r\n|Alt + F1|显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择|\r\n|Alt + F2|对于前面页面，显示各类浏览器打开目标选择弹出层|\r\n|Alt + F3|选中文本，逐个往下查找相同文本，并高亮显示|\r\n|Alt + F7|查找光标所在的方法 / 变量 / 类被调用的地方|\r\n|Alt + F8|在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果|\r\n|Alt + Home|定位 / 显示到当前文件的 Navigation Bar |\r\n|Alt + Enter|IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 （必备） |\r\n|Alt + Insert|代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等|\r\n|Alt + 左方向键|按左方向切换当前已打开的文件视图|\r\n|Alt + 右方向键|按右方向切换当前已打开的文件视图|\r\n|Alt + 前方向键|当前光标跳转到当前文件的前一个方法名位置|\r\n|Alt + 后方向键|当前光标跳转到当前文件的后一个方法名位置|\r\n|Alt + 1,2,3...9|显示对应数值的选项卡，其中 1 是 Project 用得最多|\r\n\r\n Shift\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Shift + F1|如果有外部文档可以连接外部文档|\r\n|Shift + F2|跳转到上一个高亮错误 或 警告位置|\r\n|Shift + F3|在查找模式下，查找匹配上一个|\r\n|Shift + F4|对当前打开的文件，使用新Windows窗口打开，旧窗口保留|\r\n|Shift + F6|对文件 / 文件夹 重命名|\r\n|Shift + F7|在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法|\r\n|Shift + F8|在 Debug 模式下，跳出，表现出来的效果跟 F9 一样|\r\n|Shift + F9|等效于点击工具栏的 Debug 按钮|\r\n|Shift + F10|等效于点击工具栏的 Run 按钮|\r\n|Shift + F11|弹出书签显示层|\r\n|Shift + Tab|取消缩进|\r\n|Shift + ESC|隐藏当前 或 最后一个激活的工具窗口|\r\n|Shift + End|选中光标到当前行尾位置|\r\n|Shift + Home|选中光标到当前行头位置|\r\n|Shift + Enter|开始新一行。光标所在行下空出一行，光标定位到新行位置|\r\n|Shift + 左键单击|在打开的文件名上按此快捷键，可以关闭当前打开文件|\r\n|Shift + 滚轮前后滚动|当前文件的横向滚动轴滚动|\r\n\r\nCtrl + Alt\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Ctrl + Alt + L|格式化代码，可以对当前文件和整个包目录使用 （必备） |\r\n|Ctrl + Alt + O|优化导入的类，可以对当前文件和整个包目录使用 （必备） |\r\n|Ctrl + Alt + I|光标所在行 或 选中部分进行自动代码缩进，有点类似格式化|\r\n|Ctrl + Alt + T|对选中的代码弹出环绕选项弹出层|\r\n|Ctrl + Alt + J|弹出模板选择窗口，将选定的代码加入动态模板中|\r\n|Ctrl + Alt + H|调用层次|\r\n|Ctrl + Alt + B|在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口|\r\n|Ctrl + Alt + V|快速引进变量|\r\n|Ctrl + Alt + Y|同步、刷新|\r\n|Ctrl + Alt + S|打开 IntelliJ IDEA 系统设置|\r\n|Ctrl + Alt + F7|显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来|\r\n|Ctrl + Alt + F11|切换全屏模式|\r\n|Ctrl + Alt + Enter|光标所在行上空出一行，光标定位到新行|\r\n|Ctrl + Alt + Home|弹出跟当前文件有关联的文件弹出层|\r\n|Ctrl + Alt + Space|类名自动完成|\r\n|Ctrl + Alt + 左方向键|退回到上一个操作的地方 （必备） |\r\n|Ctrl + Alt + 右方向键|前进到上一个操作的地方 （必备） |\r\n|Ctrl + Alt + 前方向键|在查找模式下，跳到上个查找的文件|\r\n|Ctrl + Alt + 后方向键|在查找模式下，跳到下个查找的文件|\r\n\r\n Ctrl + Shift\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Ctrl + Shift + F|根据输入内容查找整个项目 或 指定目录内文件 （必备） |\r\n|Ctrl + Shift + R|根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 （必备） |\r\n|Ctrl + Shift + J|自动将下一行合并到当前行末尾 （必备） |\r\n|Ctrl + Shift + Z|取消撤销 （必备） |\r\n|Ctrl + Shift + W|递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 （必备） |\r\n|Ctrl + Shift + N|通过文件名定位 / 打开文件 / 目录，打开目录需要在输入的内容后面多加一个正斜杠 （必备） |\r\n|Ctrl + Shift + U|对选中的代码进行大 / 小写轮流转换 （必备） |\r\n|Ctrl + Shift + T|对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择|\r\n|Ctrl + Shift + C|复制当前文件磁盘路径到剪贴板|\r\n|Ctrl + Shift + V|弹出缓存的最近拷贝的内容管理器弹出层|\r\n|Ctrl + Shift + E|显示最近修改的文件列表的弹出层|\r\n|Ctrl + Shift + H|显示方法层次结构|\r\n|Ctrl + Shift + B|跳转到类型声明处|\r\n|Ctrl + Shift + I|快速查看光标所在的方法 或 类的定义|\r\n|Ctrl + Shift + A|查找动作 / 设置|\r\n|Ctrl + Shift + /|代码块注释 （必备） |\r\n|Ctrl + Shift + \\[|选中从光标所在位置到它的顶部中括号位置|\r\n|Ctrl + Shift + \\]|选中从光标所在位置到它的底部中括号位置|\r\n|Ctrl + Shift + \\+|展开所有代码|\r\n|Ctrl + Shift + \\-|折叠所有代码|\r\n|Ctrl + Shift + F7|高亮显示所有该选中文本，按Esc高亮消失|\r\n|Ctrl + Shift + F8|在 Debug 模式下，指定断点进入条件|\r\n|Ctrl + Shift + F9|编译选中的文件 / 包 / Module|\r\n|Ctrl + Shift + F12|编辑器最大化|\r\n|Ctrl + Shift + Space|智能代码提示|\r\n|Ctrl + Shift + Enter|自动结束代码，行末自动添加分号 （必备） |\r\n|Ctrl + Shift + Backspace|退回到上次修改的地方|\r\n|Ctrl + Shift + 1,2,3...9|快速添加指定数值的书签|\r\n|Ctrl + Shift + 左方向键|在代码文件上，光标跳转到当前单词 / 中文句的左侧开头位置，同时选中该单词 / 中文句|\r\n|Ctrl + Shift + 右方向键|在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置，同时选中该单词 / 中文句|\r\n|Ctrl + Shift + 左方向键|在光标焦点是在工具选项卡上，缩小选项卡区域|\r\n|Ctrl + Shift + 右方向键|在光标焦点是在工具选项卡上，扩大选项卡区域|\r\n|Ctrl + Shift + 前方向键|光标放在方法名上，将方法移动到上一个方法前面，调整方法排序|\r\n|Ctrl + Shift + 后方向键|光标放在方法名上，将方法移动到下一个方法前面，调整方法排序|\r\n\r\nAlt + Shift\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Alt + Shift + N|选择 / 添加 task|\r\n|Alt + Shift + F|显示添加到收藏夹弹出层 / 添加到收藏夹|\r\n|Alt + Shift + C|查看最近操作项目的变化情况列表|\r\n|Alt + Shift + I|查看项目当前文件|\r\n|Alt + Shift + F7|在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入|\r\n|Alt + Shift + F9|弹出 Debug  的可选择菜单|\r\n|Alt + Shift + F10|弹出 Run  的可选择菜单|\r\n|Alt + Shift + 左键双击|选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句|\r\n|Alt + Shift + 前方向键|移动光标所在行向上移动|\r\n|Alt + Shift + 后方向键|移动光标所在行向下移动|\r\n\r\n Ctrl + Shift + Alt\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|Ctrl + Shift + Alt + V|无格式黏贴|\r\n|Ctrl + Shift + Alt + N|前往指定的变量 / 方法|\r\n|Ctrl + Shift + Alt + S|打开当前项目设置|\r\n|Ctrl + Shift + Alt + C|复制参考信息|\r\n\r\n其他\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|F2|跳转到下一个高亮错误 或 警告位置 （必备） |\r\n|F3|在查找模式下，定位到下一个匹配处|\r\n|F4|编辑源|\r\n|F7|在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中|\r\n|F8|在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内|\r\n|F9|在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上|\r\n|F11|添加书签|\r\n|F12|回到前一个工具窗口|\r\n|Tab|缩进|\r\n|ESC|从工具窗口进入代码文件窗口|\r\n|连按两次Shift|弹出 Search Everywhere 弹出层|\r\n\r\n 官网快捷键资料\r\n\r\n * Windows / Linux：https://www.jetbrains.com/idea/docs/IntelliJIDEA_ReferenceCard.pdf\r\n * Mac OS X：https://www.jetbrains.com/idea/docs/IntelliJIDEAReferenceCardMac.pdf\r\n\r\n第三方快捷键资料\r\n\r\n * 来自 eta02913：http://xinyuwu.iteye.com/blog/1005454\r\n\r\n 快捷键修改\r\n\r\n\r\n\r\n * 按 Ctrl + Alt + S 弹出 IDE 设置，如上图选择左侧的 Keymap。\r\n * IntelliJ IDEA 支持两种方式来筛选我们要找的快捷键，一种是上图标注 1 所示的，通过输入快捷键描述内容；一种是上图标注 2 所示的，通过 *按* 指定快捷键快捷键，这里需要再次强调的是，这个输入框是自动监听你当前按下的按键，而不是用来输入的。\r\n * 上图标注 3 所示，初安装的 IntelliJ IDEA 使用的是 Default 的快捷键模板，IntelliJ IDEA 默认的快捷键模板都是不可修改的。如果你直接修改，当前这个位置 IntelliJ IDEA 会自动变成 Default Copy，建议你养成习惯，修改之前先点击 Copy，拷贝一套快捷键模板，然后输入自己的命名。\r\n\r\n\r\n\r\n * IntelliJ IDEA 是支持一个操作命令同时设置多个快捷键组合，就如上图的 Backspace，同时支持 Backspace 和 Shift + Backspace 两组快捷键。\r\n * 要修改某个快捷键，选中快捷键介绍内容，右键，就会弹出如上图标注 1 所示操作选择。\r\n * 命令 Add Keyboard Shortcut 用来添加新纯键盘快捷键组合。\r\n * 命令 Add Mouse Shortcut 用来添加新 键盘 + 鼠标 快捷键组合，比如设置 Ctrl + 左键单击 这类快捷组合。其中在弹出的添加面板中 Click Pad 是用来监听当前鼠标是左键单击还是右键单击。\r\n * 命令 Add Abbreviation 根据 IntelliJ IDEA 的版本文档解释，添加简称主要是为了方便 Search Everywhere 中使用，但是我尝试之后发现没办法根据我设置的简称搜索，暂时无法了解其作用。\r\n * 命令 Remove 快捷键 移出当前操作命令已设置的快捷键组合，由于 IntelliJ IDEA 默认就占用了很多快捷键组合，所以如果你要修改某个快捷键，建议还是删除掉旧的。\r\n\r\n\r\n\r\n * IntelliJ IDEA 对其他 IDE 用户很友好，如上图对于其他主流的 IDE，快捷键上已经默认了有其过度快捷键模板了，但是我还是建议你专心使用 IntelliJ IDEA 的默认。\r\n\r\n其他\r\n\r\n\r\n\r\n * 如果你是一个 Vim 粉，IntelliJ IDEA 也为你准备了一个方案：如上图安装 IdeaVim 插件即可。\r\n\r\n\r\n\r\n 文本编辑\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|删除|ctrl + y\r\n|复制|ctrl + D\r\n\r\n智能提示\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|提示|ctrl + space\r\n|智能提示|ctrl + shift + space\r\n|完成当前语句|ctrl + shift + enter\r\n|完成当前语句|ctrl + alt + P\r\n|对代码重新排列格式|ctrl + alt + L\r\n|对imports进行优化|ctrl + alt + O\r\n\r\n\r\n 位置定位\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|定位到下一个或上一个错误|F2 / Shift + F2\r\n|定位文件头|ctrl+G（定位到文件行数）\r\n|定位文件尾|ctrl+G\r\n|定位到代码块开始|ctrl + [\r\n|定位到代码块结束 |ctrl + ]\r\n|回到最近的窗口|F12\r\n|回到之前的文件|alt + left\r\n|回到之后的文件|alt + right\r\n|定位到最后编辑位置|Ctrl + Shift + Backspace\r\n|从tool window或其他window切换到文件编辑|esc\r\n|关闭最近打开的窗口|shift + esc\r\n\r\n类、方法、文件定位\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|查找类    | ctr + N\r\n|查找文件  | ctrl + Shift + N\r\n|符号定位     | ctrl + Alt + Shift + N\r\n|查看文件结构   | ctrl + F12\r\n|最近打开的文件  | ctrl + E\r\n|定位下一个方法 | alt + down\r\n|定位上一个方法  | alt + up\r\n|查看方法参数信息  | ctrl + p\r\n|查看方法、类的doc | ctrl + Q\r\n\r\n 类、方法的结构查看、定位\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|跳到类或方法的声明      | ctrl + B\r\n|定位到类的父类、接口    | ctrl + U\r\n|查看类的继承结构        | ctrl + H\r\n|查看方法的继承结构      | ctrl + shift + H\r\n|查看类或方法被调用情况  | ctrl + alt +H\r\n|原地参看类、方法的声明  | ctrl + shift + I\r\n\r\n运行与调试\r\n\r\n|快捷键|介绍|\r\n|:---------|:---------|\r\n|F8                |跳过\r\n|F7                |跳入\r\n|Shift + F7        |只能跳入\r\n|Shift + F8        |跳出\r\n|Alt + F9          |Run to cursor\r\n|Alt + F8          |Evaluate expression\r\n|F9                |Resume program\r\n|Ctrl + F8         |Toggle breakpoint\r\n|Ctrl + Shift + F8 |View breakpoints",
        "tags": []
    },
    {
        "uri": "//hugo/post/editor/Intellij",
        "title": "Intellij",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: IDEA\r\n\r\n=== Intellij IDEA 15\r\n\r\n破解地址(二选一) ::\r\nhttp://us.idea.lanyus.com/[Intellij IDEA 15 Crack(1)]\r\n+\r\nhttp://15.idea.lanyus.com/[Intellij IDEA 15 Crack(2)]\r\n+\r\nhttp://idea.lanyus.com/dishui\r\ndishui19950316@gmail.com\r\n\r\n==== 配置\r\n主题 ::\r\nhttp://www.phperz.com/article/15/0923/159059.html[主题1]\r\n+\r\nhttp://www.riaway.com/themeshow.php?tid=7$cid=1[主题2]\r\n\r\n部署 ::\r\nhttp://www.php-note.com/article/detail/854[部署Tomcat]\r\n\r\nRef ::\r\nhttps://github.com/judasn/IntelliJ-IDEA-Tutorial[Intellij 教程]\r\n+\r\nhttp://www.youmeek.com/idea/[YouMeek]\r\n\r\n\r\n=== Q & A\r\n. intellij IDEA `Properties` 中文unicode转码问题\r\n+\r\nimage::{img}/img/intellij/2016-08-18_141826.png[]\r\n---\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/editor/snippets",
        "title": "sublime tabTrigger",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== quml\r\n\r\n    \r\n    quml\r\n\r\n\r\n== qdot\r\n\r\n\r\n    \r\n    qdot\r\n\r\n\r\n== bash\r\n\r\n\r\n    \r\n    bash\r\n\r\n\r\n== bash session\r\n\r\n\r\n    \r\n    bashs\r\n\r\n\r\n== table\r\n\r\n\r\n    ,^\"]\r\n|===\r\n|$1|$2\r\n\r\n|\r\n|\r\n|===\r\n]]>\r\n    table\r\n\r\n\r\n== asciinema\r\n\r\n\r\n    \r\n    asc\r\n\r\n\r\n\r\n== a\r\n\r\n\r\n    \r\n    a\r\n\r\n\r\n== javas\r\n\r\n\r\n    \r\n    javas\r\n\r\n\r\n= Asciidoctor\r\n\r\n== stem\r\n\r\n\r\n    \r\n    stem\r\n\r\n\r\n== quote\r\n\r\n\r\n    \r\n    quote\r\n\r\n\r\n== img\r\n\r\n\r\n    \r\n    img\r\n\r\n\r\n== src\r\n\r\n\r\n    \r\n    src\r\n\r\n\r\n== c\r\n\r\n\r\n    \r\n    c\r\n\r\n\r\n== c1\r\n\r\n\r\n    \r\n    c1\r\n\r\n",
        "tags": [
            "sublime"
        ]
    },
    {
        "uri": "//hugo/post/editor/sublime",
        "title": "sublime 配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== Sublime\r\n\r\n. vi模式 +\r\n**Preferences-->Settings-User**\r\n+\r\n```\r\n    \"ignored_packages\":\r\n    [\r\n        \"Markdown\",\r\n        \"Vintage\"          //如果要关闭vi模式，注释这一行\r\n    ]\r\n```\r\n\r\n. 保存去除行尾空格 +\r\n**MultiMarkdown-->User Setting**\r\n+\r\n```\r\n    \"trim_trailing_white_space_on_save\": true\r\n```\r\n\r\n. `ii` 退出vi模式 +\r\nPreferences-->Key Bindings-User`\r\n+\r\n```\r\n    { \"keys\": [\"i\",\"i\"], \"command\": \"exit_insert_mode\",\r\n        \"context\":\r\n        [\r\n            { \"key\": \"setting.command_mode\", \"operand\": false },\r\n            { \"key\": \"setting.is_widget\", \"operand\": false }\r\n        ]\r\n    },\r\n    { \"keys\": [\"i\",\"i\"], \"command\": \"hide_auto_complete\", \"context\":\r\n        [\r\n            { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": true }\r\n        ]\r\n    },\r\n    { \"keys\": [\"i\",\"i\"], \"command\": \"vi_cancel_current_action\", \"context\":\r\n        [\r\n            { \"key\": \"setting.command_mode\" },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": false },\r\n            { \"key\": \"vi_has_input_state\" }\r\n        ]\r\n    }\r\n```\r\n\r\n\r\n. 按住shift+ctrl然后按←或→可快速选中一行中的某一部分，相当于双击鼠标选中。\r\n\r\n    当你想在代码末尾加注释的话，这个方法很好用\r\n    输入文字-> 光标移到文字末尾-> 按住shift+ctrl+←便会选中文字->其他操作：删除、注释（ctrl+/）等等\r\n\r\n=== 快捷键\r\n\r\n|===\r\n|快捷键|描述\r\n\r\n|`shift+ctrl`\r\n|键组合+↑↓。可实现类似鼠标选中之后移动的效果。\r\n\r\n|`ctrl+shift+d`\r\n|快速复制光标所在的一整行，并复制到该行之前。\r\n\r\n|`ctrl+shift+m`\r\n|选中花括号里面的全部内容不包括{}。\r\n\r\n|`ctrl+shift+A`\r\n|选中标签内的内容不包括标签，继续按会继续往上一层选择。\r\n\r\n|`Ctrl+Shift+Enter`\r\n|光标前插入行。\r\n\r\n|`Ctrl+Shift+[`\r\n|折叠代码\r\n\r\n|`Ctrl+Shift+]`\r\n|展开代码\r\n\r\n|`Ctrl+Shift+K`\r\n|删除整行\r\n\r\n|`ctrl+shift+p`\r\n|打开命令面板\r\n\r\n|`Ctrl+Shift+P`\r\n|打开命令面板\r\n\r\n|`Ctrl+P`\r\n|搜索项目中的文件\r\n\r\n|`Ctrl+G`\r\n|跳转到第几行\r\n\r\n|`Ctrl+W`\r\n|关闭当前打开文件\r\n\r\n|`Ctrl+Shift+W`\r\n|关闭所有打开文件\r\n\r\n|`Ctrl+Shift+V`\r\n|粘贴并格式化\r\n\r\n|`Ctrl+D`\r\n|选择单词，重复可增加选择下一个相同的单词\r\n\r\n|`Ctrl+L`\r\n|选择行，重复可依次增加选择下一行\r\n\r\n|`Ctrl+Shift+L`\r\n|选择多行\r\n\r\n|`Ctrl+Shift+Enter`\r\n|在当前行前插入新行\r\n\r\n|`Ctrl+X`\r\n|删除当前行\r\n\r\n|`Ctrl+M`\r\n|跳转到对应括号\r\n\r\n|`Ctrl+U`\r\n|软撤销，撤销光标位置\r\n\r\n|`Ctrl+J`\r\n|选择标签内容\r\n\r\n|`Ctrl+F`\r\n|查找内容\r\n\r\n|`Ctrl+Shift+F`\r\n|查找并替换\r\n\r\n|`Ctrl+H`\r\n|替换\r\n\r\n|`Ctrl+R`\r\n|前往 method\r\n\r\n|`Ctrl+N`\r\n|新建窗口\r\n\r\n|`Ctrl+K+B`\r\n|开关侧栏\r\n\r\n|`Ctrl+Shift+M`\r\n|选中当前括号内容，重复可选着括号本身\r\n\r\n|`Ctrl+F2`\r\n|设置/删除标记\r\n\r\n|`Ctrl+/`\r\n|注释当前行\r\n\r\n|`Ctrl+Shift+/`\r\n|当前位置插入注释\r\n\r\n|`Ctrl+Alt+/`\r\n|块注释，并Focus到首行，写注释说明用的\r\n\r\n|`Ctrl+Shift+A`\r\n|选择当前标签前后，修改标签用的\r\n\r\n|`F11`\r\n|全屏\r\n\r\n|`Shift+F11`\r\n|全屏免打扰模式，只编辑当前文件\r\n\r\n|`Alt+F3`\r\n|选择所有相同的词\r\n\r\n|`Alt+.`\r\n|闭合标签\r\n\r\n|`Alt+Shift+数字`\r\n|分屏显示\r\n\r\n|`Alt+数字`\r\n|切换打开第N个文件\r\n\r\n|`Shift+右键拖动`\r\n|光标多不，用来更改或插入列内容\r\n\r\n|`Ctrl+Shift+上下键`\r\n|可替换行\r\n\r\n|===\r\n\r\n\r\n== `sublime` 代码片段\r\n\r\nlink:/post/editor/snippets[snippets]\r\n\r\n== 自定义快捷键\r\n\r\n.sublime-keymap\r\n```json\r\n[\r\n    {\"keys\": [\"enter\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\r\n        [\r\n            { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^[)\\\\]\\\\>\\\\'\\\\\\\"\\\\ %>\\\\}\\\\;\\\\,]\", \"match_all\": true },\r\n            { \"key\": \"preceding_text\", \"operator\": \"not_regex_match\", \"operand\": \"^.*\\\\{$\", \"match_all\": true  },\r\n            { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false }\r\n\r\n        ]\r\n    },\r\n    //删除行\r\n    { \"keys\": [\"ctrl+d\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Line.sublime-macro\"} },\r\n    //向下查找\r\n    { \"keys\": [\"ctrl+shift+f3\"], \"command\": \"find_under_expand\" },\r\n\r\n    { \"keys\": [\"ctrl+shift+1\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${0:$SELECTION}\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n    { \"keys\": [\"ctrl+shift+2\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"${0:$SELECTION}\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n    { \"keys\": [\"ctrl+super+t\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[笔记列表][anchor-id]\\n\\n[anchor-id]: file:///D:/1125/%E7%AC%94%E8%AE%B0/note/html/\\n[anchor-cur]: #\\n[TOC]\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\r\n            { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true },\r\n            { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\r\n            { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n\r\n    { \"keys\": [\"ctrl+o\"], \"command\": \"fuzzy_start_from_file\" },\r\n    { \"keys\": [\"ctrl+shift+o\"], \"command\": \"fuzzy_bookmarks_load\" },\r\n    //标题\r\n    /*\r\n    { \"keys\": [\"ctrl+2\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"## [$0]\"}, \"context\":\r\n     [\r\n         { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n         { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\r\n         { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true },\r\n         { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\r\n         { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\r\n         { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n     ]\r\n    },\r\n    { \"keys\": [\"ctrl+2\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"## [${0: ${SELECTION/(^( +)?(#+)?\\\\s*|\\\\s*(#+)?( +)?$)//g}}]$1[anchor-cur]\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"setting.mde.match_header_hashes\", \"operator\": \"equal\", \"operand\": false },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n    { \"keys\": [\"ctrl+2\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"## [${0: ${SELECTION/(^( +)?(#+)?\\\\s*|\\\\s*(#+)?( +)?$)//g} }]##$1[anchor-cur]\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"setting.mde.match_header_hashes\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n    //标题4\r\n    { \"keys\": [\"ctrl+3\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"### [$0]\"}, \"context\":\r\n     [\r\n         { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n         { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\r\n         { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true },\r\n         { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\r\n         { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true },\r\n         { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n     ]\r\n    },\r\n    { \"keys\": [\"ctrl+3\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"### [${0: ${SELECTION/(^( +)?(#+)?\\\\s*|\\\\s*(#+)?( +)?$)//g}}]$1[anchor-cur]\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"setting.mde.match_header_hashes\", \"operator\": \"equal\", \"operand\": false },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    },\r\n    { \"keys\": [\"ctrl+3\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"### [${0: ${SELECTION/(^( +)?(#+)?\\\\s*|\\\\s*(#+)?( +)?$)//g} }]##$1[anchor-cur]\"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"setting.mde.match_header_hashes\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n            { \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"text.html.markdown\", \"match_all\": true }\r\n        ]\r\n    }\r\n    */\r\n    //快捷键插入 snippet\r\n    { \"keys\": [\"ctrl+shift+c\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/User/c.sublime-snippet\",\"contents\":\"${0:$SELECTION}\"}\r\n    },\r\n    { \"keys\": [\"ctrl+shift+c1\"], \"command\": \"insert_snippet\", \"args\": {\"name\": \"Packages/User/c1.sublime-snippet\",\"contents\":\"${0:$SELECTION}\"}\r\n    },\r\n    { \"keys\": [\"ctrl+shift+b\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \" *${0:$SELECTION}* \"}, \"context\":\r\n        [\r\n            { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\r\n            { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true },\r\n        ]\r\n    }\r\n]\r\n```\r\n\r\n=== 参考\r\n. http://blog.csdn.net/crper/article/details/50609370[Sublime text 3更改侧边栏【sidebar】的字体大小]\r\n. https://www.zhihu.com/question/24896283[Sublime 使用技巧]\r\n",
        "tags": [
            "sublime"
        ]
    },
    {
        "uri": "//hugo/post/editor/understand",
        "title": "understand",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== 参考\r\n. [[understand | chrome-extension://ikhdkkncnoglghljlkmcimlnlhkeamad/pdf-viewer/web/viewer.html?file=http%3A%2F%2Fscitools.com%2Fdocuments%2Fmanuals%2Fpdf%2Funderstand.pdf]]\r\n",
        "tags": [
            "源码分析"
        ]
    },
    {
        "uri": "//hugo/post/go/basic",
        "title": "go 基础配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== go\r\n\r\n=== 配置\r\n\r\n==== 软件下载\r\n\r\n[cols=\"2*\"]\r\n|===\r\n|Go SDK\r\n|IDE\r\n\r\n|http://www.golangtc.com/download[sdk]\r\n|http://www.sublimetext.com/[sublime]\r\n|===\r\n\r\n==== 环境变量配置\r\nGOROOT ::\r\n\t`go` 的安装路径\r\nGOPATH ::\r\n\t`go` 项目的工作空间\r\nDemo ::\r\n+\r\n```\r\n\tGOROOT=D:\\env\\go1.7.windows-amd64\\go\r\n\tGOPATH=D:\\env\\code\\go\r\n    path=%GOROOT%\\bin;%GOPATH%\\bin;%path%\r\n```\r\n\r\n=== sublime go 开发环境配置\r\n\r\n==== GoSublime\r\n. 配置 `project`\r\n+\r\n[source,json]\r\n----\r\n{\r\n    \"settings\": {\r\n        \"GoSublime\": {\r\n            \"env\": {\r\n            \t\"GOPATH\": \"D:/env/code/go\" \r\n            }\r\n        }\r\n    },\r\n    \"folders\": [\r\n        {\r\n            \"path\": \"D:/env/code/go\"\r\n        }\r\n    ]\r\n}\r\n----\r\n `go` 工作空间\r\n\r\n==== 安装 gocode 和 margo\r\n\r\nTIP: 在 `GOPATH` 路径下执行\r\n```\r\ngo get github.com/nsf/gocode\r\ngo get github.com/slene/margo\r\n```\r\n\r\n=== go语言指针符号的*和&\r\n\r\n```\r\nfunc main() {\r\n    var a int = 1\r\n    var b *int = &a\r\n    var c **int = &b\r\n    var x int = *b\r\n    fmt.Println(\"a = \",a)\r\n    fmt.Println(\"&a = \",&a)\r\n    fmt.Println(\"*&a = \",*&a)\r\n    fmt.Println(\"b = \",b)\r\n    fmt.Println(\"&b = \",&b)\r\n    fmt.Println(\"*&b = \",*&b)\r\n    fmt.Println(\"*b = \",*b)\r\n    fmt.Println(\"c = \",c)\r\n    fmt.Println(\"*c = \",*c)\r\n    fmt.Println(\"&c = \",&c)\r\n    fmt.Println(\"*&c = \",*&c)\r\n    fmt.Println(\"**c = \",**c)\r\n    fmt.Println(\"***&*&*&*&c = \",***&*&*&*&*&c)\r\n    fmt.Println(\"x = \",x)\r\n}\r\n```\r\n\r\n==== 解释\r\n\r\n[quote]\r\n----\r\n理论\r\n\r\n&符号的意思是对变量取地址，如：变量a的地址是&a\r\n*符号的意思是对指针取值，如:*&a，就是a变量所在地址的值，当然也就是a的值了\r\n\r\n简单的解释 ::\r\n\r\n*和 & 可以互相抵消,同时注意，*&可以抵消掉，但&*是不可以抵消的\r\na和*&a是一样的，都是a的值，值为1 (因为*&互相抵消掉了)\r\n同理，a和*&*&*&*&a是一样的，都是1 (因为4个*&互相抵消掉了)\r\n\r\n展开\r\n\r\n因为有\r\nvar b *int = &a\r\n所以\r\na和*&a和*b是一样的，都是a的值，值为1 (把b当做&a看)\r\n\r\n再次展开\r\n\r\n因为有\r\nvar c **int = &b\r\n所以\r\n**c和**&b是一样的，把&约去后\r\n会发现**c和`b是一样的 (从这里也不难看出，c和b也是一样的) 又因为上面得到的&a和b是一样的 所以**c和&a是一样的，再次把*&约去后**c和a`是一样的，都是1\r\n\r\n不信你试试？\r\n\r\n公布结果\r\n\r\n运行的结果内的地址值（0xc200开头的）可能会因不同机器运行而不同，你懂的\r\n----\r\n\r\n\r\n=== windows 环境 gcc 配置\r\n\r\n==== 下载 MSYS2\r\n\r\nhttp://repo.msys2.org/distrib/msys2-x86_64-latest.exe[msys2-x86_64-latest.exe]\r\n\r\n==== 安装 GCC\r\n\r\n配置 pacman 源 ::\r\n./etc/pacman.d/mirrorlist.mingw64\r\n```\r\nServer = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64/\r\n```\r\n\r\n安装 GCC\r\n```\r\npacman -S mingw-w64-x86_64-gcc\r\n```\r\n\r\n\r\n\r\n=== 参考\r\n. http://download.qt.io/official_releases/qt/[Qt Downloads]\r\n. https://github.com/gpmgo/gopm[Go 包管理工具]\r\n. https://gopm.io/[Go 语言包管理]\r\n. https://github.com/orlp/dev-on-windows/wiki/Installing-GCC--&-MSYS2[Installing GCC & MSYS2]\r\n\r\n\r\n\r\ngo build -ldflags=\"-H windowsgui\"\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/01_hello",
        "content": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tfmt.Println(\"Hello world!你好，世界！\")\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/02_basic_structure",
        "content": "// 当前程序的包名\r\npackage main\r\n\r\n// 导入其它的包\r\nimport std \"fmt\"\r\n\r\n// 常量的定义\r\nconst PI = 3.14\r\n\r\n// 全局变量的声明与赋值\r\nvar name = \"gopher\"\r\n\r\n// 一般类型声明\r\ntype newType int\r\n\r\n// 结构的声明\r\ntype gopher struct{}\r\n\r\n// 接口的声明\r\ntype golang interface{}\r\n\r\n// 由 main 函数作为程序入口点启动\r\nfunc main() {\r\n\tstd.Println(\"Hello world!你好，世界！\")\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/03_type-alias",
        "content": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\ntype (\r\n\tbyte int8\r\n\trune int32\r\n\t文本   string\r\n)\r\n\r\nfunc main() {\r\n\tvar b 文本\r\n\tb = \"中文啊亲\"\r\n\tfmt.Println(\"文本b：\" + b)\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/06_bubble_sort",
        "content": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\t// 未排序数组\r\n\tsort := [...]int{1, 7, 4, 2, 5}\r\n\tfmt.Println(sort)\r\n\r\n\t// 冒泡排序，由大到小\r\n\tnum := len(sort)\r\n\tfor i := 0; i < num; i++ {\r\n\t\tfor j := i + 1; j < num; j++ {\r\n\t\t\t// 比较大小\r\n\t\t\tif sort[i] < sort[j] {\r\n\t\t\t\ttemp := sort[i]\r\n\t\t\t\tsort[i] = sort[j]\r\n\t\t\t\tsort[j] = temp\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfmt.Println(sort)\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/08_exchange_key-value",
        "content": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tm1 := map[int]string{1: \"a\", 2: \"b\", 3: \"c\", 4: \"d\", 5: \"e\",\r\n\t\t6: \"f\", 7: \"g\", 8: \"h\", 9: \"i\", 0: \"j\"}\r\n\tfmt.Println(\"m1\", m1)\r\n\tm2 := make(map[string]int)\r\n\tfor i, v := range m1 {\r\n\t\tm2[v] = i\r\n\t}\r\n\tfmt.Println(\"m2\", m2)\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/09_closure",
        "content": "package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n)\r\n\r\nfunc main() {\r\n\tvar fs = [4]func(){}\r\n\r\n\tfor i := 0; i < 4; i++ {\r\n\t\tdefer fmt.Println(\"defer i = \", i)\r\n\t\tdefer func() { fmt.Println(\"defer_closure i = \", i) }()\r\n\t\tfs[i] = func() { fmt.Println(\"closure i = \", i) }\r\n\t}\r\n\r\n\tfor _, f := range fs {\r\n\t\tf()\r\n\t}\r\n}\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture1",
        "content": "第 1 课：Go 开发环境搭建\r\n\r\n\r\n基本信息\r\n\r\n课程时长：20:02\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] Go 基本介绍\r\n\t[04:10] 安装 Go 语言\r\n\t[05:00] Go 环境变量与工作目录\r\n\t[07:27] Go 命令简介\r\n\t[11:06] godoc 建立本地文档\r\n\t[15:40] Sublime Text 安装与配置\r\n\t[18:05] \"Hello world!\"\r\n\t\r\n补充说明\r\n\r\n如果对安装 Sublime Text 部分不是很理解，完整教程请参考 博文\r\n\r\n 相关链接\r\n\r\nGo 在谷歌：以软件工程为目的的语言设计\r\ngo-wiki\r\nGo Walker\r\nGo Language Resources\r\nGolang 相关 QQ 群\r\nGo 源码安装：参考链接\r\nGo 标准包安装：下载地址\r\nCHM手册\r\n其它 IDE 安装方案：参考链接\r\n下载 Sublime Text：官方网站\r\n安装 gosublime（破解版可能无法安装）：安装指令\r\nSublime Text 2 入门及技巧\r\nGo 初学者常问的问题 FAQ\r\n\r\n课程链接\r\n\r\n第 2 课：Go 基础知识\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture10",
        "content": "第 10 课：结构 struct\r\n\r\n\r\n基本信息\r\n\r\n课程时长：38:57\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[08:28] 结构的定义与使用\r\n\t[12:45] 使用字面值初始化\r\n\t[18:05] 匿名结构与字段\r\n\t[23:43] 结构间的赋值与比较\r\n\t[26:10] 嵌入结构\r\n\t[31:25] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n暂无说明\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 9 课：函数 function\r\n第 11 课：方法 method",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture11",
        "content": "第 11 课：方法 method\r\n\r\n\r\n基本信息\r\n\r\n课程时长：23:13\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[06:30] 方法的声明与使用\r\n\t[13:05] 类型别名与方法\r\n\t[16:30] Method Value 与 Method Expression\r\n\t[18:43] 方法名称冲突与字段访问权限\r\n\t[21:20] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n暂无说明\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 10 课：结构 struct\r\n第 12 课：接口 interface",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture12",
        "content": "第 12 课：接口 interface\r\n\r\n\r\n基本信息\r\n\r\n课程时长：28:36\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:30] 接口的定义与基本操作\r\n\t[10:43] 嵌入接口\r\n\t[12:45] 类型断言\r\n\t[13:58] 空接口与 type switch\r\n\t[18:48] 接口转换\r\n\t[22:07] 接口使用注意事项\r\n\r\n补充说明\r\n\r\n暂无说明\r\n\r\n 相关链接\r\n\r\n评: 为什么我不喜欢 Go 语言式的接口\r\n\r\n课程链接\r\n\r\n第 11 课：方法 method\r\n第 13 课：反射 reflection",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture13",
        "content": "第 13 课：反射 reflection\r\n\r\n\r\n基本信息\r\n\r\n课程时长：31:33\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:28] 反射基本操作\r\n\t[12:10] 反射匿名或嵌入字段\r\n\t[16:10] 修改目标对象\r\n\t[24:10] 动态调用方法\r\n\t[28:15] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n视频第 22 分 33 秒，代码第 23 行应该为 if v.Kind() != reflect.Ptr || !v.Elem().CanSet() {。\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 12 课：接口 interface\r\n第 14 课：并发 concurrency\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture14",
        "content": "第 14 课：并发 concurrency\r\n\r\n\r\n基本信息\r\n\r\n课程时长：47:52\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[03:17] 初窥 goroutine\r\n\t[08:45] channel 概述\r\n\t[20:20] 多个 goroutine 打印\r\n\t[29:00] select 概述\r\n\t[47:17] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n暂无说明\r\n\r\n相关链接\r\n\r\nConcurrency Is Not Parallelism 【PPT】\r\nGo语言_并发篇\r\ngoroutine背后的系统知识\r\nAdvanced Go Concurrency Patterns\r\nWhat exactly does runtime.Gosched do?\r\n\r\n 课程链接\r\n\r\n第 13 课：反射 reflection\r\n第 15 课：项目与坑",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture15",
        "content": "第 15 课：项目与坑\r\n\r\n\r\n基本信息\r\n\r\n课程时长：28:56\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[06:32] 完整项目结构\r\n\t[15:15] slice 与 append 的坑\r\n\t[19:45] time.Format 的坑\r\n\t[23:02] range 与闭包的坑\r\n\r\n补充说明\r\n\r\n暂无说明\r\n\r\n 相关链接\r\n\r\n暂无链接\r\n\r\n课程链接\r\n\r\n第 14 课：并发 concurrency",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture2",
        "content": "第 2 课：Go 基础知识\r\n\r\n\r\n基本信息\r\n\r\n课程时长：14:21\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 课堂笔记的使用方法\r\n\t[01:36] Go内置关键字和注释方法\r\n\t[02:08] Go程序的一般结构\r\n\t[07:25] 包的导入\r\n\t[09:43] package别名与省略调用\r\n\t[11:45] 可见性规则\r\n\t[13:53] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\ngosublime 调出内置命令行快捷键 Ctrl+B(windows)\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 1 课：Go 开发环境搭建\r\n第 3 课：类型与变量",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture3",
        "content": "第 3 课：类型与变量\r\n\r\n\r\n基本信息\r\n\r\n课程时长：32:37\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:57] 基本类型\r\n\t[11:25] 类型零值\r\n\t[16:30] 类型别名\r\n\t[19:20] 变量的声明与赋值\r\n\t[29:20] 类型转换\r\n\t[32:13] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n从严格意义上讲 type newInt int, 这里 newInt 并不能说是 int 的别名，而只是底层数据结构相同，在这里称为自定义类型，在进行类型转换时仍旧需要显式转换，但 byte 和 rune 确确实实为 uint8 和 int32 的别名，可以相互进行转换。有关于自定义类型将在后面的教程中进行讲解。\r\nVar() 变量组可以在函数体内用于声明局部变量，感谢 Hubery 指出，但并不建议这样使用。\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 视频错误\r\n\t[04:30]\r\n\t\tvar组只能声明全局变量，不能在函数体中使用。[x]\r\n\t\tvar组只能声明全局变量，也可以在函数体中使用。[√]\r\n\r\n\r\n课程链接\r\n\r\n第 2 课：Go 基础知识\r\n第 4 课：常量与运算符\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture4",
        "content": "第 4 课：常量与运算符\r\n\r\n\r\n基本信息\r\n\r\n课程时长：28:21\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:35] 常量的定义\r\n\t[11:30] 常量的枚举\r\n\t[17:05] 运算符\r\n\t[27:45] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n《Go 编程基础》视频第 4 课： 常量与运算符 笔记\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 3 课：类型与变量\r\n第 5 课：控制语句",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture5",
        "content": "第 5 课：控制语句\r\n\r\n\r\n基本信息\r\n\r\n课程时长：28:33\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[03:51] 基础知识补充（指针、递增递减语句）\r\n\t[06:45] if判断语句\r\n\t[10:32] for循环语句\r\n\t[15:50] switch选择语句\r\n\t[21:26] 跳转语句\r\n\t[27:42] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n如果在 if 的条件语句两边加上括号不会报错，但在 gofmt 时会自动消除\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 4 课：常量与运算符\r\n第 6 课：数组 array",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture6",
        "content": "第 6 课：数组 array\r\n\r\n\r\n基本信息\r\n\r\n课程时长：22:01\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:23] array的定义\r\n\t[10:02] 指向数组的指针和指针数组\r\n\t[12:30] 数组之间的比较\r\n\t[14:22] 使用new创建数组\r\n\t[16:09] 多维数组\r\n\t[18:45] 冒泡排序\r\n\t\r\n作业答案\r\n\r\n暂无作业\r\n\r\n 补充说明\r\n\r\nfor 循环中声明的变量在每次循环结束都会消失，作用域只在当次循环\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 5 课：控制语句\r\n第 7 课：切片 slice",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture7",
        "content": "第 7 课：切片 slice\r\n\r\n\r\n基本信息\r\n\r\n课程时长：34:51\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[03:15] slice 概述\r\n\t[05:20] 创建 slice\r\n\t[18:25] reslice 概述\r\n\t[23:00] append()与slice\r\n\t[29:55] copy()与slice\r\n\t[33:55] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n26:37 处的“数组” a 实际为切片，但不影响教程演示。若想其成为数组，应把 [] 改为 [...]。\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 6 课：数组 array\r\n第 8 课：map\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture8",
        "content": "第 8 课：map\r\n\r\n\r\n基本信息\r\n\r\n课程时长：23:55\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[04:00] map 概述\r\n\t[05:10] 简单 map 的创建与使用\r\n\t[08:26] 复杂 map 与键值对操作\r\n\t[13:10] map 与 slice 的迭代操作\r\n\t[15:15] 元素类型为 map 的 slice\r\n\t[18:45] map 的间接排序\r\n\t[22:30] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n在开头的知识回顾中，reslice 的操作只是将 slice 指向底层的指针的值进行了调整，而未发生值的拷贝。\r\n \r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 7 课：切片 slice\r\n第 9 课：函数 function\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/lectures/lecture9",
        "content": "第 9 课：函数 function\r\n\r\n\r\n基本信息\r\n\r\n课程时长：28:30\r\n在线观看：土豆网 优才网 网易云课堂\r\n\r\n 课程大纲\r\n\r\n\t[00:00] 知识回顾\r\n\t[03:50] 函数概述\r\n\t[05:00] 函数的定义与使用\r\n\t[08:00] 不定长变参\r\n\t[10:52] 传递值类型和引用类型\r\n\t[13:20] 匿名函数与闭包\r\n\t[18:15] defer 用法\r\n\t[23:06] panic 与 recover\r\n\t[28:06] 课堂作业布置\r\n\t\r\n作业答案\r\n\r\n下堂课讲解\r\n\r\n 补充说明\r\n\r\n暂无说明\r\n\r\n相关链接\r\n\r\n暂无链接\r\n\r\n 课程链接\r\n\r\n第 8 课：map\r\n第 10 课：结构 struct",
        "tags": []
    },
    {
        "uri": "//hugo/post/go/go-fundamental-programming/README",
        "content": "《Go编程基础》\r\n\r\n\r\n借用《Go Web编程》一书中的话，出本套教程并不代表我自身的能力有多强，而是我愿意将自己在学习过程中积累到的知识分享给大家，并结合自己遇到的一些坑爹经历来讲解如何处理各种奇葩问题，从而更好地帮助广大的和潜在的 Go 语言爱好者。\r\n\r\n基本信息\r\n\r\n教程讲师：无闻\r\n教程简介：《Go编程基础》是一套针对 Google 出品的 Go 语言的视频语音教程，主要面向 Go 语言新手级别的学习者。\r\n开发环境：Go 语言 1.0.3-1.5.* 版本\r\n开发工具：Sublime Text 2-3\r\n开发系统：Windows 7 64 位\r\n其它说明：每堂课都会建立一个文件（例如：lecture1.md）作为课堂笔记。课堂笔记中里面包含了该堂课所涵盖的知识点以及知识点开始讲解的时间点，方便学习者快速定位要了解的部分，节省不必要浪费的时间。此外，如果教程中因口误或其它原因使学习者产生迷惑的部分，同样会在课堂笔记中进行补充说明。\r\n收录网站：\r\n\t优才网 \r\n\t皆学问 \r\n\t网易云课堂\r\n\t51CTO 学院\r\n课程下载：\r\n\t百度网盘（提取码：mgom）\r\n\r\n 捐赠作者\r\n\r\n如果您觉得本套教程确实不错，并认为作者的努力值得肯定，可以通过 支付宝 为作者提供小额捐助，以资鼓励。\r\n\r\n教程大纲\r\n\r\n| 课时数 | 课时标题 | 在线播放 |\r\n|:-----:|:--------|:-------|\r\n|第 1 课|Go开发环境搭建|土豆网 优才网 网易云课堂|\r\n|第 2 课|Go基础知识|土豆网 优才网 网易云课堂|\r\n|第 3 课|类型与变量|土豆网 优才网 网易云课堂|\r\n|第 4 课|常量与运算符|土豆网 优才网 网易云课堂|\r\n|第 5 课|控制语句|土豆网 优才网 网易云课堂|\r\n|第 6 课|数组array|土豆网 优才网 网易云课堂|\r\n|第 7 课|切片slice|土豆网 优才网 网易云课堂|\r\n|第 8 课|map|土豆网 优才网 网易云课堂|\r\n|第 9 课|函数function|土豆网 优才网 网易云课堂|\r\n|第 10 课|结构struct|土豆网 优才网 网易云课堂|\r\n|第 11 课|方法method|土豆网 优才网 网易云课堂|\r\n|第 12 课|接口interface|土豆网 优才网 网易云课堂|\r\n|第 13 课|反射reflection|土豆网 优才网 网易云课堂|\r\n|第 14 课|并发concurrency|土豆网 优才网 网易云课堂|\r\n|第 15 课|项目与坑|土豆网 优才网 网易云课堂|\r\n\r\n 相关资源\r\n\r\n教程资源\r\n\t 《Go Web基础》\r\n\t 《Go名库讲解》\r\nQQ 交流群\r\n\tMartini&Macaron 交流群：371440803\r\n\tGolang Web 开发：245386165\r\n\tGo Web 交流：259316004\r\n学习网站\r\n\tGolang 友团\r\n\tGo 语言学习园地\r\n\tGolang 中国\r\n辅助站点\r\n\tGo Walker：在线 Go 项目 API 文档\r\n\r\n授权许可\r\n\r\n除特别声明外，本套教程中的内容使用CC BY-SA 3.0 License（创作共用 署名-相同方式共享3.0许可协议）授权，代码遵循BSD 3-Clause License（3项条款的BSD许可协议）。\r\n\r\n 鸣谢\r\n\r\npolaris\r\nAsta谢\r\n昌雄\r\nHubery\r\n悠然\r\n\r\n参考资料\r\n\r\n《Go Web编程》（Asta谢）\r\n《The Way to Go》 中文版《Go入门指南》（Ivo Balbaert）\r\nGo (programming language)(维基百科)\r\n《Go 学习笔记》（雨痕）\r\n《Go语言编程》（晨笛）\r\n《Golang常见的坑和编程模式》（刘奇）\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/activemq",
        "title": "ActiveMq",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== ActiveMq\r\n\r\n\r\n=== Spring JMS JmsTemplate\r\n`onMessage` 调用过程 ::\r\n@startuml\r\n@startdot\r\ndigraph jms {\r\n  graph [bgcolor=\"#F6F6F6\", fontsize=\"12\", label=\"\"];\r\n  node [labeljust=\"centered\", shape=\"box\", style=\"filled\", color=\"blue\", fontsize=\"8\", fillcolor=\"white\", label=\"\"];\r\n  edge [style=\"solid\", color=\"black\", fontsize=\"8\", label=\"\"];\r\n  __N1 [shape=\"Msquare\", color=\"darkgreen\", label=\"start\"];\r\n  __N2 [label=\"org.springframework.jms.listener.DefaultMessageListenerContainer.AsyncMessageListenerInvoker#run\"];\r\n\t__N3 [label=\"org.springframework.jms.listener.DefaultMessageListenerContainer.AsyncMessageListenerInvoker#invokeListener\"]\r\n\t__N4 [label=\"org.springframework.jms.listener.AbstractPollingMessageListenerContainer#receiveAndExecute\"]\r\n\t__N5 [label=\"org.springframework.jms.listener.AbstractPollingMessageListenerContainer#doReceiveAndExecute\"]\r\n\t__N6 [label=\"org.springframework.jms.listener.AbstractMessageListenerContainer#doExecuteListener\"]\r\n\t__N7 [label=\"org.springframework.jms.listener.AbstractMessageListenerContainer#invokeListener\"]\r\n\t__N8 [label=\"org.springframework.jms.listener.AbstractMessageListenerContainer#commitIfNecessary\r\n\t\"]\r\n\t__N1 -> __N2\r\n\t__N2 -> __N3\r\n\t__N3 -> __N4\r\n\t__N4 -> __N5\r\n\t__N5 -> __N6\r\n\t__N6 -> __N7\r\n\t__N7 -> __N8 [label=\"Session acknowledge=\\\"client\\\" 最后 jmsTemplate ack\",color=\"green\"]\r\n}\r\n@enddot\r\n@enduml\r\n\r\n\r\n拾遗 ::\r\n. [[ActiveMQ与Spring整合-MessageListener|http://blog.csdn.net/yuguiyang1990/article/details/12714739]]\r\n. [[activemq 应答模式|http://greemranqq.iteye.com/blog/2194051]]\r\n. [[ActiveMQ中消费者是怎么接收消息的（二）|http://www.myexception.cn/software-architecture-design/1739916.html]]\r\n. [[Spring和ActiveMQ集成实现队列消息以及PUB/SUB模型|http://www.xdemo.org/spring-activemq-pub-sub/]]\r\n. [[ActiveMQ讯息传送机制以及ACK机制 | http://blog.csdn.net/lulongzhou_llz/article/details/42270113]]\r\n. [[消息队列的使用场景是怎样的？| http://www.zhihu.com/question/34243607#answer-18734339]]\r\n. [[ActiveMQ Zookeeper | http://activemq.apache.org/replicated-leveldb-store.html]]\r\n. [[Spring-jms官方文档 | http://docs.spring.io/spring/docs/current/spring-framework-reference/html/jms.html]]\r\n. [[消息队列设计精要 | http://www.tuicool.com/articles/bQzaIvq]]\r\n. [[Spring AcknowledgeMode |http://louisling.iteye.com/blog/241073]]\r\n. [[Spring JMS - Exponential message re-delivery policy is ignored | http://stackoverflow.com/questions/23593980/spring-jms-exponential-message-re-delivery-policy-is-ignored]]\r\n. [[How to simulate message redelivery in AUTO_ACKNOWLEDGE JMS Session Scenario | http://stackoverflow.com/questions/9871069/how-to-simulate-message-redelivery-in-auto-acknowledge-jms-session-scenario]]\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/btrace",
        "title": "Btrace",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== Btrace\r\n\r\n=== windows git btrace 环境\r\n==== 配置\r\n添加环境变量 ::\r\n\r\n```\r\n$ vi /etc/profile.d/btrace.sh\r\n\r\n # btrace\r\nexport JAVA_HOME=/d/env/jdk/jdk1.7.0_71\r\nexport BTRACE_HOME=/e/data/btrace-bin-1.3.8.1\r\nexport PATH=\"$BTRACE_HOME/bin:$JAVA_HOME/jre/bin$PATH\"\r\n\r\n # vagrant\r\nexport COREOS=/e/vagrant/CoreOS\r\n```\r\n测试代码 ::\r\n\r\n[source]\r\n----\r\n$ btrace `jps | awk '{if($2==\"AppMain\"){print $1}}'` BTraceFiled.java  \r\n----\r\n `btrace`  测试类\r\n `jps` 查看 `pid`\r\n\r\n== 参考\r\n. http://www.tuicool.com/articles/NNBvueR[BTrace笔记]\r\n. http://learnworld.iteye.com/blog/1402763[BTrace使用总结]\r\n. http://www.open-open.com/lib/view/open1452174472698.html[Greys-anatomy]\r\n. https://github.com/oldmanpushcart/greys-anatomy[Greys-anatomy]\r\n\r\n== Q & A\r\n. Provider sun.tools.attach.WindowsAttachProvider could not be instant\r\n```\r\n解决方法：将jdk原路径下的jre/bin路径添加到环境变量path下\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/codes",
        "title": "java编程题",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 网易有道内推编程题\r\n=== 1\r\n. 洗牌在生活中十分常见，现在需要写一个程序模拟洗牌的过程。 现在需要洗2n张牌，从上到下依次是第1张，第2张，第3张一直到第2n张。首先，我们把这2n张牌分成两堆，左手拿着第1张到第n张（上半堆），右手拿着第n+1张到第2n张（下半堆）。接着就开始洗牌的过程，先放下右手的最后一张牌，再放下左手的最后一张牌，接着放下右手的倒数第二张牌，再放下左手的倒数第二张牌，直到最后放下左手的第一张牌。接着把牌合并起来就可以了。 例如有6张牌，最开始牌的序列是1,2,3,4,5,6。首先分成两组，左手拿着1,2,3；右手拿着4,5,6。在洗牌过程中按顺序放下了6,3,5,2,4,1。把这六张牌再次合成一组牌之后，我们按照从上往下的顺序看这组牌，就变成了序列1,4,2,5,3,6。 现在给出一个原始牌组，请输出这副牌洗牌k次之后从上往下的序列。\r\n```java\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int groupNumber = in.nextInt();\r\n        int[][] groupNumbers = new int[groupNumber][];\r\n        int[] ks = new int[groupNumber];\r\n\r\n        for (int i = 0; i < groupNumber; i++) {\r\n            int n = in.nextInt();\r\n            ks[i] = in.nextInt();\r\n\r\n            groupNumbers[i] = new int[n * 2];\r\n            for (int j = 0; j < n * 2; j++) {\r\n                groupNumbers[i][j] = in.nextInt();\r\n            }\r\n        }\r\n\r\n        for (int k = 0; k < groupNumber; k++) {\r\n            if ((k + 1) == groupNumber) {\r\n                calculateAndPrint(groupNumbers[k], ks[k], true);\r\n            } else {\r\n                calculateAndPrint(groupNumbers[k], ks[k], false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void calculateAndPrint(int[] numbers, int k, boolean isLast) {\r\n        int length = numbers.length;\r\n        int start1 = 0;\r\n        int start2 = length / 2;\r\n\r\n        if (k == 1) {\r\n            for (int i = 0; i < length / 2; i++) {\r\n                System.out.print(numbers[start1] + \" \");\r\n\r\n                if ((i + 1) == length / 2) {\r\n                    if(isLast){\r\n                        System.out.print(numbers[start2]);\r\n                    } else{\r\n                        System.out.print(numbers[start2] + \"\\n\");\r\n                    }\r\n                } else {\r\n                    System.out.print(numbers[start2] + \" \");\r\n                }\r\n\r\n                start1++;\r\n                start2++;\r\n            }\r\n        } else {\r\n            int[] newNumbers = new int[length];\r\n\r\n            int count = 0;\r\n            for (int i = 0; i < length / 2; i++) {\r\n                newNumbers[count++] = numbers[start1];\r\n                newNumbers[count++] = numbers[start2];\r\n\r\n                start1++;\r\n                start2++;\r\n            }\r\n\r\n            calculateAndPrint(newNumbers, --k, isLast);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\n=== 2\r\n. 小明同学把1到n这n个数字按照一定的顺序放入了一个队列Q中。现在他对队列Q执行了如下程序： while(!Q.empty()) //队列不空，执行循环\r\n```java\r\n{\r\n\r\nint x=Q.front();            //取出当前队头的值x\r\n\r\nQ.pop();                 //弹出当前队头\r\n\r\nQ.push(x);               //把x放入队尾\r\n\r\nx = Q.front();              //取出这时候队头的值\r\n\r\nprintf(\"%d\\n\",x);          //输出x\r\n\r\nQ.pop();                 //弹出这时候的队头\r\n\r\n}\r\n```\r\n. 做取出队头的值操作的时候，并不弹出当前队头。 小明同学发现，这段程序恰好按顺序输出了1,2,3,...,n。现在小明想让你构造出原始的队列，你能做到吗？[注：原题样例第三行5有错，应该为3，以下已修正]\r\n```java\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n\r\n        int groupNumber = in.nextInt();\r\n\r\n        for(int j = 0; j < groupNumber; j++){\r\n            int count = in.nextInt();\r\n            List list = new ArrayList();\r\n            for(int i = 0; i < count; i++){\r\n                list.add(i + 1);\r\n            }\r\n\r\n            for(int i = 1; i < count; i++){\r\n                int temp = list.get(count - 1);\r\n                list.add(count - i - 1, temp);\r\n                list.remove(list.size() - 1);\r\n            }\r\n\r\n            for(int i = 0; i < count; i++){\r\n                System.out.print(list.get(i));\r\n                if(i != count - 1){\r\n                    System.out.print(\" \");\r\n                }\r\n            }\r\n            System.out.println();\r\n        }\r\n    }\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/es/elasticsearch-jdbc-importer",
        "title": "elasticsearch-jdbc-importer",
        "content": "\r\nelasticsearch-jdbc-importer\r\n\r\n mysql数据导入elasticsearch\r\n\r\n设置映射\r\n`json\r\nPUT /b2b\r\n{\r\n   \"settings\": {\r\n      \"numberofreplicas\": \"1\",\r\n      \"numberofshards\": \"1\"\r\n   },\r\n   \"mappings\": {\r\n      \"mlq_goods\": {\r\n         \"properties\": {\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"not_analyzed\"\r\n            },\r\n            \"category\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            },\r\n           \"cat_code\": {\r\n              \"type\": \"string\",\r\n              \"store\": \"yes\",\r\n              \"index\": \"analyzed\",\r\n              \"analyzer\": \"mmseg\"\r\n           },\r\n            \"brand_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"brandnamenoa\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"not_analyzed\"\r\n            },\r\n            \"newsellernick\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"goods_status\": {\r\n               \"type\": \"string\",\r\n                \"store\": \"yes\",\r\n               \"index\": \"not_analyzed\"\r\n            },\r\n            \"title\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            }\r\n         }\r\n      },\r\n      \"mlq_product\": {\r\n         \"_parent\": {\r\n            \"type\": \"mlq_goods\"\r\n         },\r\n         \"properties\": {\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"not_analyzed\"\r\n            },\r\n            \"sale_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"repository_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"productnamenoa\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"not_analyzed\"\r\n            },\r\n            \"product_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": \"yes\",\r\n               \"index\": \"analyzed\",\r\n               \"analyzer\": \"ik\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n`\r\nimport导入文件\r\n`bash\r\n!/bin/sh\r\n\"schedule\" : \"0 0 22 * * ?\",\r\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\r\nbin=${DIR}/../../bin\r\nlib=${DIR}/../../lib\r\necho '\r\n{\r\n    \"type\" : \"jdbc\",\r\n\t\"jdbc\" : {\r\n     \"url\" : \"jdbc:mysql://192.168.137.1:3306/b2b\",\r\n     \"user\" : \"root\",\r\n     \"password\" : \"111111\",\r\n\t \"sql\" :[\r\n\t\t{\r\n\t\t\t\"statement\" : \"SELECT \\\"b2b\\\" AS index, \\\"mlqgoods\\\" as type, mg.id AS _id, tranCat (LEFT(catcode, LENGTH(catcode) - 1)) AS category, (SELECT brandname FROM mlqbrand WHERE id = brandid) brandname, (SELECT tm.custname FROM timember tm WHERE tm.custid = mg.sellerid) newsellernick, mg.* FROM mlqgoods mg\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"statement\" : \"SELECT \\\"b2b\\\" AS index, \\\"mlqproduct\\\" as type, mp.id as _id, mp.goodsid as parent,mp.*,mpa.* FROM mlqproduct mp, (SELECT mpa.productid , tranAddr(MAX(CASE mpa.attrname WHEN \\\"销售地区\\\" THEN mpa.attrvalue ELSE 0 END ),\\\"-\\\") saleregion, tranAddr(MAX(CASE mpa.attrname WHEN \\\"出库地区\\\" THEN mpa.attrvalue ELSE 0 END ),\\\"-\\\") repositoryregion, MAX(CASE mpa.attrname WHEN \\\"最小起订量\\\" THEN mpa.attrvalue ELSE 0 END ) minquantity, MAX(CASE mpa.attrname WHEN \\\"库存量\\\" THEN mpa.attrvalue ELSE 0 END ) stockquantity, MAX(CASE mpa.attrname WHEN \\\"单位\\\" THEN mpa.attrvalue ELSE 0 END ) unit, MAX(CASE mpa.attrname WHEN \\\"交货天数\\\" THEN mpa.attrvalue ELSE 0 END ) deliveryday, MAX(CASE mpa.attrname WHEN \\\"包装类型\\\" THEN mpa.attrvalue ELSE 0 END ) packagetype FROM mlqproductattr mpa GROUP BY mpa.productid) mpa WHERE mp.id = mpa.product_id\"\r\n\t\t}\r\n\t],\r\n\t\"elasticsearch\" : {\r\n\t\t\t\"cluster\" : \"elasticsearch\",\r\n\t\t\t\"host\" : \"192.168.137.107\",\r\n\t\t\t\"port\" : 9300\r\n\t\t}\r\n    }\r\n}\r\n' | java \\\r\n    -cp \"${lib}/*\" \\\r\n    -Dlog4j.configurationFile=${bin}/log4j2.xml \\\r\n    org.xbib.tools.Runner \\\r\n    org.xbib.tools.JDBCImporter\r\n`",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/es/elasticsearch",
        "title": "Elasticsearch",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== Elasticsearch\r\n. **启动添加内存参数**\r\n```bash\r\n~/opt/elasticsearch-1.7.1/bin/elasticsearch -Xms512m -Xmx1g -d\r\n```\r\n. **动态脚本支持**\r\n```yml\r\nscript.disable_dynamic: false\r\n#关闭marvel\r\nmarvel.agent.enabled: false\r\n```\r\n. **b2b(正试)**\r\n```json\r\ncurl -XPOST \"http://192.168.1.126:9200/b2b\" -d'\r\n{\r\n   \"mappings\": {\r\n      \"mlq_shop_info\": {\r\n         \"properties\": {\r\n            \"shop_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"shop_desc\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"shop_logo\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"user_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"gmt_create\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"recom_modify\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"business_license_deadline\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"tag\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_modify\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"is_entity\": {\r\n               \"type\": \"string\"\r\n            }\r\n         }\r\n      },\r\n      \"mlq_goods\": {\r\n         \"_parent\": {\r\n            \"type\": \"mlq_shop_info\"\r\n         },\r\n         \"_routing\": {\r\n            \"required\": true\r\n         },\r\n         \"properties\": {\r\n            \"audit_remark\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"brand_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"brand_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"brand_name_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"cat_code\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"mmseg\"\r\n            },\r\n            \"category\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"simple\"\r\n            },\r\n            \"distribution_mode\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"gmt_create\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_listing\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_modify\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_desc\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_model\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_number\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_price\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_selling_point\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_status\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"img_large\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"is_listing_now\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"is_self\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"logistics_type\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"new_seller_nick\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"new_seller_nick_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"search_tag\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"seller_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"seller_nick\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"shop_cat_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"shop_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"shop_recommended\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"sort\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"title\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"weight\": {\r\n               \"type\": \"long\"\r\n            }\r\n         }\r\n      },\r\n      \"mlq_goods_dis\": {\r\n         \"_parent\": {\r\n            \"type\": \"mlq_shop_info\"\r\n         },\r\n         \"_routing\": {\r\n            \"required\": true\r\n         },\r\n         \"properties\": {\r\n            \"audit_remark\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"brand_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"brand_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"brand_name_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"cat_code\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"mmseg\"\r\n            },\r\n            \"category\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"distribution_mode\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"goods_desc\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_model\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_selling_point\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_status\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"goods_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"is_listing_now\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_listing\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"shop_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"is_self\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"new_seller_nick\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"new_seller_nick_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"shop_recommended\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"sort\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"weight\": {\r\n               \"type\": \"long\"\r\n            },\r\n            \"title\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"sale_price\": {\r\n               \"type\": \"double\"\r\n            },\r\n            \"is_distribute\": {\r\n               \"type\": \"string\"\r\n            }\r\n         }\r\n      },\r\n      \"mlq_product_dis\": {\r\n         \"_parent\": {\r\n            \"type\": \"mlq_goods_dis\"\r\n         },\r\n         \"_routing\": {\r\n            \"required\": true\r\n         },\r\n         \"properties\": {\r\n            \"delivery_day\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"min_quantity\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"package_type\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"product_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"product_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"product_name_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"repository_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"repository_region_noa\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"simple\"\r\n            },\r\n            \"repository_region_simple\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"simple\"\r\n            },\r\n            \"sale_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"stock_quantity\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"unit\": {\r\n               \"type\": \"string\"\r\n            }\r\n         }\r\n      },\r\n      \"mlq_product\": {\r\n         \"_parent\": {\r\n            \"type\": \"mlq_goods\"\r\n         },\r\n         \"_routing\": {\r\n            \"required\": true\r\n         },\r\n         \"properties\": {\r\n            \"brand_price\": {\r\n               \"type\": \"double\"\r\n            },\r\n            \"contract_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"creater\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"delivery_day\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_create\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"gmt_modify\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"goods_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"min_quantity\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"package_type\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"product_id\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"product_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"product_name_noa\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            },\r\n            \"product_price\": {\r\n               \"type\": \"double\"\r\n            },\r\n            \"repository_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"repository_region_noa\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"simple\"\r\n            },\r\n            \"repository_region_simple\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"simple\"\r\n            },\r\n            \"sale_region\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"stock_quantity\": {\r\n               \"type\": \"string\"\r\n            },\r\n            \"unit\": {\r\n               \"type\": \"string\"\r\n            }\r\n         }\r\n      }\r\n   }\r\n}'\r\n```\r\n\r\n\r\n== logstash\r\n\r\n=== jdbc 数据同步\r\n. 测试\r\n```yml\r\ninput {\r\n  jdbc {\r\n        jdbc_connection_string => \"jdbc:mysql://192.168.137.2:3306/test\"\r\n        jdbc_user => \"root\"\r\n        jdbc_password => \"111111\"\r\n        jdbc_driver_library => \"/mysql-connector-java-5.1.33.jar\"\r\n        jdbc_driver_class => \"com.mysql.jdbc.Driver\"\r\n        jdbc_paging_enabled => \"true\"\r\n        jdbc_page_size => \"50000\"\r\n        schedule => \"* * * * *\"\r\n        use_column_value => \"true\"\r\n        tracking_column => \"in_date\"\r\n        statement => \"SELECT * from contacts WHERE in_date > :sql_last_value\"\r\n    }\r\n}\r\noutput {\r\n  elasticsearch {\r\n    hosts => \"es:9200\"\r\n    index => \"contacts\"\r\n    document_type => \"contact\"\r\n    document_id => \"%{uid}\"\r\n  }\r\n}\r\n```\r\n.. test1\r\n```\r\ninput { stdin { } }\r\n\r\nfilter {\r\n  grok {\r\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\r\n  }\r\n  date {\r\n    match => [ \"timestamp\" , \"dd/MMM/yyyy:HH:mm:ss Z\" ]\r\n  }\r\n}\r\n\r\noutput {\r\n  stdout { codec => rubydebug }\r\n}\r\n```\r\n.. test2\r\n```\r\ninput {\r\n   file {\r\n      type => \"a\"\r\n      path => \"/logstash-2.3.4/test.file.a\"\r\n   }\r\n   file {\r\n      type => \"b\"\r\n      path => \"/logstash-2.3.4/test.file.b\"\r\n   }\r\n}\r\noutput {\r\n   if [type] == \"b\" {\r\n     stdout { codec => rubydebug }\r\n   }\r\n}\r\n```\r\n==== test mapping\r\n```\r\n{\r\n   \"settings\": {\r\n      \"number_of_replicas\": \"1\",\r\n      \"number_of_shards\": \"1\"\r\n   },\r\n   \"mappings\": {\r\n      \"resources_single\": {\r\n         \"properties\": {\r\n            \"rs_name\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"rs_state\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            }\r\n         }\r\n      },\r\n      \"resources_single\": {\r\n         \"properties\": {\r\n            \"rsrv_str3\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"rsrv_str4\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"rsrv_str5\": {\r\n               \"type\": \"string\",\r\n               \"store\": true,\r\n               \"analyzer\": \"ik\"\r\n            },\r\n            \"procur_f_id\": {\r\n               \"type\": \"string\",\r\n               \"index\": \"not_analyzed\",\r\n               \"store\": true\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n```\r\n\r\n\r\n===== Q & A\r\n. 多分片下,使用 `parent` `child`\r\n映射中添加 `routing` 指定统一路由地址\r\n```yml:/linux/conf/logstash/sql-init/ceshi-mysql-es-goods-init-mapping.yml```\r\n\r\n===== 参考\r\n. [[https://www.elastic.co/blog/logstash-jdbc-input-plugin]]\r\n. [[https://github.com/logstash-plugins/logstash-input-jdbc]]\r\n. [[jdbc 配置 | https://www.elastic.co/guide/en/logstash/current/plugins-inputs-jdbc.html]]\r\n. [[ | ]]\r\n. [[http://blog.csdn.net/laoyang360/article/details/51747266]]\r\n\r\n\r\n\r\n== 参考\r\n. [[logstash-input-jdbc实现mysql 与elasticsearch实时同步深入详解 | Elasticsearch 架构以及源码概览|http://jolestar.com/elasticsearch-architecture/]]\r\n. [[elasticsearch-sql | https://github.com/allwefantasy/elasticsearch-sql]]\r\n. [[一个中文拼音分词插件支持全拼、首字母、中文混合搜索 | https://github.com/gitchennan/elasticsearch-analysis-lc-pinyin]]\r\n. [[http://elasticsearch.cn/article/32]]\r\n\r\n\r\n",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/es/es-book-note",
        "title": "es 基础",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\nES-book-note\r\n\r\n 1、基本查询\r\n  词条查询\r\n\r\n`json\r\n{\r\n  \"query\":{\r\n    \"term\":{\r\n      \"title\":{\r\n        \"value\":\"crime\"\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   多词条查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"terms\":{\r\n      //novel,book 字段\r\n      \"tags\":[\"novel\",\"book\"],\r\n      //至少一条需要匹配\r\n      \"minimum_match\":1\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   match_all 查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"match_all\":{ }\r\n  }\r\n}\r\n`\r\n\r\n   常用词查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"common\":{\r\n      \"title\":{\r\n        \"query\":\"crime and punishment\",\r\n        \"cutoff_frequncy\":0.001\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n查询可能使用下列参数\r\n    query:这个参数定义了实际的查询内容\r\n    cutoff_frequency: 这个参数定义一个百分比\r\n\r\n   match查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"match\":{\r\n      \"title\":\"crime and punishment\"\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   布尔值匹配查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"match\":{\r\n      \"title\":{\r\n        \"query\":\"crime and punishment\",\r\n        \"operator\":\"and\"\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   match_phrase 查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"match\":{\r\n      \"title\":{\r\n        \"query\":\"crime and punishment\",\r\n        \"slop\":\"1\"\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   multi_match查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"multi_match\":{\r\n      \"query\":\"crime punishment\",\r\n      \"fields\":[\"title\",\"otitle\"]\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   query_string 查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"query_string\":{\r\n      \"query\":\"title:crime^10 +title:punishment -otitle:cat +author:(+Fyodor +dostoevsky)\",\r\n      \"default_field\":\"title\"\r\n    }\r\n  }\r\n}\r\n//针对多字段的query_string查询\r\n{\r\n  \"query\":{\r\n    \"query_string\":{\r\n      \"query\":\"crime punishment\",\r\n      \"fields\":[\"title\",\"otitle\"],\r\n      \"usedismax\":true\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n   标识符查询\r\n\r\n `json\r\n{\r\n  \"query\":{\r\n    \"ids\":{\r\n      \"type\":\"book\",\r\n      \"values\":[\"10\",\"11\",\"12\",\"13\"]\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\n",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/es/es-issues",
        "title": "es 问题",
        "content": "\r\nES-issues\r\n\r\n Doc更新出错\r\nerror\r\n`json\r\n{\r\n   \"error\": \"ElasticsearchIllegalArgumentException[failed to execute script]; nested: ScriptException[scripts of type [inline], operation [update] and lang [groovy] are disabled]; \",\r\n   \"status\": 400\r\n}\r\n`\r\nfix\r\n`bash\r\nvim ${ES_HOME}/config/elasticsearch.yml\r\n添加\r\nscript.disable_dynamic: false\r\n`\r\n\r\njdbc-importer错误\r\nERROR\r\n`\r\njava.sql.SQLException: No suitable driver found for jdbc:mysql://192.168.137.1:3306/mailiqing\r\n`\r\nFix\r\n\r\n    将mysql-connector-java-5.1.33.jar放到$JAVA_HOME/jre/lib/ext路径下\r\n\r\n\r\n\r\n     asdf\r\n\r\n\r\n\r\nasdfsd",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/es/es-snippet",
        "title": "es 代码片段",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\nes-snippet\r\n\r\n new snippets\r\n索引分片设置\r\n`json\r\nPUT /b2b\r\n{\r\n      \"settings\":{\r\n        \"numberofshards\":1,\r\n        \"numberofreplicas\":1\r\n      }\r\n}\r\n//查询b2b分片信息\r\nGET /b2b/_settings\r\n`\r\n\r\nmlq_goods\r\nmlq_goods的mapping设置\r\n`json\r\nPUT /b2b/mlqgoods/mapping\r\n{\r\n    \"mlq_goods\":{\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\":\"string\",\r\n          \"store\":\"yes\",\r\n          \"index\":\"not_analyzed\"\r\n        },\r\n        \"title\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n          }\r\n        }\r\n    }\r\n}\r\n//查询mlq_goods的mapping信息\r\nGET /b2b/mlqgoods/mapping\r\n`\r\n从数据库导入mlq_goods表到ES配置信息\r\n`json\r\nPUT /river/mlqgoods/_meta \r\n{\r\n    \"type\" : \"jdbc\",\r\n    \"jdbc\" : {\r\n       \"url\" : \"jdbc:mysql://localhost:3306/b2b\",\r\n       \"user\" : \"root\",\r\n       \"password\" : \"111111\",\r\n       \"sql\" : \"SELECT mg.id AS id, tranCat (LEFT(catcode, LENGTH(catcode) - 1)) AS category, (SELECT brandname FROM mlqbrand WHERE id = brandid) brandname, (SELECT tm.custname FROM timember tm WHERE tm.custid = mg.sellerid) newsellernick, mg.* FROM mlqgoods mg\",\r\n       \"index\": \"b2b\",\r\n       \"type\": \"mlq_goods\"\r\n      }\r\n}\r\n//查询mlq_goods数据\r\nGET /b2b/mlqgoods/search\r\n`\r\n\r\n mlq_product\r\nmlq_product的mapping设置\r\n`json\r\nPUT /b2b/mlqproduct/mapping\r\n{\r\n    \"mlq_product\":{\r\n      \"parent\": {\"type\": \"mlqgoods\"},\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\":\"string\",\r\n          \"store\":\"yes\",\r\n          \"index\":\"not_analyzed\"\r\n        },\r\n        \"sale_region\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        },\r\n        \"repository_region\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        },\r\n        \"product_name\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n          }\r\n       }\r\n    }\r\n}\r\n//查询mlq_product映射maping信息\r\nGET /b2b/mlqproduct/mapping\r\n`\r\n从数据库导入mlq_product表到ES配置信息\r\n`json\r\nPUT /river/mlqproduct/_meta \r\n{\r\n\"type\" : \"jdbc\",\r\n\"jdbc\" : {\r\n   \"url\" : \"jdbc:mysql://localhost:3306/b2b\",\r\n   \"user\" : \"root\",\r\n   \"password\" : \"111111\",\r\n   \"sql\" : \"SELECT mp.id as id, mp.goodsid as parent,mp.*,mpa.* FROM mlqproduct mp, (SELECT mpa.productid , tranAddr(MAX(CASE mpa.attrname WHEN '销售地区' THEN mpa.attrvalue ELSE 0 END ),'-') saleregion, tranAddr(MAX(CASE mpa.attrname WHEN '出库地区' THEN mpa.attrvalue ELSE 0 END ),'-') repositoryregion, MAX(CASE mpa.attrname WHEN '最小起订量' THEN mpa.attrvalue ELSE 0 END ) minquantity, MAX(CASE mpa.attrname WHEN '库存量' THEN mpa.attrvalue ELSE 0 END ) stockquantity, MAX(CASE mpa.attrname WHEN '单位' THEN mpa.attrvalue ELSE 0 END ) unit, MAX(CASE mpa.attrname WHEN '交货天数' THEN mpa.attrvalue ELSE 0 END ) deliveryday, MAX(CASE mpa.attrname WHEN '包装类型' THEN mpa.attrvalue ELSE 0 END ) packagetype FROM mlqproductattr mpa GROUP BY mpa.productid) mpa WHERE mp.id = mpa.product_id\",\r\n   \"index\": \"b2b\",\r\n   \"type\": \"mlq_product\"\r\n  }\r\n}\r\n//查询mlq_product 数据\r\nGET /b2b/mlqproduct/search\r\n`\r\n\r\ntmp snippets\r\n\r\n`json\r\nGET _search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {}\r\n  }\r\n}\r\n\r\nDELETE /river/mlqproduct\r\nDELETE /river/mlqgoods\r\nDELETE /b2b\r\nDELETE /b2b/mlq_goods\r\n\r\nPUT /b2b/mlqproduct/mapping\r\n{\r\n  \"mlq_product\": {\r\n    \"_parent\":{\r\n      \"type\":\"mlq_goods\"\r\n    },\r\n    \"properties\": {\r\n      \"addr\": {\r\n        \"type\": \"string\",\r\n        \"store\": true,\r\n        \"indexAnalyzer\": \"ik\",\r\n        \"searchAnalyzer\": \"ik\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nPUT /river/mlqproductattr/meta\r\n{\r\n  \"type\" : \"jdbc\",\r\n    \"jdbc\" : {\r\n        \"url\" : \"jdbc:mysql://localhost:3306/b2b\",\r\n        \"user\" : \"root\",\r\n        \"password\" : \"111111\",\r\n        \"sql\" : \"SELECT mpa.id AS id,mpa.productid AS parent,mpa.* FROM mlqproduct_attr mpa\",\r\n        \"index\" : \"b2b\",\r\n        \"type\" : \"mlqproductattr\"\r\n    }\r\n}\r\n\r\nGET /b2b/mlqproductattr/_mapping\r\nGET /b2b/mlqproductattr/_search\r\n\r\nGET /b2b/mlqgoods/mapping\r\n\r\nGET /b2b/mlqproduct/mapping\r\n\r\nPUT /b2b/mlqgoods/mapping\r\n{\r\n  \"mlq_goods\": {\r\n    \"properties\": {\r\n      \"title\": {\r\n        \"type\": \"string\",\r\n        \"store\": true,\r\n        \"analyzer\": \"ikmaxword\"\r\n      },\r\n      \"category\": {\r\n        \"type\": \"string\",\r\n        \"store\": true,\r\n        \"analyzer\": \"ikmaxword\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nPUT /river/mlqgoods/_meta\r\n{\r\n  \"type\" : \"jdbc\",\r\n    \"jdbc\" : {\r\n        \"url\" : \"jdbc:mysql://localhost:3306/b2b\",\r\n        \"user\" : \"root\",\r\n        \"password\" : \"111111\",\r\n        \"sql\" : \"SELECT mg.id as id,tranCat(mg.catcode) category,mg.* from mlq_goods mg\",\r\n        \"index\" : \"b2b\",\r\n        \"type\" : \"mlq_goods\"\r\n    }\r\n}\r\n\r\n\r\nPUT /b2b\r\n{\r\n  \"settings\": {\r\n    \"numberofshards\": 1\r\n    , \"numberofreplicas\": 1\r\n  }\r\n}\r\n\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"from\": 0,\r\n  \"size\": 5\r\n}\r\n\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"query\": {\r\n    \"has_child\": {\r\n      \"type\": \"mlq_product\",\r\n      \"query\": {\r\n        \"term\": {\r\n          \"addr\": {\r\n            \"value\": \"华中地区\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET /b2b/mlqproduct/search\r\n{\r\n  \"from\": 1,\r\n  \"size\": 3, \r\n  \"query\": {\r\n    \"match\": {\r\n      \"addr\": \"华中地区\"\r\n    }\r\n  }\r\n}\r\n\r\nGET /b2b/mlqproduct/search\r\n{\r\n \"query\": {\r\n   \"term\": {\r\n     \"addr\": {\r\n        \"value\": \"华中地区\"\r\n      }\r\n   }\r\n } \r\n} \r\n\r\n\r\nGET /b2b/mlqproductattr/_mapping\r\n\r\nGET /b2b/mlqgoods/search\r\n\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"query\": {\r\n    \"term\": {\r\n      \"category\": {\r\n        \"value\": \"改性\"\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n          \"has_child\": {\r\n          \"type\": \"mlq_product\",\r\n          \"query\": {\r\n            \"term\": {\r\n              \"addr\": {\r\n                \"value\": \"华中地区\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"filter\": {\r\n        \"term\": {\r\n          \"category\": \"改性\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET /b2b/mlqproduct/search\r\n{\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n          \"has_parent\": {\r\n          \"parenttype\": \"mlqgoods\",\r\n          \"query\": {\r\n            \"term\": {\r\n              \"id\": \"20150914JPCi4n8\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET /b2b/mlqproduct/search\r\n{\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n        \"has_parent\": {\r\n          \"parenttype\": \"mlqgoods\",\r\n          \"query\": {\r\n            \"term\": {\r\n              \"id\": \"20150915y2W535n\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nGET /twitter/tweet/_mapping\r\n\r\n\r\n\r\n\r\n\r\nGET /twitter/tweet/_search\r\n{\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n        \"term\": {\r\n          \"author\": \"John\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n 2015-12-29 snippets\r\n\r\n`json\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"fields\": [\r\n    \"id\"\r\n  ],\r\n  \"query\": {\r\n    \"match\": {\r\n      \"cat_code\": \"20150914w7L7oG2\"\r\n    }\r\n  },\r\n  \"aggs\": {\r\n    \"district\": {\r\n      \"terms\": {\r\n        \"field\": \"brand_id\",\r\n        \"size\": 0\r\n      },\r\n      \"aggs\": {\r\n        \"tops\": {\r\n          \"top_hits\": {\r\n            \"_source\": {\r\n              \"include\": [\r\n                \"brand_id\",\r\n                \"brand_name\"\r\n              ]\r\n            },\r\n            \"size\": 1\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"to-product\": {\r\n      \"children\": {\r\n        \"type\": \"mlq_product\"\r\n      },\r\n      \"aggs\": {\r\n        \"top-names\": {\r\n          \"terms\": {\r\n            \"field\": \"id\",\r\n            \"size\": 0\r\n          },\r\n          \"aggs\": {\r\n            \"tops\": {\r\n              \"top_hits\": {\r\n                \"_source\": {\r\n                  \"include\": [\r\n                    \"id\",\r\n                    \"product_name\"\r\n                  ]\r\n                },\r\n                \"size\": 1\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nAND查询\r\n\r\n`json\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\"match\": { \"cat_code\": \"20150914w7L7oG2\"}},\r\n        {\"match\": { \"brand_id\": \"20150914C4ie5oO\"}}\r\n      ]\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n Range查询\r\n\r\n`json\r\nGET /b2b/mlqgoods/search\r\n{\r\n  \"query\": {\r\n    \"filtered\": {\r\n      \"query\": {\r\n        \"match_all\": {}\r\n      },\r\n      \"filter\": {\r\n        \"has_child\": {\r\n          \"type\": \"mlq_product\",\r\n          \"query\": {\r\n            \"range\": {\r\n              \"mlqproduct.productprice\": {\r\n                \"gte\": 3600,\r\n                \"lte\": 4000\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n多条件查询\r\n\r\n筛选 \r\n`json\r\nPOST /b2b/mlqgoods/search\r\n{\r\n  \"from\": 0,\r\n  \"size\": 10,\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"bool\": {\r\n          \"should\": [\r\n            {\r\n              \"match\": {\r\n                \"brand_name\": \"宁波博盈\"\r\n              }\r\n            },\r\n            {\r\n              \"match\": {\r\n                \"title\": \"宁波博盈\"\r\n              }\r\n            },\r\n            {\r\n              \"match\": {\r\n                \"newsellernick\": \"宁波博盈\"\r\n              }\r\n            }\r\n          ]\r\n          }\r\n        },\r\n        {\r\n          \"match\": {\r\n            \"cat_code\": \"20150914w7L7oG2\"\r\n          }\r\n        },\r\n        {\r\n          \"match\": {\r\n            \"newsellernick\": \"宁波博盈石油化工有限公司\"\r\n          }\r\n        },\r\n        {\r\n          \"term\": {\r\n            \"brandnamenoa\": \"泰普克\"\r\n          }\r\n        },\r\n        {\r\n          \"has_child\": {\r\n            \"type\": \"mlq_product\",\r\n            \"query\": {\r\n              \"range\": {\r\n                \"mlqproduct.productprice\": {\r\n                  \"from\": 1000.0,\r\n                  \"to\": 3000.0\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"has_child\": {\r\n            \"type\": \"mlq_product\",\r\n            \"query\": {\r\n              \"term\": {\r\n                \"mlqproduct.productname_noa\": \"70\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"has_child\": {\r\n            \"type\": \"mlq_product\",\r\n            \"query\": {\r\n              \"match\": {\r\n                \"repository_region\": \"华东\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n父子查询\r\n 父:mlqgoods - 子:mlqproduct\r\n\r\n查询子\r\n`json\r\nPOST /b2b/mlqproduct/search\r\n{\r\n    \"query\": {\r\n        \"has_parent\": {\r\n            //父类型\r\n            \"parenttype\": \"mlqgoods\",\r\n            \"query\": {\r\n                \"term\": {\r\n                   //父id\r\n                   \"id\": {\r\n                      \"value\": \"20151127y344nRq\"\r\n                   }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`\r\n查询父\r\n`json\r\nPOST /b2b/mlqgoods/search\r\n{\r\n   \"query\": {\r\n      \"has_child\": {\r\n         //子类型\r\n         \"type\": \"mlq_product\",\r\n         \"query\": {\r\n            \"term\": {\r\n               //子id\r\n               \"id\": {\r\n                  \"value\": \"20151127c3De6K2\"\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n`\r\n\r\n 2016年1月24日\r\n加权\r\n`\r\nPOST /b2b/mlqgoods/search\r\n{\r\n   \"query\": {\r\n      \"function_score\": {\r\n         \"query\": {\r\n            \"match\": {\r\n               \"cat_code\": \"20150914q0asfEw\"\r\n            }\r\n         },\r\n         \"functions\": [\r\n            {\r\n               \"boost_factor\": 20\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}\r\n`\r\n商品,单品 weight 相加 得到 score\r\n`json\r\nPOST /b2b/mlqgoods/search\r\n{\r\n   \"query\": {\r\n      \"function_score\": {\r\n         \"query\": {\r\n            \"has_child\": {\r\n               \"type\": \"mlq_product\",\r\n               \"score_type\": \"sum\",\r\n               \"query\": {\r\n                  \"function_score\": {\r\n                     \"functions\": [\r\n                        {\r\n                           \"script_score\": {\r\n                              \"script\": \"doc['mlq_product.weight'].value\"\r\n                           }\r\n                        }\r\n                     ],\r\n                     \"query\": {\r\n                        \"match\": {\r\n                           \"repositoryregionnoa\": \"甘肃\"\r\n                        }\r\n                     },\r\n                     \"boost_mode\": \"replace\"\r\n                  }\r\n               }\r\n            }\r\n         },\r\n         \"functions\": [\r\n            {\r\n               \"script_score\": {\r\n                  \"script\": \"doc['mlq_goods.weight'].value\"\r\n               }\r\n            }\r\n         ],\r\n         \"boost_mode\": \"sum\"\r\n      }\r\n   }\r\n}\r\n`\r\n商品,单品,店铺 weight 相加 得到 score\r\n`json\r\nPOST /b2b/mlqgoods/search\r\n{\r\n   \"query\": {\r\n      \"function_score\": {\r\n         \"query\": {\r\n            \"bool\": {\r\n               \"must\": [\r\n                  {\r\n                     \"has_child\": {\r\n                        \"type\": \"mlq_product\",\r\n                        \"score_type\": \"sum\",\r\n                        \"query\": {\r\n                           \"function_score\": {\r\n                              \"functions\": [\r\n                                 {\r\n                                    \"script_score\": {\r\n                                       \"script\": \"doc['mlq_product.weight'].value\"\r\n                                    }\r\n                                 }\r\n                              ],\r\n                              \"query\": {\r\n                                 \"match\": {\r\n                                    \"repositoryregionnoa\": \"甘肃\"\r\n                                 }\r\n                              },\r\n                              \"boost_mode\": \"replace\"\r\n                           }\r\n                        }\r\n                     }\r\n                  },\r\n                  {\r\n                     \"has_parent\": {\r\n                        \"parenttype\": \"mlqshop_info\",\r\n                        \"score_type\": \"score\",\r\n                        \"query\": {\r\n                           \"function_score\": {\r\n                              \"functions\": [\r\n                                 {\r\n                                    \"script_score\": {\r\n                                       \"script\": \"doc['mlqshopinfo.weight'].value\"\r\n                                    }\r\n                                 }\r\n                              ],\r\n                              \"query\": {\r\n                                 \"match_all\": {}\r\n                              },\r\n                              \"boost_mode\": \"replace\"\r\n                           }\r\n                        }\r\n                     }\r\n                  }\r\n               ]\r\n            }\r\n         },\r\n         \"functions\": [\r\n            {\r\n               \"script_score\": {\r\n                  \"script\": \"doc['mlq_goods.weight'].value\"\r\n               }\r\n            }\r\n         ],\r\n         \"score_mode\": \"sum\",\r\n         \"boost_mode\": \"sum\"\r\n      }\r\n   }\r\n}\r\n`\r\n查询,得分,聚合\r\n`json\r\n{\r\n   \"from\": 0,\r\n   \"size\": 10,\r\n   \"query\": {\r\n      \"function_score\": {\r\n         \"query\": {\r\n            \"bool\": {\r\n               \"must\": [\r\n                  {\r\n                     \"match\": {\r\n                        \"cat_code\": \"201509140qX823u\"\r\n                     }\r\n                  },\r\n                  {\r\n                     \"term\": {\r\n                        \"goods_status\": \"c\"\r\n                     }\r\n                  },\r\n                  {\r\n                     \"has_child\": {\r\n                        \"type\": \"mlq_product\",\r\n                        \"query\": {\r\n                           \"range\": {\r\n                              \"mlqproduct.productprice\": {\r\n                                 \"from\": 1000,\r\n                                 \"to\": 3000\r\n                              }\r\n                           }\r\n                        }\r\n                     }\r\n                  },\r\n                  {\r\n                     \"has_child\": {\r\n                        \"type\": \"mlq_product\",\r\n                        \"score_type\": \"max\",\r\n                        \"query\": {\r\n                           \"function_score\": {\r\n                              \"functions\": [\r\n                                 {\r\n                                    \"script_score\": {\r\n                                       \"script\": \"doc['mlq_product.weight'].value\"\r\n                                    }\r\n                                 }\r\n                              ],\r\n                              \"query\": {\r\n                                 \"match_all\": {}\r\n                              },\r\n                              \"boost_mode\": \"replace\"\r\n                           }\r\n                        }\r\n                     }\r\n                  },\r\n                  {\r\n                     \"has_parent\": {\r\n                        \"parenttype\": \"mlqshop_info\",\r\n                        \"score_type\": \"score\",\r\n                        \"query\": {\r\n                           \"function_score\": {\r\n                              \"functions\": [\r\n                                 {\r\n                                    \"script_score\": {\r\n                                       \"script\": \"doc['mlqshopinfo.weight'].value\"\r\n                                    }\r\n                                 }\r\n                              ],\r\n                              \"query\": {\r\n                                 \"match_all\": {}\r\n                              },\r\n                              \"boost_mode\": \"replace\"\r\n                           }\r\n                        }\r\n                     }\r\n                  }\r\n               ]\r\n            }\r\n         },\r\n         \"functions\": [\r\n            {\r\n               \"script_score\": {\r\n                  \"script\": \"doc['mlq_goods.weight'].value\"\r\n               }\r\n            }\r\n         ],\r\n         \"score_mode\": \"sum\",\r\n         \"boost_mode\": \"sum\"\r\n      }\r\n   },\r\n   \"aggs\": {\r\n      \"brand_names\": {\r\n         \"terms\": {\r\n            \"field\": \"brandnamenoa\",\r\n            \"size\": 10\r\n         }\r\n      },\r\n      \"seller_nicks\": {\r\n         \"terms\": {\r\n            \"field\": \"newsellernick_noa\",\r\n            \"size\": 10\r\n         }\r\n      },\r\n      \"product_names\": {\r\n         \"children\": {\r\n            \"type\": \"mlq_product\"\r\n         },\r\n         \"aggs\": {\r\n            \"tops\": {\r\n               \"terms\": {\r\n                  \"field\": \"productnamenoa\",\r\n                  \"size\": 10\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n`\r\n\r\n2016-01-26\r\nscript更新 weight \r\n`json\r\nPOST /b2b/mlqshopinfo/2015091404A3ol8/_update\r\n{\r\n   \"script\": \"weight = ctx.source.weight; if (weight == null) {ctx.source.weight=0 }; ctx._source.weight+=count;\",\r\n   \"params\": {\r\n      \"count\": 7\r\n   }\r\n}\r\n`\r\n",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/es/escha_jian_an_zhuang",
        "title": "es 插件安装",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\nES插件\r\n\r\n 插件列表\r\ninquisitor   分词\r\nparamedic\r\nbigdesk\r\nkopf\r\nsegmentspy\r\nmarvel\r\n\r\nps: ES-Path /root/opt/elasticsearch-1.7.1\r\n安装head\r\n`bash\r\nbin/plugin install head\r\n`\r\n\r\n 安装Marvel\r\n`bash\r\nbin/plugin install elasticsearch/marvel/latest\r\n`\r\n\r\nES错误\r\n\r\n 启动Marve错误\r\n`\r\nmarvel.agent.exporter: error connecting to [[0:0:0:0:0:0:0:0]:9200] [No route to host]\r\n`\r\n解决方法:\r\n`bash\r\nvim elasticsearch.yml\r\n添加\r\nnetwork.host: 192.168.137.107\r\nhttp端口\r\nhttp.port: 9200\r\nhttp.host: \"192.168.137.107\"\r\n`\r\n\r\n 找不到mysql驱动\r\n驱动包不兼容\r\n    更换驱动包\r\n驱动包路径错误\r\n    放置在$JAVA_HOME/jre/lib/ext/下 ",
        "tags": [
            "elasticsearch"
        ]
    },
    {
        "uri": "//hugo/post/java/framework",
        "title": "java 框架",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Restful\r\n\r\n=== Jersey\r\n. [[Jersey|https://jersey.java.net/]]\r\n. [[Jersey Demo|https://github.com/waylau/RestDemo]]\r\n\r\n=== RestEasy\r\n. [[Jboss|resteasyhttp://resteasy.jboss.org/docs.html]]\r\n\r\n=== Jackson-doc\r\n. [[https://github.com/FasterXML/jackson-docs]]\r\n. [[http://www.studytrails.com/java/json/java-jackson-introduction.jsp]]\r\n. [[Jesery|/jesery]]\r\n\r\n=== 图片服务\r\n. [[zimg | http://zimg.buaa.us/]]\r\n. [[tfs | http://code.taobao.org/p/tfs/src/]]\r\n\r\n=== BeanMapper\r\n\r\n```java\r\nMapperFactory.getCopyByRefMapper().mapClass(TiQuoteprice.class, QuotepriceBean.class)\r\n\t\t.exclude(\"inDate\")\t\t//忽略字段\r\n\t\t.field(\"rsrvStr3\", \"repositoryAddr\", replaceStr)\t//映射字段\r\n\t\t.registerAndMap(tiQuoteprice, quotepriceBean);\r\nMapperFactory.getCopyByRefMapper().mapClass(TiProcurement.class, QuotepriceBean.class)\r\n\t\t.field(\"rsrvStr4\", \"receiveAddr\", replaceStr)\r\n\t\t.field(\"rsrvStr2\", \"img\", replaceImg)\r\n\t\t.registerAndMap(tiProcurement, quotepriceBean);\r\n```\r\n\r\n== Httpcomponents\r\n\r\n=== 参考\r\n. [[Httpcomponents Wiki | http://wiki.apache.org/HttpComponents/QuickStart]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/freemarker",
        "title": "freemarker",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\nfreemarker list (长度,遍历,下标,嵌套,排序)\r\n1. freemarker获取list的size ：\r\n\r\nJava\r\nArrayList list = new ArrayList();\r\n\r\nFreemaker\r\n${list?size}\r\n\r\n\r\n2. list的遍历：\r\n\r\n\r\n    \r\n        ${being.name}${being.price}\r\n    \r\n\r\n\r\n3. 遍历MAP\r\n\r\n \r\n    ${map[k]}\r\n\r\n\r\n\r\n4.list遍历中的下标序号：\r\n\r\n_index是list的一个属性\r\n\r\n     ${a_index}\r\n\r\n\r\n5.取LIST中第i个元素的值\r\n${list[i]}\r\n嵌套时前面要有括号，如下，将字符串变成list，然后取第i个元素的值\r\n ${(str?split(\",\"))[i]}\r\n\r\n\r\n6. list的嵌套：\r\n\r\n   \r\n            （kcVO里有编号和名称，而jsskVO里只有编号）\r\n                  ${kcVO.kcm}\r\n           \r\n   \r\n\r\n\r\n\r\n7. list排序：\r\n      升序 .sort_by()\r\n\r\n\r\n\r\n\r\n     降序 .sort_by()?reverse\r\n\r\n\r\n\r\n8.item_has_next,size使用：\r\n\r\n\r\n\r\n  \r\n   共有${userList?size}最后一个用户是:${user.userName}\r\n  \r\n\r\n\r\n\r\n三目表达式\r\n\r\n${(procurement.deliveryType=0)?string('热点词','热点搜索')}\r\n\r\n\r\n参考::\r\n. [[http://www.blogjava.net/alinglau36/archive/2011/02/23/344970.html]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/guava",
        "title": "guava API",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= guava\r\n\r\n=== 操作\r\n. **遍历 `list` **\r\n```java\r\nimport com.google.common.base.MoreObjects;\r\nimport static com.google.common.base.Preconditions.*;\r\nfor(T t : MoreObjects.firstNonNull(t_l, Collections. emptyList())){\r\n\t logger.info(t);\r\n }\r\ntry {\r\n\tcheckElementIndex(0,mg.getMpp_l().size());\r\n} catch (Exception e) {\r\n\tjw.value(serverUrl+mg.getImg_large());\r\n}\r\n```\r\n. **判断是否为空值**\r\n```java\r\nif(Optional.fromNullable(obj).isPresent()){\r\n    //do something\r\n}\r\n```\r\n. 过滤\r\n```java\r\nPredicate self_p = new Predicate() {\r\n\tpublic boolean apply(Ti_invoice ti) {\r\n\t\tTi_invoice_prop tmp_tip = (Ti_invoice_prop)ti;\r\n\t\tTi_goodsorder_prop tmp_tgp = (Ti_goodsorder_prop)tmp_tip.getTg();\r\n\t\tMlq_goods tmp_mgp = tmp_tgp.getMg();\r\n\t\tif(\"201506265aD3LcU\".equals(tmp_mgp.getSeller_id())){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n};\r\n```\r\n\r\n==== 排序\r\n```java\r\n/**\r\n*\t价格排序\r\n*/\r\nprivate void sortByPrice(List mg_l,final int i) {  // 0:升序 1:降序\r\n        Ordering byPrice = new Ordering() {\r\n            @Override\r\n            public int compare(Mlq_goods mg1, Mlq_goods mg2) {\r\n                if (ObjUtils.notEmpty(mg1.getMp_l()) && ObjUtils.notEmpty(mg2.getMp_l())) {\r\n\r\n                    String product_price1 = mg1.getMp_l().get(0).getProduct_price();\r\n                    String product_price2 = mg2.getMp_l().get(0).getProduct_price();\r\n\r\n                    Double price1 = Double.parseDouble(product_price1==null?\"0\":product_price1);\r\n                    Double price2 = Double.parseDouble(product_price2==null?\"0\":product_price2);\r\n                    if(0==i){\r\n                        return price1> price2? 1:(price1 == price2 ? 0:-1);\r\n                    }\r\n                    return price1< price2? 1:(price1 == price2 ? 0:-1);\r\n                }\r\n\r\n                return 0;\r\n            }\r\n        };\r\n        Collections.sort(mg_l,byPrice);\r\n    }\r\n```\r\n",
        "tags": [
            "java",
            "guava"
        ]
    },
    {
        "uri": "//hugo/post/java/iocxml_md",
        "title": "Spring IOC",
        "content": "\r\nIOC_xml\r\n\r\n Spring IoC\r\n\r\n由spring管理,生成的类\r\n\r\n\tInterface\r\n\t:\t生成出来的类实现的接口列表\r\n\t\t- org.springframework.aop.SpringProxy\r\n\t\t- org.springframework.aop.framework.Advised\r\n\t\t- package.user_interfaces(用户自定义实现的接口)\r\n\tCgLib\r\n\t:\r\n\r\nBeanDefination\r\n   :\t解析applicationContext.xml\r\n\t\r\n\t   instantiateBean\r\n\t   :\tbean实例化\r\n\r\n\r\n设置接口\r\n\r\n`java\r\npublic static SetClass getAllInterfacesForClassAsSet(Class clazz, ClassLoader classLoader) {\r\n\t\tAssert.notNull(clazz, \"Class must not be null\");\r\n\t\tif (clazz.isInterface() && isVisible(clazz, classLoader)) {\r\n\t\t\treturn Collections.singleton(clazz);\r\n\t\t}\r\n\t\tSetClass interfaces = new LinkedHashSetClass();\r\n\t\twhile (clazz != null) {\r\n\t\t\tClass?[] ifcs = clazz.getInterfaces();\r\n\t\t\tfor (Class? ifc : ifcs) {\r\n\t\t\t\tinterfaces.addAll(getAllInterfacesForClassAsSet(ifc, classLoader));\r\n\t\t\t}\r\n\t\t\tclazz = clazz.getSuperclass();\r\n\t\t}\r\n\t\treturn interfaces;\r\n\t}\r\n`\r\n\r\n 动态代理\r\n\r\nJdkDynamicAopProxy\r\n\r\n\r\nspring注解解析\r\n\r\nTransactionAnnotationParser\r\n\tSpringTransactionAnnotationParser\r\n\r\n\r\n AspectJ/Aop\r\n\r\nInterface_base.java\r\n\t\r\n`java\r\npublic interface Interface_base {\r\n\t\t\t\r\n\tpublic void base();\r\n}\r\n`\r\n\r\n Interface_A.java\r\n\r\n`java\r\npublic interface InterfaceA extends Interfacebase{\r\n\r\n\tpublic void save();\r\n\tpublic void find();\r\n\tpublic void update();\r\n}\r\n`\r\n\r\nTest_advice.java\r\n在applicationContext.xml中配置\r\n\r\n`java\r\n@Aspect\r\npublic class Test_advice{\r\n\t@Before(value = \"execution(* cn.itcast.erp.test.Interface_A.*(..))\")\r\n\tpublic void fn1(){\r\n\t\tSystem.out.println(\"前置增强.....\");\r\n\t}\r\n\t@After(value = \"execution(* cn.itcast.erp.test.Interface_base.*(..))\")\r\n\tpublic void fn2(){\r\n\t\tSystem.out.println(\"后置增强.....\");\r\n\t}\r\n}\r\n`\r\n\r\n Test_impl.java\r\n在applicationContext.xml中配置\r\n\r\n`java\r\npublic class Testimpl implements Targetinter{\r\n\t//输出:\r\n\t//save/find/update\r\n\t//前置增强.....\r\n\tpublic void save() {\r\n\t\tSystem.out.println(\"save\");\r\n\t}\r\n\r\n\tpublic void find() {\r\n\t\tSystem.out.println(\"find\");\r\n\t}\r\n\r\n\tpublic void update() {\r\n\t\tSystem.out.println(\"update\");\r\n\t}\r\n\t//--------------------------------------------\r\n\t//输出:\r\n\t//base\r\n\t//后置增强.....\t   \r\n\tpublic void base() {\r\n\t\tSystem.out.println(\"base\");\r\n\t}\r\n\r\n}\r\n`\r\n\r\n结论\r\n\r\nAop方法增强:\r\n\r\n\t接口继承,不会继承增强\r\n\t运行时,实现类调用方法时,会去判断该方法所属接口是否配置了advice(增强)\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jackson",
        "title": "Jackson",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Jackson\r\n\r\n[cols=\"2*\"]\r\n|===\r\n| 注解\r\n| 说明\r\n\r\n|\r\n```java\r\n@JsonFormat(pattern=\"yyyy-MM-dd HH:mm:ss\")\r\nprivate Date inDate;\r\n```\r\n|输出日期格式\r\n\r\n|===\r\n\r\n\r\n\r\n=== 参考\r\n\r\n. [[Jackson-Annotations | https://github.com/FasterXML/jackson-annotations/wiki/Jackson-Annotations]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/java-class",
        "title": "java class",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== BaseDao.java\r\n```java:/src/java/BaseDao.java```\r\n\r\n== BaseDaoImpl.java\r\n```java:/src/java/BaseDaoImpl.java```\r\n\r\n== BaseService.java\r\n```java:/src/java/BaseService.java```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/java",
        "title": "java",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= java\r\n\r\n=== 引入\r\n\r\n. **文件**\r\n```java\r\n//支持EL表达式\r\n\r\n//支持C标签\r\n\r\n//fn函数\r\n\r\n/program/company/goods/base_script.jsp\r\n```\r\n+ 日志\r\n```java\r\nprivate static Logger logger = Logger.getLogger(Clazz clazz);\r\n```\r\n\r\n=== jsp分页\r\n\r\n+ **分页查询**\r\n```java\r\n    Mlq_goods_prop mg = new Mlq_goods_prop();\r\n\tMlq_goodsInfo mgi = new Mlq_goodsInfo();\r\n\t//1:Url\r\n\tString url = \"goodsList.jsp\";\r\n\t//2:name='''&isDisplay=1\r\n\tStringBuilder params = new StringBuilder();\r\n\t//商品列表\r\n\t\tString goods_status = request.getParameter(\"goods_status\");\r\n\t\tif(goods_status!=null && !\"\".equals(goods_status.trim())){\r\n\t\t\tmg.setGoods_status(goods_status);\r\n\t\t\tparams.append(\"&goods_status=\"+goods_status);\r\n\t\t}\r\n\t//每页显示条数\r\n\tInteger perPageCount = PageContant.PER_PAGE_COUNT;\r\n\t//mysql查询起始页\r\n\tString current_page = request.getParameter(\"pageNo\");\r\n\tInteger startPage = 1;\r\n\tif(current_page!=null){\r\n\t    startPage = Pagination.cpn(Integer.parseInt(current_page));\r\n\t}\r\n\tmg.setStart((startPage-1)*perPageCount);\r\n\tmg.setLimit(perPageCount);\r\n\t//总条数\r\n\tInteger totalCount = totalCount = mgi.getCountByObjMg(mg);\r\n\t//商品列表\r\n\tList mg_l = mgi.getListByPage(mg);\r\n\tPagination pagination = new Pagination(startPage,perPageCount,totalCount);\r\n\t//页面展示功能\r\n\tpagination.pageView(url, params.toString());\r\n\tpagination.setList(mg_l);\r\n\trequest.setAttribute(\"pagination\", pagination);\r\n```\r\n\r\n=== 分页样式\r\n\r\n```jsp\r\n    \r\n\t\t${page}\r\n\t\r\n```\r\n\r\n=== 根据ID查询\r\n\r\n```java\r\n    String order_no=\"\";\r\n    if(request.getParameter(\"order_no\")!=null){\r\n        order_no = request.getParameter(\"order_no\");\r\n    }\r\n    //Ti_goodsorderInfo ti_goodsorderInfo=new Ti_goodsorderInfo();\r\n    //Ti_goodsorder tg=ti_goodsorderInfo.getTi_goodsorderByID(order_no);\r\n    request.setAttribute(\"tg\", tg);\r\n```\r\n\r\n\r\n=== Java json 样品\r\n\r\n```json\r\n\"{\"+\r\n      \"'buyer_bank': '1',\"+\r\n      \"'buyer_bank_no': '1',\"+\r\n      \"'buyer_name': '1',\"+\r\n      \"'consignee_contact': '1',\"+\r\n      \"'goods_brand': '1',\"+\r\n      \"'goods_name': '1',\"+\r\n      \"'goods_price': 23.4,\"+\r\n      \"'id': '1',\"+\r\n      \"'invoice_amount': 23.4,\"+\r\n      \"'invoice_goods_num': 23.4,\"+\r\n      \"'invoice_num': 23.4,\"+\r\n      \"'invoice_type': '1',\"+\r\n      \"'kaiju_type': '1',\"+\r\n      \"'order_no': '1',\"+\r\n      \"'parent_no': '1',\"+\r\n      \"'place_of_delivery': '1',\"+\r\n      \"'seller_name': '1',\"+\r\n      \"'ship_price': 23.4,\"+\r\n      \"'taxpayer_number': '1',\"+\r\n      \"'total_order_amount': 23.4,\"+\r\n      \"'trade_no': '1',\"+\r\n      \"'transport_type': '1'\"+\r\n\"}\"\r\n```\r\n\r\n=== java ajax\r\n\r\n```java\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n\r\n=== **JSTL Fn**\r\n\r\n```jsp\r\n    //退出循环\r\n    \r\n    \r\n\t\t\r\n\t\t    //截取字符串\r\n\t\t\t${fn:substring(tolp.create_date,11,16) }\r\n\t\t\t\r\n\t\t\r\n\t\r\n```\r\n\r\n\r\n=== 字符替换\r\n\r\n```java\r\n    theString = theString.replace(\">\", \"&gt;\");\r\n    theString = theString.replace(\"",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jbpm",
        "content": "\r\n\r\n\r\nbpm_module\r\n\r\nbpm_definition 流程定义\r\n\r\n. 决策\r\n\r\n\r\nJbpmServiceImpl\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jesery",
        "title": "jesery",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Jesery\r\n\r\n. @Path ,定义路径。\r\n\r\n. @GET、@POST、@PUT等，定义提交请求的方法。\r\n\r\n. @Consumes，定义接收请求的参数格式，是JSON、XML，还是form表单。\r\n\r\n. @Produces，定义输出的格式，输出XML、JSON等格式。\r\n\r\n. @XmlRootElement、@XmlElement、@XmlAttribute定义根元素、元素、属性，使用这些注解可以自定义xml的输出格式。\r\n\r\n. @FormParam、@QueryParam、@PathParam，获取单个参数的三种方式：分别是从表单获取参数、从url问号之后获取参数、获取路径参数。还可以直接将POJO作为方法参数，根据接收的参数格式自动封装bean，比如底部代码中的formJson(Member member)方法。\r\n\r\n. @Context，从容器的上下文获取HttpServletRequest、HttpServletResponse等对象。\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jetty",
        "title": "Jetty",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Jetty\r\n\r\n== Jetty\r\n\r\n=== 代码内启动 web\r\n\r\n==== Jetty pom 依赖\r\n\r\n[source,xml,indent=2]\r\n----\r\n    \r\n        9.2.19.v20160908\r\n    \r\n    \r\n        \r\n            org.eclipse.jetty\r\n            jetty-webapp\r\n            ${jetty-version}\r\n        \r\n        \r\n            org.eclipse.jetty\r\n            jetty-jsp\r\n            ${jetty-version}\r\n        \r\n        \r\n            org.eclipse.jetty\r\n            apache-jstl \r\n            ${jetty-version}\r\n        \r\n    \r\n----\r\n 如果没有,会引起 `The absolute uri: http://java.sun.com/jsp/jstl/core cannot be resolved`\r\n\r\n\r\n==== Jetty 测试文件\r\n\r\n[source,java]\r\n----\r\nimport org.eclipse.jetty.server.Server;\r\nimport org.eclipse.jetty.servlet.DefaultServlet;\r\nimport org.eclipse.jetty.util.log.StdErrLog;\r\nimport org.eclipse.jetty.webapp.WebAppContext;\r\n\r\nimport java.io.File;\r\n\r\npublic class JettyTest {\r\n    private int port = 8090;\r\n    protected String charset = \"UTF-8\";\r\n    public JettyTest() {\r\n    }\r\n    public JettyTest(int port) {\r\n        this.port = port;\r\n    }\r\n    public JettyTest(int port, String charset) {\r\n        super();\r\n        this.port = port;\r\n        this.charset = charset;\r\n    }\r\n\r\n    /**\r\n     * 服务器启动。\r\n     *\r\n     */\r\n    public void start() {\r\n        // 设置Jetty日志\r\n        System.setProperty(\"org.eclipse.jetty.util.log.class\", StdErrLog.class.getName());\r\n        Server server = new Server(this.port);\r\n        // 设置context\r\n        WebAppContext context = new WebAppContext();\r\n        context.setContextPath(\"/\"); \r\n        context.setResourceBase(\"E:/IntelliJ-1/dev-1/WebRoot\"); \r\n        server.setHandler(context);\r\n        // 启动Server\r\n        try {\r\n            server.start();\r\n            server.join();\r\n        } catch (Exception e) {\r\n        }\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        JettyTest server = new JettyTest();\r\n        server.start();\r\n    }\r\n}\r\n----\r\n 上下文路径\r\n WebRoot目录\r\n\r\n\r\n== 参考\r\n. http://www.eclipse.org/jetty/documentation/current/embedding-jetty.html[embedding-jetty]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jmeter",
        "title": "Jmeter",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== JMeter\r\n\r\n== 参考\r\n. [[http://www.cnblogs.com/TankXiao/p/4059378.html | ]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jprofiler",
        "title": "Jprofiler",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Jprofiler\r\n\r\n=== 注册码\r\n```\r\nL-Larry_Lau@163.com#23874-hrwpdp1sh1wrn#0620\r\nL-Larry_Lau@163.com#36573-fdkscp15axjj6#25257\r\nL-Larry_Lau@163.com#5481-ucjn4a16rvd98#6038\r\nL-Larry_Lau@163.com#99016-hli5ay1ylizjj#27215\r\nL-Larry_Lau@163.com#40775-3wle0g1uin5c1#0674\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/jrebel",
        "title": "Jrebel 热部署",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== Jrebel 热部署\r\n\r\n=== 安装\r\n. 下载地址 +\r\nhttp://196.168.1.33:9080/f/d68fbbf872/\r\n. 解压 `jrebel_6.2.2.zip` 到 `tomcat` 安装目录\r\n. 修改 `jrebel_6.2.2` 中的 `jrebel.properties`\r\n[source,properties]\r\n----\r\nrebel.dirs=/apache-tomcat-7.0.62/webapps/app/WEB-INF/classes/ \r\n----\r\n 修改 `classes` 编译目录\r\n\r\n=== 脚本\r\n> 在 `tomcat/bin` 目录下创建文件\r\n\r\n--\r\n\r\n`windows` `startup_jrebel_jvm.bat`::\r\n```bat\r\n@echo off\r\nrem ---------------------------放入tomcat路径下的bin/catalina.bat同一级目录\r\nrem ---------------------------jrebel remoting------------------------------------------------\r\ncd ..\r\nset \"CATALINA_HOME=%cd%\"\r\nset JAVA_OPTS=%JAVA_OPTS% -noverify -javaagent:%CATALINA_HOME%\\jrebel_6.2.2\\jrebel.jar -Drebel.properties=%CATALINA_HOME%\\jrebel_6.2.2\\jrebel.properties -Drebel.disable_update=true\r\n\r\nrem ---------------------------JVM------------------------------------------------\r\nREM set JAVA_OPTS=%JAVA_OPTS% -Xms512m -Xmx512m -XX:PermSize=256m -XX:MaxPermSize=256m\r\n\r\ncall \"%CATALINA_HOME%\\bin\\catalina.bat\" %* jpda run\r\n```\r\n\r\n`linux` `startup_jrebel_jvm.sh` ::\r\n```bash\r\n#!/bin/bash\r\n\r\nCATALINA_HOME=/apache-tomcat-7.0.62\r\n\r\nexport CATALINA_OPTS=\"$CATALINA_OPTS -noverify -javaagent:$CATALINA_HOME/jrebel_6.2.2/jrebel.jar -Drebel.properties=$CATALINA_HOME/jrebel_6.2.2/jrebel.properties\"\r\n\r\n$CATALINA_HOME/bin/catalina.sh jpda run\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/junit",
        "title": "单元测试",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 单元测试\r\n\r\n== 参考\r\n. [[mockito doc| http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/maven",
        "title": "Maven",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\nmaven\r\n\r\n maven设置\r\n仓库设置 ‪C:\\Users\\dishui\\.m2\\settings.xml\r\n`xml\r\n    mirrors\r\n    mirror\r\n      idalimaven/id\r\n      namealiyun maven/name\r\n      urlhttp://maven.aliyun.com/nexus/content/groups/public//url\r\n      mirrorOfcentral/mirrorOf\r\n    /mirror\r\n  /mirrors\r\n`\r\n\r\n*导出jar包到默认目录 targed/dependency *\r\n\r\n    在eclipse中，选择项目的pom.xml文件，\r\n    点击右键菜单中的RunAs,\r\n    在弹出的Configuration窗口中，\r\n    在Goals输入 dependency:copy-dependencies后，点击运行\r\n\r\n导入本地jar\r\n\r\n`bash\r\nmvn install:install-file -Dfile=koto-share-1.0.0.jar -DgroupId=com.koto -DartifactId=koto -Dversion=1.0.0 -Dpackaging=jar\r\n`",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/mockito",
        "title": "mockito 单元测试",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n\r\n\r\n=== Stubbing void methods with exceptions\r\n[source,java]\r\n----\r\nprivate void stubEx() {\r\n    List mockedList = mock(List.class);\r\n//  doThrow(new RuntimeException()).when(mockedList).clear();\r\n    doThrow(new RuntimeException()).when(mockedList).add(\"a\"); \r\n\r\n    //following throws RuntimeException:\r\n//  mockedList.clear();\r\n    mockedList.add(\"8a\");\r\n}\r\n----\r\n 调用 `mockedList.add(\"a\")` 时，报 `RuntimeException`\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/mvcxml_md",
        "title": "SpringMVC",
        "content": "\r\nMVC_xml\r\n\r\n\r\n springmvc.xml\r\n\r\n`xml\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\r\n\txmlns:context=\"http://www.springframework.org/schema/context\"\r\n\txmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n\txsi:schemaLocation=\"http://www.springframework.org/schema/beans \r\n\t\thttp://www.springframework.org/schema/beans/spring-beans-3.0.xsd \r\n\t\thttp://www.springframework.org/schema/mvc \r\n\t\thttp://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd \r\n\t\thttp://www.springframework.org/schema/context \r\n\t\thttp://www.springframework.org/schema/context/spring-context-3.0.xsd \r\n\t\thttp://www.springframework.org/schema/aop \r\n\t\thttp://www.springframework.org/schema/aop/spring-aop-3.0.xsd \r\n\t\thttp://www.springframework.org/schema/tx \r\n\t\thttp://www.springframework.org/schema/tx/spring-tx-3.0.xsd \"\r\n\r\n\t!-- 配置式开发开始=========================================== --\r\n\t<!-- 处理器 映射器 \r\n\tbean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/\r\n\t--\r\n\tbean class=\"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping\"\r\n\t\t!-- 集中管理Url --\r\n\t\tproperty name=\"mappings\"\r\n\t\t\tprops\r\n\t\t\t\tprop key=\"/items1.action \"itemsController/prop\r\n\t\t\t\tprop key=\"/items2.action \"itemsController/prop\r\n\t\t\t\tprop key=\"/items3.action \"items1Controller/prop\r\n\t\t\t/props\r\n\t\t/property\r\n\t/bean\r\n\t\r\n\t!-- 处理器 适配器  要求处理器实现Controller接口--\r\n\tbean class=\"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\"/bean\r\n\t!-- 处理器 适配器  要求处理器实现HttpRequestHandler接口--\r\n\tbean class=\"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter\"/bean\r\n\t\r\n\t!-- 视图解释器     jspViewResolver 默认支持 jstl --\r\n\tbean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\"\r\n\t\t!-- 配置前缀 --\r\n\t\tproperty name=\"prefix\" value=\"/WEB-INF/jsp/\"/\r\n\t\t!-- 配置后缀 --\r\n\t\tproperty name=\"suffix\" value=\".jsp\"/\r\n\t/bean\r\n\t\r\n\t<!-- 处理器  \r\n\tbean name=\"/items1.action\" class=\"cn.itcast.core.controller.ItemsController\"/bean\r\n\t--\r\n\tbean id=\"itemsController\" class=\"cn.itcast.core.controller.ItemsController\"/bean\r\n\tbean id=\"items1Controller\" class=\"cn.itcast.core.controller.Items1Controller\"/bean\r\n\t!-- 配置式开发结束=========================================== --\r\n\t\r\n\t\r\n\t!-- 注解开发 开始============================================ --\r\n\t!-- 配置处理器映射器 --\r\n\tbean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping\"/bean\r\n\t!-- 配置处理器适配器 --\r\n\tbean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\"\r\n\t\t!-- 配置类型转换 --\r\n\t\t!-- 配置日期转换 Converter --\r\n\t\tproperty name=\"webBindingInitializer\" ref=\"customBinding\"/\r\n\t\t!-- 支持JSON转换 --\r\n\t\tproperty name=\"messageConverters\"\r\n\t\t\tlist\r\n\t\t\t\tbean class=\"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter\"/\r\n\t\t\t/list\r\n\t\t/property\r\n\t/bean\r\n\t\r\n\t!-- 自定义参数绑定  spring提供--\r\n\tbean id=\"customBinding\" class=\"org.springframework.web.bind.support.ConfigurableWebBindingInitializer\"\r\n\t\t!-- 类型转换 --\r\n\t\tproperty name=\"conversionService\" ref=\"conversionService\"/\r\n\t\t!-- 校验JavaBean合法性 --\r\n\t\tproperty name=\"validator\" ref=\"validator\"/\r\n\t/bean\r\n\t!-- 校验器 --\r\n\tbean id=\"validator\" class=\"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean\"\r\n\t\t!-- 指定由谁来完成此次校验 --\r\n\t\tproperty name=\"providerClass\" value=\"org.hibernate.validator.HibernateValidator\"/\r\n\t\t!-- 指定把提示信息放在配置文件中 --\r\n\t\tproperty name=\"validationMessageSource\" ref=\"messageSource\"/property\r\n\t/bean\r\n\t!-- 校验错误信息配置文件 --\r\n\t<bean id=\"messageSource\"\r\n\t\tclass=\"org.springframework.context.support.ReloadableResourceBundleMessageSource\"\r\n\t\t!-- 资源文件名--\r\n\t\tproperty name=\"basenames\"   \r\n       \t list    \r\n            valueclasspath:CustomValidationMessages/value \r\n       \t /list   \r\n    \t/property\r\n\t\t!-- 资源文件编码格式 --\r\n\t\tproperty name=\"fileEncodings\" value=\"utf-8\" /\r\n\t\t!-- 对资源文件内容缓存时间，单位秒 --\r\n\t\tproperty name=\"cacheSeconds\" value=\"120\" /\r\n\t/bean\r\n\t\r\n\t\r\n\t\r\n\t!-- 参数格式  字符串类型  yyyy-MM-dd HH-mm-ss  格式化  --\r\n\tbean id=\"conversionService\" class=\"org.springframework.format.support.FormattingConversionServiceFactoryBean\"\r\n\t\tproperty name=\"converters\"\r\n\t\t\tlist\r\n\t\t\t\t!-- 日期转换 --\r\n\t\t\t\tbean class=\"cn.itcast.common.converter.CustomDateConverter\"/\r\n\t\t\t\t!-- 日期转换 --\r\n!-- \t\t\t\t<bean class=\"cn.itcast.common.converter.CustomDate1Converter\"/ --\r\n\t\t\t\t!-- 参数 传递 前后去掉空格 --\r\n\t\t\t\tbean class=\"cn.itcast.common.converter.CustomTrimConverter\"/\r\n\t\t\t/list\r\n\t\t/property\r\n\t/bean\r\n\t\r\n\t<!-- 注解开发第二种配置文式  \r\n\tmvc:annotation-driven /\r\n\t --\r\n\t mvc:interceptors\r\n\t \tmvc:interceptor\r\n\t \t\tmvc:mapping path=\"/**\"/\r\n\t \t\tbean class=\"cn.itcast.common.inteceptor.LoginInteceptor\"/bean\r\n\t \t/mvc:interceptor\r\n\t /mvc:interceptors\r\n\t <!-- 拦截器 \r\n\t mvc:interceptors\r\n\t \tmvc:interceptor\r\n\t \t\tmvc:mapping path=\"/**\"/\r\n\t \t\tbean class=\"cn.itcast.common.inteceptor.Inteceptor1\"/bean\r\n\t \t/mvc:interceptor\r\n\t \tmvc:interceptor\r\n\t \t\tmvc:mapping path=\"/**\"/\r\n\t \t\tbean class=\"cn.itcast.common.inteceptor.Inteceptor2\"/bean\r\n\t \t/mvc:interceptor\r\n\t /mvc:interceptors\r\n\t--\r\n\t!-- 配置 处理器  本身不用配置这里   配置扫描处理器--\r\n\tcontext:component-scan base-package=\"cn.itcast.core.controller\"/\r\n\t\r\n\t!-- 实例化此异常处理类 --\r\n\tbean class=\"cn.itcast.common.exception.CustomExceptionResolver\"/\r\n\t\r\n\t!-- 静态资源不拦截 location : 资源位置--\r\n\tmvc:resources location=\"/js/\" mapping=\"/js/**\"/\r\n\t\r\n\t\r\n\t!-- 配置Springmvc支持上传图片 --\r\n\tbean id=\"multipartResolver\" class=\"org.springframework.web.multipart.commons.CommonsMultipartResolver\"\r\n\t\t!-- 指定上传大小  上传的图片不能超过1M    默认是 B --\r\n\t\tproperty name=\"maxUploadSize\" value=\"1048576\"/\r\n\t/bean\r\n\t\r\n\t!-- 注解开发 结束============================================ --\r\n\t\t\r\n/beans\r\n`\r\n\r\n处理器 映射器 (注解解析类)\r\n\r\n`xml\r\nbean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping\"/bean\r\n`\r\n\r\n 处理器 适配器 (注解解析类)\r\n\r\n\tbean class=\"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\"\r\n\t\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/netty",
        "title": "Netty",
        "content": "\r\n= Netty\r\n\r\n== NIO 服务端的主要创建过程\r\n\r\n. 打开 `ServerSocketChannel`, 用于监听客户端的连接,它是所有客户端连接的父管道\r\n+\r\n```\r\nServerSocketChannel acceptorSvr = ServerSocketChannel.open();\r\n```\r\n. 绑定监听端口, 设置连接为非阻塞模式\r\n+\r\n```\r\nacceptorSvr.socket().bind(new InetSocketAddress(InetAddress.getByName(\"IP\"),port));\r\nacceptorSvr.configureBlocking(false);\r\n```\r\n. 创建 `Reactor` 线程, 创建多路复用器并启动线程\r\n+\r\n```\r\nSelector selector = Selector.open();\r\n        new Thread(new ReactorTask()).start();\r\n```\r\n. 将 `ServerSocketChannel` 注册到 `Reactor` 线程的多路复用器 `Selector` 上, 监听 `ACCEPT` 事件\r\n+\r\n```\r\nSelectionKey key = acceptorSvr.register(selector, SelectionKey.OP_ACCEPT, ioHandler);\r\n```\r\n. 多路复用器在线程 `run` 方法的无线循环体内轮询准备就绪的 `Key`\r\n+\r\n```\r\nint num = selector.select();\r\nSet selectionKeys = selector.selectedKeys();\r\nIterator it = selectionKeys.iterator();\r\nwhile (it.hasNext()) {\r\n    SelectionKey key = (SelectionKey) it.next();\r\n    // ... deal with I/O event\r\n}\r\n```\r\n. 多路复用器监听到有新的客户端接入,处理新的接入请求,完成 `TCP` 三次握手,建立物理链路\r\n+\r\n```\r\nSocketChannel channel = svrChannel.accept();\r\n```\r\n. 设置客户端链路为非阻塞模式\r\n+\r\n```\r\nchannel.configureBlocking(false);\r\nchannel.socket().setReuseAddress(true);\r\n....\r\n```\r\n\r\n. 将新接入的客户端连接注册到 `Reactor` 线程的多路复用器上,监听读操作,读取客户端发送的网络消息\r\n+\r\n```\r\nSelectionKey key = socketChannel.register(selector,SelectionKey.OP_READ,ioHandler);\r\n```\r\n. 异步读取客户端请求消息到缓冲区\r\n+\r\n```\r\nint readNumber = channel.read(receivedBuffer);\r\n```\r\n\r\n. 对 `ByteBuffer` 进行编解码,如果有半包消息指针 `reset`, 继续读取后续的报文,将解码成功的消息封装成 `Task`, 投递到业务线程池中,进行业务逻辑编排\r\n+\r\n```\r\nObject message = null;\r\nwhile(buffer.hasRemain())\r\n{\r\n\tbyteBuffer.mask();\r\n\tObject message decode(byteBuffer);\r\n\tif (message == null){\r\n\t\tbyteBuffer.reset();\r\n\t\tbreak;\r\n\t}\r\n\tmessageList.add(message);\r\n\tif(!byteBuffer.hasRemain())\r\n\t\tbyteBuffer.clear();\r\n\telse\r\n\t\tbyteBuffer.compact();\r\n\tif(messageList != null & !messageList.isEmpty()){\r\n\t\tfor(Object messageE : messageList){\r\n\t\t\thandlerTask(messageE);\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n. 将 `POJO` 对象 `encode` 成 `ByteBuffer`, 调用 `SocketChannel` 的异步 `write` 接口, 将消息异步发送给客户端\r\n+\r\n```\r\nSocketChannel.write(buffer);\r\n```\r\n\r\n---\r\n\r\n> 如果发送区 `TCP` 缓冲区满, 会导致写半包, 此时, 需要注册监听写操作位,循环写,直到整包消息写入 `TCP` 缓冲区\r\n\r\n== 参考\r\n\r\n. https://github.com/code4craft/netty-learning[netty-learning]\r\n.\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/spring-conf",
        "title": "Spring 配置文件",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== applicationContext.xml\r\n```xml:/src/conf/spring/applicationContext.xml```\r\n\r\n== spring-mvc-back.xml\r\n```xml:/src/conf/spring/spring-mvc-back.xml```\r\n\r\n== spring-mvc-front.xml\r\n```xml:/src/conf/spring/spring-mvc-front.xml```\r\n\r\n== 注解\r\n```xml:/src/conf/spring/conf/anotation.xml```\r\n\r\n== ibatis\r\n```xml:/src/conf/spring/conf/ibatis.xml```\r\n\r\n== jdbc\r\n```xml:/src/conf/spring/conf/jdbc.xml```\r\n\r\n== property\r\n```xml:/src/conf/spring/conf/property.xml```\r\n\r\n== 事务\r\n```xml:/src/conf/spring/conf/transaction.xml```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/thread",
        "title": "多线程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 多线程\r\n\r\n\r\n== 参考\r\n. [[Java多线程基础 | http://www.importnew.com/21136.html]]\r\n. [[http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/java/面试题",
        "title": "Java 面试题",
        "content": "\r\n== 面向对象编程的基本理念与核心设计思想\r\n* 解释下多态性（polymorphism），封装性（encapsulation），内聚（cohesion）以及耦合（coupling）。\r\n* 继承（Inheritance）与聚合（Aggregation）的区别在哪里。\r\n* 你是如何理解干净的代码（Clean Code）与技术负载（Technical Debt）的。\r\n* 描述下常用的重构技巧。\r\n* 阐述下 SOLID 原则。\r\n* 其他的譬如 KISS,DRY,YAGNI 等原则又是什么含义。\r\n* 什么是设计模式（Design Patterns）？你知道哪些设计模式？\r\n* 你有了解过存在哪些反模式（Anti-Patterns）吗？\r\n* 你会如何设计登陆舰/数学表达式计算程序/一条龙？\r\n* 你知道哪些基本的排序算法，它们的计算复杂度如何？在给定数据的情况下你会倾向于使用哪种算法呢？\r\n尝试编写如下代码：\r\n** 计算指定数字的阶乘\r\n** 开发 Fizz Buzz 小游戏\r\n** 倒转句子中的单词\r\n** 回文字符串检测\r\n** 枚举给定字符串的所有排列组合\r\n\r\n== Java 核心概念\r\n* equals 与 hashCode 的异同点在哪里？Java 的集合中又是如何使用它们的。\r\n* 描述下 Java 中集合（Collections），接口（Interfaces），实现（Implementations）的概念。LinkedList 与 ArrayList 的区别是什么？\r\n* 基础类型（Primitives）与封装类型（Wrappers）的区别在哪里？\r\n* final 与 static 关键字可以用于哪里？它们的作用是什么？\r\n* 阐述下 Java 中的访问描述符（Access Modifiers）。\r\n* 描述下 String,StringBuilder 以及 StringBuffer 区别。\r\n* 接口（Interface）与抽象类（Abstract Class）的区别在哪里。\r\n* 覆盖（Overriding）与重载（OverLoading）的区别在哪里。\r\n* 异常分为哪几种类型？以及所谓的handle or declare原则应该如何理解？\r\n* 简述垃圾回收器的工作原理。\r\n* 你是如何处理内存泄露或者栈溢出问题的？\r\n* 如何构建不可变的类结构？关键点在哪里？\r\n* 什么是 JIT 编译？\r\n* Java 8 / Java 7 为我们提供了什么新功能？即将到来的 Java 9 又带来了怎样的新功能？\r\n\r\n== Spring\r\n* 新版的 Spring 中有哪些新特性？\r\n* 介绍下 Spring 的优势与缺陷。\r\n* 什么是控制反转（Inversion of Control）与依赖注入（Dependency Injection）？\r\n* 你用过哪些 Spring 的模块？\r\n* Spring 中是如何使用依赖注入的？\r\n* Spring 中提供了几种自动注入的机制？\r\n* 介绍下 Spring MVC。\r\n* Spring 中 Scopes 有哪些？\r\n* Spring 中 Bean 的生命周期包含哪些步骤？\r\n* Spring Bean 与 EJB Bean 的区别在哪里？\r\n其他主题\r\n* 介绍下切面编程（Aspect Oriented Programming）。\r\n* 概述下 GET 与 POST 的区别。\r\n* Web Server、Web Container 与 Application Server 的区别是什么？\r\n* 简要介绍下从浏览器输入 URL 开始到获取到请求界面之后 Java Web 应用中发生了什么。\r\n* 什么是 N 层架构？\r\n* 微服务（MicroServices）与巨石型应用（Monolithic Applications）之间的区别在哪里？\r\n* 你知道哪些商业级设计模式？\r\n* 你是如何测试一个应用的？知道哪些测试框架？\r\n* 你是如何测试单个方法的？\r\n* 在你的职业生涯中，算得上最困难的技术挑战是什么？\r\n* 什么是领域驱动开发（Domain Driven Development）？\r\n* 介绍下一些你最爱的 IDE 的常用插件。\r\n* 除了 IDE 之外，你的日常工作中还会用到哪些工具？\r\n* 你使用什么版本管理工具？\r\n* 分支（Branch）与标签（Tag）之间的区别在哪里？\r\n* 你常用的持续集成（Continuous Integration）、静态代码分析（Static Code Analysis）工具有哪些？\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/js/js-html",
        "title": "JS 面向对象",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n\r\n== base\r\n\r\n=== JS 面向对象\r\n\r\n. **js**\r\n```javascript\r\n$(function(){\r\n\tfunction T(){\r\n\t\t//this.a = 'a';\r\n\t\t_this = this;\r\n\t\t//初始化\r\n\t\tthis.init();\r\n\t};\r\n\tT.prototype = {\r\n\t    init: function(){\r\n\t        $('*[data-jump]').each(function(){\r\n\t\t        $(this).bind('click',{flag:$(this)},_this.jump);\r\n\t        });\r\n\t        $('*[data-modify]').each(function(){\r\n\t\t        $(this).bind('click',{flag:$(this)},_this.modify);\r\n\t        });\r\n\t    },\r\n\t\tsave: function(event){\r\n\t\t\tvar data = event.data.flag;\r\n\t\t\tconsole.log(data.html());\r\n\t\t},\r\n\t\tmodify: function(event){\r\n\t\t\tvar data = event.data.flag;\r\n\t\t\tvar id = data.attr('data-id');\r\n\t\t\tvar flag = data.attr('data-modify');\r\n\r\n\t\t\tswitch(flag)\r\n\t\t\t{\r\n\t\t\t\tcase 'edit':\r\n\t\t\t\t\twindow.location.href = '/mgf/toModify.do?id='+id;\r\n\t\t\t\t  break;\r\n\t\t\t\tcase 'delete':\r\n\t\t\t\t\twindow.location.href = '/mgf/delete.do?id='+id;\r\n\t\t\t\t  break;\r\n\t\t\t}\r\n\t\t},\r\n\t\tjump: function(event){\r\n          var data = event.data.flag;\r\n          window.location.href = '/mgf/to-insert.do';\r\n        }\r\n\t};\r\n\twindow[\"t\"] = new T();\r\n});\r\n```\r\n. **html**\r\n```javascript\r\n//导入文件\r\n\r\n```\r\n\r\n=== 弹框页面\r\n\r\n```jsp:/src/java/alter-page.html```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/js/jsutils",
        "title": "Js工具类",
        "content": "\r\nJSUtils\r\n\r\n JS绑定模板\r\n\r\n`javascript\r\n/----------  -----start----------------/\r\n    $(document).ready(function(){\r\n        $(\"#fbtnid\").each(function(){\r\n            $(this).bind(\"click\",{flag:$(this)},jumpToUrl);\r\n        });\r\n        function jumpToUrl(event){\r\n            var data = event.data.flag;\r\n            console.log(data.attr(\"auserid\"));\r\n            window.location.href = \"fabu.jsp?custid=\"+data.attr(\"acust_id\");\r\n        };\r\n     });\r\n/----------  -----end----------------/\r\n        //页面全部加载后执行\r\n    $(document).ready(function(){\r\n        $(\".wrapconr\").find(\"*[a_flag]\").each(function(){\r\n            alert('a');\r\n            $(this).bind(\"click\",{flag:$(this)},toSupply);\r\n        });\r\n    });\r\n`\r\n\r\n在div中查找具有attr属性的所有元素\r\n\r\n`javascript\r\n    function genProAttr2(obj,fifter,attrid,attrcode,attr_name){\r\n        var tmp_str = \"\";\r\n        //在div中查找具有attr属性的所有元素\r\n        obj.find(\"*[\"+fifter+\"]\").each(function(){\r\n            var tmp1 = \"\";\r\n            if($(this).val()!=\"\" && $(this).val()!=\"-1\"){\r\n                tmp1 = {attrid:$(this).attr(attrid),attrcode:$(this).attr(attrcode),attrname:$(this).attr(attrname),attr_value:$(this).val()};\r\n                tmpstr =$.toJSON(tmp1)+\"|\"+ tmpstr;\r\n            };\r\n        });\r\n        //替换,号\r\n        return tmp_str.replace(/\\\"/g, \"@\");\r\n    }\r\n`\r\n\r\n 字符串去重复\r\n\r\n`javascript\r\nfunction ArrayRemoveByValue(strvalue,arrremove){\r\n    var numtodel =new  RegExp(str_value);\r\n    var db_d =new  RegExp('\\,{2}');\r\n    var se_d =new  RegExp('(^\\,)|(\\,$)');\r\n    arrret = arrremove.toString().replace(numtodel,'').replace(dbd,',').replace(sed,'').split(',');\r\n    return arr_ret;\r\n}\r\n`\r\n\r\n拼接\r\n`javascript\r\n/---------- 拼接 -----start----------------/\r\n    function contact(dom,attr){\r\n        var val = \"\";\r\n        $(''+dom+'['+attr+']').each(function(index,element){\r\n            var this_val = $(this).val();\r\n            if(this_val != \"\"){\r\n                if(index == 0){\r\n                    val = this_val;\r\n                }else{\r\n                    val = val +'-'+this_val;\r\n                }\r\n            }\r\n        });\r\n        return val;\r\n        //console.log(val);\r\n    };\r\n/---------- 拼接 -----end----------------/\r\n`\r\n jQuery.validate.form 插件 校验\r\n 网址\r\njQuery Validate\r\n\r\n--\r\nJquery Validate 验证规则\r\n\r\nrequired:true              必输字段\r\nremote:”check.php”         使用ajax方法调用check.php验证输入值\r\nemail:true                 必须输入正确格式的电子邮件\r\nurl:true                   必须输入正确格式的网址\r\ndate:true                  必须输入正确格式的日期\r\ndateISO:true               必须输入正确格式的日期(ISO)，例如：2009-06-23，1998/01/22 只验证格式，不验证有效性\r\nnumber:true                必须输入合法的数字(负数，小数)\r\ndigits:true                必须输入整数\r\ncreditcard:                必须输入合法的信用卡号\r\n`equalTo:”#field”          输入值必须和#field相同\r\naccept:                   输入拥有合法后缀名的字符串（上传文件的后缀）\r\nmaxlength:5               输入长度最多是5的字符串(汉字算一个字符)\r\nminlength:10              输入长度最小是10的字符串(汉字算一个字符)\r\nrangelength:[5,10]        输入长度必须介于 5 和 10 之间的字符串”)(汉字算一个字符)\r\nrange:[5,10]              输入值必须介于 5 和 10 之间\r\nmax:5                     输入值不能大于5\r\nmin:10                    输入值不能小于10\r\n\r\nDemo\r\n\r\n`javascript\r\n/----------------------校验----------------------/\r\n!function(){\r\n    $jquery17(\"#skuForm\").validate({\r\n        //添加验证规则\r\n        rules: {\r\n            brand_price:{\r\n                lt:true,\r\n                min:0\r\n            },\r\n            product_price:{\r\n                min:0\r\n            }\r\n        },\r\n        //提示信息\r\n        messages:{\r\n            brand_price:{\r\n                min:\"输入值不能小于{0}\"\r\n            },\r\n            product_price:{\r\n                min:'输入值不能小于{0}'\r\n            }\r\n        }\r\n    });\r\n    // 验证值必须大于特定值(不能等于)\r\n    $jquery17.validator.addMethod(\"lt\", function(value, element, param) {\r\n        var isTrue = false;\r\n        $(element).parent().parent().find('input[name=\"product_price\"]').each(function(){\r\n            if(value1 < $(this).val()1){\r\n                isTrue = true;\r\n            }\r\n        });\r\n        return isTrue;\r\n    }, $jquery17.validator.format('平台供货价不能大于价格!'));\r\n}();\r\n--\r\n//校验\r\nif($jquery17(\"#skuForm\").valid()){\r\n\tajaxSubmitForm($(\"#productAttrForm\")[0]);\r\n}\r\n`\r\n\r\n\r\nFancybox\r\n\r\n基本用法\r\n`javascript\r\n$(function(){\r\n    $jquery17(\"iframe\").fancybox({\r\n        //在body上指定宽高\r\n\t\t'width':'70%',\r\n\t\t//'height':'75%',\r\n\t\t'autoScale':true,\r\n\t\t'afterClose':jumpurl\r\n\t});\r\n    //关闭弹框\r\n    parent.$jquery17.fancybox.close();\r\n});\r\n`\r\n样式\r\n`html\r\n在body上指定宽高\r\nbody style=\"width: 310px;height: 176px;\"\r\n`\r\niframe中,在最上层页面弹框\r\n`javascript\r\n//在top层页面导入fancybox相关文件\r\n/*\r\nlink rel=\"stylesheet\" type=\"text/css\" href=\"/js/jquery.fancybox.css?v=2.1.5\" media=\"screen\" /\r\njsp:include page=\"/program/company/goods/base_script.jsp\"/jsp:include\r\nscript type=\"text/javascript\" src=\"/js/jquery.fancybox.js?v=2.1.5\"/script\r\n*/\r\n$(document).ready(function(){\r\n  //弹框\r\n  top.$jquery17(top.frames['main'].$('#iframe-test')[0]).fancybox({\r\n        'width':'80%',\r\n        //'height':'75%',\r\n        //'afterClose':a\r\n    });\r\n});\r\n`\r\n\r\n常用Js方法\r\n\r\n`javascript\r\nfunction T(){\r\n        this.t = 't';\r\n};\r\nT.prototype = {\r\n   //判断对象不为空\r\n\tisEmpty: function(variable){\r\n\t\t//var data = event.data.flag;\r\n\t\tvar tmp_var = variable || '';\r\n\t\tif(typeof tmpvar == \"null\" || tmpvar.replace(/(^s)|(s$)/g, \"\").length ==0){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\t//人民币转大写\r\n\tnumToCny: function(n){\r\n\t    var fraction = ['角', '分'];\r\n\t    var digit = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖'];\r\n\t    var unit = [ ['元', '万', '亿'], ['', '拾', '佰', '仟']  ];\r\n\t    var head = n < 0? '欠': '';\r\n\t    n = Math.abs(n);\r\n\r\n\t    var s = '';\r\n\r\n\t    for (var i = 0; i < fraction.length; i++)\r\n\t    {\r\n\t        s += (digit[Math.floor(n * 10 * Math.pow(10, i)) % 10] + fraction[i]).replace(/零./, '');\r\n\t    }\r\n\t    s = s || '整';\r\n\t    n = Math.floor(n);\r\n\r\n\t    for (var i = 0; i  unit[0].length && n  0; i++)\r\n\t    {\r\n\t        var p = '';\r\n\t        for (var j = 0; j  unit[1].length && n  0; j++)\r\n\t        {\r\n\t            p = digitn % 10] + unit[1 + p;\r\n\t            n = Math.floor(n / 10);\r\n\t        }\r\n\t        s = p.replace(/(零.)*零$/, '').replace(/^$/, '零')  + unit0 + s;\r\n\t    }\r\n\t    return head + s.replace(/(零.)*零元/, '元').replace(/(零.)+/g, '零').replace(/^整$/, '零元整');\r\n\t},\r\n\t//只能输入数字\r\n\tonlyNum: function() {\r\n        if(!(event.keyCode==46)&&!(event.keyCode==8)&&!(event.keyCode==37)&&!(event.keyCode==39))\r\n        if(!((event.keyCode=48&&event.keyCode=57)||(event.keyCode=96&&event.keyCode<=105)))\r\n        event.returnValue=false;\r\n    },\r\n    // 只能输入数字\r\n\tkeyUp: function(data) {\r\n\t\tvar ob = data;\r\n\t    if (!ob.value.match(/^[\\+\\-]?\\d?\\.?\\d?$/)){\r\n\t    \tob.value = ob.t_value;\r\n\t    }else{\r\n\t    \tob.t_value = ob.value;\r\n\t    }\r\n\t    if (ob.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?)?$/)){\r\n\t    \tob.o_value = ob.value;\r\n\t    }\r\n    },\r\n    //拼接字符串\r\n    contact: function(dom,attr){\r\n        var val = \"\";\r\n        $(''+dom+'['+attr+']').each(function(index,element){\r\n            var this_val = $(this).val();\r\n            if(this_val != \"\"){\r\n                if(index == 0){\r\n                    val = this_val;\r\n                }else{\r\n                    val = val +'-'+this_val;\r\n                }\r\n            }\r\n        });\r\n        return val;\r\n        //console.log(val);\r\n    };\r\n  };\r\n`\r\n\r\n a标签绑定多个方法\r\n\r\n绑定两个keyup方法\r\n`javascript\r\na href=\"javascript:;\" data-multi onkeyup=\"ba.t.keyUp(this)\"xxxx/a\r\n//\r\nscript type=\"text/javascript\"\r\n  $('*[data-multi]').each(function(){\r\n      $(this).bind('keyup',{flag:$(this)},ba.t.multi);\r\n  });\r\n/script\r\n`\r\n\r\n动态添加form\r\nform\r\n`javascript\r\n    // 创建Form\r\n    var form = $('form/form');\r\n    // 设置属性\r\n    form.attr('action', '/doTradeReg.do');\r\n    form.attr('method', 'post');\r\n    form.attr('name', 'addForm');\r\n    var idinput = $('input type=\"hidden\" name=\"id\" value=\"'+invoiceid+'\"/');\r\n    form.append(id_input);\r\n    form.appendTo(document.body);\r\n`\r\ndom\r\n`javascript\r\n  dynamicAdd: function(tag){\r\n\t  var dom = $(''+tag+'/'+tag+'');\r\n\t  dom.attr('class', 'fancybox.iframe iframe');\r\n\t  dom.attr('href','javascript:;');\r\n\t  dom.appendTo(document.body);\r\n  },\r\n`\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/frontend-controller",
        "content": "apiVersion: v1\r\nkind: ReplicationController\r\nmetadata:\r\n  name: frontend\r\n  labels: \r\n    name: frontend\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    name: frontend\r\n  template:\r\n    metadata:\r\n      labels:\r\n        name: frontend\r\n    spec:\r\n      containers:\r\n      - name: frontend\r\n        image: kubeguide/php\r\n        env:\r\n        - name: GET_HOSTS_FROM\r\n          value: env\r\n        ports:\r\n        - containerPort: 80",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/frontend-service",
        "content": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: frontend\r\n  labels:\r\n    name: frontend\r\nspec:\r\n  type: NodePort\r\n  ports:\r\n  - port: 80\r\n    nodePort: 30002\r\n  selector:\r\n    name: frontend",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/k8s-cmd",
        "title": "k8s基础命令",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= k8s命令\r\n\r\n== 启动服务\r\n```bash\r\nsudo systemctl start etcd\r\nsudo systemctl start docker\r\nsudo systemctl start kube-apiserver\r\nsudo systemctl start kube-controller-manager\r\nsudo systemctl start kube-scheduler\r\nsudo systemctl start kubelet\r\nsudo systemctl start kube-proxy\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/redis-master-controller",
        "content": "apiVersion: v1\r\nkind: ReplicationController\r\nmetadata:\r\n  name: redis-master\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    name: redis-master\r\n  template:\r\n    metadata:\r\n      name: redis-master\r\n      labels:\r\n        name: redis-master\r\n    spec:\r\n      containers:\r\n      - name: redis-master\r\n        image: kubeguide/redis-master\r\n        ports:\r\n        - containerPort: 6379",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/redis-master-service",
        "content": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: redis-master\r\n  labels:\r\n    name: redis-master\r\nspec:\r\n  ports:\r\n  - port: 6379\r\n    targetPort: 6379\r\n  selector:\r\n    name: redis-master",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/redis-slave-controller",
        "content": "apiVersion: v1\r\nkind: ReplicationController\r\nmetadata:\r\n  name: redis-slave\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    name: redis-slave\r\n  template:\r\n    metadata:\r\n      name: redis-slave\r\n      labels:\r\n        name: redis-slave\r\n    spec:\r\n      containers:\r\n      - name: redis-slave\r\n        image: kubeguide/redis-slave\r\n        env:\r\n        - name: GET_HOSTS_FROM\r\n          value: env\r\n        ports:\r\n        - containerPort: 6379",
        "tags": []
    },
    {
        "uri": "//hugo/post/kubernetes/demo/redis-slave-service",
        "content": "apiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: redis-slave\r\n  labels:\r\n    name: redis-slave\r\nspec:\r\n  ports:\r\n  - port: 6379\r\n  selector:\r\n    name: redis-slave",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/alpine",
        "title": "alpine",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== gollum 安装\r\n\r\n* 安装ruby\r\n```bash\r\nsudo apk --update add ruby ruby-nokogiri ruby-rdoc build-base ruby-dev icu-dev zlib-dev git\r\n```\r\n* 安装gollum\r\n```bash\r\nsudo gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\r\nsudo gem install gollum github-markdown asciidoctor pygments.rb --no-ri --no-rdoc\r\n```\r\n* 局域网访问慢\r\n```bash\r\nsudo vi /usr/lib/ruby/2.2.0/webrick/config.rb\r\n#第 36 行：:DoNotReverseLookup => nil,\r\n:DoNotReverseLookup => true\r\n```\r\n\r\n* 开机自启动(`Adding a custom service to rc-service`)\r\n\t. /etc/init.d/supervisord\r\n```bash\r\n#!/sbin/openrc-run\r\n\r\nstart() {\r\n\tsupervisord\r\n}\r\n\r\nstop() {\r\n\tkillall supervisord\r\n}\r\n```\r\n\t. 添加开机启动\r\n```bash\r\n#添加执行权限\r\nsudo chmod +x /etc/init.d/supervisord\r\n#添加开机启动\r\nsudo rc-update add supervisord\r\n```\r\n\r\n* `Windows` 脚本 +\r\n\t. 快速启动\r\n```bat\r\n@echo off\r\ncmd /k \"cd /d D:\\vagrant\\work\\Alpine & vagrant up\"\r\npause>nul\r\n\r\n```\r\n\r\n== 安装软件\r\n\r\n=== 安装 `PlantUML`\r\n\r\n. `jdk`\r\n```bash\r\nsudo apk add openjdk8 --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/community --allow-untrusted\r\n```\r\n. `maven graphviz`\r\n```bash\r\nsudo apk add maven graphviz --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing --allow-untrusted\r\n```\r\n\r\nexport MAVEN_OPTS='-Xms256m -Xmx350m'\r\nexport JAVA_HOME=\"/usr/lib/jvm/java-1.8-openjdk\"\r\nexport CLASSPATH=\".:$PATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib\"\r\n\r\n\r\n[listing, subs=\"verbatim,specialcharacters\"]\r\n[source,ruby]\r\n----\r\nrequire 'sinatra' // \r\n\r\nget '/hi' do // \r\n  \"Hello World!\" // \r\nend\r\n----\r\n Library import\r\n URL mapping\r\n Content for response\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/ansible",
        "title": "ansible",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: ansible\r\n\r\n=== 参考\r\n. https://github.com/ansible/ansible-examples[ansible-examples]\r\n. http://docs.ansible.com/ansible/[ansible-doc]\r\n. http://www.cnblogs.com/rwxwsblog/p/5667772.html[jenkins结合ansible用shell实现自动化部署和回滚]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/asciinema",
        "title": "Asciinema",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n\r\n= Asciinema\r\n\r\n== 配置 asciidoctor 解析 Asciinema\r\n\r\n. 添加 link:/post/my/GistBlockMacro.rb[GistBlockMacro] 到 `asciidoctor-1.5.5\\lib` 下\r\n. 替换 `asciidoctor-1.5.5\\bin` 目录下的 `asciidoctor`\r\n+\r\n[source]\r\n----\r\ninclude::content/post/my/asciidoctor[]\r\n----\r\n\r\n=== 测试\r\n\r\nasciinema::slave[\"/src/records/h1.json\",\"95\",\"22\",\"2\"]\r\n\r\n\r\n== Tmp\r\n\r\nssh root@196.168.1.34\r\n\r\nssh-keygen && \\\r\nssh-copy-id root@196.168.1.34\r\n\r\ndocker exec -it spark-master /bin/bash\r\n\r\ncd $SPARK_HOME\r\n\r\nbin/spark-shell --master spark://master:7077\r\n\r\n\r\nasciinema rec -c bash /dishui/content/src/records/spark/aggregateByKey.json\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/awk",
        "title": "awk",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== AWK\r\n\r\n=== 去除重复行\r\n```bash\r\nawk '!a[$0]++' test-ins-2.txt\r\n```\r\n\r\n```bash\r\ncat arg.txt | awk -F '.' '{if($NF ~ \"java\"){print $0}}' | xargs -I t dirname t | awk '!a[$0]++' | xargs -I s ls s | awk '{print $1}' | awk -F'.' '{if($1 ~ /\\$/){print $1}}'\r\n```\r\n\r\n=== `ps` 查询进程\r\n```bash\r\nps -ef|grep varnish | awk '{if($1 ~ \"varnish\"){print $2}}' | xargs sudo kill -9\r\n```\r\n\r\n\r\n参考 ::\r\n. [[linux awk命令详解|http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/basic",
        "title": "linux 基础命令",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= Linux basic\r\n\r\n=== 命令历史的使用技巧：\r\n. `!n`:执行命令历史中的第n条命令；\r\n. `!-n`:执行命令历史中的倒数第n条命令；\r\n. `!!`: 执行上一条命令；\r\n. `!string`:执行命令历史中最近一个以指定字符串开头的命令\r\n. `!$`:引用前一个命令的最后一个参数;\r\n. `Esc, `.\r\n. `Alt+.`\r\n\r\n\r\n=== 查看 `linux` 系统信息\r\n[cols=\">,^\"]\r\n|===\r\n|查看文件夹大小\r\n|`du -sh docker-training/`\r\n\r\n|查看系统硬盘信息和使用情况\r\n|`df -h`\r\n\r\n|查看主板信息等\r\n|`lspci`\r\n\r\n|CPU信息\r\n|`cat /proc/cpuinfo`\r\n\r\n|内存信息\r\n|`cat /proc/meminfo`\r\n\r\n|Linux下通过端口查看进程\r\n| `lsof -Pnl +M -i4  |grep 8453`\r\n\r\n|查看监听状态的的TCP端口\r\n|`netstat -tl`\r\n|===\r\n\r\n\r\n=== 获取 `ip` 地址\r\n```\r\nifconfig|grep \"inet addr:\"|grep -v \"127.0.0.1\"|cut -d: -f2|awk '{print $1}'\r\n```\r\n\r\n=== 端口查看\r\n. `linux` 查询某个端口被什么进程占用的命令\r\n+\r\n```\r\nlsof -i|grep 80 = 端口号即可获取进程号\r\n```\r\n. `linux` 查询进程占用哪些端口\r\n+\r\n```\r\nnetstat -nlap\r\n```\r\n\r\n=== 时间同步\r\n==== `NTP` 时间服务器设置\r\n. http://vbird.dic.ksu.edu.tw/linux_server/0440ntp_2.php[鸟哥ntp时间同步设置]\r\n. `ntp.conf` 配置文件 +\r\n`vi /etc/npt.conf`\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/ntp.conf[]\r\n----\r\n\r\n. `NTP` 的启动与观察\r\n+\r\n```\r\n# 1. 启动 NTP\r\nservice ntpd start\r\n/etc/init.d/ntpd start\r\nchkconfig ntpd on\r\ntail /var/log/messages   dnsmasq.hosts ",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/CentOS7",
        "title": "CentOS7",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: CentOS7\r\n\r\n== CentOS7\r\n\r\n=== 挂载 linux 目录\r\n\r\n. 安装 *cifs-utils*\r\n+\r\n```\r\nyum install -y cifs-utils\r\n```\r\n\r\n. 挂载\r\n+\r\n```\r\nmount -t cifs --verbose -o user=dishui,pass=dishui //192.168.123.199/dishui /root/dishui/mount/\r\n```\r\n\r\n== CentOS7使用firewalld打开关闭防火墙与端口\r\n\r\n. firewalld的基本使用\r\n+\r\n[source,]\r\n----\r\n#启动：\r\nsystemctl start firewalld\r\n#查看状态：\r\nsystemctl status firewalld\r\n#停止：\r\nsystemctl disable firewalld\r\n#禁用：\r\nsystemctl stop firewalld\r\n----\r\n\r\n. systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。\r\n+\r\n[source,]\r\n----\r\n#启动一个服务：\r\nsystemctl start firewalld.service\r\n#关闭一个服务：\r\nsystemctl stop firewalld.service\r\n#重启一个服务：\r\nsystemctl restart firewalld.service\r\n#显示一个服务的状态：\r\nsystemctl status firewalld.service\r\n#在开机时启用一个服务：\r\nsystemctl enable firewalld.service\r\n#在开机时禁用一个服务：\r\nsystemctl disable firewalld.service\r\n#查看服务是否开机启动：\r\nsystemctl is-enabled firewalld.service\r\n#查看已启动的服务列表：\r\nsystemctl list-unit-files|grep enabled\r\n#查看启动失败的服务列表：\r\nsystemctl --failed\r\n----\r\n\r\n. 配置 *firewalld-cmd*\r\n+\r\n[source,]\r\n----\r\n#查看版本：\r\nfirewall-cmd --version\r\n#查看帮助：\r\nfirewall-cmd --help\r\n#显示状态：\r\nfirewall-cmd --state\r\n#查看所有打开的端口：\r\nfirewall-cmd --zone=public --list-ports\r\n#更新防火墙规则：\r\nfirewall-cmd --reload\r\n#查看区域信息:\r\nfirewall-cmd --get-active-zones\r\n#查看指定接口所属区域：\r\nfirewall-cmd --get-zone-of-interface=eth0\r\n#拒绝所有包：\r\nfirewall-cmd --panic-on\r\n#取消拒绝状态：\r\nfirewall-cmd --panic-off\r\n#查看是否拒绝：\r\nfirewall-cmd --query-panic\r\n\r\n#那怎么开启一个端口呢\r\n#添加\r\nfirewall-cmd --zone=public --add-port=80/tcp --permanent    （--permanent永久生效，没有此参数重启后失效）\r\n#重新载入\r\nfirewall-cmd --reload\r\n#查看\r\nfirewall-cmd --zone= public --query-port=80/tcp\r\n#删除\r\nfirewall-cmd --zone= public --remove-port=80/tcp --permanent\r\n----\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/cluster",
        "title": "LVS 集群配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 机群\r\n\r\n=== `LVS`\r\n\r\n==== `ipvsadm`\r\n\r\n. 开启转发\r\n```bash\r\ncat /proc/sys/net/ipv4/ip_forward\r\n\r\necho 1 > /proc/sys/net/ipv4/ip_forward\r\n```\r\n\r\n. 添加VIP\r\n```bash\r\nipvsadm -A -t 172.16.100.1:80 -s rr\r\n```\r\n. 添加`RealServer`\r\n```bash\r\nipvsadm -a -t 172.16.100.1:80 -r 192.168.10.8 -m\r\nipvsadm -a -t 172.16.100.1:80 -r 192.168.10.9 -m\r\n```\r\n. 查看\r\n```bash\r\nipvsadm -L -n\r\n```\r\n\r\n. 测试\r\n```bash\r\nab -c 100 -n 1000 http://172.16.100.1/index.html\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/CoreOS",
        "title": "CoreOS",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: CoreOS\r\n\r\n== CoreOS\r\n\r\n=== 升级策略\r\n. 修改升级策略\r\n+\r\n```\r\n$ sudo vi /etc/coreos/update.conf\r\nGROUP=stable\r\nREBOOT_STRATEGY=reboot\r\n```\r\n\r\n. 升级策略主要与自动升级后的重启更新方式有关。它的值可以是 *best-effort*（默认值）、 *etcd-lock*、 *reboot* 和 *off*。其作用依次解释如下：\r\n* *best-effort*：如果Etcd运行正常则相当于 etcd-lock，否则相当于reboot\r\n* *etcd-lock*：自动升级后自动重启，使用LockSmith 服务调度重启过程\r\n* *reboot*：自动升级后立即自动重启系统\r\n* *off*：自动升级后等待用户手工重启\r\n\r\n. 手动升级\r\n+\r\n```\r\nupdate_engine_client -update\r\n```\r\n\r\n==== `Window 主机 启动脚本`\r\n```\r\n#!/bin/sh\r\n\r\nCOREOS=/d/vagrant/CoreOS\r\nSWARM=/d/vagrant/CoreOS-Cluster-Test\r\nSWARM01=/d/vagrant/CoreOS-1214\r\nCentOS=/d/vagrant/CentOS\r\n\r\ngollum() {\r\n    cd $COREOS && vagrant $1\r\n}\r\n\r\nswarm() {\r\n    cd $SWARM && vagrant $1\r\n}\r\n\r\nswarm01() {\r\n    cd $SWARM01 && vagrant $1\r\n}\r\n\r\ncentos() {\r\n    cd $CentOS && vagrant $1\r\n}\r\n\r\ncase \"$1\" in\r\n    gollum)\r\n        gollum $2 || exit 0\r\n        ;;\r\n    swarm)\r\n        swarm $2 || exit 0\r\n        ;;\r\n    swarm01)\r\n        swarm01 $2 || exit 0\r\n        ;;\r\n    centos)\r\n        centos $2 || exit 0\r\n        ;;\r\n  status)\r\n        gollum status | awk '{if(NR==3){print $1\" \"$2}}'\r\n        swarm status | awk '{if(NR==3){print $1\" \"$2}}'\r\n        swarm01 status | awk '{if(NR==3){print $1\" \"$2}}'\r\n        centos status | awk '{if(NR==3){print $1\" \"$2}}'\r\n        ;;\r\n    *)\r\n        echo $\"Usage: $0 {gollum|swarm|swarm01|centos} {up|halt|reload|status}\"\r\n        exit 2\r\nesac\r\n```\r\n\r\n\r\n=== Problem 003 - `unix:///var/run/supervisor.sock refused connection`\r\n\r\nReference: [[docker-issues#651|https://github.com/sameersbn/docker-gitlab/issues/651\r\n\r\n* `init.sh` +\r\n```\r\n#!/bin/sh\r\nsed -i 's#/run/supervisord.sock#/dev/shm/supervisor.sock#g'  /etc/supervisord.conf\r\ntouch /dev/shm/supervisor.sock\r\n/usr/bin/supervisord -c /etc/supervisord.conf\r\n```\r\n* 修改 `supervisord` 配置文件 +\r\n```\r\n# /etc/supervisord.conf\r\n[supervisord]\r\n\r\nnodaemon=true  ;  前台运行\r\n```\r\n\r\n\r\n参考 ::\r\n. https://coreos.com/docs/launching-containers/launching/getting-started-with-systemd/[systemd]\r\n\r\n. https://coreos.com/os/docs/latest/cloud-config-locations.html[cloud-config-locations]\r\n\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/vagrantfile-user-data[]\r\n----\r\n\r\n```\r\nsudo vi /var/lib/coreos-vagrant/vagrantfile-user-data\r\nsudo coreos-cloudinit -from-file=/var/lib/coreos-vagrant/vagrantfile-user-data\r\n```\r\n. https://coreos.com/os/docs/latest/reading-the-system-log.html[journalctl]\r\n\r\n== UML\r\n\r\n. 中文乱码\r\n+\r\n```\r\n# 安装中文字体\r\napt-get install fonts-droid\r\n```\r\n\r\n. gollum\r\n+\r\n```\r\n#启动 plantuml\r\ndocker run -d -p 8080:8080 -v ~/opt/src/tomcat/plantuml:/tomcat/webapps --name plantuml-1 tomcat7\r\n# 启动 gollum  --privileged 以root 用户启动 docker\r\ndocker run -d -p 80:4567 --privileged  --name gollum gollum:1.7\r\n```\r\n\r\n==  CoreOS 安装 docker-compose\r\n\r\n参考 ::\r\n\r\n. http://my.oschina.net/Laily/blog/678926[CoreOS 安装 docker-compose ]\r\n. https://github.com/docker/compose/releases[docker-compose]\r\n. http://blog.csdn.net/waixin/article/details/50212079[docker centos7 sshd]\r\n\r\n== CoreOS 硬盘安装\r\n\r\n=== 镜像\r\nhttps://stable.release.core-os.net/amd64-usr/current/[Coreos image]\r\n```\r\n coreos_production_iso_image.iso\r\n coreos_production_image.bin.bz2\r\n coreos_production_image.bin.bz2.sig\r\n```\r\n\r\n\r\n=== Http 服务器\r\n\r\n==== http://rejetto.com/hfs/?f=dl[HFS]\r\n\r\nimage::{img}/img/2016-08-30_113636.png[]\r\n\r\n==== 配置文件\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/cloud-config.yaml[]\r\n----\r\n\r\n\r\nimage::{img}/img/2016-08-30_113636.png[]\r\n// [[/src/img/2016-08-30_113636.png]] +\r\n 配置文件\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/cloud-config.yaml[]\r\n----\r\n\r\n=== 操作\r\n\r\n```\r\n# 切换 root\r\nsudo su - root\r\n# 在 /etc/systemd/network 目录下创建 static.network文件,示例内容如下\r\n[Match]\r\nName=enp0s3     # 网卡地址\r\n[Network]\r\nDNS=114.114.114.114\r\nAddress=192.168.200.12/24\r\nGateway=192.168.200.11\r\n# 重启网络\r\nsystemctl restart systemd-networkd\r\n# 下载 配置文件\r\nwget 192.168.137.2/cloud-config.yaml\r\n# 安装Coreos到硬盘\r\ncoreos-install -d /dev/sda -C stable -c cloud-config.yaml -b http://192.168.137.2\r\n```\r\n\r\n=== 设置 core 密码\r\n开机,按 kbd:[↓] +\r\n\r\nimage::{imagesdir}/img/2016-08-30_125508.png[]\r\n添加 `coreos.autologin=tty1` +\r\n\r\nimage::{imagesdir}/img/2016-08-30_125711.png[]\r\nkbd:[F10] 启动,设置 `core` 密码\r\n\r\n=== 参考\r\n.  https://stable.release.core-os.net/amd64-usr/current/[Coreos image ]\r\n.  https://github.com/coreos/coreos-cloudinit/[coreos-cloudinit ]\r\n.  http://www.cnblogs.com/slightboy/p/5774050.html[CoreOS Hyper-V 安装, Install to disck ]\r\n.  https://www.vultr.com/docs/boot-into-single-user-mode-reset-root-password[ Access Single User Mode (Reset Root Password)]\r\n.  http://ju.outofmemory.cn/entry/137308[Coreos 安装及配置 ]\r\n.  http://livedig.com/379[VMware 下 CoreOS OVA 镜像的安装与配置 ]\r\n. https://coreos.com/os/docs/latest/configuring-date-and-timezone.html[ 设置系统时间]\r\n.  http://www.linuxidc.com/wap.aspx?nid=117024&p=1&cp=2&cid=5&sp=149\r\n\r\n.  https://coreos.com/os/docs/latest/using-systemd-drop-in-units.html[ 重写CoreOS中的unit ]\r\n\r\n\r\n== 安装 Python\r\n\r\n. 下载 pypy\r\n+\r\n百度网盘 *`src`* 目录下\r\n\r\n. 执行脚本\r\n+\r\n[. bootstrap.sh]\r\n[source]\r\n----\r\ninclude::{src}/linux/scripts/pypy-bootstrap.sh[]\r\n----\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/docker-compose",
        "title": "docker-compose",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: docker-compose\r\n\r\n== docker-compose\r\n\r\n\r\n参考 ::\r\n.  https://docs.docker.com/compose/compose-file/[docker-compose.yml ]\r\n. http://my.oschina.net/Laily/blog/678926[CoreOS 安装 docker-compose ]\r\n.  https://github.com/docker/compose/releases[docker-compose ]\r\n. https://docs.docker.com/compose/compose-file[compose-file]\r\n. http://dockone.io/article/1545[]\r\n\r\n\r\n== Docker+Docker-Compose+Zookeeper 集群搭建\r\n\r\n=== 环境\r\n[cols=\">,^\"]\r\n|===\r\n|Linux\r\n|CoreOS stable (899.15.0)\r\n\r\n|Docker\r\n|Docker version 1.9.1, build 9894698\r\n\r\n|Docker Image\r\n|centos7+java_x64+zookeeper+pipework\r\n\r\n|Docker Compose\r\n|https://github.com/docker/compose/releases/[docker-compose version 1.6.2, build 4d72027]\r\n\r\n|Pipework\r\n|https://github.com/dishuiGit/pipework[pipework]\r\n\r\n|Zookeeper\r\n|http://www.apache.org/dyn/closer.cgi/zookeeper/[Zookeeper]\r\n|===\r\n\r\n=== docker-compose\r\n. 安装\r\n+\r\n```\r\ncurl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-`uname -s`-`uname -m` > docker-compose\r\ncp docker-compose /opt/bin/\r\nchmod +x /opt/bin/docker-compose\r\n```\r\n. 检测是否安装成功\r\n+\r\n```\r\n$ docker-compose --version\r\ndocker-compose version 1.6.2, build 4d72027\r\n```\r\n\r\n=== pipework\r\n. 安装\r\n+\r\n```\r\ninstall -m 755 pipework /opt/bin/pipework\r\n```\r\n. 检测是否安装成功\r\n+\r\n```\r\n$ pipework -h\r\nSyntax:\r\npipework  [-i containerinterface] [-l localinterfacename]  /[@default_gateway] [macaddr][@vlan]\r\npipework  [-i containerinterface] [-l localinterfacename]  dhcp [macaddr][@vlan]\r\npipework route  \r\npipework --wait [-i containerinterface]\r\n```\r\n\r\n=== zookeeper 集群\r\n\r\n. 安装\r\n+\r\n```\r\ntar -zxf zookeeper-3.4.8.tar.gz -C /\r\n```\r\n. 启动\r\n+\r\n```\r\n# zookeeper-3.4.8/bin/zkServer.sh -h\r\nZooKeeper JMX enabled by default\r\nUsing config: /zookeeper-3.4.8/bin/../conf/zoo.cfg\r\nUsage: zookeeper-3.4.8/bin/zkServer.sh {start|start-foreground|stop|restart|status|upgrade|print-cmd}\r\n```\r\n. 配置\r\n+\r\n```\r\n# vi zookeeper-3.4.8/conf/zoo.cfg\r\ntickTime=2000\r\ninitLimit=10\r\nsyncLimit=5\r\nclientPort=2181\r\ndataDir=/zookeeper/data\r\nserver.1=192.168.138.11:2888:3888\r\nserver.2=192.168.138.22:2888:3888\r\nserver.3=192.168.138.33:2888:3888\r\n```\r\n. `myid`\r\n+\r\n\t* 对每个 `zookeeper` 主机,添加 `myid`\r\n+\r\n```\r\necho \"1\" > /zookeeper/data/myid\r\n```\r\n\t* `docker` 中的 `myid` ,通过环境 `env` 传入 `myid`\r\n\r\n=== docker-compose\r\n\r\n.docker-compose.yml\r\n[source]\r\n----\r\ninclude::{src}/docker/zookeeper-docker-compose.yml[]\r\n----\r\n\r\n.init.sh\r\n[source]\r\n----\r\ninclude::{src}/docker/init.sh[]\r\n----\r\n\r\n```\r\nnetwork\r\nversion2 ::\r\n不用加 `links` 各个容器之间可以互通\r\n\r\nversion1 ::\r\n加 `links` 可以单通,但是不可以互通\r\n```\r\n\r\n== Docker Registry\r\n\r\n=== 配置\r\n\r\n==== registry server\r\n\r\n. 生成自签名证书\r\n+\r\n```\r\ncd ~/\r\n\r\nmkdir registry && cd registry && mkdir certs && cd certs\r\n\r\nopenssl req -x509 -days 3650 -subj '/CN=dishui.io/' -nodes -newkey rsa:2048 -keyout registry.key -out registry.crt\r\n```\r\n\r\n[TIP]\r\nCN=dishui.io 这里是域名\r\n\r\n. 启动 `registry server`\r\n\r\n==== docker client端\r\n\r\n. 创建证书目录(没有此目录自己创建，注意端口号)\r\n+\r\n```\r\nsudo mkdir -p /etc/docker/certs.d/dishui.io:5000\r\n```\r\n. 下载证书\r\n+\r\n```\r\nsudo cp ~/registry.crt /etc/docker/certs.d/dishui.io:5000\r\n```\r\n. 域名解析\r\n+\r\n```\r\nsudo sh -c \"echo 192.168.137.15 dishui.io >> /etc/hosts\"\r\n```\r\n\r\n```\r\nsudo mkdir -p /etc/docker/certs.d/dishui.io:5000 && \\\r\nsudo cp ~/registry.crt /etc/docker/certs.d/dishui.io:5000 && \\\r\nsudo sh -c \"echo 192.168.137.15 dishui.io >> /etc/hosts\"\r\n```\r\n\r\n. 镜像 `tag` 标签\r\n+\r\n```\r\ndocker tag 9a6db89 dishui.io:5000/dishuigit/codis:1.1\r\n```\r\n. 上传镜像到 `registry`\r\n+\r\n```\r\ndocker push dishui.io:5000/dishuigit/codis:1.1\r\n```\r\n\r\n. 删除 *registry* 镜像\r\n\r\nhttps://github.com/burnettk/delete-docker-registry-image[]\r\n\r\n\r\n=== `compose` 文件\r\n\r\n. gollum\r\n+\r\n```\r\ngollum:\r\n  privileged: true\r\n  image: dishuigit/gollum:2.0\r\n  container_name: gollum1\r\n  ports:\r\n   - \"80:4567\"\r\n```\r\n\r\n. `registry`\r\n+\r\n```\r\nversion: '2'\r\nservices:\r\n  registry1:\r\n    image: registry:2.5\r\n    container_name: registry1\r\n    ports:\r\n      - \"5000:5000\"\r\n    environment:\r\n      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/registry.crt\r\n      REGISTRY_HTTP_TLS_KEY: /certs/registry.key\r\n    volumes:\r\n      - /home/core/registry:/var/lib/registry\r\n      - /home/core/certs:/certs\r\n```\r\n. `registry-web`\r\n+\r\n```\r\nversion: '2'\r\nservices:\r\n  registry2:\r\n    image: registry:2.5\r\n    container_name: registry2\r\n    volumes:\r\n      - /home/core/conf/registry:/etc/docker/registry\r\n      - /home/core/registry:/var/lib/registry\r\n  registry-ui:\r\n    image: hyper/docker-registry-web\r\n    container_name: registry-ui\r\n    ports:\r\n      - \"8080:8080\"\r\n    volumes:\r\n      - /home/core/conf/registry-web:/conf:ro\r\n    extra_hosts:\r\n      - \"dishui.io:192.168.137.15\"\r\n    depends_on:\r\n      - registry2\r\n```\r\n\r\n=== api\r\n\r\n. 查看仓库 镜像列表\r\n+\r\nhttps://192.168.137.15:5000/v2/_catalog[]\r\n. 查看 `tag`\r\n+\r\nhttps://192.168.137.15:5000/v2/dishuigit/elastic/tags/list[]\r\n\r\n=== 参考\r\n. https://docs.docker.com/registry/deploying/[registry 部署]\r\n. https://docs.docker.com/registry/configuration/[registry 配置]\r\n. https://github.com/mkuchin/docker-registry-web[docker-registry-web]\r\n. https://docs.docker.com/registry/insecure/[Insecure Registry]\r\n. http://www.tuicool.com/articles/vMZZveM[]\r\n\r\n=== Q & A\r\n> core@coreos ~/compose $ docker push 192.168.137.15:5000/dishuigit/docker-registry-web:1.0\r\nThe push refers to a repository [192.168.137.15:5000/dishuigit/docker-registry-web]\r\nunable to ping registry endpoint https://192.168.137.15:5000/v0/\r\nv2 ping attempt failed with error: Get https://192.168.137.15:5000/v2/: tls: oversized record received with length 20527\r\n v1 ping attempt failed with error: Get https://192.168.137.15:5000/v1/_ping: tls: oversized record received with length 20527\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/docker-ref",
        "title": "docker 参考",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n# 参考\r\n\r\n. [[docker format | https://docs.docker.com/engine/admin/formatting/]]\r\n. [[容器界大事件：深度解析 containerd | https://yq.aliyun.com/articles/66626]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/docker-swarm",
        "title": "swarm",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== Swarm\r\n\r\n=== 环境\r\n> linux主机CoreOS Alpha 1214.0.0\r\n\r\n[cols=\"3\"]\r\n|===\r\n|主机名\r\n|IP\r\n|类型\r\n\r\n|swarm-manager\r\n|192.168.137.16\r\n|manager\r\n\r\n|swarm-01\r\n|192.168.137.17\r\n|agent\r\n|===\r\n\r\n=== docker 版本\r\n```bash session\r\n$ docker version\r\nClient:\r\n Version:      1.12.1\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   7a86f89\r\n Built:\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.12.1\r\n API version:  1.24\r\n Go version:   go1.6.3\r\n Git commit:   7a86f89\r\n Built:\r\n OS/Arch:      linux/amd64\r\n```\r\n\r\n=== docker swarm 命令详情\r\n. `docker swarm`：集群管理，子命令有 `init`, `join`,`join-token`, `leave`, `update`\r\n. `docker node`：节点管理，子命令有 `demote`, `inspect`,`ls`, `promote`, `rm`, `ps`, `update`\r\n. `docker service`：服务管理，子命令有 `create`, `inspect`, `ps`, `ls` ,`rm` , `scale`, `update`\r\n. `docker stack/deploy`：试验特性，用于多应用部署\r\n\r\n\r\n=== 创建 *Swarm* 集群\r\n\r\n==== 初始化\r\n[source,bash]\r\n----\r\ndocker swarm init --listen-addr 192.168.137.16:2377 \r\n    --advertise-addr 192.168.137.16  \r\n----\r\n 监听地址和端口\r\n 广播地址\r\n\r\n==== 查看结果\r\n```bash session\r\n$ docker node ls\r\nID                           HOSTNAME    STATUS  AVAILABILITY  MANAGER STATUS\r\n4cq8ppe7gpf8tvvqcdp6nqty8    swarm-01    Ready   Active\r\n56sak7fpfts2tihvc5wpfhbt6 *  coreostest  Ready   Active        Leader\r\n```\r\n\r\n==== 把 *agent* *swarm-01* 添加到 *swarm* 集群\r\n```bash\r\ndocker swarm join --token SWMTKN-1-4orz6854t4zhmbwigvqw1i2js5agediqfxm3hglunw9njw2rsu-5296wwmly6c6j5scorkrkmxz8     192.168.137.16:2377\r\n```\r\n\r\n==== 部署应用\r\n```bash\r\ndocker service create --replicas 3 --name my-web -p 80:80 dishui.io:5000/nginx:stable\r\n```\r\n\r\n参考::\r\n. [[https://docs.docker.com/engine/swarm]]\r\n. [[使用docker 1.12 搭建多主机docker swarm集群 | http://www.lxy520.net/2016/07/02/shi-yong-docker-1-12-da-jian-duo-zhu-ji-docker-swarmji-qun/]]\r\n. [[docker 1.12 的服务自动发现 | http://www.lxy520.net/2016/09/03/docker-1-12-de-fu-wu-zi-dong-fa-xian/]]\r\n\r\n\r\n\r\n== TMP\r\ndocker swarm join \\\r\n    --token SWMTKN-1-4orz6854t4zhmbwigvqw1i2js5agediqfxm3hglunw9njw2rsu-5296wwmly6c6j5scorkrkmxz8 \\\r\n    192.168.137.16:2377\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/fen_qu",
        "title": "linux 系统分区",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\n分区\r\n首先查看机器上有多少块硬盘：\r\n`\r\n$ fdisk -l\r\n\r\nDisk /dev/sdd: 1000.2 GB, 1000204886016 bytes\r\n255 heads, 63 sectors/track, 121601 cylinders\r\nUnits = cylinders of 16065 * 512 = 8225280 bytes\r\nSector size (logical/physical): 512 bytes / 512 bytes\r\nI/O size (minimum/optimal): 512 bytes / 512 bytes\r\nDisk identifier: 0x00000000\r\n\r\nDisk /dev/sdd doesn't contain a valid partition table\r\nDisk /dev/sdh: 1000.2 GB, 1000204886016 bytes\r\n255 heads, 63 sectors/track, 121601 cylinders\r\nUnits = cylinders of 16065 * 512 = 8225280 bytes\r\nSector size (logical/physical): 512 bytes / 512 bytes\r\nI/O size (minimum/optimal): 512 bytes / 512 bytes\r\nDisk identifier: 0xd54c485e\r\n\r\nDevice Boot      Start         End      Blocks   Id  System\r\n/dev/sdh1               1      121601   976760001   83  Linux\r\n\r\n我的服务器上有很多块，有上述信息可知，目前sdd硬盘还为挂载\r\n`\r\n\r\n硬盘分区\r\n`\r\n$ fdisk /dev/sdd\r\nn-p-1-回车-回车\r\n意思就是新建一个主分区，大小是整个sdd磁盘\r\n最后执行w，写入磁盘\r\n此时磁盘已经分区，但是还没有文件系统，磁盘依然不能用\r\n`\r\n格式化磁盘并写入文件系统\r\n`\r\n$ mkfs.ext4 /dev/sdd1 \r\n等待命令执行完成\r\n`\r\n挂载新硬盘到操作系统的某个节点上\r\n`\r\n$ mkdir /mnt/sdd\r\n$ mount /dev/sdd1 /mnt/sdd\r\n`\r\n\r\n执行df命令查看磁盘信息，确认挂载新硬盘成功\r\n`\r\n$ df\r\nFilesystem           1K-blocks      Used Available Use% Mounted on\r\n/dev/sda3            928204272   4191296 876862896   1% /\r\ntmpfs                 32981876        12  32981864   1% /dev/shm\r\n/dev/sda1               198337     31960    156137  17% /boot\r\n/dev/sdh1            961432072    204436 912389636   1% /mnt/sdh\r\n/dev/sdd1            961432072    204436 912389636   1% /mnt/sdd\r\n`\r\n以上加粗字体就是新增磁盘。\r\n开机挂载硬盘\r\n`\r\n手动挂载：\r\n          mount /dev/sdb5 /mnt/ljp1\r\n          mount /dev/sdb6 /mnt/ljp2\r\n自动挂载：\r\n          vi /etc/fstab\r\n          /dev/sda3 /mnt/sda2  ext4     defaults     0 0\r\n`\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/git-tips",
        "title": "Git的奇技淫巧",
        "content": "\r\nGit的奇技淫巧:seenoevil:\r\n Git常用命令集合，Fork于tips项目\r\n\r\nGit是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。\r\n\r\n下面的内容就是列举了常用的git命令和一些小技巧，可以通过\"页面内查找\"的方式进行快速查询：Ctrl/Command+f。\r\n\r\n 开卷必读\r\n如果之前未使用过Git，可以学习廖老师的免费Git教程入门\r\n\r\n一定要先测试命令的效果后，再用于工作环境中，以防造成不能弥补的后果！到时候别拿着砍刀来找我\r\n所有的命令都在git version 2.7.4 (Apple Git-66)下测试通过\r\n统一概念：\r\n    工作区：改动（增删文件和内容）\r\n    暂存区：输入命令：git add 改动的文件名，此次改动就放到了‘暂存区’\r\n    本地仓库(简称：本地)：输入命令：git commit 此次修改的描述，此次改动就放到了’本地仓库’，每个commit，我叫它为一个‘版本’。\r\n    远程仓库(简称：远程)：输入命令：git push 远程仓库，此次改动就放到了‘远程仓库’（github等)\r\n    commit-id：输出命令：git log，最上面那行commit xxxxxx，后面的字符串就是commit-id\r\n如果喜欢这个项目，欢迎Star、提交Pr、反馈问题😊\r\n\r\n目录\r\n展示帮助信息\r\n回到远程仓库的状态\r\n重设第一个commit\r\n展示工作区和暂存区的不同\r\n展示暂存区和最近版本的不同\r\n展示暂存区、工作区和最近版本的不同\r\n快速切换分支\r\n删除已经合并到master的分支\r\n展示所有的分支关联的远程仓库\r\n关联远程分支\r\n删除本地分支\r\n删除远程分支\r\n查看标签\r\n本地创建标签\r\n推送标签到远程仓库\r\n删除本地标签\r\n删除远程标签\r\n放弃工作区的修改\r\n回到某一个commit的状态，并重新增添一个commit\r\n回到某个commit的状态，并删除后面的commit\r\n修改上一个commit的描述\r\n查看commit历史\r\n显示本地执行过git命令\r\n修改作者名\r\n修改远程仓库的url\r\n列出所有远程仓库\r\n列出本地和远程分支\r\n列出远程分支\r\n查看两个星期内的改动\r\n把A分支的某一个commit，放到B分支上\r\n给git命令起别名\r\n存储当前的修改，但不用提交commit\r\n保存当前状态，包括untracked的文件\r\n展示所有stashes\r\n回到某个stash的状态\r\n回到最后一个stash的状态，并删除这个stash\r\n删除所有的stash\r\n从stash中拿出某个文件的修改\r\n展示所有tracked的文件\r\n展示所有untracked的文件\r\n展示所有忽略的文件\r\n强制删除untracked的文件\r\n强制删除untracked的目录\r\n重命名分支\r\n展示简化的commit历史\r\n查看某段代码是谁写的\r\n把某一个分支到导出成一个文件\r\n从包中导入分支\r\n执行rebase之前自动stash\r\n从远程仓库根据ID，拉下某一状态，到本地分支\r\n详细展示一行中的修改\r\n清除.gitignore文件中记录的文件\r\n展示所有alias和configs\r\n展示忽略的文件\r\ncommit历史中显示Branch1有的，但是Branch2没有commit\r\n在commit log中显示GPG签名\r\n删除全局设置\r\n新建并切换到新分支上，同时这个分支没有任何commit\r\n展示任意分支某一文件的内容\r\nclone下来指定的单一分支\r\n创建并切换到该分支\r\n忽略文件的权限变化\r\n展示本地所有的分支的commit\r\n在commit log中查找相关内容\r\n把暂存区的指定file放到工作区中\r\n强制推送\r\n增加远程仓库\r\n联系我\r\n\r\n 展示帮助信息\r\n`sh\r\ngit help -g\r\n`\r\n\r\n回到远程仓库的状态\r\n抛弃本地仓库的所有版本(commit)，回到远程仓库的状态。\r\n`sh\r\ngit fetch --all && git reset --hard origin/master\r\n`\r\n\r\n 重设第一个commit\r\n也就是把所有的改动都重新放回工作区，并清空所有的commit，这样就可以重新提交第一个commit了\r\n`sh\r\ngit update-ref -d HEAD\r\n`\r\n\r\n展示工作区和暂存区的不同\r\n输出工作区和暂存区的different(不同)。\r\n`sh\r\ngit diff\r\n`\r\n\r\n还可以展示本地仓库中任意两个commit之间的文件变动：\r\n`sh\r\ngit diff commit-id commit-id\r\n`\r\n\r\n 展示暂存区和最近版本的不同\r\n输出暂存区和本地最近的版本(commit)的different(不同)。\r\n`sh\r\ngit diff --cached\r\n`\r\n\r\n展示暂存区、工作区和最近版本的不同\r\n输出工作区、暂存区 和本地最近的版本(commit)的different(不同)。\r\n`sh\r\ngit diff HEAD\r\n`\r\n\r\n 快速切换分支\r\n`sh\r\ngit checkout -\r\n`\r\n\r\n删除已经合并到master的分支\r\n`sh\r\ngit branch --merged master | grep -v '^\\*\\|  master' | xargs -n 1 git branch -d\r\n`\r\n\r\n 展示所有的分支关联的远程仓库\r\n`sh\r\ngit branch -vv\r\n`\r\n\r\n关联远程分支\r\n关联之后，git branch -vv就可以展示关联的远程分支名了，同时推送到远程仓库直接：git push，不需要指定远程仓库了。\r\n`sh\r\ngit branch -u origin/mybranch\r\n`\r\n\r\n或者在push时加上-u参数\r\n`sh\r\ngit push origin/mybranch -u\r\n`\r\n\r\n 删除本地分支\r\n`sh\r\ngit branch -d local-branchname\r\n`\r\n\r\n删除远程分支\r\n`sh\r\ngit push origin --delete remote-branchname\r\n`\r\n\r\n或者\r\n`sh\r\ngit push origin :remote-branchname\r\n`\r\n\r\n 查看标签\r\n`\r\ngit tag\r\n`\r\n\r\n展示当前分支的最近的tag\r\n`sh\r\ngit describe --tags --abbrev=0\r\n`\r\n\r\n本地创建标签\r\n`sh\r\ngit tag version-number\r\n`\r\n\r\n默认tag是打在最近的一次commit上，如果需要指定commit打tag：\r\n`sh\r\n$ git tag -a version-number -m \"v1.0 发布(描述)\" commit-id\r\n`\r\n\r\n 推送标签到远程仓库\r\n首先要保证本地创建好了标签才可以推送标签到远程仓库：\r\n`sh\r\ngit push origin local-version-number\r\n`\r\n\r\n一次性推送所有标签，同步到远程仓库：\r\n`\r\ngit push origin --tags\r\n`\r\n\r\n删除本地标签\r\n`sh\r\ngit tag -d tag-name\r\n`\r\n\r\n 删除远程标签\r\n删除远程标签需要先删除本地标签，再执行下面的命令\r\n`sh\r\ngit push origin :refs/tags/tag-name\r\n`\r\n\r\n放弃工作区的修改\r\n`sh\r\ngit checkout file-name\r\n`\r\n\r\n放弃所有修改：\r\n`sh\r\ngit checkout .\r\n`\r\n\r\n 回到某一个commit的状态，并重新增添一个commit\r\n`sh\r\ngit revert commit-id\r\n`\r\n\r\n回到某个commit的状态，并删除后面的commit\r\n和revert的区别：reset命令会抹去某个commit id之后的所有commit\r\n`sh\r\ngit reset commit-id\r\n`\r\n\r\n 修改上一个commit的描述\r\n`sh\r\ngit commit --amend\r\n`\r\n\r\n查看commit历史\r\n`sh\r\ngit log\r\n`\r\n\r\n 查看某段代码是谁写的\r\nblame的意思为‘责怪’，你懂的。\r\n`sh\r\ngit blame file-name\r\n`\r\n\r\n显示本地执行过git命令\r\n就像shell的history一样\r\n`\r\ngit reflog\r\n`\r\n\r\n 修改作者名\r\n`sh\r\ngit commit --amend --author='Author Name email@address.com'\r\n`\r\n\r\n修改远程仓库的url\r\n`sh\r\ngit remote set-url origin URL\r\n`\r\n\r\n 列出所有远程仓库\r\n`sh\r\ngit remote\r\n`\r\n\r\n列出本地和远程分支\r\n-a参数相当于：all\r\n`sh\r\ngit branch -a\r\n`\r\n\r\n 列出远程分支\r\n-r参数相当于：remote\r\n`sh\r\ngit branch -r\r\n`\r\n\r\n查看两个星期内的改动\r\n`sh\r\ngit whatchanged --since='2 weeks ago'\r\n`\r\n\r\n 把A分支的某一个commit，放到B分支上\r\n这个过程需要cherry-pick命令，参考\r\n`sh\r\ngit checkout branch-name && git cherry-pick commit-id\r\n`\r\n\r\n给git命令起别名\r\n简化命令\r\n\r\n`sh\r\ngit config --global alias.handle command\r\n\r\n比如：git status 改成 git st，这样可以简化命令\r\n\r\ngit config --global alias.st status\r\n`\r\n\r\n 存储当前的修改，但不用提交commit\r\n详解可以参考廖雪峰老师的git教程\r\n`sh\r\ngit stash\r\n`\r\n\r\n保存当前状态，包括untracked的文件\r\nuntracked文件：新建的文件\r\n`sh\r\ngit stash -u\r\n`\r\n\r\n 展示所有stashes\r\n`sh\r\ngit stash list\r\n`\r\n\r\n回到某个stash的状态\r\n`sh\r\ngit stash apply stash@{n}\r\n`\r\n\r\n 回到最后一个stash的状态，并删除这个stash\r\n`sh\r\ngit stash pop\r\n`\r\n\r\n删除所有的stash\r\n`sh\r\ngit stash clear\r\n`\r\n\r\n 从stash中拿出某个文件的修改\r\n`sh\r\ngit checkout stash@{n} -- file-path\r\n`\r\n\r\n展示所有tracked的文件\r\n`sh\r\ngit ls-files -t\r\n`\r\n\r\n 展示所有untracked的文件\r\n`sh\r\ngit ls-files --others\r\n`\r\n\r\n展示所有忽略的文件\r\n`sh\r\ngit ls-files --others -i --exclude-standard\r\n`\r\n\r\n 强制删除untracked的文件\r\n可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的untracked文件。clean命令，注意两点：\r\nclean后，删除的文件无法找回\r\n不会影响tracked的文件的改动，只会删除untracked的文件\r\n\r\n`sh\r\ngit clean file-name -f\r\n`\r\n\r\n强制删除untracked的目录\r\n可以用来删除新建的目录，注意:这个命令也可以用来删除untracked的文件。详情见上一条\r\n\r\n`sh\r\ngit clean directory-name -df\r\n`\r\n\r\n 重命名分支\r\n`sh\r\ngit branch -m new-branch-name\r\n`\r\n\r\n展示简化的commit历史\r\n`sh\r\ngit log --pretty=oneline --graph --decorate --all\r\n`\r\n\r\n 把某一个分支到导出成一个文件\r\n`sh\r\ngit bundle create file branch-name\r\n`\r\n\r\n从包中导入分支\r\n新建一个分支，分支内容就是上面git bundle create命令导出的内容\r\n`sh\r\ngit clone repo.bundle repo-dir -b branch-name\r\n`\r\n\r\n 执行rebase之前自动stash\r\n`sh\r\ngit rebase --autostash\r\n`\r\n\r\n从远程仓库根据ID，拉下某一状态，到本地分支\r\n`sh\r\ngit fetch origin pull/id/head:branch-name\r\n`\r\n\r\n 详细展示一行中的修改\r\n`sh\r\ngit diff --word-diff\r\n`\r\n\r\n清除gitignore文件中记录的文件\r\n`sh\r\ngit clean -X -f\r\n`\r\n\r\n 展示所有alias和configs\r\n`sh\r\ngit config --list\r\n`\r\n\r\n展示忽略的文件\r\n`sh\r\ngit status --ignored\r\n`\r\n\r\n commit历史中显示Branch1有的，但是Branch2没有commit\r\n`sh\r\ngit log Branch1 ^Branch2\r\n`\r\n\r\n在commit log中显示GPG签名\r\n`sh\r\ngit log --show-signature\r\n`\r\n\r\n 删除全局设置\r\n`sh\r\ngit config --global --unset entry-name\r\n`\r\n\r\n新建并切换到新分支上，同时这个分支没有任何commit\r\n相当于保存修改，但是重写commit历史\r\n`sh\r\ngit checkout --orphan branch-name\r\n`\r\n\r\n 展示任意分支某一文件的内容\r\n`sh\r\ngit show branch-name:file-name\r\n`\r\n\r\nclone下来指定的单一分支\r\n`sh\r\ngit clone -b branch-name --single-branch https://github.com/user/repo.git\r\n`\r\n\r\n 创建并切换到该分支\r\n`sh\r\ngit checkout -b branch-name\r\n`\r\n\r\n忽略文件的权限变化\r\n不再将文件的权限变化视作改动\r\n`sh\r\ngit config core.fileMode false\r\n`\r\n\r\n 展示本地所有的分支的commit\r\n最新的放在最上面\r\n\r\n`sh\r\ngit for-each-ref --sort=-committerdate --format='%(refname:short)' refs/heads/\r\n`\r\n\r\n在commit log中查找相关内容\r\n通过grep查找，given-text：所需要查找的字段\r\n\r\n`sh\r\ngit log --all --grep='given-text'\r\n`\r\n\r\n 把暂存区的指定file放到工作区中\r\n`sh\r\ngit reset file-name\r\n`\r\n\r\n强制推送\r\n`sh\r\ngit push -f remote-name branch-name\r\n`\r\n\r\n 增加远程仓库\r\n`sh\r\ngit remote add origin remote-url\r\n`\r\n\r\n\r\n联系我\r\n博客园：削微寒\r\n邮箱：a href=\"mailto:595666367@qq.com\"发邮件给我/a\r\n或者直接提Pr，Issues\r\n\r\n⬆ 返回顶部",
        "tags": [
            "git"
        ]
    },
    {
        "uri": "//hugo/post/linux/git",
        "title": "git基础命令",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: git\r\n\r\n== git\r\n\r\n=== 命令\r\n==== 远程分支\r\n. 查看远程分支\r\n+\r\n```\r\n$ git remote -v\r\norigin  git@git.oschina.net:dishui/local_b2b.git (fetch)\r\norigin  git@git.oschina.net:dishui/local_b2b.git (push)\r\n```\r\n\r\n. 添加远程分支\r\n+\r\n```\r\ngit remote add origin git@git.oschina.net:dishui/local_b2b.git\r\n```\r\n\r\n. push 本地分支到远程分支(如果没有,会自动创建)\r\n+\r\n```\r\ngit push origin bigdata #bigdata 分支名称\r\n```\r\n\r\n. **设置远程分支**\r\n+\r\n```\r\ngit remote set-url origin git@github.com:dishuiGit/SublimeNote.git\r\n```\r\n\r\n. 添加\r\n+\r\n```\r\ngit add .\t\t#添加\r\ngit reset .\t\t#撤销添加\r\n```\r\n\r\n. 更新\r\n```\r\ngit pull origin master\r\n```\r\n\r\n\r\n=== 本地目录(存在文件),上传到码云\r\n\r\n```\r\n# cd \r\ngit init .\r\nvi .gitignore # 设置不需要提交的文件\r\ngit add . && git commit -m \"msg\"\r\ngit branch --set-upstream-to=origin/ master # 本地分支与远程分支关联\r\ngit pull\r\ngit push\r\n```\r\n\r\n==== 综合使用\r\n. 查看是否有文件需要提交\r\n```\r\ngit status | awk -F ':' '{print $2}'| awk '!a[$0]++' | wc -l\r\n```\r\n\r\n\r\nRef ::\r\n\t[[python-git|http://gitpython.readthedocs.io/en/stable/]]\r\n\r\n==== Q & A\r\n\r\n. error: src refspec bigdata does not match any.\r\n+\r\n[source,]\r\n----\r\n[root@localhost dockerfiles]# git push origin bigdata\r\nerror: src refspec bigdata does not match any.\r\nerror: 无法推送一些引用到 'git@git.oschina.net:dishui/dockerfiles.git'\r\n----\r\n解决::\r\n+\r\n[source,]\r\n----\r\ngit push origin master:bigdata\r\n----\r\n",
        "tags": [
            "git"
        ]
    },
    {
        "uri": "//hugo/post/linux/httpd",
        "title": "Apache httpd 服务器",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Httpd\r\n\r\n=== 配置\r\n```bash\r\n# vim /etc/selinux/config\r\n# 修改\r\nSELINUX=disabled\r\n```\r\n\r\n```conf\r\n\r\n\tDocumentRoot /var/www/html/\r\n    Alias /test/ \"/home/tmp/\"\r\n    \r\n        AddHandler cgi-script .cgi\r\n        Options +Indexes +ExecCGI\r\n        DirectoryIndex index.cgi\r\n        AllowOverride Limit FileInfo Indexes\r\n        Order deny,allow\r\n        Allow from all\r\n    \r\n\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/httpdconf",
        "title": "httpd 配置文件",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\nhttpd.conf\r\n\r\n打开httpd配置文件\r\n`bash\r\n//首先备份一下\r\n/etc/httpd/conf/httpd.conf\r\n`\r\n\r\napache 显示文件树\r\n`vim\r\n httpd.conf\r\nDirectory \"/var/www/icons\"\r\n    Options Indexes MultiViews\r\n    #这个地方是控制是否在浏览器上显示树状目录,把Indexes MultiViews改成MultiViews就不能树状显示目录了。\r\n    AllowOverride None\r\n    Order allow,deny\r\n    Allow from all\r\n/Directory\r\n`\r\n\r\n配置虚拟主机\r\n`xml\r\nServerName  210.14.137.119\r\nVirtualHost *:7080\r\n    ServerName 210.14.137.119\r\n    DocumentRoot /var/www/html/\r\n    Directory /var/www/html/\r\n         AddHandler cgi-script .cgi\r\n         Options +Indexes +ExecCGI\r\n         DirectoryIndex index.cgi\r\n         AllowOverride Limit FileInfo Indexes\r\n         Order deny,allow\r\n         Allow from all\r\n    /Directory\r\n    Alias /rpm \"/usr/local/src/rpm\"\r\n    Directory /usr/local/src/rpm\r\n        Options Indexes FollowSymLinks MultiViews\r\n        AllowOverride None\r\n        Order allow,deny\r\n        allow from all\r\n    /Directory\r\n/VirtualHost\r\n`",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/jenkins",
        "title": "jenkins 构建工具",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Jenkins\r\n\r\n=== 增量构建\r\n\r\n==== 配置\r\n1 ::\r\n[[/src/img/2016-11-18-02.png]]\r\n2 ::\r\n[[/src/img/2016-11-18-03.png]]\r\n3 ::\r\n[[/src/img/2016-11-18-04.png]]\r\n4 ::\r\n[[/src/img/2016-11-18-05.png]]\r\n5 ::\r\n[[/src/img/2016-11-18-01.png]]\r\n==== 脚本\r\n```bash\r\n#!/bin/bash\r\n\r\nsource /etc/profile\r\n\r\nbase=\"/root/.jenkins/workspace/mailiqing-increment\"\r\n\r\n#更新文件列表\r\nupdate_list=\"$base/update.txt\"\r\n\r\n#日期\r\ndate=$(date +%Y-%m-%d)\r\n#增量打包文件\r\ntar_file=\"$base/path/app-path$date.tar.gz\"\r\n#本地svn仓库地址\r\nsvn_repo_url=\"$base/app\"\r\n#编译后的class文件路径\r\npath=\"$svn_repo_url/WebRoot/WEB-INF/classes\"\r\nwebroot=\"$svn_repo_url/WebRoot\"\r\n\r\nremote_cmd=\"nohup sh /home/core/opt/src/scripts/unpack.sh >/dev/null 2>&1\"\r\nremote_cmd_no_reboot=\"nohup sh /home/core/opt/src/scripts/unpack-no-reboot.sh >/dev/null 2>&1\"\r\n\r\n\r\nfunction exar() {\r\n    #awk -F'.' '{if($NF ~ \"java\"){print $0}}' $1 | xargs -I t getLs t\r\n    while read LINE\r\n    do\r\n    \t# 获取目录\r\n        local t_dir=`echo $LINE | awk -F'.' '{if($NF == \"class\"){print $0}}' | xargs -I t dirname t`\r\n        # 获取内部类\r\n        ls $t_dir | awk '{print $1}' | awk -F'.' '{if($1 ~ /\\$/){print dir\"/\"$1\".class\"}}' dir=\"$t_dir\" >> $webroot/filelist1\r\n    done < $1\r\n}\r\n\r\n# 清空\r\nif [ -d \"$svn_repo_url/build\" ];then\r\n    cd $svn_repo_url &&\\\r\n    rm -rf build &&\\\r\n    cd $path &&\\\r\n    rm -rf *\r\nfi\r\n\r\ncd $svn_repo_url &&\\\r\n#本地版与最新版的差异\r\nsvn diff --summarize -r $revision_start:$revision_end * | awk '{if($1 != \"D\"){print $2}}' | awk -F '.' '{if($NF ~ \"jsp|js|java|xml|css|properties|png|jpg|html|jar|ftl\"){print $0}}' > $update_list\r\ncat $update_list\r\n#判断 是否有更新\r\nif [ -s $update_list ];then\r\n    # svn 更新\r\n    svn update -r HEAD * &&\\\r\n    #记录版本号\r\n    #svn info WebRoot | awk -F':' '{if($1 == \"Revision\"){gsub(/ /,\"\",$2);print $2}}' > $revision &&\\\r\n    # ant 编译\r\n    ant -f ./build.xml &&\\\r\n    cat $update_list | awk '{gsub(\"WebRoot/\",webroot);gsub(\"^src/\",path);gsub(\"^conf/\",path);gsub(\".java\",\".class\");print $0}' path=\"$path/\" webroot=\"$webroot/\" | awk -F 'WebRoot/' '{print $2}' > $webroot/filelist\r\n    #\r\n    if [ -s $webroot/filelist ];then\r\n\r\n        cd $webroot &&\\\r\n    \texar $webroot/filelist &&\\\r\n    \tcat $webroot/filelist1 >> $webroot/filelist &&\\\r\n        #cat $webroot/filelist &&\\\r\n\t\t#增量打包\r\n        awk '!a[$0]++' filelist| xargs tar -czf $tar_file &&\\\r\n        rm -f filelist filelist1 &&\\\r\n        cd $path &&\\\r\n        rm -rf * &&\\\r\n        cd $svn_repo_url &&\\\r\n        rm -rf build &&\\\r\n        tar -tPvf $tar_file | awk '{print $6}' &&\\\r\n        echo \"增量更新文件打包OK!路径:$tar_file\" &&\\\r\n        scp -P 2222 $tar_file core@$scp_ip:~/opt/path &&\\\r\n        echo \"增量包copy到$scp_ip成功\" &&\\\r\n        if [ $restart = true ];then\r\n        \techo \"重启Tomcat\"\r\n        \tssh -t -p 2222 core@$scp_ip $remote_cmd\r\n        else\r\n        \tssh -t -p 2222 core@$scp_ip $remote_cmd_no_reboot\r\n        fi\r\n        echo \"$scp_ip增量包解压成功\"\r\n    else\r\n        echo \"增量打包文件列表为空!\"\r\n    fi\r\nelse\r\n    echo \"没有最新的文件了!\"\r\nfi\r\n```\r\n\r\n== **Ant**\r\n\r\n. [[ant打包参考|http://www.cnblogs.com/hoojo/p/ant_increment_svn_diff_diffSummarize.html]]\r\n\r\n\r\n\r\n== `Svn` 增量更新\r\n\r\n. 增量更新\r\n```awk\r\nsvn diff --summarize -r HEAD * | awk '{print $2}' | awk '!a[$0]++' |\r\n```\r\n. 脚本\r\n```bash:/linux/scripts/jenkins.sh```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/ji_chu_she_zhi",
        "title": "CentOS基础设置",
        "content": "\r\n!-- toc --\r\nLinux基础设置\r\n Linux主机名设置\r\n\r\n`bash\r\n主机名设置\r\n[root@localhost ~] vim /etc/sysconfig/network\r\nNETWORKING=yes\r\nHOSTNAME=Web-01\r\n`\r\n\r\n添加多张网卡\r\n\r\n`bash\r\neth1变成eth0\r\nvim /etc/udev/rules.d/70-persistent-net.rules\r\n\r\n编辑eth0 IP地址\r\nvim /etc/sysconfig/network-scripts/ifcfg-eth0\r\n`\r\n\r\n Virtual Box 网卡MAC地址\r\n\r\nCentOS-1\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:3F:48:85       HostOnly    ipaddr    192.168.137.101\r\n  eth1    08:00:27:e1:36:70       Nat         ipaddr    10.0.2.101\r\n  `\r\nCentOS-2\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:A2:B9:68       HostOnly    ipaddr    192.168.137.102\r\n  `\r\nCentOS-3\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:16:DB:38       HostOnly    ipaddr    192.168.137.103\r\n  `\r\nCentOS-4\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:4C:AA:E5       HostOnly    ipaddr    192.168.137.104\r\n  `\r\nCentOS-Web-01\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:60:BC:F8       HostOnly    ipaddr    192.168.137.107\r\n  eth1    08:00:27:92:53:06       Nat         ipaddr    10.0.2.107\r\n  `\r\nCentOS-Web-02\r\n  MAC:\r\n  `\r\n  eth0    08:00:27:60:BC:F9       HostOnly    ipaddr    192.168.137.108\r\n  eth1    08:00:27:09:2F:95       Nat         ipaddr    10.0.2.108\r\n  `\r\n\r\n\r\n\r\nLinux网络\r\n\r\n`\r\nifconfig [ethX]\r\n    -a: 显示所有接口的配置住处\r\n\r\nifconfig ethX IP/MASK [up|down]\r\n    配置的地址立即生效，但重启网络服务或主机，都会失效；\r\n `\r\n网络服务：\r\nRHEL5:  /etc/init.d/network {start|stop|restart|status}\r\nRHEL6: /etc/init.d/NetworkManager {start|stop|restart|status}\r\n\r\n 网关：\r\n`\r\nroute\r\n    add: 添加\r\n        -host: 主机路由\r\n        -net：网络路由\r\n            -net 0.0.0.0\r\n    route add -net|-host DEST gw NEXTHOP\r\n    route add default gw NEXTHOP\r\n\r\ndel：删除\r\n    -host\r\n    -net\r\n\r\n    route del -net 10.0.0.0/8\r\n    route del -net 0.0.0.0\r\n    route del default\r\n\r\n    所做出的改动重启网络服务或主机后失效；\r\n\r\n查看：\r\n    route -n: 以数字方式显示各主机或端口等相关信息\r\n`\r\n\r\n\r\n网络配置文件：\r\n/etc/sysconfig/network\r\n\r\n 网络接口配置文件：\r\n`\r\n/etc/sysconfig/network-scripts/ifcfg-INTERFACE_NAME\r\nDEVICE=: 关联的设备名称，要与文件名的后半部“INTERFACE_NAME”保持一致;\r\nBOOTPROTO={static|none|dhcp|bootp}: 引导协议；要使用静态地址，使用static或none；dhcp表示使用DHCP服务器获取地址；\r\nIPADDR=: IP地址\r\nNETMASK=：子网掩码\r\nGATEWAY=：设定默认网关；\r\nONBOOT=：开机时是否自动激活此网络接口；\r\nHWADDR=： 硬件地址，要与硬件中的地址保持一致；可省；\r\nUSERCTL={yes|no}: 是否允许普通用户控制此接口；\r\nPEERDNS={yes|no}: 是否在BOOTPROTO为dhcp时接受由DHCP服务器指定的DNS地址；\r\n\r\n不会立即生效，但重启网络服务或主机都会生效；\r\n`\r\n\r\n路由：\r\n`\r\n/etc/sysconfig/network-scripts/route-ethX\r\n添加格式一：\r\nDEST    via     NEXTHOP\r\n\r\n添加格式二：\r\nADDRESS0=\r\nNETMASK0=\r\nGATEWAY0=\r\n\r\n\r\nDNS服务器指定方法只有一种：\r\n/etc/resolv.conf\r\nnameserver DNSIP1\r\nnameserver DNSIP2\r\n\r\n指定本地解析：\r\n/etc/hosts\r\n主机IP    主机名 主机别名\r\n172.16.0.1      www.magedu.com      www\r\n\r\nDNS--/etc/hosts--DNS\r\n\r\n\r\n配置主机名：\r\nhostname HOSTNAME\r\n\r\n立即生效，但不是永久有效；\r\n\r\n/etc/sysconfig/network\r\nHOSTNAME=\r\nRHEL5：\r\n    setup: system-config-network-tui\r\n    system-config-network-gui\r\n\r\nifconfig, 老旧\r\n\r\niproute2\r\n    ip\r\n        link: 网络接口属性\r\n        addr: 协议地址\r\n        route: 路由\r\n\r\n    link\r\n        show\r\n            ip -s link show\r\n        set\r\n            ip link set DEV {up|down}\r\n\r\n    addr\r\n        add\r\n            ip addr add ADDRESS dev DEV\r\n        del\r\n            ip addr del ADDRESS dev DEV\r\n        show\r\n            ip addr show dev DEV to PREFIX\r\n        flush\r\n            ip addr flush dev DEV to PREFIX\r\n\r\n\r\n一块网卡可以使用多个地址：\r\n网络设备可以别名：\r\neth0\r\n    ethX:X, eth0:0, eth0:1, ...\r\n\r\n配置方法：\r\n    ifconfig ethX:X IP/NETMASK\r\n\r\n    /etc/sysconfig/network-scripts/ifcfg-ethX:X\r\n    DEVICE=ethX:X\r\n\r\n    非主要地址不能使用DHCP动态获取;\r\n`\r\nip\r\n`\r\neth1, 添加个地址192.168.100.1\r\n\r\nip addr add 192.168.100.1/24 dev eth1 label eth1:0\r\nprimary address\r\nsecondary adress\r\n\r\n192.168.100.6\r\n\r\n10.0.1.0/24, 192.168.100.6\r\n`\r\n路由:\r\n`\r\nroute add -net 10.0.1.0/24 gw 192.168.100.6\r\n\r\nip route add to 10.0.1.0/24 dev eth1 via 192.168.100.6\r\n    add, change, show, flush, replace\r\n\r\nifconfig eth0, 172.16.200.33/16\r\n\r\nifconfig eth0:0 172.16.200.33/16\r\n\r\nTCP:\r\n    URG\r\n    SYN\r\n    ACK\r\n    PSH\r\n    RST\r\n    FIN\r\n`\r\n\r\n\r\n Linux: openSSH\r\n`\r\n\tC/S\r\n\t\t服务器端：sshd, 配置文件/etc/ssh/sshd_config\r\n\t\t客户端：ssh, 配置文件/etc/ssh/ssh_config\r\n\t\t\tssh-keygen: 密钥生成器\r\n\t\t\tssh-copy-id: 将公钥传输至远程服务器\r\n\t\t\tscp：跨主机安全复制工具\r\n\r\n\r\n\t\tssh:\r\n\t\t\tssh USERNAME@HOST\r\n\t\t\tssh -l USERNAME HOST\r\n\t\t\tssh USERNAME@HOST 'COMMAND'\r\n\r\n\t\tscp:\r\n\t\t\tscp SRC DEST\r\n\t\t\t\t-r\r\n\t\t\t\t-a\r\n\t\t\tscp USERNAME@HOST:/path/to/somefile  /path/to/local\r\n\t\t\tscp /path/to/local  USERNAME@HOST:/path/to/somewhere\r\n\r\n\t\tssh-keygen\r\n\t\t\t-t rsa\r\n\t\t\t\t~/.ssh/id_rsa\r\n\t\t\t\t~/.ssh/id_rsa.pub\r\n\t\t\t-f /path/to/KEY_FILE\r\n\t\t\t-P '': 指定加密私钥的密码\r\n\r\n\r\n\t\t公钥追加保存到远程主机某用户的家目录下的.ssh/authorizedkeys文件或.ssh/authorizedkeys2文件中\r\n\r\n\t\tssh-copy-id\r\n\t\t\t-i ~/.ssh/id_rsa.pub\r\n\t\t\tssh-copy-id -i ~/.ssh/id_rsa.pub USERNAME@HOST\r\n`\r\n\r\nCentOS 6.7升级内核(源码编译)\r\n下载源码包\r\n网址：http://www.kernel.org\r\n在首页可以看到有 stable，longterm 等版本，一般选择下载 longterm 版本，因为此版本为提供长期支持的稳定版，因此我选择 3.10.96.\r\n`bash\r\n wget https://cdn.kernel.org/pub/linux/kernel/v3.x/linux-3.10.96.tar.xz\r\n`\r\n解压并进入目录\r\n`bash\r\ntar -xf linux-3.12.16.tar.xz\r\n cd linux-3.12.16\r\n`\r\n更新当前系统\r\n`bash\r\nyum update\r\n yum upgrade\r\n`\r\n安装编译内核所需要的软件包\r\n`bash\r\nyum groupinstall \"Development Tools\"\r\n yum install ncurses-devel\r\nyum install qt-devel\r\n yum install hmaccalc zlib-devel binutils-devel elfutils-libelf-devel\r\n`\r\n查看当前系统内核\r\n`bash\r\nuname -r\r\n2.6.32-358.11.1.el6.x86_64\r\n`\r\n将当前系统内核的配置文件拷贝到当前目录\r\n`bash\r\n cp /boot/config-2.6.32-358.11.1.el6.x86_64 .config\r\n`\r\n使用当前系统内核配置，并自动接受每个新增选项的默认设置\r\n`bash\r\nsh -c 'yes \"\" | make oldconfig'\r\n`\r\n编译\r\n`bash\r\n make bzImage\r\nmake modules\r\n make modules_install\r\n`\r\n安装\r\n`bash\r\nmake install\r\n如果出现少量 ERROR 可以忽略\r\n`\r\n10. 修改 Grub 引导顺序\r\n`bash\r\n vim /etc/grub.conf\r\n一般新内核的位置都在第一个，所以设置 default=0.\r\n`\r\n11. 重启后查看内核版本号\r\n`bash\r\nuname -r\r\n3.12.16\r\n`\r\n\r\n12. 如果失败，转至第 5 步，在重新开始之前，需要清理上次编译的现场\r\n`bash\r\n make mrproper\r\n`\r\n\r\nCentOS 6.7升级内核(rpm安装)\r\n在yum的ELRepo源中，有mainline（3.13.1）、long-term（3.10.28）这2个内核版本，考虑到long-term更稳定，会长期更新，所以选择这个版本。\r\n\r\n安装ELRepo到CentOS-6.7中\r\n`bash\r\nrpm -ivh http://www.elrepo.org/elrepo-release-6-5.el6.elrepo.noarch.rpm\r\n`\r\n安装kernel-lt（lt=long-term）\r\n`bash\r\nyum --enablerepo=elrepo-kernel install kernel-lt -y\r\n`\r\n或者安装kernel-ml（ml=mainline）\r\n`bash\r\nyum --enablerepo=elrepo-kernel install kernel-ml -y\r\n`\r\n编辑grub.conf文件，修改Grub引导顺序\r\n`\r\nvim /etc/grub.conf\r\n修改default=0\r\n`",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/linux-sed",
        "title": "sed",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== sed\r\nTIP: sed [options] 'AddressCommand' file ...\r\n\r\n删除行::\r\n`sed '1,2d' ~/tmp/fstab`\r\n行中包含d删除::\r\n`sed '/e/d' ~/tmp/fstab`\r\n第1行开始,往后删除2行::\r\n``sed '1,+2d' ~/tmp/fstab`\r\n\r\n查找行首空白,替换为空::\r\n`history | sed 's#^[[:space:]]*##g'`\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/linux-tip",
        "title": "linux tip",
        "content": "\r\n1、nohup命令及其输出文件 \r\n\r\n　　nohup命令：如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思( n ohang up)。 \r\n\r\n---\r\n该命令的一般形式为：nohup command & \r\n\r\n`bash\r\nls xxx 1out.txt 2&1 \r\nnohup /mnt/Nand3/H2000G /dev/null 2&1 & \r\n`\r\n对于& 1 更准确的说应该是文件描述符 1,而1 一般代表的就是STDOUTFILENO,实际上这个操作就是一个dup2(2)调用.他标准输出到allresult,然后复制标准输出到文件描述符2(STDERR_FILENO),其后果就是文件描述符1和2指向同一个文件表项,也可以说错误的输出被合并了.其中0 表示键盘输入 1表示屏幕输出2表示错误输出.把标准出错重定向到标准输出,然后扔到/DEV/NULL下面去。通俗的说，就是把所有标准输出和标准出错都扔到垃圾桶里面。 \r\n\r\n command out.file 2&1 &\r\n\r\ncommand out.file是将command的输出重定向到out.file文件，即输出内容不打印到屏幕上，而是输出到out.file文件中。 2&1 是将标准出错重定向到标准输出，这里的标准输出已经重定向到了out.file文件，即将标准出错也输出到out.file文件中。最后一个& ， 是让该命令在后台执行。 \r\n\r\n\r\n试想21代表什么，2与`结合代表错误重定向，而1则代表错误重定向到一个文件1`，而不代表标准输出； \r\n换成2&1，&与1结合就代表标准输出了，就变成错误重定向到标准输出. \r\n\r\n你可以用 \r\n    ls 21测试一下，不会报没有2文件的错误，但会输出一个空的文件1； \r\n    ls xxx 21测试，没有xxx这个文件的错误输出到了1中； \r\n    ls xxx 2&1测试，不会生成1这个文件了，不过错误跑到标准输出了； \r\n    ls xxx out.txt 2&1, 实际上可换成 ls xxx 1out.txt 2&1；重定向符号默认是1,错误和输出都传到out.txt了。 \r\n       为何2&1要写在后面？ \r\n\r\n\r\ncommand  file 2&1\r\n\r\n首先是command  file将标准输出重定向到file中， 2&1 是标准错误拷贝了标准输出的行为，也就是同样被重定向到file中，最终结果就是标准输出和错误都被重定向到file中。\r\n\r\n command 2&1 file \r\n\r\n2&1 标准错误拷贝了标准输出的行为，但此时标准输出还是在终端。file 后输出才被重定向到file，但标准错误仍然保持在终端。 \r\n\r\n用strace可以看到：\r\ncommand  file 2&1 \r\n这个命令中实现重定向的关键系统调用序列是： \r\nopen(file) == 3 \r\ndup2(3,1) \r\ndup2(1,2) \r\n\r\ncommand 2&1 file \r\n这个命令中实现重定向的关键系统调用序列是： \r\ndup2(1,2) \r\nopen(file) == 3 \r\ndup2(3,1) \r\n\r\n为什么要用 /dev/null 2&1\r\n\r\n这样的写法.这条命令的意思是将标准输出和错误输出全部重定向到/dev/null中,也就是将产生的所有信息丢弃.\r\n\r\n下面我就为大家来说一下, command  file 2file   与command  file 2&1 有什么不同的地方. \r\n\r\n    首先~command  file 2file 的意思是将命令所产生的标准输出信息,和错误的输出信息送到file 中.\r\n    command    file 2file 这样的写法,stdout和stderr都直接送到file中, file会被打开两次,这样stdout和stderr会互相覆盖,这样写相当使用了FD1和FD2两个同时去抢占file 的管道. \r\n    而command file 2&1 这条命令就将stdout直接送向file, stderr 继承了FD1管道后,再被送往file,此时,file 只被打开了一次,也只使用了一个管道FD1,它包括了stdout和stderr的内容. \r\n    从IO效率上,前一条命令的效率要比后面一条的命令效率要低,所以在编写shell脚本的时候,较多的时候我们会用command  file 2&1 这样的写法. ",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/log",
        "title": "log",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Log\r\n\r\n== ELK\r\n\r\n下载\r\n\r\n\r\n参考 ::\r\n. http://blog.csdn.net/gaoyingju/article/details/23750563[开源分布式搜索平台ELK(Elasticsearch+Logstash+Kibana)入门学习资源索引]\r\n. http://www.linuxea.com/1204.html[日志实时收集分析-ELK Stack]\r\n\r\n\r\n== Rsyslog\r\n\r\n=== Supervisord发送log日志到Rsyslog\r\n\r\nsupervisor conf ::\r\n+\r\n```\r\n[eventlistener:logging]\r\ncommand = supervisor_logging\r\nevents = PROCESS_LOG\r\n\r\n[program:wuliu]\r\ncommand=/apache-tomcat-7.0.62/bin/catalina.sh run\r\nuser=root\r\nautostart=true\r\nstdout_events_enabled = true\r\nstderr_events_enabled = true\r\n```\r\n\r\nrsyslog server ::\r\n+\r\n```\r\n$ModLoad imudp\r\n$UDPServerRun 514 #开启UDP\r\n\r\n$ModLoad imtcp\r\n$InputTCPServerRun 514 #开启TCP\r\n\r\n#$template TraditionalFormat,\"%programname% %syslogtag% %msg%\\n\"\r\n#$template TraditionalFormat,\"%programname% %hostname% %msg%\\n\"\r\n$template TraditionalFormat,\"%fromhost-ip% %msg%\\n\"\r\n\r\n\r\n$ActionFileDefaultTemplate TraditionalFormat # 默认日志格式模板与client端发送的日志格式模板保持一致\r\n\r\n$template Remote, \"~/log/%fromhost-ip%.log\"\r\n\r\n:fromhost-ip, !isequal, \"127.0.0.1\" ?Remote\r\n\r\n#:syslogtag, isequal, \"wuliu-log\" ?Remote\r\n#:syslogtag, isequal, \"wuliu-error-log\" ?Remote-error\r\n```\r\n\r\n\r\n参考 ::\r\n. http://www.cnblogs.com/hanyifeng/p/5463338.html[Linux 之 rsyslog 系统日志转发]\r\n. http://www.biglog.cn/tomcat-syslog/[Tomcat日志配置远程Syslog采集]\r\n\r\n== Logrotate 日志分割\r\n\r\n参考 ::\r\n. http://blog.sina.com.cn/s/blog_5f54f0be0101h6y8.html[Logrotate 日志分割]\r\n\r\n=== Dockerfile\r\n\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/docker/dockerfile/rsyslog/Dockerfile[]\r\n----\r\n\r\n=== 脚本\r\n\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/docker/dockerfile/rsyslog/docker-entrypoint.sh[]\r\n----\r\n\r\n=== 配置文件\r\n\r\n> vi /etc/logrotate.d/wuliu\r\n\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/docker/dockerfile/rsyslog/wuliu[]\r\n----\r\n\r\n=== 定时器\r\n\r\n```\r\n# 每天晚上 10点30 执行一次\r\n30 22 * * * . /usr/sbin/logrotate /etc/logrotate.conf\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mariadb",
        "title": "mariadb",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n=== Mariadb\r\n\r\n==== CentOS 7 (64-bit)\r\n```bash session\r\n# vi /etc/yum.repos.d/\r\n[mariadb]\r\nname = MariaDB\r\nbaseurl = http://yum.mariadb.org/10.0/centos7-amd64\r\ngpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\r\ngpgcheck=1\r\n```\r\n\r\n[cols=\">,^\"]\r\n|===\r\n|参考脚本目录\r\n| `/usr/share/mysql`\r\n\r\n|全局配置文件 (Global)\r\n| `/etc/my.cnf`\r\n|===\r\n\r\n==== 配置文件\r\n```cnf\r\n[client]\r\n#password       = your_password\r\nport            = 3306\r\nsocket          = /var/lib/mysql/mysql.sock\r\n\r\n[mysqld]\r\nport            = 3306\r\nuser            = mysql\r\ndatadir         = /var/data/db/mariadb\r\nsocket          = /var/lib/mysql/mysql.sock\r\nskip-external-locking\r\nkey_buffer_size = 384M\r\nmax_allowed_packet = 1M\r\ntable_open_cache = 512\r\nsort_buffer_size = 2M\r\nread_buffer_size = 2M\r\nread_rnd_buffer_size = 8M\r\nmyisam_sort_buffer_size = 64M\r\nthread_cache_size = 8\r\nquery_cache_size = 32M\r\n# Try number of CPU's*2 for thread_concurrency\r\nthread_concurrency = 8\r\n\r\nlog-bin=mysql-bin\r\n\r\n[mysqldump]\r\nquick\r\nmax_allowed_packet = 16M\r\n\r\n[mysql]\r\nno-auto-rehash\r\n# Remove the next comment character if you are not familiar with SQL\r\n#safe-updates\r\n\r\n[myisamchk]\r\nkey_buffer_size = 256M\r\nsort_buffer_size = 256M\r\nread_buffer = 2M\r\nwrite_buffer = 2M\r\n\r\n[mysqlhotcopy]\r\ninteractive-timeout\r\n```\r\n\r\n==== 初始化数据\r\n```bash\r\nmysql_install_db --defaults-file=/etc/my.cnf --datadir=/var/data/db/mariadb/ --user=mysql\r\n```\r\n\r\n==== 启动 `Mariadb`\r\n```bash\r\nln -s /usr/share/mysql/mysql.server /usr/bin/mysql.server\r\n\r\n```\r\n```bash session\r\n# mysql.server start\r\nStarting MySQL. SUCCESS!\r\n```\r\n\r\n==== 设置ROOT密码\r\n```bash\r\nmysqladmin -u root password \"123456\"\r\n```\r\n\r\n==== 登陆mysql\r\n```bash\r\nmysql -uroot -p\r\n```\r\n\r\n==== 授权root远程登录\r\n```bash\r\n#root可从任何IP登陆，注意修改密码:'123456'\r\nmysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;\r\n\r\n#root可从指定IP登陆，注意修改密码:'123456'、IP:'192.168.1.188'\r\nmysql>GRANT ALL PRIVILEGES ON *.* TO 'root'@'192.168.1.188' IDENTIFIED BY '888888' WITH GRANT OPTION;\r\nmysql>FLUSH PRIVILEGES;\r\n```\r\n\r\n参考 ::\r\n. [[下载|https://downloads.mariadb.org/]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/maxscale",
        "title": "maxsclae",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= Maxscale\r\n\r\n== 1.4\r\n\r\n=== 登录 MaxScale 管理器\r\n```bash\r\nmaxadmin --user=admin --password=mariadb\r\n```\r\n\r\n```bash session\r\nMaxScale> list servers\r\nServers.\r\n-------------------+-----------------+-------+-------------+--------------------\r\nServer             | Address         | Port  | Connections | Status\r\n-------------------+-----------------+-------+-------------+--------------------\r\nserver1            | mysql-m         |  3306 |           0 | Master, Running\r\nserver2            | mysql-s1        |  3306 |           0 | Slave, Running\r\nserver3            | mysql-s2        |  3306 |           0 | Slave, Running\r\n-------------------+-----------------+-------+-------------+--------------------\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mongod",
        "title": "Mongod",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= Mongod\r\n\r\n\r\n== Deploy a Replica Set\r\n=== 安装 & 下载\r\n. 3.2.8 +\r\n[[mongodb-linux-x86_64-rhel70-3.2.8.tgz|https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-rhel70-3.2.8.tgz]]\r\n. 创建软链接\r\n```bash\r\nln -s /mongod/bin/mongod /usr/bin/mongod\r\nln -s /mongod/bin/mongo /usr/bin/mongo\r\n```\r\n. 创建数据存储路径\r\n```bash\r\nmkdir -p /srv/mongodb/rs0-0 /srv/mongodb/rs0-1 /srv/mongodb/rs0-2\r\n```\r\n\r\n. 配置文件\r\n[arabic]\r\n.. rs1.conf\r\n```yaml\r\nsystemLog:\r\n  destination: file\r\n  path: \"/var/log/mongodb/rs1.log\" #日志路径\r\n  logAppend: true\r\nstorage:\r\n  dbPath: \"/srv/mongodb/rs0-0\"\r\nprocessManagement: #后台运行\r\n  fork: true\r\nnet:\r\n  bindIp: 0.0.0.0 #绑定所有网卡\r\n  port: 27017\r\nreplication:\r\n   oplogSizeMB: 128\r\n   replSetName: \"rs0\"\r\n```\r\n\r\n.. rs2.conf\r\n```yaml\r\nsystemLog:\r\n  destination: file\r\n  path: \"/var/log/mongodb/rs2.log\" #日志路径\r\n  logAppend: true\r\nstorage:\r\n  dbPath: \"/srv/mongodb/rs0-1\"\r\nprocessManagement: #后台运行\r\n  fork: true\r\nnet:\r\n  bindIp: 0.0.0.0 #绑定所有网卡\r\n  port: 27018\r\nreplication:\r\n   oplogSizeMB: 128\r\n   replSetName: \"rs0\"\r\n```\r\n\r\n.. rs3.conf\r\n```yaml\r\nsystemLog:\r\n  destination: file\r\n  path: \"/var/log/mongodb/rs3.log\" #日志路径\r\n  logAppend: true\r\nstorage:\r\n  dbPath: \"/srv/mongodb/rs0-2\"\r\nprocessManagement: #后台运行\r\n  fork: true\r\nnet:\r\n  bindIp: 0.0.0.0 #绑定所有网卡\r\n  port: 27019\r\nreplication:\r\n   oplogSizeMB: 128\r\n   replSetName: \"rs0\"\r\n```\r\n\r\n. 连接 `mongod`\r\n```bash\r\nmongo --port 27017\r\n```\r\n\r\n. 初始化\r\n```conf\r\n# hostname 替换为主机名\r\nrsconf = {\r\n           _id: \"rs0\",\r\n           members: [\r\n                      {\r\n                       _id: 0,\r\n                       host: \":27017\"\r\n                      }\r\n                    ]\r\n         }\r\n```\r\n```bash\r\nrs.initiate( rsconf )\r\n```\r\n. 查看副本配置\r\n```bash\r\nrs.conf()\r\n```\r\n. 添加副本\r\n```bash\r\n# hostname 替换为主机名\r\nrs.add(\":27018\")\r\nrs.add(\":27019\")\r\n```\r\n\r\n== 参考\r\n. [[MongoDB的Docker化实践 |http://dockone.io/article/1536]]\r\n. [[Deploy a Replica Set for Testing and Development | https://docs.mongodb.com/manual/tutorial/deploy-replica-set-for-testing/]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mycat",
        "title": "mycat",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n###  `mysql`一主一从\r\n1. `master-cnf`\r\n```bash\r\n[mysqld]\r\n# 表明不区分大小写\r\nlower_case_table_names=1\r\n# 字符编码\r\ncharacter_set_server=utf8\r\nmax_allowed_packet=4M\r\n# 开启二进制日志\r\nlog-bin=master-bin\r\nlog-bin-index=master-bin.index\r\n# 1-2^32 必须唯一\r\nserver-id=1\r\ninnodb_file_per_table=1\r\n```\r\n\r\n+ `slave-cnf`\r\n```bash\r\n[mysqld]\r\nlower_case_table_names=1\r\ncharacter_set_server=utf8\r\nmax_allowed_packet=4M\r\n# 开启中继日志\r\nrelay-log=relay-log\r\nrelay-log-index=relay-log.index\r\n# 1-2^32 必须唯一\r\nserver-id=11\r\ninnodb_file_per_table=1\r\n```\r\n\r\n### centos-java dockerfile\r\n```\r\nFROM       centos\r\nMAINTAINER dishui_git@126.com\r\nENV TZ \"Asia/Shanghai\"\r\nADD jdk-7u79-linux-x64.rpm  /tmp\r\nRUN  mkdir -p /usr/java  && \\\r\n         rpm -ivh jdk-7u79-linux-x64.rpm --prefix=/usr/java/  && \\\r\n         echo \"export JAVA_HOME=/usr/java/jdk1.7.0_79\" >> /etc/profile  && \\\r\n         echo \"export CLASSPATH=.:%JAVA_HOME%/lib/dt.jar:%JAVA_HOME%/lib/tools.jar\" >> /etc/profile  && \\\r\n         echo \"export PATH=$PATH:$JAVA_HOME/bin\" >> /etc/profile  && \\\r\n         source /etc/profile  && \\\r\n         rm -f /tmp/jdk-7u79-linux-x64.rpm\r\nEXPOSE 22\r\n```\r\n\r\n\r\n### Mycat\r\n1. 安装文件,压缩包\r\n```\r\ntar -zxvf /tmp/Mycat-server-1.3.0.3-release-20150527095523-linux.tar.gz -C /usr/local/\r\n```\r\n\r\n+ 读写分离\r\n```xml\r\n\r\n    select user()\r\n    \r\n    \r\n    \r\n        \r\n    \r\n\r\n```\r\n+ `schema.xml`\r\n```xml\r\n\r\n\r\n\r\n        \r\n        \r\n           \r\n        \r\n                select user()\r\n                \r\n                \r\n                        \r\n                        \r\n                \r\n        \r\n\r\n```\r\n\r\n\r\n=== 主从数据库 授权\r\n```bash\r\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123' WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mycat/mycat-command-line",
        "title": "mycat命令",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== MyCAT  命令行监控\r\n\r\n用mysql命令行连接 ::\r\nmysql –utest –ptest –P9066 -h172.17.0.4 +\r\nmysql –utest –ptest –P8066 -h172.17.0.4 (jdbc连接)\r\n\r\n\r\n`SHOW @@HELP` ::\r\n可显示所有相关管理命令\r\n\r\n`SHOW @@BACKEND` ::\r\n显示后端物理库连接信息，包括当前连接数，端口\r\n```bash\r\nmysql> show @@backend\\G;\r\n*************************** 1. row ***************************\r\n processor: Processor0\r\n        id: 12\r\n   mysqlId: 5\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34828\r\n    net_in: 3389\r\n   net_out: 861\r\n      life: 2661\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 2. row ***************************\r\n processor: Processor0\r\n        id: 6\r\n   mysqlId: 10\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39710\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 3. row ***************************\r\n processor: Processor0\r\n        id: 13\r\n   mysqlId: 6\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34830\r\n    net_in: 3389\r\n   net_out: 861\r\n      life: 2661\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 4. row ***************************\r\n processor: Processor0\r\n        id: 5\r\n   mysqlId: 6\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39702\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 5. row ***************************\r\n processor: Processor0\r\n        id: 18\r\n   mysqlId: 11\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34842\r\n    net_in: 1439\r\n   net_out: 393\r\n      life: 1461\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 6. row ***************************\r\n processor: Processor0\r\n        id: 7\r\n   mysqlId: 11\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39712\r\n    net_in: 2043\r\n   net_out: 537\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 7. row ***************************\r\n processor: Processor0\r\n        id: 8\r\n   mysqlId: 7\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39704\r\n    net_in: 2043\r\n   net_out: 537\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 8. row ***************************\r\n processor: Processor0\r\n        id: 17\r\n   mysqlId: 10\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34840\r\n    net_in: 1739\r\n   net_out: 465\r\n      life: 1761\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 9. row ***************************\r\n processor: Processor0\r\n        id: 2\r\n   mysqlId: 4\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39698\r\n    net_in: 2043\r\n   net_out: 537\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 10. row ***************************\r\n processor: Processor0\r\n        id: 9\r\n   mysqlId: 3\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39696\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 11. row ***************************\r\n processor: Processor0\r\n        id: 10\r\n   mysqlId: 12\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39714\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 12. row ***************************\r\n processor: Processor0\r\n        id: 16\r\n   mysqlId: 9\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34838\r\n    net_in: 2114\r\n   net_out: 555\r\n      life: 2061\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 13. row ***************************\r\n processor: Processor0\r\n        id: 15\r\n   mysqlId: 8\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34836\r\n    net_in: 2639\r\n   net_out: 681\r\n      life: 2361\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 14. row ***************************\r\n processor: Processor0\r\n        id: 1\r\n   mysqlId: 9\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39708\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 15. row ***************************\r\n processor: Processor0\r\n        id: 14\r\n   mysqlId: 7\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34834\r\n    net_in: 2639\r\n   net_out: 681\r\n      life: 2361\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 16. row ***************************\r\n processor: Processor0\r\n        id: 3\r\n   mysqlId: 8\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39706\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 17. row ***************************\r\n processor: Processor0\r\n        id: 11\r\n   mysqlId: 4\r\n      host: mysqlSlave\r\n      port: 3306\r\n    l_port: 34826\r\n    net_in: 3389\r\n   net_out: 861\r\n      life: 2661\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n*************************** 18. row ***************************\r\n processor: Processor0\r\n        id: 4\r\n   mysqlId: 5\r\n      host: mysqlMaster\r\n      port: 3306\r\n    l_port: 39700\r\n    net_in: 2118\r\n   net_out: 555\r\n      life: 2662\r\n    closed: false\r\n  borrowed: false\r\nSEND_QUEUE: 0\r\n    schema: testdb\r\n   charset: latin1:8\r\n   txlevel: 0\r\nautocommit: true\r\n```\r\n`SHOW @@CONNECTION` ::\r\n显示当前前端客户端连接情况，已经网络流量信息\r\n```bash\r\nmysql> SHOW @@CONNECTION\\G;\r\n*************************** 1. row ***************************\r\n    PROCESSOR: Processor0\r\n           ID: 6\r\n         HOST: 172.18.0.3\r\n         PORT: 9066\r\n   LOCAL_PORT: 41268\r\n         USER: test\r\n       SCHEMA: NULL\r\n      CHARSET: utf8:33\r\n       NET_IN: 1075\r\n      NET_OUT: 20439\r\nALIVE_TIME(S): 1453\r\n  RECV_BUFFER: 4096\r\n   SEND_QUEUE: 0\r\n      txlevel:\r\n   autocommit:\r\n*************************** 2. row ***************************\r\n    PROCESSOR: Processor0\r\n           ID: 7\r\n         HOST: 172.18.0.4\r\n         PORT: 9066\r\n   LOCAL_PORT: 42998\r\n         USER: test\r\n       SCHEMA: NULL\r\n      CHARSET: utf8:33\r\n       NET_IN: 247\r\n      NET_OUT: 7395\r\nALIVE_TIME(S): 878\r\n  RECV_BUFFER: 4096\r\n   SEND_QUEUE: 0\r\n      txlevel:\r\n   autocommit:\r\n```\r\n`SHOW @@THREADPOOL` ::\r\n当前线程池的执行情况，是否有积压(active_count)以及task_queue_size，后者为积压的待处理的SQL，若积压数目一直保值，则说明后端物理连接可能不够或者SQL执行比较缓慢。\r\n```bash\r\n*************************** 1. row ***************************\r\n           NAME: Timer\r\n      POOL_SIZE: 2\r\n   ACTIVE_COUNT: 0\r\nTASK_QUEUE_SIZE: 0\r\n COMPLETED_TASK: 8972\r\n     TOTAL_TASK: 8972\r\n*************************** 2. row ***************************\r\n           NAME: BusinessExecutor\r\n      POOL_SIZE: 4\r\n   ACTIVE_COUNT: 0\r\nTASK_QUEUE_SIZE: 0\r\n COMPLETED_TASK: 26\r\n     TOTAL_TASK: 26\r\n```\r\n\r\n\r\n`SHOW @@HEARTBEAT` ::\r\n当前后端物理库的心跳检测情况,RS_CODE为1表示心跳正常\r\n```bash\r\nmysql> SHOW @@HEARTBEAT\\G;\r\n*************************** 1. row ***************************\r\n            NAME: mysqlMaster\r\n            TYPE: mysql\r\n            HOST: mysqlMaster\r\n            PORT: 3306\r\n         RS_CODE: 1\r\n           RETRY: 0\r\n          STATUS: idle\r\n         TIMEOUT: 0\r\n    EXECUTE_TIME: 0,0,1\r\nLAST_ACTIVE_TIME: 2016-07-22 07:28:54\r\n            STOP: false\r\n*************************** 2. row ***************************\r\n            NAME: mysqlSlave\r\n            TYPE: mysql\r\n            HOST: mysqlSlave\r\n            PORT: 3306\r\n         RS_CODE: 1\r\n           RETRY: 0\r\n          STATUS: idle\r\n         TIMEOUT: 0\r\n    EXECUTE_TIME: 0,0,0\r\nLAST_ACTIVE_TIME: 2016-07-22 07:28:54\r\n            STOP: false\r\n```\r\n\r\n`SHOW @@DATANODE` ::\r\n显示数据节点的访问情况，包括每个数据节点当前活动连接数(active),空闲连接数（idle）以及最大连接数(maxCon) size，EXECUTE参数表示从该节点获取连接的次数，次数越多，说明访问该节点越多。\r\n```bash\r\nmysql> SHOW @@DATANODE\\G;\r\n*************************** 1. row ***************************\r\n         NAME: dn1\r\n      DATHOST: localhost1/testdb\r\n        INDEX: 0\r\n         TYPE: mysql\r\n       ACTIVE: 0\r\n         IDLE: 10\r\n         SIZE: 1000\r\n      EXECUTE: 445\r\n   TOTAL_TIME: 0\r\n     MAX_TIME: 0\r\n      MAX_SQL: 0\r\nRECOVERY_TIME: -1\r\n```\r\n\r\n`SHOW @@PROCESSOR` ::\r\n显示当前processors的处理情况，包括每个processor的IO吞吐量(NET_IN/NET_OUT)、IO队列的积压情况(R_QUEY/W_QUEUE)，Socket Buffer Pool的使用情况BU_PERCENT为已使用的百分比、BU_WARNS为Socket Buffer Pool不够时，临时创新的新的BUFFER的次数，若百分比经常超过90%并且BU_WARNS>0，则表明BUFFER不够，需要增大，参见性能调优手册。\r\n```bash\r\nmysql> SHOW @@PROCESSOR\\G;\r\n*************************** 1. row ***************************\r\n        NAME: Processor0\r\n      NET_IN: 84569\r\n     NET_OUT: 60967\r\n REACT_COUNT: 0\r\n     R_QUEUE: 0\r\n     W_QUEUE: 0\r\n FREE_BUFFER: 974\r\nTOTAL_BUFFER: 1000\r\n  BU_PERCENT: 2\r\n    BU_WARNS: 875\r\n    FC_COUNT: 2\r\n    BC_COUNT: 18\r\n```\r\n\r\n\r\n`SHOW @@DATASOURCE` ::\r\n显示数据源的信息，是否是读写节点等。\r\n```bash\r\nmysql> SHOW @@DATASOURCE\\G;\r\n*************************** 1. row ***************************\r\nDATANODE: dn1\r\n    NAME: mysqlMaster\r\n    TYPE: mysql\r\n    HOST: mysqlMaster\r\n    PORT: 3306\r\n     W/R: W\r\n  ACTIVE: 0\r\n    IDLE: 10\r\n    SIZE: 1000\r\n EXECUTE: 451\r\n*************************** 2. row ***************************\r\nDATANODE: dn1\r\n    NAME: mysqlSlave\r\n    TYPE: mysql\r\n    HOST: mysqlSlave\r\n    PORT: 3306\r\n     W/R: R\r\n  ACTIVE: 0\r\n    IDLE: 8\r\n    SIZE: 1000\r\n EXECUTE: 457\r\n```\r\n\r\n`SHOW @@CACHE` ::\r\n显示缓存的使用情况，对于性能监控和调优很有价值\r\nMAX为缓存的最大值（记录个数），CUR为当前已经在缓存中的数量，ACESS为缓存读次数，HIT为缓存命中次数，PUT 为写缓存次数，LAST_XX为最后操作时间戳，比较重要的几个参数：CUR：若CUR接近MAX，而PUT大于MAX很多，则表明MAX需要增大，HIT/ACCESS为缓存命中率，这个值越高越好。\r\n```bash\r\nmysql> SHOW @@CACHE\\G;\r\n*************************** 1. row ***************************\r\n      CACHE: SQLRouteCache\r\n        MAX: 10000\r\n        CUR: 0\r\n     ACCESS: 9\r\n        HIT: 0\r\n        PUT: 0\r\nLAST_ACCESS: 1469171194202\r\n   LAST_PUT: 0\r\n*************************** 2. row ***************************\r\n      CACHE: TableID2DataNodeCache.TESTDB_ORDERS\r\n        MAX: 50000\r\n        CUR: 0\r\n     ACCESS: 0\r\n        HIT: 0\r\n        PUT: 0\r\nLAST_ACCESS: 0\r\n   LAST_PUT: 0\r\n*************************** 3. row ***************************\r\n      CACHE: ER_SQL2PARENTID\r\n        MAX: 1000\r\n        CUR: 0\r\n     ACCESS: 0\r\n        HIT: 0\r\n        PUT: 0\r\nLAST_ACCESS: 0\r\n   LAST_PUT: 0\r\n```\r\n\r\n==== `KILL @@CONNECTION`\r\n杀掉客户端的连接，参数为连接的ID值，通过show @@connection，可以展示当前连接到MyCAT的所有客户端进程，若某个进程异常，则可以通过该命令杀掉连接，如 KILL @@CONNECTION 1;\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mysql-master-slave",
        "title": "mysql主从配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Mysql 主从复制\r\n\r\n== Mysql 主从复制\r\n=== master\r\n\r\n. 启用二进制日志\r\n+\r\n```\r\nlog-bin = master-bin\r\nlog-bin-index = master-bin.index\r\n```\r\n\r\n. 选择一个唯一 `server-id`\r\n+\r\n```\r\nserver-id = {0-2^32}\r\n```\r\n\r\n. 创建具有复制权限的用户\r\n+\r\n```\r\nREPLICATION SLAVE\r\nREPLICATION CLIENT\r\n```\r\n\r\n=== `slave`\r\n. 启动中继日志\r\n+\r\n```conf\r\nrelay-log = relay-log\r\n```\r\n\r\n. 选择一个唯一的 `server-id`\r\n+\r\n```conf\r\nserver-id = {0-2^32}  # 不能和主服务器相同\r\n```\r\n\r\n. 连接至主服务器,并开始复制数据\r\n+\r\n```sql\r\nmysql> CHANGE MASTER TO MASTER_HOST='',MASTER_PORT='',MASTER_LOG_FILE='',MASTER_LOG_POS='',MASTER_USER='',MASTER_PASSWORD='';\r\nmysql> START SLAVE; 启动从服务器线程\r\n```\r\n复制线程 ::\r\nmaster: dump\r\nslave: IO_Thread, SQL_Thread\r\n\r\n\r\n=== 安装 `mysql` (CentOS-7 x64)  *master*\r\n\r\n. mysql-master\r\n+\r\nasciinema::slave[\"/src/records/mysql-master.json\",\"95\",\"25\",\"2\"]\r\n\r\n. 安装 `mysql` 源\r\n+\r\n```bash\r\ncurl -L http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm > mysql.rpm\r\nyum localinstall mysql.rpm -y\r\n```\r\n. 指定安装 `mysql5.6`\r\n+\r\n```\r\nvim /etc/yum.repos.d/mysql-community.repo\r\n##\r\n# Enable to use MySQL 5.6\r\n[mysql56-community]\r\nname=MySQL 5.6 Community Server\r\nbaseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/6/$basearch/\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n##\r\n# diable to use MySQL 5.7\r\n[mysql57-community]\r\nname=MySQL 5.7 Community Server\r\nbaseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/6/$basearch/\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql\r\n```\r\n+\r\n```\r\nyum install mysql-community-server -y\r\n# mysql 数据存储目录\r\nmkdir -p /mysql/data\r\n# 更改权限\r\nchown -hR mysql:mysql /mysql\r\n```\r\n--\r\n\r\n配置文件 ::\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/master-my.cnf[]\r\n----\r\n// ```cnf:/linux/conf/master-my.cnf```\r\n\r\n初始化数据 ::\r\n+\r\n```\r\nmysql_install_db --datadir=/mysql/data --user=mysql --defaults-file=/etc/my.cnf\r\n```\r\n\r\n授权 `REPLICATION` 远程登录 ::\r\n+\r\n```\r\nmysql> GRANT REPLICATION SLAVE ON *.* TO 'repluser'@'172.17.%.%' IDENTIFIED BY 'replpass';\r\nmysql>FLUSH PRIVILEGES;\r\n```\r\n\r\n`master` 查看 `BINLOG` ::\r\n+\r\n```\r\nmysql> SHOW MASTER STATUS;\r\nmysql> SHOW BINLOG EVENTS IN 'master-bin.000001';\r\n```\r\n\r\n--\r\n\r\n\r\n=== 安装 `mysql` (CentOS-7 x64) Slave\r\n\r\n. mysql-slave\r\n+\r\nasciinema::slave[\"/src/records/mysql-slave.json\",\"95\",\"25\",\"2\"]\r\n\r\n--\r\n\r\n配置文件 ::\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/slave-my.cnf[]\r\n----\r\n\r\n\r\n连接 `mysql-master` ::\r\n+\r\n```\r\nmysql> CHANGE MASTER TO MASTER_HOST='172.17.0.2',MASTER_USER='repluser',MASTER_PASSWORD='replpass',MASTER_LOG_FILE='master-bin.000006',MASTER_LOG_POS=410;\r\n```\r\n\r\n`slave` 查看 ::\r\n+\r\n```\r\nmysql> SHOW SLAVE STATUS\\G;\r\n*************************** 1. row ***************************\r\n+\r\n               Slave_IO_State:\r\n                  Master_Host: 172.17.0.2\r\n                  Master_User: repluser\r\n                  Master_Port: 3306\r\n                Connect_Retry: 60\r\n              Master_Log_File: master-bin.000006\r\n          Read_Master_Log_Pos: 410\r\n               Relay_Log_File: relay-log.000001\r\n                Relay_Log_Pos: 4\r\n        Relay_Master_Log_File: master-bin.000006\r\n             Slave_IO_Running: No\r\n            Slave_SQL_Running: No\r\n              Replicate_Do_DB:\r\n          Replicate_Ignore_DB:\r\n           Replicate_Do_Table:\r\n       Replicate_Ignore_Table:\r\n      Replicate_Wild_Do_Table:\r\n  Replicate_Wild_Ignore_Table:\r\n                   Last_Errno: 0\r\n                   Last_Error:\r\n                 Skip_Counter: 0\r\n          Exec_Master_Log_Pos: 410\r\n              Relay_Log_Space: 120\r\n              Until_Condition: None\r\n               Until_Log_File:\r\n                Until_Log_Pos: 0\r\n           Master_SSL_Allowed: No\r\n           Master_SSL_CA_File:\r\n           Master_SSL_CA_Path:\r\n              Master_SSL_Cert:\r\n            Master_SSL_Cipher:\r\n               Master_SSL_Key:\r\n        Seconds_Behind_Master: NULL\r\nMaster_SSL_Verify_Server_Cert: No\r\n                Last_IO_Errno: 0\r\n                Last_IO_Error:\r\n               Last_SQL_Errno: 0\r\n               Last_SQL_Error:\r\n  Replicate_Ignore_Server_Ids:\r\n             Master_Server_Id: 0\r\n                  Master_UUID:\r\n             Master_Info_File: /mysql/data/master.info\r\n                    SQL_Delay: 0\r\n          SQL_Remaining_Delay: NULL\r\n      Slave_SQL_Running_State:\r\n           Master_Retry_Count: 86400\r\n                  Master_Bind:\r\n      Last_IO_Error_Timestamp:\r\n     Last_SQL_Error_Timestamp:\r\n               Master_SSL_Crl:\r\n           Master_SSL_Crlpath:\r\n           Retrieved_Gtid_Set:\r\n            Executed_Gtid_Set:\r\n                Auto_Position: 0\r\n1 row in set (0.00 sec)\r\n```\r\n\r\n启动 `slave` ::\r\n+\r\n```\r\nmysql> START SLAVE;\r\n```\r\n\r\n`slave` 再次查看 ::\r\n+\r\n```\r\nmysql> SHOW SLAVE STATUS\\G;\r\n*************************** 1. row ***************************\r\n+\r\n               Slave_IO_State: Waiting for master to send event\r\n                  Master_Host: 172.17.0.2\r\n                  Master_User: repluser\r\n                  Master_Port: 3306\r\n                Connect_Retry: 60\r\n              Master_Log_File: master-bin.000006\r\n          Read_Master_Log_Pos: 410\r\n               Relay_Log_File: relay-log.000003\r\n                Relay_Log_Pos: 284\r\n        Relay_Master_Log_File: master-bin.000006\r\n             Slave_IO_Running: Yes\r\n            Slave_SQL_Running: Yes\r\n              Replicate_Do_DB:\r\n          Replicate_Ignore_DB:\r\n           Replicate_Do_Table:\r\n       Replicate_Ignore_Table:\r\n      Replicate_Wild_Do_Table:\r\n  Replicate_Wild_Ignore_Table:\r\n                   Last_Errno: 0\r\n                   Last_Error:\r\n                 Skip_Counter: 0\r\n          Exec_Master_Log_Pos: 410\r\n              Relay_Log_Space: 571\r\n              Until_Condition: None\r\n               Until_Log_File:\r\n                Until_Log_Pos: 0\r\n           Master_SSL_Allowed: No\r\n           Master_SSL_CA_File:\r\n           Master_SSL_CA_Path:\r\n              Master_SSL_Cert:\r\n            Master_SSL_Cipher:\r\n               Master_SSL_Key:\r\n        Seconds_Behind_Master: 0\r\nMaster_SSL_Verify_Server_Cert: No\r\n                Last_IO_Errno: 0\r\n                Last_IO_Error:\r\n               Last_SQL_Errno: 0\r\n               Last_SQL_Error:\r\n  Replicate_Ignore_Server_Ids:\r\n             Master_Server_Id: 1\r\n                  Master_UUID: 35f7ec52-4c03-11e6-8286-0242ac110002\r\n             Master_Info_File: /mysql/data/master.info\r\n                    SQL_Delay: 0\r\n          SQL_Remaining_Delay: NULL\r\n      Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to update it\r\n           Master_Retry_Count: 86400\r\n                  Master_Bind:\r\n      Last_IO_Error_Timestamp:\r\n     Last_SQL_Error_Timestamp:\r\n               Master_SSL_Crl:\r\n           Master_SSL_Crlpath:\r\n           Retrieved_Gtid_Set:\r\n            Executed_Gtid_Set:\r\n                Auto_Position: 0\r\n1 row in set (0.00 sec)\r\n\r\nERROR:\r\nNo query specified\r\n```\r\n\r\n查看 `mysql` 环境变量 ::\r\n+\r\n```\r\nmysql> SHOW GLOBAL VARIABLES LIKE 'read_only';\r\nmysql> SHOW GLOBAL VARIABLES LIKE '%slave%';\r\n```\r\n+\r\n[qanda]\r\nread-only = YES ::\r\n\t在从服务器上设定,但对具有SUPER权限的用户不生效\r\nsync-binlog = ON ::\r\n\t在主服务器上设定,用于事务安全\r\n\r\n测试主从复制 ::\r\n+\r\n```\r\nCREATE DATABASE `test`;\r\nCREATE TABLE `test` (\r\n  `aa` bigint(20) NOT NULL,\r\n  `bb` blob,\r\n  PRIMARY KEY (`aa`)\r\n) ENGINE=MyISAM DEFAULT CHARSET=gbk\r\n```\r\n\r\nQ&A ::\r\n[qanda]\r\nLast_IO_Error: Fatal error: The slave I/O thread stops because master and slave have equal MySQL server UUIDs; these UUIDs must be different for replication to work.?::\r\n  ```bash\r\n  cd /mysql/data\r\n  rm -f auto.cnf\r\n  ```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mysql",
        "title": "Mysql 常用操作",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Mysql 查询\r\n=== MySQL拼音首字母查询\r\n英文26个字母中除了i,u,v三个字母不能成为汉语拼音的首字母外，其它的字母都可以。如果我们需要查询结果集中以A或者其它字母开头的汉语，实现方法如下\r\n```sql\r\nSELECT\r\n  *\r\nFROM\r\n  mlq_shop_info\r\nWHERE CONV(\r\n    HEX(LEFT(CONVERT(shop_name USING gbk), 1)),\r\n    16,\r\n    10\r\n  ) BETWEEN 45253\r\n  AND 45760\r\n```\r\n* 参考\r\n|===\r\n|字母|起值|止值\r\n\r\n|A\r\n|45217\r\n|45252\r\n|B\r\n|45253\r\n|45760\r\n|C\r\n|45761\r\n|46317\r\n|D\r\n|46318\r\n|46825\r\n|E\r\n|46826\r\n|47009\r\n|F\r\n|47010\r\n|47296\r\n|G\r\n|47297\r\n|47613\r\n|H\r\n|47614\r\n|48118\r\n|J\r\n|48119\r\n|49061\r\n|K\r\n|49062\r\n|49323\r\n|L\r\n|49324\r\n|49895\r\n|M\r\n|49896\r\n|50370\r\n|N\r\n|50371\r\n|50613\r\n|O\r\n|50614\r\n|50621\r\n|P\r\n|50622\r\n|50905\r\n|Q\r\n|50906\r\n|51386\r\n|R\r\n|51387\r\n|51445\r\n|S\r\n|51446\r\n|52217\r\n|T\r\n|52218\r\n|52697\r\n|W\r\n|52698\r\n|52979\r\n|X\r\n|52980\r\n|53688\r\n|Y\r\n|53689\r\n|54480\r\n|Z\r\n|54481\r\n|55289\r\n|===\r\n\r\n* 批量更新\r\n```sql\r\nUPDATE\r\n  mlq_shop_info\r\nSET\r\n  tag = 'a'\r\nWHERE id IN\r\n  (SELECT\r\n    *\r\n  FROM\r\n    (SELECT\r\n      msi2.id\r\n    FROM\r\n      mlq_shop_info msi2\r\n    WHERE CONV(\r\n        HEX(\r\n          LEFT(\r\n            CONVERT(msi2.shop_name USING gbk),\r\n            1\r\n          )\r\n        ),\r\n        16,\r\n        10\r\n      ) BETWEEN 45253\r\n      AND 45760) AS a)\r\n```\r\n\r\n\r\n== Mysql-table\r\n* __ti_advance_order__\r\n```sql\r\nCREATE TABLE `ti_advance_order` (\r\n  `id` char(15) NOT NULL COMMENT '主键',\r\n  `order_no` char(15) NOT NULL COMMENT '订单号',\r\n  `goods_num` double(10,2) DEFAULT NULL COMMENT '锁货量',\r\n  `advance_type` int(1) DEFAULT NULL COMMENT '预付类型',\r\n  `advance_rate` int(3) DEFAULT NULL COMMENT '预付比例',\r\n  `advance_price` double(10,2) DEFAULT NULL COMMENT '预付金额',\r\n  `in_date` datetime DEFAULT NULL COMMENT '时间',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\r\n```\r\n\r\n* __ti_delivery_order__\r\n```sql\r\nCREATE TABLE `ti_delivery_order` (\r\n  `id` char(15) NOT NULL COMMENT '主键',\r\n  `order_no` char(15) NOT NULL COMMENT '订单号',\r\n  `goods_num` double(10,2) DEFAULT NULL COMMENT '锁货量',\r\n  `goods_name` varchar(100) DEFAULT NULL COMMENT '商品名称',\r\n  `goods_price` double(10,2) DEFAULT NULL COMMENT '商品单价',\r\n  `ship_price` double(10,2) DEFAULT NULL COMMENT '运输单价',\r\n  `tihuo_num` double(10,2) DEFAULT NULL COMMENT '提货数量',\r\n  `jiesuan_num` double(10,2) DEFAULT NULL COMMENT '结算数量',\r\n  `shuohuo_company` varchar(50) DEFAULT NULL COMMENT '收货单位',\r\n  `in_date` datetime DEFAULT NULL COMMENT '时间',\r\n  `material` varchar(100) DEFAULT NULL COMMENT '材料',\r\n  `model` varchar(100) DEFAULT NULL COMMENT '规格',\r\n  `chuku_piz` double(10,2) DEFAULT NULL COMMENT '出库皮重',\r\n  `chuku_maoz` double(10,2) DEFAULT NULL COMMENT '出库毛重',\r\n  `chuku_jingz` double(10,2) DEFAULT NULL COMMENT '出库净重',\r\n  `shouhuo_piz` double(10,2) DEFAULT NULL COMMENT '收货皮重',\r\n  `shouhuo_maoz` double(10,2) DEFAULT NULL COMMENT '收货毛重',\r\n  `shouhuo_jingz` double(10,2) DEFAULT NULL COMMENT '收货净重',\r\n  `shouhuo_person` varchar(20) DEFAULT NULL COMMENT '收货人签字',\r\n  `jingzhong_big` varchar(50) DEFAULT NULL COMMENT '净重大写',\r\n  `shishuo_big` varchar(50) DEFAULT NULL COMMENT '实收大写',\r\n  `fahuo_address` varchar(100) DEFAULT NULL COMMENT '发货地址',\r\n  `shouhuo_address` varchar(100) DEFAULT NULL COMMENT '收货地址',\r\n  `car_number` varchar(20) DEFAULT NULL COMMENT '车号',\r\n  `driver` varchar(10) DEFAULT NULL COMMENT '司机',\r\n  `file_url` varchar(100) DEFAULT NULL COMMENT '附件地址url',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\r\n```\r\n\r\nid, order_no, goods_num_d, goods_name, goods_price_d, ship_price_d, tihuo_num_d, jiesuan_num_d, shuohuo_company, in_date, material, model, chuku_piz_d, chuku_maoz_d, chuku_jingz_d, shouhuo_piz_d, shouhuo_maoz_d, shouhuo_jingz_d, shouhuo_person, jingzhong_big, shishuo_big, fahuo_address, shouhuo_address, car_number, driver, file_url\r\n\r\n\r\n== 复制一条数据\r\n```sql\r\nINSERT INTO app_collection\r\nSELECT\r\n  '20169097OR42Yb8',\r\n  user_id,\r\n  user_name,\r\n  TYPE,\r\n  relation_id,\r\n  title,\r\n  url,\r\n  content,\r\n  in_date\r\nFROM\r\n  app_collection\r\nWHERE id = '20169097OR42Yb6'\r\n```\r\n\r\n== 根据 某一列的值 if else\r\n```sql\r\nSELECT\r\n    mpa.product_id,\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '销售地区'\r\n          THEN IF(INSTR(mpa.attr_value, '-'),tranAddr(mpa.attr_value, '-'),CAST(mpa.attr_value AS CHAR(50)))\r\n          ELSE NULL\r\n        END\r\n      ) sale_region,\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '出库地区'\r\n          THEN IF(INSTR(mpa.attr_value, '-'),tranAddr(mpa.attr_value, '-'),CAST(mpa.attr_value AS CHAR(50)))\r\n          ELSE NULL\r\n        END\r\n      ) repository_region,\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '出库地区'\r\n          THEN IF(INSTR(mpa.attr_value, '-'),tranAddr(mpa.attr_value, '-'),CAST(mpa.attr_value AS CHAR(50)))\r\n          ELSE NULL\r\n        END\r\n      ) repository_region_noa,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '最小起订量'\r\n        THEN mpa.attr_value\r\n        ELSE 0\r\n      END\r\n    ) min_quantity,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '库存量'\r\n        THEN mpa.attr_value\r\n        ELSE 0\r\n      END\r\n    ) stock_quantity,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '单位'\r\n        THEN mpa.attr_value\r\n        ELSE '吨'\r\n      END\r\n    ) unit,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '交货天数'\r\n        THEN mpa.attr_value\r\n        ELSE 7\r\n      END\r\n    ) delivery_day,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '包装类型'\r\n        THEN mpa.attr_value\r\n        ELSE '散装'\r\n      END\r\n    ) package_type\r\n  FROM\r\n    mlq_product_attr mpa\r\n  WHERE mpa.product_id = '201611111012491'\r\n```\r\n\r\n== Mysql 子查询优化\r\n\r\n```\r\nEXPLAIN SELECT *\r\nFROM zh_asphalt_storage zas\r\nINNER JOIN zh_reservoir_area zra\r\nUSING(id)\r\nWHERE zas.Storage_area = zra.reservoir_code\r\n```\r\n\r\n参考 ::\r\n. http://www.111cn.net/database/mysql/95002.htm[Mysql 多表联合查询效率分析及优化]\r\n\r\n\r\n== Issues\r\n\r\n* http://stackoverflow.com/questions/45494/mysql-error-1093-cant-specify-target-table-for-update-in-from-clause[MySQL Error 1093 - Can't specify target table for update in FROM clause]\r\n\r\n* `mlq_goods_filter`\r\n```sql\r\nCREATE TABLE `mlq_goods_filter` (\r\n  `id` char(15) NOT NULL,\r\n  `brand` text COMMENT '品牌',\r\n  `category` text COMMENT '分类',\r\n  `model` text COMMENT '型号',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8\r\n```\r\n\r\n\r\n\r\n\r\n. MySQL proxy：官方不维护了\r\n. MySQL Router：官方维护，比较简单\r\n. MaxScale：插件式，定制灵活，自动检测MySQL master failure\r\n. Amoeba：支持sql过滤，读写分离，sharding，不支持 MySQL Failover\r\n. Cobar：支持分库，不支持分表\r\n. MyCat：基于Cobar的二次开发\r\n. TDDL(Taobao Distributed Data Layer)：阿里自研的基于client模式的读写分离的中间件\r\n\r\n\r\n\r\n== 参考\r\n. [[优化MySQL中的分页 | http://blog.jobbole.com/103197/?utm_source=tuicool&utm_medium=referral]]\r\n. [[mysql 动态行转列|http://www.jb51.net/article/78388.htm]]\r\n. [[双机高可用、负载均衡、MySQL(读写分离、主从自动切换)架构设计 | http://blog.jobbole.com/104367/?utm_source=tuicool&utm_medium=referral]]\r\n. [[MaxScale：实现MySQL读写分离与负载均衡的中间件利器 | http://dbaplus.cn/news-11-627-1.html]]\r\n. [[http://dbaplus.cn/news-11-558-1.html]]\r\n. [[https://github.com/ovaistariq/MHA-helper]]\r\n. [[mysql去除两边字符|http://www.jb51.net/article/39371.htm]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mysql1",
        "title": "mysql基础操作",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== mysql\r\n\r\n=== linux安装mysql设置\r\n. `/usr/bin/mysqladmin -u root password '123'`\r\n    * 设置mysql用户名/密码\r\n. `mysql` 状态/开启/停止\r\n    * `service mysqld status`\r\n    * `service mysqld start`\r\n    * `service mysqld stop`\r\n. 任意主机以用户root和密码mypwd连接到mysql服务器\r\n+\r\n```\r\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123' WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n```\r\n. IP为`192.168.1.102`的主机以用户myuser和密码mypwd连接到mysql服务器\r\n+\r\n```\r\nmysql> GRANT ALL PRIVILEGES ON *.* TO 'myuser'@'192.168.1.102' IDENTIFIED BY 'mypwd' WITH GRANT OPTION;\r\nmysql> flush privileges;\r\n```\r\n\r\n=== Mysql 备份/还原\r\n\r\n. 导出结构不导出数据\r\n+\r\n`mysqldump -d 数据库名 -uroot -p > xxx.sql`\r\n\r\n. 导出数据不导出结构\r\n+\r\n`mysqldump -t 数据库名 -uroot -p > xxx.sql`\r\n\r\n. 导出数据和表结构\r\n+\r\n`mysqldump 数据库名 -uroot -p > xxx.sql`\r\n\r\n. 导出特定表的结构\r\n+\r\n`mysqldump -uroot -p -B数据库名 --table 表名 > xxx.sql`\r\n\r\n. source 还原\r\n+\r\n```\r\nmysql>source d:\\wcnc_db.sql\r\n```\r\n. windows下导入数据库\r\n+\r\n```\r\nmysql -uroot -p111111 -Dmailiqing data.sql\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/mysqlcuo_wu",
        "title": "Mysql错误",
        "content": "\r\nMysql错误\r\n\r\n MySQL Daemon failed to start.\r\n`bash\r\n查看mysql日志\r\nless /var/log/mysqld.log \r\n`\r\nunknown variable 'default-character-set=utf8'\r\n`\r\n用charactersetserver=utf8来取代 default-character-set=utf8\r\n`\r\n\r\n  Cannot load from mysql.proc. The table is probably corrupted\r\n`bash\r\nuse mysql;\r\n\r\nALTER TABLE proc MODIFY COLUMN comment  text CHARACTER SET utf8 COLLATE utf8bin NOT NULL AFTER sqlmode;\r\n`\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/nagios",
        "title": "Nagios",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Nagios\r\n\r\n=== 马哥 Nagios基础和入门配置\r\n安装依赖 ::\r\n```bash\r\nyum grouplist #查看 Development Tools 是否安装\r\nyum -y install httpd php mysql-devel php-mysql\r\n```\r\n\r\n\r\n\r\n. 添加nagios运行所需要的用户和组\r\n```bash\r\ngroupadd nagcmd\r\nuseradd -G nagcmd nagios\r\n```\r\n把apache加入到nagcmd组,以便于在通过web Interface操作nagios时有足够的权限\r\n```bash\r\nusermod -a -G nagcmd apache\r\n```\r\n\r\n. 编译安装nagios\r\n```bash\r\ndate 0710103216 # 0710-月份 1031-时间 16-年\r\n./configure --help #查看帮助\r\n./configure --with-command-group=nagcmd --enable-event-broker\r\nmake all\r\nmake install\r\nmake install-init\r\nmake install-commandmode\r\nmake install-config\r\n```\r\n\r\n为 `email` 指定您想用来接收 `nagios` 警告信息的邮件地址,默认是本机的 `nagios` 用户\r\n```bash\r\nvi /usr/local/nagios/etc/objects/contacts.cfg\r\nemail\t\tnagios@localhost\t\t#这是默认设置\r\n```\r\n\r\n在 `httpd` 的配置文件目录 `conf.d` 中创建 `Nagios` 的 `Web` 程序配置文件\r\n```bash\r\nmake install-webconf\r\n```\r\n\r\n创建一个登录 `nagios web` 程序的用户,这个用户账号在以后通过 `web` 登录 `nagios` 认证时用\r\n```bash\r\nhtpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin\r\n```\r\n\r\n以上过程配置结束后需要重新启动 `httpd`\r\n```bash\r\nsystemctl restart httpd\r\n```\r\n\r\n. 编译安装 `nagios-plugins`\r\n```bash\r\ntar -zxf nagios-plugins-2.1.1.tar.gz\r\ncd nagios-plugins-2.1.1.tar.gz\r\n./configure --with-nagios-user=nagios --with-nagios-group=nagios\r\n\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/nfsjian_1",
        "title": "NFS配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\nNFS配置\r\n\r\n一、 系统环境\r\n\r\n    系统平台：CentOS 6.5\r\n    \r\n    NFS Server IP：192.168.137.101\r\n    \r\n    防火墙已关闭/iptables: Firewall is not running.\r\n二、 安装NFS服务\r\n\r\n查看系统是否已安装NFS(系统默认安装)\r\n`bash\r\n[root@c1 tmp] rpm -qa|grep nfs\r\nnfs-utils-lib-1.1.5-6.el6.i686\r\nnfs4-acl-tools-0.3.3-6.el6.i686\r\nnfs-utils-1.2.3-39.el6.i686\r\n`\r\n    \r\n三、 NFS服务器的配置\r\n\r\nNFS服务器的配置相对比较简单，只需要在相应的配置文件中进行设置，然后启动NFS服务器即可。\r\n\r\nNFS的常用目录\r\n`bash\r\n/etc/exports                     NFS服务的主要配置文件\r\n/usr/sbin/exportfs               NFS服务的管理命令\r\n/usr/sbin/showmount              客户端的查看命令\r\n/var/lib/nfs/etab                记录NFS分享出来的目录的完整权限设定值\r\n/var/lib/nfs/xtab                记录曾经登录过的客户端信息\r\n`\r\n\r\nNFS服务的配置文件为 /etc/exports，这个文件是NFS的主要配置文件，不过系统并没有默认值，所以这个文件不一定会存在，可能要使用vim手动建立，然后在文件里面写入配置内容。\r\n\r\n/etc/exports文件内容格式：\r\n\r\n\r\n    输出目录 [客户端1 选项（访问权限,用户映射,其他）] [客户端2 选项（访问权限,用户映射,其他）]\r\n\r\n\r\na. 输出目录：\r\n\r\n    输出目录是指NFS系统中需要共享给客户机使用的目录；\r\n\r\nb. 客户端：\r\n\r\n客户端是指网络中可以访问这个NFS输出目录的计算机\r\n\r\n客户端常用的指定方式\r\n\r\n    指定ip地址的主机：192.168.0.200\r\n    指定子网中的所有主机：192.168.0.0/24 192.168.0.0/255.255.255.0\r\n    指定域名的主机：david.bsmart.cn\r\n    指定域中的所有主机：*.bsmart.cn\r\n    所有主机：*\r\n\r\nc. 选项：\r\n\r\n选项用来设置输出目录的访问权限、用户映射等。\r\n\r\nNFS主要有3类选项：\r\n\r\n访问权限选项\r\n\r\n    设置输出目录只读：ro\r\n    设置输出目录读写：rw\r\n\r\n用户映射选项\r\n\r\n    all_squash：将远程访问的所有普通用户及所属组都映射为匿名用户或用户组（nfsnobody）；\r\n    noallsquash：与all_squash取反（默认设置）；\r\n    root_squash：将root用户及所属组都映射为匿名用户或用户组（默认设置）；\r\n    norootsquash：与rootsquash取反；\r\n    anonuid=xxx：将远程访问的所有用户都映射为匿名用户，并指定该用户为本地用户（UID=xxx）；\r\n    anongid=xxx：将远程访问的所有用户组都映射为匿名用户组账户，并指定该匿名用户组账户为本地用户组账户（GID=xxx）；\r\n\r\n其它选项\r\n\r\n    secure：限制客户端只能从小于1024的tcp/ip端口连接nfs服务器（默认设置）；\r\n    insecure：允许客户端从大于1024的tcp/ip端口连接服务器；\r\n    sync：将数据同步写入内存缓冲区与磁盘中，效率低，但可以保证数据的一致性；\r\n    async：将数据先保存在内存缓冲区中，必要时才写入磁盘；\r\n    wdelay：检查是否有相关的写操作，如果有则将这些写操作一起执行，这样可以提高效率（默认设置）；\r\n    no_wdelay：若有写操作则立即执行，应与sync配合使用；\r\n    subtree：若输出目录是一个子目录，则nfs服务器将检查其父目录的权限(默认设置)；\r\n    no_subtree：即使输出目录是一个子目录，nfs服务器也不检查其父目录的权限，这样可以提高效率；\r\n\r\n四、 NFS服务器的启动与停止\r\n`bash\r\n #service rpcbind status\r\n #rpcbind (pid  3514) 正在运行...\r\n #PS:默认开机rpcbind开启\r\n \r\n #启动nfs\r\n service nfs start\r\n #查询nfs状态\r\n service nfs status\r\n #关闭nfs\r\n service nfs stop\r\n \r\n #查询nfs自启动状态\r\n chkconfig --list nfs\r\n nfs             0:关闭  1:关闭  2:关闭  3:关闭  4:关闭  5:关闭  6:关闭\r\n #设置nfs服务在系统运行级别3和5自动启动\r\n chkconfig --level 35 nfs on\r\n`\r\n五、实例\r\n将NFS Server 的/tmp 共享给192.168.1.0/24网段，权限读写\r\n    `bash\r\n    vi /etc/exports\r\n    \r\n    /tmp 192.168.1.0/24(rw)\r\n    `\r\n重启nfs服务\r\n    `bash\r\n    service nfs restart\r\n    \r\n    exportfs\r\n    `\r\n服务器端使用showmount命令查询NFS的共享状态 \r\n \r\n `bash\r\n[root@c2 ~] showmount -e      //默认查看自己共享的服务，前提是要DNS能解析自己，不然容易报错\r\nExport list for c1:\r\n/tmp *\r\n `\r\n客户端使用showmount命令查询NFS的共享状态\r\n`bash\r\n[root@c2 ~]# showmount -e 192.168.137.101\r\nExport list for 192.168.137.101:\r\n/tmp *\r\n`\r\n客户端挂载NFS服务器中的共享目录\r\n\r\n    `bash\r\n    # mount NFS服务器IP:共享目录 本地挂载点目录\r\n    [root@c2 ~]# mount 192.168.137.101:/tmp /nfs-mount\r\n    [root@c2 ~]# mount |grep nfs\r\n    \r\n    sunrpc on /var/lib/nfs/rpcpipefs type rpcpipefs (rw)\r\n    nfsd on /proc/fs/nfsd type nfsd (rw)\r\n    192.168.137.101:/tmp on /nfs-mount type nfs (rw,vers=4,addr=192.168.137.101,clientaddr=192.168.137.102)\r\n    \r\n    挂载成功\r\n`\r\n\r\nNFS的共享权限和访问控制\r\n\r\n    客户端出现Permission denied，是因为NFS 服务器端共享的目录本身的写权限没有开放给其他用户，在服务器端打开该权限。 \r\n    `bash\r\n    # chmod 777 -R /tmp\r\n    `\r\n六、启动自动挂载nfs文件系统\r\n\r\n`bash\r\n\r\n1、server:/remote/export /local/directory nfs  options 0 0\r\n 例子\r\n192.168.137.101:/tmp    /nfs-mount              nfs     defaults        0 0\r\n\r\n2、手动挂载命令加入到/etc/rc.local中\r\n    mount 10.0.2.107:/tmp/rpm /tmp/rpm/\r\n`\r\n \r\n七、问题\r\n解决NFS：clnt_create: RPC: Port mapper failure - Unable to receive: errno 113 (No route to host)\r\n\r\n`bash\r\n 关闭防火墙\r\nservice iptables stop\r\n开启不启动防火墙\r\nchkconfig iptables off\r\n`\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n ",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/nginx",
        "title": "Nginx 安装配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\nnginx\r\n\r\n平台为：rhel 6.4/CentOS-6.5 32bit\r\n\r\n 一、安装Nginx：\r\n\r\n1、解决依赖关系\r\n`bash\r\n 方法1\r\nyum groupinstall \"Development Tools\" \"Server Platform Deveopment\"\r\nyum install openssl-devel pcre-devel\r\n\r\n方法2\r\n安装make\r\nyum -y install gcc automake autoconf libtool make\r\n\r\n安装g++\r\nyum -y install gcc gcc-c++\r\n安装pcre\r\nyum install openssl-devel pcre-devel\r\n`\r\n\r\n2、安装\r\n\r\n首先添加用户nginx，实现以之运行nginx服务进程：\r\n`bash\r\n groupadd -r nginx\r\nuseradd -r -g nginx nginx\r\n`\r\n\r\n接着开始编译和安装：\r\n`bash\r\n ./configure \\\r\n  --prefix=/usr \\\r\n  --sbin-path=/usr/sbin/nginx \\\r\n  --conf-path=/etc/nginx/nginx.conf \\\r\n  --error-log-path=/var/log/nginx/error.log \\\r\n  --http-log-path=/var/log/nginx/access.log \\\r\n  --pid-path=/var/run/nginx/nginx.pid  \\\r\n  --lock-path=/var/lock/nginx.lock \\\r\n  --user=nginx \\\r\n  --group=nginx \\\r\n  --with-httpsslmodule \\\r\n  --with-httpflvmodule \\\r\n  --with-httpstubstatus_module \\\r\n  --with-httpgzipstatic_module \\\r\n  --http-client-body-temp-path=/var/tmp/nginx/client/ \\\r\n  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \\\r\n  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\\r\n  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\r\n  --http-scgi-temp-path=/var/tmp/nginx/scgi \\\r\n  --with-pcre\r\nmake && make install\r\n`\r\n\r\n说明：\r\nNginx可以使用Tmalloc(快速、多线程的malloc库及优秀性能分析工具)来加速内存分配，使用此功能需要事先安装gperftools，而后在编译nginx添加--with-googleperftoolsmodule选项即可。\r\n如果想使用nginx的perl模块，可以通过为configure脚本添加--with-httpperlmodule选项来实现，但目前此模块仍处于实验性使用阶段，可能会在运行中出现意外，因此，其实现方式这里不再介绍。如果想使用基于nginx的cgi功能，也可以基于FCGI来实现，具体实现方法请参照网上的文档。\r\n\r\n为nginx提供SysV init脚本:\r\n\r\n新建文件/etc/rc.d/init.d/nginx，内容如下：\r\n\r\n`bash\r\n!/bin/sh\r\n nginx - this script starts and stops the nginx daemon\r\n chkconfig:   - 85 15 \r\ndescription:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\r\n               proxy and IMAP/POP3 proxy server\r\nprocessname: nginx\r\n config:      /etc/nginx/nginx.conf\r\nconfig:      /etc/sysconfig/nginx\r\n pidfile:     /var/run/nginx.pid\r\n \r\nSource function library.\r\n. /etc/rc.d/init.d/functions\r\n \r\n Source networking configuration.\r\n. /etc/sysconfig/network\r\n \r\nCheck that networking is up.\r\n[ \"$NETWORKING\" = \"no\" ] && exit 0\r\n \r\nnginx=\"/usr/sbin/nginx\"\r\nprog=$(basename $nginx)\r\n \r\nNGINXCONFFILE=\"/etc/nginx/nginx.conf\"\r\n \r\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\r\n \r\nlockfile=/var/lock/subsys/nginx\r\n \r\nmake_dirs() {\r\n    make required directories\r\n   user=nginx -V 2&1 | grep \"configure arguments:\" | sed 's/--user=\\(\\).*/\\1/g' -\r\n   options=$nginx -V 2&1 | grep 'configure arguments:'\r\n   for opt in $options; do\r\n       if [ echo $opt | grep '.*-temp-path' ]; then\r\n           value=echo $opt | cut -d \"=\" -f 2\r\n           if [ ! -d \"$value\" ]; then\r\n               # echo \"creating\" $value\r\n               mkdir -p $value && chown -R $user $value\r\n           fi\r\n       fi\r\n   done\r\n}\r\n \r\nstart() {\r\n    [ -x $nginx ] || exit 5\r\n    [ -f $NGINXCONFFILE ] || exit 6\r\n    make_dirs\r\n    echo -n $\"Starting $prog: \"\r\n    daemon $nginx -c $NGINXCONFFILE\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && touch $lockfile\r\n    return $retval\r\n}\r\n \r\nstop() {\r\n    echo -n $\"Stopping $prog: \"\r\n    killproc $prog -QUIT\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && rm -f $lockfile\r\n    return $retval\r\n}\r\n \r\nrestart() {\r\n    configtest || return $?\r\n    stop\r\n    sleep 1\r\n    start\r\n}\r\n \r\nreload() {\r\n    configtest || return $?\r\n    echo -n $\"Reloading $prog: \"\r\n    killproc $nginx -HUP\r\n    RETVAL=$?\r\n    echo\r\n}\r\n \r\nforce_reload() {\r\n    restart\r\n}\r\n \r\nconfigtest() {\r\n  $nginx -t -c $NGINXCONFFILE\r\n}\r\n \r\nrh_status() {\r\n    status $prog\r\n}\r\n \r\nrhstatusq() {\r\n    rh_status /dev/null 2&1\r\n}\r\n \r\ncase \"$1\" in\r\n    start)\r\n        rhstatusq && exit 0\r\n        $1\r\n        ;;\r\n    stop)\r\n        rhstatusq || exit 0\r\n        $1\r\n        ;;\r\n    restart|configtest)\r\n        $1\r\n        ;;\r\n    reload)\r\n        rhstatusq || exit 7\r\n        $1\r\n        ;;\r\n    force-reload)\r\n        force_reload\r\n        ;;\r\n    status)\r\n        rh_status\r\n        ;;\r\n    condrestart|try-restart)\r\n        rhstatusq || exit 0\r\n            ;;\r\n    *)\r\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\r\n        exit 2\r\nesac\r\n`\r\n\r\n而后为此脚本赋予执行权限：\r\n\r\n`bash\r\nchmod +x /etc/rc.d/init.d/nginx\r\n`\r\n\r\n添加至服务管理列表，并让其开机自动启动：\r\n`bash\r\n chkconfig --add nginx\r\nchkconfig nginx on\r\n`\r\n\r\n而后就可以启动服务并测试了：\r\n`bash\r\n service nginx start\r\n`\r\n\r\n\r\n二、配置Nginx\r\n\r\n  Nginx的代码是由一个核心和一系列的模块组成, 核心主要用于提供Web Server的基本功能，以及Web和Mail反向代理的功能；还用于启用网络协议，创建必要的运行时环境以及确保不同的模块之间平滑地进行交互。不过，大多跟协议相关的功能和某应用特有的功能都是由nginx的模块实现的。这些功能模块大致可以分为事件模块、阶段性处理器、输出过滤器、变量处理器、协议、upstream和负载均衡几个类别，这些共同组成了nginx的http功能。事件模块主要用于提供OS独立的(不同操作系统的事件机制有所不同)事件通知机制如kqueue或epoll等。协议模块则负责实现nginx通过http、tls/ssl、smtp、pop3以及imap与对应的客户端建立会话。\r\n\r\n  Nginx的核心模块为Main和Events，此外还包括标准HTTP模块、可选HTTP模块和邮件模块，其还可以支持诸多第三方模块。Main用于配置错误日志、进程及权限等相关的参数，Events用于配置IO模型，如epoll、kqueue、select或poll等，它们是必备模块。\r\n\r\n  Nginx的主配置文件由几个段组成，这个段通常也被称为nginx的上下文，每个段的定义格式如下所示。需要注意的是，其每一个指令都必须使用分号(;)结束，否则为语法错误。\r\n\r\n`\r\nsection {\r\n    directive parameters;\r\n}\r\n`\r\n\r\n 2.1 配置main模块\r\n\r\n下面说明main模块中的几个关键参数。\r\n\r\n2.1.1 error_log\r\n`\r\n用于配置错误日志，可用于main、http、server及location上下文中；语法格式为：\r\n\r\nerror_log file | stderr [ debug | info | notice | warn | error | crit | alert | emerg ]\r\n\r\n如果在编译nginx时使用了--with-debug选项，还可以使用如下格式打开调试功能。\r\n\r\nerrorlog LOGFILE [debugcore | debugalloc | debugmutex | debugevent | debughttp | debug_imap];\r\n\r\n要禁用错误日志，不能使用“error_log off;”，而要使用类似如下选项：\r\n\r\nerror_log /dev/null crit;\r\n`\r\n 2.1.2 timer_resolution\r\n`\r\n用于降低gettimeofday()系统调用的次数。默认情况下，每次从kevent()、epoll、/dev/poll、select()或poll()返回时都会执行此系统调用。语法格式为：\r\n\r\ntimer_resolution interval\r\n\r\n例如：\r\n\r\ntimer_resolution  100ms;\r\n\r\n2.1.3 workercpuaffinity\r\n\r\n通过sched_setaffinity()将worker绑定至CPU上，只能用于main上下文。语法格式为：\r\n\r\nworkercpuaffinity cpumask ...\r\n\r\n例如：\r\nworker_processes     4;\r\nworkercpuaffinity 0001 0010 0100 1000;\r\n`\r\n\r\n2.1.4 worker_priority\r\n`\r\n为worker进程设定优先级(指定nice值)，此参数只能用于main上下文中，默认为0；语法格式为：\r\n\r\nworker_priority number\r\n`\r\n\r\n 2.1.5 worker_processes\r\n`\r\nworker进程是单线程进程。如果Nginx用于CPU密集型的场景中，如SSL或gzip，且主机上的CPU个数至少有2个，那么应该将此参数值设定为与CPU核心数相同；如果Nginx用于大量静态文件访问的场景中，且所有文件的总大小大于可用内存时，应该将此参数的值设定得足够大以充分利用磁盘带宽。\r\n\r\n此参数与Events上下文中的work_connections变量一起决定了maxclient的值：\r\nmaxclients = workprocesses * workconnections\r\n`\r\n\r\n2.1.6 workerrlimitnofile\r\n`\r\n设定worker进程所能够打开的文件描述符个数的最大值。语法格式：\r\n\r\nworkerrlimitnofile number\r\n`\r\n\r\n 2.2 配置Events模块\r\n\r\n2.2.1 worker_connections\r\n`\r\n设定每个worker所处理的最大连接数，它与来自main上下文的worker_processes一起决定了maxclients的值。\r\n\r\nmax clients = workerprocesses * workerconnections\r\n\r\n而在反向代理场景中，其计算方法与上述公式不同，因为默认情况下浏览器将打开2个连接，而nginx会为每一个连接打开2个文件描述符，因此，其maxclients的计算方法为：\r\n\r\nmax clients = workerprocesses * workerconnections/4\r\n`\r\n 2.2.2 use\r\n`\r\n在有着多于一个的事件模型IO的应用场景中，可以使用此指令设定nginx所使用的IO机制，默认为./configure脚本选定的各机制中最适用当前OS的版本。语法格式：\r\n\r\nuse [ kqueue | rtsig | epoll | /dev/poll | select | poll | eventport ]\r\n\r\n`\r\n2.3 一个配置示例\r\n`bash\r\nuser nginx;\r\n the load is CPU-bound and we have 16 cores\r\nworker_processes 16;\r\nerror_log /var/log/nginx/error.log;\r\npid /var/run/nginx.pid;\r\n\r\nevents {\r\n    use epoll;\r\n    worker_connections 2048;\r\n}\r\n`\r\n2.4 HTTP服务的相关配置\r\n`\r\nhttp上下文专用于配置用于http的各模块，此类指令非常的多，每个模块都有其专用指定，具体请参数nginx官方wiki关于模块部分的说明。大体上来讲，这些模块所提供的配置指令还可以分为如下几个类别。\r\n\r\n客户端类指令：如clientbodybuffersize、clientheaderbuffersize、clientheadertimeout和keepalive_timeout等；\r\n文件IO类指令：如aio、directio、openfilecache、openfilecacheminuses、openfilecache_valid和sendfile等；\r\nhash类指令：用于定义Nginx为某特定的变量分配多大的内存空间，如typeshashbucketsize、servernameshashbucketsize和variableshashbucketsize等；\r\n套接字类指令：用于定义Nginx如何处理tcp套接字相关的功能，如tcpnodelay(用于keepalive功能启用时)和tcpnopush(用于sendfile启用时)等；\r\n`\r\n 2.5 虚拟服务器相关配置\r\n`\r\nserver {\r\n    directive parameters;\r\n}\r\n用于定义虚拟服务器相关的属性，常见的指令有backlog、rcvbuf、bind及sndbuf等。\r\n`\r\n\r\n2.6 location相关的配置\r\n`\r\nlocation [modifier] uri {...} 或 location @name {…}\r\n\r\n通常用于server上下文中，用于设定某URI的访问属性。location可以嵌套。\r\n\r\nThe prefix \"@\" specifies a named location. Such locations are not used during normal processing of requests, they are intended only to process internally redirected requests (see errorpage, tryfiles). 如下面关于memcached的相关配置。\r\n\r\nserver {\r\n  location / {\r\n    set $memcached_key $uri;\r\n    memcached_pass     name:11211;\r\n    default_type       text/html;\r\n    error_page         404 @fallback;\r\n  }\r\n \r\n  location @fallback {\r\n    proxy_pass http://backend;\r\n  }\r\n}\r\n`\r\n 三、Nginx反向代理\r\n\r\n    Nginx通过proxy模块实现反向代理功能。在作为web反向代理服务器时，nginx负责接收客户请求，并能够根据URI、客户端参数或其它的处理逻辑将用户请求调度至上游服务器上(upstream server)。nginx在实现反向代理功能时的最重要指令为proxy_pass，它能够将location定义的某URI代理至指定的上游服务器(组)上。如下面的示例中，location的/uri将被替换为上游服务器上的/newuri。\r\n\r\n    location /uri {\r\n        proxy_pass http://www.magedu.com:8080/newuri;\r\n    }\r\n    \r\n\r\n不过，这种处理机制中有两个例外。一个是如果location的URI是通过模式匹配定义的，其URI将直接被传递至上游服务器，而不能为其指定转换的另一个URI。例如下面示例中的/forum将被代理为http://www.magedu.com/forum。\r\n\r\n    location ~ ^/bbs {\r\n        proxy_pass http://www.magedu.com;\r\n    }\r\n\r\n第二个例外是，如果在loation中使用的URL重定向，那么nginx将使用重定向后的URI处理请求，而不再考虑上游服务器上定义的URI。如下面所示的例子中，传送给上游服务器的URI为/index.php?page=match，而不是/index。\r\n\r\n    location / {\r\n        rewrite /(.*)$ /index.php?page=$1 break;\r\n        proxy_pass http://localhost:8080/index;\r\n    }\r\n\r\n3.1 proxy模块的指令\r\n\r\nproxy模块的可用配置指令非常多，它们分别用于定义proxy模块工作时的诸多属性，如连接超时时长、代理时使用http协议版本等。下面对常用的指令做一个简单说明。\r\n\r\nproxyconnecttimeout：nginx将一个请求发送至upstream server之前等待的最大时长；\r\nproxycookiedomain：将upstream server通过Set-Cookie首部设定的domain属性修改为指定的值，其值可以为一个字符串、正则表达式的模式或一个引用的变量；\r\nproxycookiepath: 将upstream server通过Set-Cookie首部设定的path属性修改为指定的值，其值可以为一个字符串、正则表达式的模式或一个引用的变量；\r\nproxyhideheader：设定发送给客户端的报文中需要隐藏的首部；\r\nproxy_pass：指定将请求代理至upstream server的URL路径；\r\nproxysetheader：将发送至upsream server的报文的某首部进行重写；\r\nproxy_redirect：重写location并刷新从upstream server收到的报文的首部；\r\nproxysendtimeout：在连接断开之前两次发送至upstream server的写操作的最大间隔时长；\r\nproxyreadtimeout：在连接断开之前两次从接收upstream server接收读操作的最大间隔时长；\r\n\r\n如下面的一个示例：\r\n    proxy_redirect off;\r\n    proxysetheader Host $host;\r\n    proxysetheader X-Real-IP $remote_addr;\r\n    proxysetheader X-Forwarded-For $proxyaddxforwardedfor;\r\n    clientmaxbody_size 10m;\r\n    clientbodybuffer_size 128k;\r\n    proxyconnecttimeout 30;\r\n    proxysendtimeout 15;\r\n    proxyreadtimeout 15;\r\n\r\n3.2 upstream模块\r\n\r\n与proxy模块结合使用的模块中，最常用的当属upstream模块。upstream模块可定义一个新的上下文，它包含了一组宝岛upstream服务器，这些服务器可能被赋予了不同的权重、不同的类型甚至可以基于维护等原因被标记为down。\r\n\r\nupstream模块常用的指令有：\r\nip_hash：基于客户端IP地址完成请求的分发，它可以保证来自于同一个客户端的请求始终被转发至同一个upstream服务器；\r\nkeepalive：每个worker进程为发送到upstream服务器的连接所缓存的个数；\r\nleast_conn：最少连接调度算法；\r\nserver：定义一个upstream服务器的地址，还可包括一系列可选参数，如：\r\n    weight：权重；\r\n    maxfails：最大失败连接次数，失败连接的超时时长由failtimeout指定；\r\n    fail_timeout：等待请求的目标服务器发送响应的时长；\r\n    backup：用于fallback的目的，所有服务均故障时才启动此服务器；\r\n    down：手动标记其不再处理任何请求；\r\n\r\n例如：\r\n    upstream backend {\r\n      server www.magedu.com weight=5;\r\n      server www2.magedu.com:8080       maxfails=3  failtimeout=30s;\r\n    }\r\n\r\nupstream模块的负载均衡算法主要有三种，轮调(round-robin)、ip哈希(iphash)和最少连接(leastconn)三种。\r\n\r\n此外，upstream模块也能为非http类的应用实现负载均衡，如下面的示例定义了nginx为memcached服务实现负载均衡之目的。\r\n\r\n    upstream memcachesrvs {\r\n        server 172.16.100.6:11211;\r\n        server 172.16.100.7:11211;\r\n    }\r\n    \r\n    server {\r\n        location / {\r\n        set $memcached_key \"$uri?$args\";\r\n        memcached_pass memcachesrvs;\r\n        error_page 404 = @fallback;\r\n        }\r\n    \r\n        location @fallback {\r\n             proxy_pass http://127.0.0.1:8080;\r\n        }\r\n    }\r\n\r\n3.3 if判断语句\r\n\r\n在location中使用if语句可以实现条件判断，其通常有一个return语句，且一般与有着last或break标记的rewrite规则一同使用。但其也可以按需要使用在多种场景下，需要注意的是，不当的使用可能会导致不可预料的后果。\r\n\r\nlocation / {\r\n    if ($request_method == “PUT”) {\r\n        proxy_pass http://upload.magedu.com:8080;\r\n    } \r\n\r\n    if ($request_uri ~ \"\\.(jpg|gif|jpeg|png)$\") {\r\n        proxy_pass http://imageservers;\r\n        break;\r\n    }\r\n}\r\n\r\nupstream imageservers {\r\n    server 172.16.100.8:80 weight 2;\r\n    server 172.16.100.9:80 weight 3;\r\n}\r\n\r\n3.3.1 if语句中的判断条件\r\n\r\n正则表达式匹配：\r\n    ~：与指定正则表达式模式匹配时返回“真”，判断匹配与否时区分字符大小写；\r\n    ~*：与指定正则表达式模式匹配时返回“真”，判断匹配与否时不区分字符大小写；\r\n    !~：与指定正则表达式模式不匹配时返回“真”，判断匹配与否时区分字符大小写；\r\n    !~*：与指定正则表达式模式不匹配时返回“真”，判断匹配与否时不区分字符大小写；\r\n\r\n文件及目录匹配判断：\r\n    -f, !-f：判断指定的路径是否为存在且为文件；\r\n    -d, !-d：判断指定的路径是否为存在且为目录；\r\n    -e, !-e：判断指定的路径是否存在，文件或目录均可；\r\n    -x, !-x：判断指定路径的文件是否存在且可执行；\r\n\r\n3.3.2 nginx常用的全局变量\r\n\r\n下面是nginx常用的全局变量中的一部分，它们经常用于if语句中实现条件判断。\r\n\r\n$args \r\n$content_length\r\n$content_type \r\n$document_root \r\n$document_uri \r\n$host \r\n$httpuseragent \r\n$http_cookie \r\n$limit_rate \r\n$requestbodyfile \r\n$request_method \r\n$remote_addr \r\n$remote_port \r\n$remote_user \r\n$request_filename \r\n$request_uri \r\n$query_string \r\n$scheme\r\n$server_protocol \r\n$server_addr \r\n$server_name \r\n$server_port \r\n$uri\r\n\r\n四、反向代理性能优化\r\n\r\n在反向代理场景中，nginx有一系列指令可用于定义其工作特性，如缓冲区大小等，给这些指令设定一个合理的值，可以有效提升其性能。\r\n\r\n4.1 缓冲区设定\r\n\r\nnginx在默认情况下在将其响应给客户端之前会尽可能地接收来upstream服务器的响应报文，它会将这些响应报文存暂存于本地并尽量一次性地响应给客户端。然而，在来自于客户端的请求或来自upsteam服务器的响应过多时，nginx会试图将之存储于本地磁盘中，这将大大降低nginx的性能。因此，在有着更多可用内存的场景中，应该将用于暂存这些报文的缓冲区调大至一个合理的值。\r\n\r\nproxybuffersize size：设定用于暂存来自于upsteam服务器的第一个响应报文的缓冲区大小；\r\nproxybuffering on|off：启用缓冲upstream服务器的响应报文，否则，如果proxymaxtempfilesize指令的值为0，来自upstream服务器的响应报文在接收到的那一刻将同步发送至客户端；一般情况下，启用proxybuffering并将proxymaxtempfilesize设定为0能够启用缓存响应报文的功能，并能够避免将其缓存至磁盘中；\r\nproxy_buffers 8 4k|8k：用于缓冲来自upstream服务器的响应报文的缓冲区大小；\r\n\r\n\r\n\r\n4.2 缓存\r\n\r\nnginx做为反向代理时，能够将来自upstream的响应缓存至本地，并在后续的客户端请求同样内容时直接从本地构造响应报文。\r\n\r\nproxycache zone|off：定义一个用于缓存的共享内存区域，其可被多个地方调用；缓存将遵从upstream服务器的响应报文首部中关于缓存的设定，如 \"Expires\"、\"Cache-Control: no-cache\"、 \"Cache-Control: max-age=XXX\"、\"private\"和\"no-store\" 等，但nginx在缓存时不会考虑响应报文的\"Vary\"首部。为了确保私有信息不被缓存，所有关于用户的私有信息可以upstream上通过\"no-cache\" or \"max-age=0\"来实现，也可在nginx设定proxycachekey必须包含用户特有数据如$cookiexxx的方式实现，但最后这种方式在公共缓存上使用可能会有风险。因此，在响应报文中含有以下首部或指定标志的报文将不会被缓存。\r\n    Set-Cookie\r\n    Cache-Control containing \"no-cache\", \"no-store\", \"private\", or a \"max-age\" with a non-numeric or 0 value\r\n    Expires with a time in the past\r\n    X-Accel-Expires: 0\r\nproxycachekey：设定在存储及检索缓存时用于“键”的字符串，可以使用变量为其值，但使用不当时有可能会为同一个内容缓存多次；另外，将用户私有信息用于键可以避免将用户的私有信息返回给其它用户；\r\nproxycachelock：启用此项，可在缓存未命令中阻止多个相同的请求同时发往upstream，其生效范围为worker级别；\r\nproxycachelocktimeout：proxycache_lock功能的锁定时长；\r\nproxycachemin_uses：某响应报文被缓存之前至少应该被请求的次数；\r\nproxycachepath：定义一个用记保存缓存响应报文的目录，及一个保存缓存对象的键及响应元数据的共享内存区域(keys_zone=name:size)，其可选参数有：\r\n    levels：每级子目录名称的长度，有效值为1或2，每级之间使用冒号分隔，最多为3级；\r\n    inactive：非活动缓存项从缓存中剔除之前的最大缓存时长；\r\n    max_size：缓存空间大小的上限，当需要缓存的对象超出此空间限定时，缓存管理器将基于LRU算法对其进行清理；\r\n    loaderfiles：缓存加载器(cacheloader)的每次工作过程最多为多少个文件加载元数据；\r\n    loader_sleep：缓存加载器的每次迭代工作之后的睡眠时长；\r\n    loader_threashold：缓存加载器的最大睡眠时长；\r\n    例如：  proxycachepath  /data/nginx/cache/one    levels=1      keys_zone=one:10m;\r\n            proxycachepath  /data/nginx/cache/two    levels=2:2    keys_zone=two:100m;\r\n            proxycachepath  /data/nginx/cache/three  levels=1:1:2  keys_zone=three:1000m;\r\nproxycacheusestale：在无法联系到upstream服务器时的哪种情形下(如error、timeout或http500等)让nginx使用本地缓存的过期的缓存对象直接响应客户端请求；其格式为：\r\n    proxycacheusestale error | timeout | invalidheader | updating | http500 | http502 | http503 | http504 | http_404 | off \r\nproxycachevalid [ code ...] time：用于为不同的响应设定不同时长的有效缓存时长，例如：proxycachevalid  200 302  10m;\r\nproxycachemethods [GET HEAD POST]：为哪些请求方法启用缓存功能；\r\nproxycachebypass string：设定在哪种情形下，nginx将不从缓存中取数据；例如：\r\n     proxycachebypass $cookienocache $argnocache $arg_comment;\r\n    proxycachebypass $httppragma $httpauthorization;\r\n\r\n4.2.1 使用示例\r\n\r\nhttp {\r\n    proxycachepath  /data/nginx/cache  levels=1:2    keys_zone=STATIC:10m\r\n                                         inactive=24h  max_size=1g;\r\n    server {\r\n        location / {\r\n            proxy_pass             http://www.magedu.com;\r\n            proxysetheader       Host $host;\r\n            proxy_cache            STATIC;\r\n            proxycachevalid      200  1d;\r\n            proxycachevalid      301 302 10m;\r\n            proxycachevaild      any 1m;\r\n            proxycacheusestale  error timeout invalidheader updating\r\n                                   http500 http502 http503 http504;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n4.3 压缩\r\n\r\nnginx将响应报文发送至客户端之前可以启用压缩功能，这能够有效地节约带宽，并提高响应至客户端的速度。通常编译nginx默认会附带gzip压缩的功能，因此，可以直接启用之。\r\n\r\nhttp {\r\n    gzip on;\r\n    gziphttpversion 1.0;\r\n    gzipcomplevel 2;\r\n    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;\r\n    gzip_disable msie6;\r\n}\r\n\r\ngzipproxied指令可以定义对客户端请求哪类对象启用压缩功能，如“expired”表示对由于使用了expire首部定义而无法缓存的对象启用压缩功能，其它可接受的值还有“no-cache”、“no-store”、“private”、“nolastmodified”、“noetag”和“auth”等，而“off”则表示关闭压缩功能。\r\n\r\n\r\n\r\n\r\n\r\n五、配置示例\r\n\r\n5.1 反向代理\r\n\r\nserver {\r\n        listen       80;\r\n        server_name  www.magedu.com;\r\n        addheader X-Via $serveraddr;  \r\n\r\n        location / {\r\n            root   html;\r\n            index  index.html index.htm;\r\n            if ($request_method ~* \"PUT\") {\r\n                proxy_pass http://172.16.100.12;\r\n                break;\r\n            }\r\n        }\r\n\r\n        location /bbs {\r\n            proxy_pass http://172.16.100.11/;\r\n        }\r\n} \r\n\r\n此例中，对http://www.magedu.com/bbs/的请求将被转发至http://172.16.100.11/这个URL，切记最后的/不应该省去；而/匹配的URL中请求方法为“PUT”时，将被转发至http://172.16.100.12/这个URL。\r\n\r\n另外，addheader用于让nginx在响应给用户的报文中构造自定义首部，其使用格式为“addheader NAME VALUE”。\r\n\r\n可以使用curl命令对配置好的服务进行请求，以验正其效果。如：\r\ncurl -I http://www.magedu.com/bbs/\r\nHTTP/1.1 200 OK\r\nServer: nginx/1.4.1\r\nDate: Tue, 14 May 2013 10:19:10 GMT\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 15\r\nConnection: keep-alive\r\nLast-Modified: Tue, 30 Apr 2013 09:34:09 GMT\r\nETag: \"186e9f-f-b4076640\"\r\nX-Via: 172.16.100.107\r\nAccept-Ranges: bytes\r\n\r\n\r\n在后端服务器172.16.100.12上装载dav模块，并开放其dav功能，而后验正文件上传效果。开放dav功能的方法如下：\r\n\r\n首先启用如下两个模块：\r\nLoadModule davmodule modules/moddav.so\r\nLoadModule davfsmodule modules/moddavfs.so\r\n\r\n而后配置相应主机的目录如下所示，关键是其中的dav一行。\r\nDirectory \"/var/www/html\"\r\n    dav on\r\n    Options Indexes FollowSymLinks\r\n    Order allow,deny\r\n    Allow from all\r\n/Directory\r\n\r\n接着尝试访问代理服务器：\r\n curl -I -T /etc/inittab http://www.magedu.com/\r\nHTTP/1.1 100 Continue\r\n\r\nHTTP/1.1 201 Created\r\nServer: nginx/1.4.1\r\nDate: Tue, 14 May 2013 10:20:15 GMT\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 261\r\nLocation: http://172.16.100.107/inittab\r\nConnection: keep-alive\r\nX-Via: 172.16.100.107\r\n\r\n!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\"\r\nhtmlhead\r\ntitle201 Created/title\r\n/headbody\r\nh1Created/h1\r\npResource /inittab has been created./p\r\nhr /\r\naddressApache/2.2.3 (Red Hat) Server at 172.16.100.12 Port 80/address\r\n/body/html\r\n\r\n\r\n5.2 启用缓存\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n    sendfile        on;\r\n    keepalive_timeout  65;\r\n\r\n    proxycachepath /nginx/cache/first  levels=1:2   keyszone=first:10m maxsize=512m;\r\n\r\n    server {\r\n        listen       80;\r\n        server_name  www.magedu.com;\r\n\r\n        location / {\r\n            root   html;\r\n            index  index.html index.htm;\r\n            if ($request_method ~* \"PUT\") {\r\n                proxy_pass http://172.16.100.12;\r\n                break;\r\n            }\r\n        }\r\n\r\n        location /bbs {\r\n            proxy_pass http://172.16.100.11/;\r\n            proxy_cache first;\r\n            proxycachevalid 200 1d;\r\n            proxycachevalid 301 302 10m;\r\n            proxycachevalid any 1m;\r\n        }\r\n    } \r\n}\r\n\r\n\r\n5.3 使用upstream\r\n\r\n5.3.1 不启用缓存\r\n\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n    sendfile        on;\r\n    keepalive_timeout  65;\r\n \r\n    upstream websrv {\r\n        server 172.16.100.11 weight=1;\r\n        server 172.16.100.12 weight=1;\r\n        server 127.0.0.1:8080 backup;\r\n    }\r\n    server {\r\n        listen       80;\r\n        server_name  www.magedu.com;\r\n\r\n        addheader X-Via $serveraddr;\r\n\r\n        location / {\r\n            proxy_pass http://websrv;\r\n            index  index.html index.htm;\r\n\r\n            if ($request_method ~* \"PUT\") {\r\n                proxy_pass http://172.16.100.12;\r\n                break;\r\n            }\r\n        }\r\n        error_page   500 502 503 504  /50x.html;\r\n        location = /50x.html {\r\n            root   html;\r\n        }\r\n    }\r\n\r\n    server {\r\n        listen 8080;\r\n        server_name localhost;\r\n        root /nginx/htdocs;\r\n        index index.html;\r\n    }\r\n}\r\n\r\n测试效果：默认情况下，nginx对定义了权重的upstream服务器使用加权轮调的方法调度访问，因此，其多次访问应该由不同的服务器进行响应。如下所示。\r\n\r\ncurl  http://172.16.100.107/\r\nRS2.magedu.com\r\n\r\n curl  http://172.16.100.107/\r\nRS1.magedu.com\r\n\r\n根据上面的配置，如果172.16.100.11和172.16.100.12两个upstream服务器均宕机时，将由本地监听在8080端口的虚拟主机进行响应。\r\ncurl  http://172.16.100.107/\r\nSorry...\r\n\r\n\r\n5.3.2 为upstream启用缓存\r\n\r\nhttp {\r\n    include       mime.types;\r\n    default_type  application/octet-stream;\r\n    sendfile        on;\r\n    keepalive_timeout  65;\r\n \r\n    proxycachepath /nginx/cache/first  levels=1:2   keyszone=first:10m maxsize=512m;\r\n \r\n    upstream websrv {\r\n        server 172.16.100.11 weight=1;\r\n        server 172.16.100.12 weight=1;\r\n        server 127.0.0.1:8080 backup;\r\n    }\r\n    server {\r\n        listen       80;\r\n        server_name  www.magedu.com;\r\n\r\n        addheader X-Via $serveraddr;\r\n        addheader X-Cache-Status $upstreamcache_status;\r\n\r\n        location / {\r\n            proxy_pass http://websrv;\r\n            proxy_cache first;\r\n            proxycachevalid 200 1d;\r\n            proxycachevalid 301 302 10m;\r\n            proxycachevalid any 1m;\r\n            index  index.html index.htm;\r\n\r\n            if ($request_method ~* \"PUT\") {\r\n                proxy_pass http://172.16.100.12;\r\n                break;\r\n            }\r\n        }\r\n        error_page   500 502 503 504  /50x.html;\r\n        location = /50x.html {\r\n            root   html;\r\n        }\r\n    }\r\n\r\n    server {\r\n        listen 8080;\r\n        server_name localhost;\r\n        root /nginx/htdocs;\r\n        index index.html;\r\n    }\r\n}\r\n\r\n\r\n第一次访问某可缓存资源时，在本地缓存中尚未有其对应的缓存对象，因此，其一定为未命中状态。而第二次请求时，则可以直接从本地缓存构建响应报文。\r\n curl -I http://www.magedu.com/\r\nHTTP/1.1 200 OK\r\nServer: nginx/1.4.1\r\nDate: Tue, 14 May 2013 10:53:07 GMT\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 15\r\nConnection: keep-alive\r\nLast-Modified: Tue, 30 Apr 2013 09:34:09 GMT\r\nETag: \"186e9f-f-b4076640\"\r\nAccept-Ranges: bytes\r\nX-Via: 172.16.100.107\r\nX-Cache-Status: MISS\r\n\r\ncurl -I http://www.magedu.com/\r\nHTTP/1.1 200 OK\r\nServer: nginx/1.4.1\r\nDate: Tue, 14 May 2013 10:53:09 GMT\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 15\r\nConnection: keep-alive\r\nLast-Modified: Tue, 30 Apr 2013 09:34:09 GMT\r\nETag: \"186e9f-f-b4076640\"\r\nX-Via: 172.16.100.107\r\nX-Cache-Status: HIT\r\nAccept-Ranges: bytes\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/rancher",
        "title": "Rancher",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Rancher\r\n\r\n= Rancher\r\n\r\n== rancher/storage-nfs\r\n\r\n=== 配置CoreOS nfs service\r\nimage 安装 ::\r\n+\r\n```\r\nsudo vi /var/lib/coreos-install/user_data\r\n```\r\n\r\nvagrant 安装 ::\r\n+\r\n```\r\n# sudo vi /var/lib/coreos-vagrant/vagrantfile-user-data\r\n\r\n#cloud-config\r\n\r\ncoreos:\r\n  units:\r\n    - name: \"docker.service\"\r\n      drop-ins:\r\n        - name: \"50-insecure-registry.conf\"\r\n          content: |\r\n            [Service]\r\n            Environment=DOCKER_OPTS='--registry-mirror=https://7xefeire.mirror.aliyuncs.com'\r\n      command: start\r\n    - name: nfs-server.service  # 开机启动 nfs server\r\n      command: start\r\n    - name: settimezone.service\r\n      command: start\r\n      content: |\r\n        [Unit]\r\n        Description=Set the time zone\r\n\r\n        [Service]\r\n        ExecStart=/usr/bin/timedatectl set-timezone Asia/Shanghai\r\n        RemainAfterExit=yes\r\n        Type=oneshot\r\nwrite_files:\r\n   - path: /etc/hosts\r\n     content: |\r\n        127.0.0.1     localhost\r\n        192.168.137.15    dishui.io\r\n\r\n```\r\n```\r\nsudo coreos-cloudinit --from-file=/var/lib/coreos-vagrant/vagrantfile-user-data\r\n```\r\n\r\n=== 启动 `Rancher Server`\r\n\r\n==== docker 方式启动\r\n```\r\ndocker run -d --restart=unless-stopped -p 8080:8080 rancher/server\r\n```\r\n\r\n==== compose 方式启动\r\nrancher.yml ::\r\n+\r\n```\r\nversion: '2'\r\n\r\nservices:\r\n rancher:\r\n  image: rancher/server\r\n  container_name: rancher\r\n  ports:\r\n    - \"8080:8080\"\r\n```\r\n\r\n启动 ::\r\n+\r\n```\r\ndocker-compose -f rancher.yml start\r\n```\r\n\r\n==== Rancher NFS 配置\r\n\r\nRancher-NFS ::\r\n+\r\nimage::{img}/img/2016-12-16_152104.png[]\r\n---\r\n\r\nNFS服务器 ::\r\n+\r\n```\r\n# sudo vi /etc/exports\r\n/home/core/data/maxscale *(rw,async,no_root_squash,no_subtree_check)\r\n/home/core/data/mysqlm *(rw,async,no_root_squash,no_subtree_check)\r\n/home/core/data/mysqls1 *(rw,async,no_root_squash,no_subtree_check)\r\n/home/core/data/mysqls2 *(rw,async,no_root_squash,no_subtree_check)\r\n/home/core/data/test  *(rw,async,no_root_squash,no_subtree_check)\r\n```\r\n\r\n=== maxscale-mysql\r\ndocker-compose.yml ::\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/rancher/maxscale/docker-compose.yml[]\r\n----\r\nrancher-compose.yml ::\r\n+\r\n[source]\r\n----\r\ninclude::{src}/linux/conf/rancher/maxscale/rancher-compose.yml[]\r\n----\r\n注意 ::\r\n+\r\nimage::{img}/img/2016-12-16_153835.png[]\r\n\r\n\r\n== 镜像\r\n\r\n=== push rancher相关镜像到 registry\r\n\r\n`push.sh` ::\r\n+\r\n```\r\n#!/bin/bash\r\n\r\ndocker tag $1 dishui.io:5000/$1\r\ndocker push dishui.io:5000/$1\r\ndocker rmi dishui.io:5000/$1\r\n```\r\n+\r\n```\r\ndocker images --format \"{{.Repository}}:{{.Tag}}\" | xargs -I t sh push.sh t\r\n```\r\n+\r\n```\r\n# vi image-list\r\nelasticsearch:5\r\nkibana:5\r\nlogstash:5\r\n```\r\n+\r\n```\r\ncat image-list | xargs -I t sh push.sh t\r\n```\r\n\r\n\r\n=== rancher-agent 拉取镜像\r\n\r\n`image-list` ::\r\n+\r\n```\r\nrancher/healthcheck:v0.1.0\r\nrancher/net:v0.7.5\r\nrancher/metadata:v0.6.8\r\nrancher/network-manager:v0.2.17\r\nrancher/scheduler:v0.4.0\r\nrancher/agent:v1.1.1\r\nrancher/storage-nfs:v0.6.0\r\nrancher/dns:v0.10.8\r\n```\r\n\r\n`pull.sh` ::\r\n+\r\n```\r\n#!/bin/bash\r\ndocker pull dishui.io:5000/$1\r\ndocker tag dishui.io:5000/$1 $1\r\ndocker rmi dishui.io:5000/$1\r\n```\r\n+\r\n```\r\ncat image-list | xargs -I t sh pull.sh t\r\n```\r\n\r\n`pull-push.sh` ::\r\n+\r\n```\r\nsh pull-push.sh nginx:stable-alpine\r\n```\r\n\r\n`pull.sh` ::\r\n+\r\n```\r\n#!/bin/bash\r\n\r\nfor var in $@\r\ndo\r\n  echo \"$var\"\r\n  docker pull dishui.io:5000/$var\r\n  docker tag dishui.io:5000/$var $var\r\n  docker rmi dishui.io:5000/$var\r\ndone\r\n```\r\n\r\n`push.sh` ::\r\n+\r\n```\r\n#!/bin/bash\r\n\r\nfor var in $@\r\ndo\r\n    echo \"$var\"\r\n    docker tag $var dishui.io:5000/$var\r\n    docker push dishui.io:5000/$var\r\n    docker rmi dishui.io:5000/$var\r\ndone\r\n```\r\n\r\n\r\n\r\n=== 参考\r\n. http://rancher.com/setting-shared-volumes-convoy-nfs/[nfs]\r\n\r\n== Rancher Cli API\r\n\r\nps ::\r\n+\r\n```\r\nrancher ps --format \"{{.ID}}: {{.Name}}\"\r\n```\r\n\r\n\r\n[quote]\r\n----\r\nsudo docker run -d -e CATTLE_AGENT_IP=192.168.1.130 --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.1.3 http://192.168.1.129:8080/v1/scripts/B7D394CB68CD1BF72E75:1487556000000:1zAXp5yjztfAb1NoXSzU8SbBfw\r\n\r\nsudo docker run -d -e CATTLE_AGENT_IP=192.168.1.129 --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher rancher/agent:v1.1.3 http://192.168.1.129:8080/v1/scripts/B7D394CB68CD1BF72E75:1487556000000:1zAXp5yjztfAb1NoXSzU8SbBfw\r\n----\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/redis",
        "title": "Redis",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== Redis\r\n\r\n=== 命令\r\n. 删除所有 `key`\r\n```bash\r\nredis-cli keys \"*\" | xargs redis-cli del\r\n```\r\n\r\n\r\n=== 配置文件\r\n.`redis.conf`\r\n```conf\r\n# appendfsync always\r\n#每次收到写命令就立即强制写入磁盘，最慢的，但是保证完全的持久化，不推荐使用\r\nappendfsync everysec\r\n#每秒钟强制写入磁盘一次，在性能和持久化方面做了很好的折中，推荐\r\n# appendfsync no    #完全依赖os，性能最好,持久化没保证\r\n```\r\n\r\n=== Codis\r\n\r\n. `golang` 版本\r\n```\r\ngo1.6.linux-amd64.tar.gz\r\n```\r\n. 环境变量\r\n```bash session\r\n# vi ~/.bash_profile\r\nexport GOROOT=/go\r\nexport GOPATH=/usr/local/go\r\nexport PATH=$PATH:$GOPATH/bin\r\n```\r\n\r\n\r\n\r\n\r\n=== 参考\r\n. [[Redis 命令参考 | http://redisdoc.com]]\r\n. [[Codis-分布式安装和部署 | http://guojianxiang.com/posts/2016-02-25-Codis_Chapters_Install_Solution.html]]\r\n. [[codis集群部署实战(redis集群代理) | http://hugoren.iteye.com/blog/2207446]]\r\n. [[使用Codis来部署Redis集群  | http://john88wang.blog.51cto.com/2165294/1742742]]\r\n. [[Redis实现Timeline | http://www.cnblogs.com/wjfz/p/5367446.html]]\r\n. [[Redis 实战之薄荷 timeline 的优化 | http://ruby-china.org/topics/25908]]\r\n. [[使用Redis实现关注关系  | http://blog.lovemydeer.com/2016/03/13/relation-with-redis.html]]\r\n. [[微博feed系统的推(push)模式和拉(pull)模式和时间分区拉模式架构探讨 | http://www.cnblogs.com/sunli/archive/2010/08/24/twitter_feeds_push_pull.html]]\r\n. [[微博和知乎中的 feed 流是如何实现的|https://www.zhihu.com/question/19645686]]\r\n. [[Redis实现Timeline | http://blog.lovemydeer.com/2016/03/19/redis-timeline.html]]\r\n\r\n\r\n\r\n```\r\ncd /usr/local/go/src/github.com/CodisLabs/codis/\r\n\r\nsed -i 's#zk=192.168.0.123#zk=zk1#' config.ini\r\nsed -i 's#dashboard_addr=192.168.0.123:18087#dashboard_addr=codis1:18087#' config.ini\r\n\r\nbin/codis-config dashboard\r\n\r\nbin/codis-config slot init\r\n\r\nbin/codis-config server add 1 redis-master:6380 master\r\nbin/codis-config server add 1 redis-slave:6380 slave\r\n\r\n\r\nbin/codis-config slot range-set 0 1023 1 online\r\n\r\nbin/codis-proxy -c config.ini -L ./log/proxy.log  --cpu=1 --addr=0.0.0.0:19000 --http-addr=0.0.0.0:11000\r\n\r\nbin/codis-config -c config.ini proxy online proxy_1\r\n\r\n```\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/ruan_jian_an_zhuang",
        "title": "软件安装",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= 软件安装\r\n\r\n\r\n\r\n== `RPM` 安装软件\r\n\r\n1. 指定安装目录\r\n```shell\r\nrpm -ivh --prefix=/opt/temp  xxx.rpm\r\n```\r\n\r\n== 安装 `Java`\r\n\r\n. 查看 `Linux` 自带的 `JDK` 是否已安装\r\n```shell\r\njava -version\r\n```\r\n> ps:如果出现 `openjdk` ，最好还是先卸载掉 `openjdk` ,在安装 `sun` 公司的 `jdk` .\r\n\r\n. 查看 `jdk` 安装信息\r\n```shell\r\nrpm -qa|grep java\r\nrpm -qa|grep jdk\r\n```\r\n. 卸载`OpenJDK` ，执行以下操作\r\n```shell\r\nrpm -e --nodeps tzdata-java-2012c-1.el6.noarch\r\nrpm -e --nodeps java-1.7.0-openjdk-1.7.0.45-1.45.1.11.1.el6.x86_64\r\n```\r\n. 新建 `java` 安装目录\r\n```shell\r\nmkdir /usr/java\r\n```\r\n. 将之前下载的 `jdk` 解压缩并安装\r\n```shell\r\n=源码\r\ntar -zxvf  jdk-7u71-linux-i586.tar.gz\r\n=rpm\r\nrpm -ivh jdk-7u79-linux-i586.rpm --prefix=/usr/java/\r\n```\r\n. 在 `profile` 文件中加入 `java` 环境变量\r\n```shell\r\nvi /etc/profile\r\n=\r\nexport JAVA_HOME=/usr/java/jdk1.7.0_71\r\nexport CLASSPATH=.:%JAVA_HOME%/lib/dt.jar:%JAVA_HOME%/lib/tools.jar\r\nexport PATH=$PATH:$JAVA_HOME/bin\r\n```\r\n. 使文件立即生效\r\n```shell\r\nsource /etc/profile\r\n```\r\n\r\n\r\n== `Vanish`\r\n\r\n. `vanish 4.1`\r\n```bash\r\nyum install epel-release\r\nrpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.1.el7.rpm\r\n(or: rpm --nosignature -i https://repo.varnish-cache.org/redhat/varnish-4.1.el6.rpm for RHEL6)\r\nyum install varnish\r\n```\r\n\r\n*Ref* +\r\n[[Installation on RedHat|http://www.varnish-cache.org/releases/install_redhat.html]]\r\n\r\n\r\n== Python3\r\n\r\n. `CentOS7` 编译安装\r\n```bash\r\nyum groupinstall \"Development Tools\" &&\\\r\nyum install openssl-devel\r\ntar -zxf Python-3.5.2.tgz\r\ncd Python-3.5.2\r\n./configure --prefix=/usr/local/python3/\r\nmake && make install\r\n# 链接\r\nln -s /usr/local/python3/bin/python3 /usr/bin/python3\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/shell",
        "title": "shell",
        "content": "include::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== shell\r\n\r\n\r\n=== 获取当前目录\r\n+\r\n```bash\r\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\r\n```\r\n\r\n. 变量\r\n+\r\n```\r\nfor var in $@\r\ndo\r\n  echo \"$var\"\r\n  docker tag $var dishui.io:5000/$var\r\n  docker push dishui.io:5000/$var\r\n  docker rmi dishui.io:5000/$var\r\ndone\r\n```\r\n\r\n. 参考\r\n+\r\nhttp://c.biancheng.net/cpp/view/2739.html[Shell $0, $#, $*, $@, $?, $$和命令行参数]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/ssh",
        "title": "ssh",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n=== 安装\r\n. `CentOS7 64` 系统\r\n```\r\nyum install openssh-server -y\r\n```\r\n. 启动 `ssh`\r\n``` session\r\n# /usr/sbin/sshd\r\nCould not load host key: /etc/ssh/ssh_host_rsa_key\r\nCould not load host key: /etc/ssh/ssh_host_ecdsa_key\r\nCould not load host key: /etc/ssh/ssh_host_ed25519_key\r\n```\r\n. 解决办法\r\n```\r\nssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key # 重新建立 ssh_host_dsa_key 文件\r\nssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key # 重新建立 ssh_host_rsa_key 文件\r\n```\r\n\r\n\r\n\r\n=== 25个必须记住的SSH命令\r\nOpenSSH是SSH连接工具的免费版本。telnet，rlogin和ftp用户可能还没意识到他们在互联网上传输的密码是未加密的，但SSH是加密的，OpenSSH加密所有通信（包括密码），有效消除了窃听，连接劫持和其它攻击。此外，OpenSSH提供了安全隧道功能和多种身份验证方法，支持SSH协议的所有版本。\r\nSSH是一个非常伟大的工具，如果你要在互联网上远程连接到服务器，那么SSH无疑是最佳的候选。下面是通过网络投票选出的25个最佳SSH命令，你必须牢记于心。\r\n（注：有些内容较长的命令，在本文中会显示为截断的状态。如果你需要阅读完整的命令，可以把整行复制到您的记事本当中阅读。）\r\n\r\n---\r\n\r\n. 复制SSH密钥到目标主机，开启无密码SSH登录\r\n```\r\nssh-copy-id user@host\r\n//如果还没有密钥，请使用ssh-keygen命令生成。\r\n```\r\n\r\n. 从某主机的80端口开启到本地主机2001端口的隧道\r\n```\r\nssh -N -L2001:localhost:80 somemachine\r\n#现在你可以直接在浏览器中输入http://localhost:2001访问这个网站。\r\n```\r\n\r\n.. 从A主机的60022端口,通过跳板B主机,copy文件到C主机\r\n```\r\n# 开启端口\r\n# B: root@116.90.81.70\r\n# C: 192.168.1.125\r\nssh -Nf -L 60022:192.168.1.125:22 root@116.90.81.70 dev/null 21\r\nscp -P 60022 1.txt root@127.0.0.1:~/opt/path\r\n```\r\n\r\n@startuml\r\n\r\n(跳板) >\r\n(本地) >\r\n(目标主机) >\r\n\r\nleft to right direction\r\n(本地) --> (跳板)\r\n(跳板) --> (目标主机)\r\n@enduml\r\n\r\n\r\n. 将你的麦克风输出到远程计算机的扬声器\r\n```\r\ndd if=/dev/dsp | ssh -c arcfour -C username@host dd of=/dev/dsp\r\n#这样来自你麦克风端口的声音将在SSH目标计算机的扬声器端口输出，但遗憾的是，声音质量很差，你会听到很多嘶嘶声。\r\n```\r\n. 比较远程和本地文件\r\n```\r\nssh user@host cat /path/to/remotefile | diff /path/to/localfile –\r\n#在比较本地文件和远程文件是否有差异时这个命令很管用。\r\n```\r\n. 通过SSH挂载目录/文件系统\r\n```\r\nsshfs name@server:/path/to/folder /path/to/mount/point\r\n#从http://fuse.sourceforge.net/sshfs.html下载sshfs，它允许你跨网络安全挂载一个目录。\r\n```\r\n. 通过中间主机建立SSH连接\r\n```\r\nssh -t reachable_host ssh unreachable_host\r\n#Unreachable_host表示从本地网络无法直接访问的主机，但可以从reachable_host所在网络访问，这个命令通过到reachable_host的“隐藏”连接，创建起到unreachable_host的连接。\r\n```\r\n. 将你的SSH公钥复制到远程主机，开启无密码登录 – 简单的方法\r\n```\r\nssh-copy-id username@hostname\r\n```\r\n. 直接连接到只能通过主机B连接的主机A\r\n```\r\nssh -t hostA ssh hostB\r\n#当然，你要能访问主机A才行。\r\n```\r\n. 创建到目标主机的持久化连接\r\n```\r\nssh -MNf ",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/supervisord",
        "title": "supervisor",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== supervisord\r\n\r\n* 在线安装\r\n```bash session\r\n# yum install python-setuptools\r\n# easy_install -i http://pypi.doubanio.com/simple supervisor\r\n```\r\n* 软件安装\r\n```bash\r\n#! /bin/bash\r\n\r\n# 目录 /root/opt/src\r\nmkdir -p /root/opt && \\\r\ntar -zxf supervisor-4.0.0.tar.gz -C /root/opt && \\\r\ncd /root/opt/supervisor/elementtree-1.2.6-20050316 && python setup.py install && \\\r\ncd /root/opt/supervisor/setuptools-20.6.7 && python setup.py install && \\\r\ncd /root/opt/supervisor/meld3-1.0.0 && python setup.py install && \\\r\ncd /root/opt/supervisor/supervisor-master && python setup.py install\r\nmkdir -p /etc/supervisord.conf.d &&\\\r\necho_supervisord_conf > /etc/supervisord.conf &&\\\r\necho -e \"[include]\\nfiles = /etc/supervisord.conf.d/*.conf\" >> /etc/supervisord.conf\r\n\r\n```\r\n\r\n\r\n* 创建目录\r\n```shell\r\nsudo mkdir -p /etc/supervisord.conf.d\r\n```\r\n\r\n* 配置文件 sudo vi /etc/supervisord.conf.d/gollum.conf\r\n```conf\r\n[program:gollum]\r\ncommand=gollum /wiki --config /wiki/config.rb --css /wiki/custom.css\r\nuser =root\r\nautostart=true\r\nstdout_logfile=/tmp/gollum.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/gollum-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n* 配置文件 sudo vi /etc/supervisord.conf.d/redis.conf\r\n```conf\r\n[program:redis]\r\ncommand=/root/opt/redis-3.0.7/redis-server\r\nuser=root\r\nautostart=true\r\nstdout_logfile=/tmp/redis.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/redis-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n* 配置文件 sudo vi /etc/supervisord.conf.d/es.conf\r\n```conf\r\n[program:es]\r\ncommand=/root/opt/elasticsearch-1.7.1/bin/elasticsearch -Xmx2g -Xms2g\r\nuser=root\r\nautostart=true\r\nstdout_logfile=/tmp/es.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/es-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n* `Tomcat` +\r\n配置文件 sudo vi /etc/supervisord.conf.d/tomcat.conf\r\n```conf\r\n[program:tomcat]\r\ncommand=/usr/tomcat/apache-tomcat-7.0.62/bin/catalina.sh run\r\nuser=root\r\nautostart=true\r\nstdout_logfile=/tmp/tomcat.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/tomcat-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n* `Mysql` 配置文件 sudo vi /etc/supervisord.conf.d/mysql.conf\r\n```conf\r\n[program:mysql]\r\ncommand= /usr/bin/pidproxy /var/lib/mysql/mysql.pid /usr/bin/mysqld_safe --pid-file=/var/lib/mysql/mysql.pid\r\nuser = mysql\r\nstdout_logfile=/tmp/mysql.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/mysql-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n* `zookeeper` 配置文件 sudo vi /etc/supervisord.conf.d/zkServer.conf\r\n```conf\r\n[program:zkServer]\r\ncommand=/zookeeper-3.4.8/bin/zkServer.sh start-foreground\r\nstdout_logfile=/tmp/zk.log\r\nstdout_logfile_maxbytes=1MB\r\nstderr_logfile=/tmp/zkServer-error.log\r\nstderr_logfile_maxbytes=1MB\r\n```\r\n\r\n\r\n==== `CentOS-6.5` 开机启动脚本\r\n```bash:/linux/scripts/supervisor-centos6.5-init.sh```\r\n\r\n\r\n== supervisor-logging\r\n\r\n\r\n```\r\n# 安装 epel 扩展源 python-pip\r\nyum -y install epel-release python-pip\r\n\r\n# 安装 supervisor-logging\r\npip install supervisor-logging\r\n\r\n# 清理\r\nyum remove epel-release python-pip -y\r\nyum clean all\r\n```\r\n",
        "tags": [
            "进程管理"
        ]
    },
    {
        "uri": "//hugo/post/linux/svn-setup",
        "title": "svn 安装与配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= svn\r\n\r\n=== `svn`\r\n\r\n. **`svn`安装**\r\n```bash\r\nyum -y install subversion\r\nyum -y install mod_dav_svn\r\n```\r\n. **创建`SVN`根目录**\r\n```bash\r\nmkdir -p $HOME/svn/\r\n```\r\n. **创建repo1库**\r\n```bash\r\nsvnadmin create $HOME/svn/repo1\r\n```\r\n\r\n=== `SVN`配置\r\n\r\n. **用户密码`passwd`配置**\r\n```bash\r\nvim /root/svn/repo1/conf/passwd\r\n=\r\nxyc = 123\r\nlyf = 123\r\n```\r\n\r\n. **权限控制`authz`配置**\r\n```bash\r\n[groups]            =组\r\nadmin = xyc,lyf   =创建一个admin组，将用户加入到组\r\n[/]                 =根目录权限设置（就是“svn”这个文件夹）\r\n=aaa = rw            =aaa对svn下的所有版本库有读写权限\r\n[repo1:/]            =repo:/,表示对repo版本库下的所有资源设置权限\r\n@admin = rw         =admin组的用户对repo1版本库有读写权限\r\n```\r\n\r\n. **服务`svnserve.conf`配置**\r\n```bash\r\n[general]\r\n=匿名访问的权限，可以是read,write,none,默认为read\r\nanon-access = none\r\n=使授权用户有写权限\r\nauth-access = write\r\n=密码数据库的路径\r\npassword-db = passwd\r\n=访问控制文件\r\nauthz-db = authz\r\n=认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字\r\nrealm = /opt/svn/repo\r\n```\r\n. **启动`SVN`**\r\n```bash\r\nsvnserve -d -r /usr/local/svn       =指定SVN根目录\r\n```\r\n. **查看`SVN`进程**\r\n```bash\r\nps -ef|grep svnserve\r\n```\r\n. **检测`SVN` 端口**\r\n```bash\r\nnetstat -ln |grep 3690\r\n```\r\n. **停止重启`SVN`**\r\n```bash\r\n killall svnserve\r\n```\r\n\r\n=== 启服务器及测试\r\n. **启`SVN`服务，并指定`SVN`的根目录**\r\n```bash\r\nsvnserve -d -r /usr/local/svn\r\n```\r\n\r\n. **使用`checkout`导出文件**\r\n```bash\r\nsvn checkout svn://127.0.0.1/repo1/xyc /usr/local/web/xyc      =本机测试，必需写127.0.0.1\r\n```\r\n\r\n=== 项目自动发布\r\n\r\n. **配置`svn post-commit`钩子**\r\n```bash\r\n=!/bin/bash\r\nexport LANG=\"zh_CN.UTF-8\"\r\nexport LANG=\"zh_CN.UTF-8\"\r\nexport LC_CTYPE=\"zh_CN.UTF-8\"\r\nsvn update /usr/local/web/xyc/ --username=svnuser --password=svnpass --non-interactive\r\n```\r\n. **授予可执行权限**\r\n```bash\r\nchmod a.x /usr/local/svn/repo1/hooks/post-commit\r\n```\r\n\r\n\r\n=== `Svn` 命令\r\n\r\n* 获取本地仓库项目版本号\r\n```bash\r\nsvn info | awk -F':' '{if($1 == \"Revision\"){gsub(/ /,\"\",$2);print $2}}'\r\n```\r\n`gsub(/ /,\"\",$2)` 去除空格\r\n\r\n* 切换版本\r\n```bash\r\nsvn merge -r rHEAD:5230 svn://196.168.1.224/project/b2b\r\n```\r\n最新版 ---> 5230版\r\n\r\n\r\n=== 测试分支和主分支合并\r\n```bash\r\n#!/bin/bash\r\n\r\n#revision\r\nFROM=$1\r\nEND=$2\r\n\r\nDEV=/e/IntelliJ-1/dev-2/\r\nSTABLE=/d/resource/b2b/\r\n\r\nif [ ! -f ${STABLE}merge.sh ];\r\nthen\r\n  cat  ${STABLE}update.txt\r\n\r\ncd $STABLE && \\\r\ncat update.txt | awk '{gsub(\"\\\\\\\\\",\"/\");print $0}' | xargs -I tmp sh merge.sh tmp $2\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/ubuntu",
        "title": "ubuntu",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= Ubuntu\r\n== 基础配置\r\n* 查看 `hosts`\r\n```bash\r\ncat /etc/hostname\r\n```\r\n* 环境变量\r\n```vim\r\nJAVA_HOME=\"/home/vagrant/opt/sof/jdk1.7.0_79\"   #java环境变量\r\nANT_HOME=\"/home/vagrant/opt/sof/apache-ant-1.9.4\" #ant环境变量\r\nCLASSPATH=\".:$JAVA_HOME/lib:$ANT_HOME/lib\"\r\nPATH=\"$ANT_HOME/bin:$JAVA_HOME/bin:$PATH\"\r\n```\r\n* 主机与 `ip` 的映射\r\n```bash\r\ncat /etc/hosts\r\n```\r\n* 编辑 `sources.list`\r\n```bash\r\nvi /etc/apt/sources.list\r\n```\r\n* 更新\r\n```bash\r\napt-get update\r\n```\r\n* 查看已安装软件列表\r\n```bash\r\ndpkg -l | awk '{print $2}'\r\n```\r\n\r\n* **ubuntu-14**网易源\r\n```\r\ndeb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\r\n```\r\n* **阿里源**\r\n```\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\r\n```\r\n* **安装Virtualbox**\r\n```bash\r\n#添加软件源\r\nsudo sh -c 'echo \"deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib\" >> /etc/apt/sources.list.d/virtualbox.list'\r\n#对于Linux Mint来说，请以该系统基于Ubuntu发行版的名称替换$(lsb_release -cs)的代码部分，例如trusty, precise, raring, 等。\r\n#然后下载和导入软件源密钥：\r\nwget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -\r\n#最后，你就可以通过你的软件管理器来安装 virtualbox-4.3 或者通过运行以下命令来安装：\r\nsudo apt-get update\r\nsudo apt-get install virtualbox-4.3\r\n```\r\n* **VirtualBox Guest Additions 安装**\r\n```bash\r\n#挂载\r\nsudo mount -o loop -t iso9660 VBoxGuestAdditions.iso /mnt\r\n#VirtualBox Guest Additions kernel modules 需要的依赖\r\nsudo apt-get install dkms build-essential linux-headers-$(uname -r)\r\n#安装VirtualBox Guest Additions\r\nsudo ./VBoxLinuxAdditions.run\r\n```\r\n* **Samba服务器配置**\r\n```bash\r\nsudo apt-get install samba\r\nsudo apt-get install cifs-utils\r\n```\r\n\r\n== 软件安装\r\n=== 配置samba实现文件夹共享\r\n. samba的安装:\r\n```Bash shell scripts\r\nsudo apt-get insall samba\r\nsudo apt-get install cifs-utils\r\n```\r\n. 创建共享目录:\r\n```shell\r\nmkdir /home/vagrant/wiki\r\nsudo chmod 777 /home/vagrant/wiki\r\n```\r\n. 创建Samba配置文件:\r\n\r\n\t. 保存现有的配置文件\r\n```bash\r\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak\r\n```\r\n\t. 修改现配置文件\r\n```bash\r\nsudo vi /etc/samba/smb.conf\r\n```\r\n在smb.conf最后添加\r\n```conf\r\n[global]\r\n    workgroup = WORKGROUP\r\n#   security = share\r\n    load printers = no\r\n\r\n[wiki]\r\n   comment = Wiki\r\n   path = /home/vagrant/wiki\r\n   writable = yes\r\n   browseable = yes\r\n   guest ok = yes\r\n\r\n[images]\r\n   comment = images\r\n   path = /home/vagrant/images\r\n   writable = yes\r\n   browseable = yes\r\n   guest ok = yes\r\n```\r\n. 创建samba帐户\r\n```bash\r\n  sudo touch /etc/samba/smbpasswd\r\n  sudo smbpasswd -a vagrant\r\n```\r\n然后会要求你输入samba帐户的密码\r\n\r\n ［如果没有第四步，当你登录时会提示 session setup failed: NT_STATUS_LOGON_FAILURE］\r\n\r\n. 重启samba服务器\r\n```bash\r\nsudo /etc/init.d/samba restart\r\n#或\r\nsudo service smbd restart\r\n```\r\n. 测试\r\n```bash\r\nsmbclient -L //localhost/share\r\n```\r\n. 使用\r\n\r\n可以到windows下输入ip使用了，在文件夹处输入 \"\\\\\" + \"Ubuntu机器的ip或主机名\" + \"\\\\\" + \"share\"\r\n\r\n== 网络\r\n. 重启网卡 +\r\n`sudo /etc/init.d/networking restart`\r\n. 修改DNS\r\n```bash\r\n# sudo vi /etc/resolv.conf\r\nnameserver 114.114.114.114\r\n```\r\n. `mount.cifs`\r\n```bash session\r\n$ sudo apt-get install cifs-utils\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/vagrant",
        "title": "vagrant 错误",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= vagrant\r\n\r\n== 脚本启动\r\n```sh:/linux/scripts/start-vagrant.sh```\r\n\r\n== alpine\r\n\r\n* Vagrantfile\r\n```ruby\r\nVagrant.configure(2) do |config|\r\n  config.vm.synced_folder \".\", \"/vagrant\", disabled: true\r\n  config.ssh.private_key_path = \"C:/Users/dishui/.ssh/id_rsa\"\r\n  config.ssh.forward_agent = true\r\n  config.vm.define \"gollum\" do |gollum|\r\n    gollum.vm.box = \"gollum-1.0\"\r\n    gollum.vm.hostname = \"gollum\"\r\n    gollum.vm.network \"private_network\", ip: \"192.168.137.13\",name: \"VirtualBox Host-Only Ethernet Adapter\"\r\n  end\r\n  config.vm.provider \"virtualbox\" do |vb|\r\n    vb.memory = \"512\"\r\n  end\r\nend\r\n```\r\n\r\n```\r\n# -*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\napp_servers = {\r\n    :rancher1 => '192.168.137.20',\r\n    :rancher2 => '192.168.137.21'\r\n}\r\n\r\nVagrant.configure(2) do |config|\r\n  config.vm.synced_folder \".\", \"/vagrant\", disabled: true\r\n  config.ssh.insert_key = false\r\n\r\n  app_servers.each do |app_server_name, app_server_ip|\r\n    config.vm.define app_server_name do |coreos|\r\n    coreos.vm.box = \"Core-beta-1235.2.0\"\r\n      coreos.vm.hostname = app_server_name.to_s\r\n      coreos.vm.network :private_network, ip: app_server_ip,name: \"VirtualBox Host-Only Ethernet Adapter\"\r\n      coreos.vm.provider \"virtualbox\" do |vb|\r\n      vb.memory = \"512\"\r\n      end\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\n== Error\r\n\r\n`vagrant up` 出现导入错误 ::\r\n\r\nimage::{img}/img/error/vagrant-up.png[]\r\n---\r\nFix\r\n\r\nimage::{img}/img/error/vagrant-up-fix.png[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/vagrant",
        "title": "Vagrant常用命令",
        "content": "\r\nVagrant常用命令\r\n添加box\r\n`bash\r\n到vagrant所在目录\r\ncd D:\\vagrant\\CentOS\r\nvagrant box add ubuntu-14.04 trusty-server-cloudimg-amd64-vagrant-disk1.box\r\n`\r\n初始化\r\n`cmd\r\n打开目录\r\ncd D:\\vagrant\\work\r\n如果你添加的box名称不是base，那么需要在初始化的时候指定名称，例如\r\nvagrant init ubuntu14.04\r\n`\r\n启动虚拟机\r\n`\r\nvagrant up\r\n`\r\nssh到虚拟机\r\n`\r\nvagrant ssh\r\n`\r\n重启虚拟机（重新载入配置文件）\r\n`\r\nvagrant reload\r\n`\r\n打包分发\r\n`\r\nvagrant package\r\n`\r\n\r\n Vagrantfile\r\n配置文件\r\n`ruby\r\nVagrant.configure(2) do |config|\r\n  config.vm.define \"u1\" do |u1|\r\n    u1.vm.box = \"ubuntu-14.04-1\"\r\n    u1.vm.hostname = \"u1\"\r\n    u1.vm.network \"private_network\", ip: \"192.168.137.11\"\r\n  end\r\n  config.vm.define \"u2\" do |u2|\r\n    u2.vm.box = \"ubuntu-14.04-1\"\r\n    u2.vm.hostname = \"u2\"\r\n    u2.vm.network \"private_network\", ip: \"192.168.137.22\"\r\n  end\r\n  config.vm.provider \"virtualbox\" do |vb|\r\n    vb.memory = \"1768\"\r\n  end\r\nend\r\n`\r\n命令\r\n`\r\nxshell 连接\r\nssh vagrant@127.0.0.1 2222\r\n`\r\nIssuse\r\n`\r\n \"rsync\" could not be found on your PATH. Make sure that rsync\r\n关闭 sync\r\nconfig.vm.synced_folder '.', '/home/vagrant/sync', disabled: true\r\n`\r\n\r\n Vagrant issues\r\nssh Time-out\r\n`bash\r\n添加vagrant 用户用户组\r\ngroupadd vagrant\r\nuseradd -g vagrant vagrant\r\nmkdir -pv /home/vagrant\r\n\r\ncd /home/vagrant\r\nwget https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub -O .ssh/authorized_keys --no-check-certificate\r\n授权\r\nsudo -u vagrant chmod 700 .ssh\r\nsudo -u vagrant chmod 600 .ssh/authorized_keys\r\nsudo -u vagrant chown -R vagrant:vagrant .ssh\r\n`\r\n\r\n\r\n\r\nIf you look above, you should be able to see the error(s) that\r\nVagrant had when attempting to connect to the machine. These errors\r\nare usually good hints as to what may be wrong.\r\n\r\nIf you're using a custom box, make sure that networking is properly\r\nworking and you're able to connect to the machine. It is a common\r\nproblem that networking isn't setup properly in these boxes.\r\nVerify that authentication configurations are also setup properly,\r\nas well.\r\n\r\n\r\n\r\n\r\n",
        "tags": [
            "vagrant"
        ]
    },
    {
        "uri": "//hugo/post/linux/vim",
        "title": "vim编辑器",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\nvim编辑器\r\n\r\nvim模式：\r\n\r\n    编辑模式(命令模式)\r\n    输入模式\r\n    末行模式\r\n\r\n模式转换：\r\n\r\n    编辑--输入：\r\n    i: 在当前光标所在字符的前面，转为输入模式；\r\n    a: 在当前光标所在字符的后面，转为输入模式；\r\n    o: 在当前光标所在行的下方，新建一行，并转为输入模式；\r\n    --\r\n    I：在当前光标所在行的行首，转换为输入模式\r\n    A：在当前光标所在行的行尾，转换为输入模式\r\n    O：在当前光标所在行的上方，新建一行，并转为输入模式；\r\n    输入--编辑：\r\n      ESC\r\n      \r\n    编辑--末行：\r\n      ：\r\n      \r\n    末行--编辑：\r\n      ESC, ESC\r\n\r\n\r\n 一、打开文件\r\n\r\n vim /path/to/somefile\r\n\r\n    vim +# :打开文件，并定位于第#行 \r\n    vim +：打开文件，定位至最后一行\r\n    vim +/PATTERN : 打开文件，定位至第一次被PATTERN匹配到的行的行首\r\n\r\n    默认处于编辑模式\r\n  \r\n二、关闭文件\r\n\r\n    1、末行模式关闭文件\r\n    :q  退出\r\n    :wq 保存并退出\r\n    :q! 不保存并退出\r\n    :w 保存\r\n    :w! 强行保存\r\n    :wq -- :x\r\n    \r\n    2、编辑模式下退出\r\n    ZZ: 保存并退出\r\n 三、移动光标(编辑模式)\r\n\r\n 1、逐字符移动：\r\n\r\n`\r\n  h: 左\r\n  l: 右\r\n  j: 下\r\n  k: 上\r\n #h: 移动#个字符；\r\n`\r\n \r\n 2、以单词为单位移动\r\n\r\n`\r\n  w: 移至下一个单词的词首\r\n  e: 跳至当前或下一个单词的词尾\r\n  b: 跳至当前或前一个单词的词首\r\n  ---\r\n  #w: \r\n`\r\n\r\n 3、行内跳转：\r\n\r\n`\r\n  0: 绝对行首\r\n  ^: 行首的第一个非空白字符\r\n  $: 绝对行尾\r\n`\r\n\r\n 4、行间跳转\r\n\r\n`\r\n  #G：跳转至第#行；\r\n  G：最后一行\r\n  ---\r\n  末行模式下，直接给出行号即可\r\n` \r\n\r\n四、翻屏\r\n\r\n    Ctrl+f: 向下翻一屏\r\n    Ctrl+b: 向上翻一屏\r\n    Ctrl+d: 向下翻半屏\r\n    Ctrl+u: 向上翻半屏\r\n\r\n 五、删除单个字符\r\n`\r\nx: 删除光标所在处的单个字符\r\nx: 删除光标所在处及向后的共个字符\r\n`\r\n六、删除命令: d\r\n`\r\nd命令跟跳转命令组合使用；\r\ndw, #de, #db\r\n\r\ndd: 删除当前光标所在行\r\ndd: 删除包括当前光标所在行在内的行；\r\n末行模式下：\r\nStartADD,EndADDd\r\n  .: 表示当前行\r\n  $: 最后一行\r\n  +#: 向下的#行\r\n`\r\n  \r\n七、粘贴命令 p\r\n`\r\np: 如果删除或复制为整行内容，则粘贴至光标所在行的下方，如果复制或删除的内容为非整行，则粘贴至光标所在字符的后面；\r\nP: 如果删除或复制为整行内容，则粘贴至光标所在行的上方，如果复制或删除的内容为非整行，则粘贴至光标所在字符的前面；\r\n`\r\n 八、复制命令 y\r\n    用法同d命令\r\n  \r\n九、修改：先删除内容，再转换为输入模式\r\n    c: 用法同d命令\r\n\r\n 十、替换：r\r\n    R: 替换模式\r\n\r\n十一、撤消编辑操作 u\r\n    u：撤消前一次的编辑操作\r\n      连续u命令可撤消此前的n次编辑操作\r\n    u: 直接撤消最近#次编辑操作\r\n    ---\r\n    撤消最近一次撤消操作：Ctrl+r\r\n\r\n十二、重复前一次编辑操作\r\n    .\r\n\r\n 十三、可视化模式\r\n    v: 按字符选取\r\n    V：按矩形选取\r\n\r\n十四、查找\r\n    /PATTERN\r\n    ?PATTERN\r\n      n\r\n      N\r\n\r\n 十五、查找并替换\r\n\r\n    在末行模式下使用s命令\r\n    ADDR1,ADDR2s@PATTERN@string@gi\r\n    1,$\r\n    %：表示全文\r\n\r\n 练习：将/etc/yum.repos.d/server.repo文件中的ftp://instructor.example.com/pub替换为http://172.16.0.1/yum\r\n\r\n`\r\n%s/ftp:\\/\\/instructor\\.example\\.com\\/pub/http:\\/\\/172.16.0.1\\/yum/g\r\n%s@ftp://instructor\\.example\\.com/pub@http://172.16.0.1/yum@g\r\n`\r\n\r\n十六、使用vim编辑多个文件\r\n    vim FILE1 FILE2 FILE3\r\n    :next 切换至下一个文件\r\n    :prev 切换至前一个文件\r\n    :last 切换至最后一个文件\r\n    :first 切换至第一个文件\r\n    \r\n    退出\r\n    :qa 全部退出\r\n\r\n 十七、分屏显示一个文件\r\n    Ctrl+w, s: 水平拆分窗口\r\n    Ctrl+w, v: 垂直拆分窗口\r\n    ---\r\n    在窗口间切换光标：\r\n    Ctrl+w, ARROW\r\n    ---\r\n    :qa 关闭所有窗口\r\n\r\n十八、分窗口编辑多个文件\r\n    vim -o : 水平分割显示\r\n    vim -O : 垂直分割显示\r\n\r\n 十九、将当前文件中部分内容另存为另外一个文件\r\n    末行模式下使用w命令\r\n    :w\r\n    :ADDR1,ADDR2w /path/to/somewhere\r\n\r\n二十、将另外一个文件的内容填充在当前文件中\r\n    :r /path/to/somefile\r\n\r\n 二十一、跟shell交互\r\n    :! COMMAND    \r\n\r\n二十二、高级话题\r\n\r\n1、显示或取消显示行号\r\n\r\n`\r\n      :set number\r\n      :set nu\r\n      :set nonu\r\n`\r\n\r\n2、显示忽略或区分字符大小写\r\n\r\n`\r\n:set ignorecase\r\n:set ic\r\n--\r\n:set noic\r\n`\r\n\r\n3、设定自动缩进\r\n\r\n`\r\n:set autoindent\r\n:set ai\r\n:set noai\r\n`\r\n\r\n4、查找到的文本高亮显示或取消\r\n\r\n`\r\n:set hlsearch\r\n:set nohlsearch\r\n`\r\n\r\n5、语法高亮\r\n\r\n`\r\n:syntax on\r\n:syntax off\r\n`\r\n\r\n 二十三、配置文件\r\n\r\n`bash\r\n/etc/vimrc\r\n~/.vimrc\r\nii映射ESC键\r\nimap ii Esc\r\n`",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/virtualbox",
        "title": "virtualbox错误",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n!-- toc --\r\nVirtualBox Tip\r\n\r\n VBox中出现UUID have already exists解决方法\r\n\r\n进入到VBoxManage.exe所在目录\r\n    `bash\r\n    # 参数:虚拟vdi硬盘路径\r\n    VBoxManage.exe internalcommands sethduuid G:\\VirtualMachine\\CentOS-WEB\\CentOS-WEB-01.vdi\r\n    `\r\n\r\n通信问题\r\nhost-only模式下\r\n    主机ping通虚拟机  √\r\n    虚拟机ping主机 ✘\r\n`\r\n关闭win10防火墙\r\n`\r\n\r\n 修改硬盘大小\r\n\r\n`bash\r\n7d91f211-d3e4-4185-bd9a-314c9b39856d\r\n修改成40G\r\nVBoxManage modifyhd uuid –-resize 40960\r\n`",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/yum",
        "title": "yum基础操作",
        "content": "\r\n= yum\r\n\r\n=== `yum` 源\r\n\r\n. http://mirrors.aliyun.com/repo/[阿里云 `yum` 源]\r\n\r\n. http://mirrors.aliyun.com/repo/\r\n. 备份你的原镜像文件，以免出错后可以恢复\r\n+\r\n```\r\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\r\n```\r\n. 下载新的 `CentOS-Base.repo`  到 `/etc/yum.repos.d/`\r\n+\r\n```\r\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\r\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\r\n```\r\n\r\n. 下载新的 `epel-7.repo`  到 `/etc/yum.repos.d/`\r\n+\r\n```\r\ncurl -o /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo\r\n```\r\n\r\n\r\n\r\n. 运行 `yum makecache` 生成缓存\r\n+\r\n```\r\nyum clean all\r\nyum makecache\r\n```\r\n\r\n\r\n=== yum安装rpm包本地不清除的方法\r\n\r\n```bash\r\n[root@c1 ~]# sed -i 's=keepcache=0=keepcache=1=g' /etc/yum.conf\r\n[root@c1 ~]# grep keepcache /etc/yum.conf\r\nkeepcache=1\r\n```\r\n\r\n=== yum 安装软件\r\n\r\n```\r\nyum install heartbeat -y     = 执行两遍\r\n\r\n```\r\n\r\n=== yum 只下载不安装\r\n\r\n```\r\n# 安装yum-downloadonly包 或 yum-plugin-downloadonly\r\nyum install yum-downloadonly\r\n\r\n#使用\r\nyum install httpd --downloadonly --downloaddir=/tmp/rpm\r\n```\r\n\r\n=== yum 安装到指定目录\r\n\r\n```\r\nyum install --installroot=/usr/src/ vim\r\n```\r\n\r\n=== yum 安装lrzsz 文件上传\r\n\r\n```\r\n yum -y install lrzsz\r\n```\r\n\r\n=== yum服务器配置\r\n```\r\n. 安装工具createrepo\r\nyum install createrepo\r\n\r\n. 建立repo发布目录 (如果使用存在的目录,飘过)\r\nmkdir /tmp/rpm\r\n\r\n. 用createrepo生成meta信息\r\ncreaterepo -o /tmp/rpm /tmp/rpm\r\n```\r\n\r\n=== yum客户端配置\r\n\r\n```\r\n[root@CentOS-Web-02 ~]# cat /etc/yum.repos.d/Local-rpm.repo\r\n\r\n[Local-rpm]\r\nname=Local-rpm\r\nbaseurl=file:///tmp/rpm\r\nenabled=1\r\ngpgcheck=0\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6\r\n\r\n# 客户端更新缓存\r\nyum clean all     //可以不用\r\nyum makecache\r\n```\r\n\r\n\r\n=== 安装 `nc`,`telnet`\r\n```\r\nyum install telnet nmap-ncat -y\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/linux/zookeeper",
        "title": "zookeeper基础",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== zookeeper\r\n\r\n```bash\r\ncreate /zk-book 123\r\n\r\nls /zk-book\r\n\r\nget /zk-book\r\n\r\n\r\n```\r\n\r\n=== ZooKeeper 常用四字命令：\r\n\r\n> ZooKeeper 支持某些特定的四字命令字母与其的交互。它们大多是查询命令，用来获取 ZooKeeper 服务的当前状态及相关信息。用户在客户端可以通过 telnet 或 nc 向 ZooKeeper 提交相应的命令\r\n\r\n. 来查看哪个节点被选择作为follower或者leader\r\n```\r\necho stat|nc 127.0.0.1 2181\r\n```\r\n. 测试是否启动了该Server，若回复imok表示已经启动\r\n```\r\necho ruok|nc 127.0.0.1 2181\r\n```\r\n. 列出未经处理的会话和临时节点。\r\n```\r\necho dump| nc 127.0.0.1 2181\r\n```\r\n. 关掉server\r\n```\r\necho kill | nc 127.0.0.1 2181\r\n```\r\n. 输出相关服务配置的详细信息。\r\n```\r\necho conf | nc 127.0.0.1 2181\r\n```\r\n. 列出所有连接到服务器的客户端的完全的连接 / 会话的详细信息。\r\n```\r\necho cons | nc 127.0.0.1 2181\r\n```\r\n. 输出关于服务环境的详细信息（区别于 conf 命令）。\r\n```\r\necho envi |nc 127.0.0.1 2181\r\n```\r\n. 列出未经处理的请求。\r\n```\r\necho reqs | nc 127.0.0.1 2181\r\n```\r\n. 列出服务器 watch 的详细信息。\r\n```\r\necho wchs | nc 127.0.0.1 2181\r\n```\r\n. 通过 session 列出服务器 watch 的详细信息，它的输出是一个与 watch 相关的会话的列表。\r\n```\r\n echo wchc | nc 127.0.0.1 2181\r\n```\r\n. 通过路径列出服务器 watch 的详细信息。它输出一个与 session 相关的路径。\r\n```\r\necho wchp | nc 127.0.0.1 2181\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mailiqing",
        "title": "Mailiqing 服务器配置",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n== Mai沥青\r\n\r\n=== 正式服务器详情\r\n|===\r\n|服务器名称 |IP |类型\r\n\r\n|Mlq-Web-Zhengshi\r\n|192.168.1.128(内),116.90.81.70(外)\r\n|LVS+Keepalive\r\n\r\n|Mlq-Web-R2\r\n|`192.168.1.125`\r\n|Nginx+Web\r\n\r\n|Mlq-Web-R1\r\n|192.168.1.124\r\n|Nginx+Web\r\n\r\n|Mlq-Data\r\n|192.168.1.126\r\n|图片+索引\r\n\r\n|Mlq-Sql-Master\r\n|192.168.1.127\r\n|数据库+缓存(redis)\r\n|===\r\n\r\n=== 启动步骤\r\n\r\n. 启动数据库,缓存\r\n```bash\r\nssh 192.168.1.127\r\npassword: jinzhaoluhua\r\n#数据库\r\nservice mysqld start\r\n#redis\r\ncd /root/opt/redis\r\n./redis-server\r\n```\r\n. 启动图片服务(nfs),索引(es)\r\n```shell\r\nssh Mlq-Data\r\n# 图片服务(nfs)\r\nservice nfs restart\r\n# 索引(es)\r\nopt/elasticsearch-1.7.1/bin/elasticsearch -Xmx2g -Xms2g -d\r\n```\r\n. 启动Web\r\n```bash\r\nssh Mlq-Web-R2\r\n\r\nsupervisorctl restart tomcat\r\n#如果没有图片\r\nmount -t nfs -o rsize=8192,wsize=8192 192.168.1.126:/usr/mailiqing/data /usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/data\r\n```\r\n**ps**: 如果不能访问 关闭防火墙 `service iptables stop`\r\n\r\n\r\n\r\n== 216测试服务器\r\n\r\n[IMPORTANT]\r\n====\r\n|===\r\n|服务器名称 |IP |用户名,密码\r\n\r\n|216\r\n|196.168.1.216\r\n|root,123\r\n\r\n|===\r\n. 访问地址 +\r\n`196.168.1.216`\r\n. 使用数据库 +\r\n`mailiqing`\r\n. 关闭 `tomcat` +\r\n`supervisorctl stop tomcat`\r\n. 重启 `tomcat` +\r\n`supervisorctl restart tomcat`\r\n====\r\n\r\n\r\n== app\r\n\r\n=== ssh\r\nip::\r\n\t116.90.81.68\r\n端口:: 2222\r\n\r\n用户名:: core\r\n密码:: core123\r\n\r\n查看日志::\r\n```bash\r\ntail -f ~/opt/src/version2/web-data/tmp/tomcat.log\r\n```\r\n\r\n== 网盘\r\n\r\n=== 地址\r\n> http://196.168.1.33:9080/\r\n\r\n=== 用户名/密码\r\n[cols=\"2\"]\r\n|===\r\n|用户名\r\n|密码\r\n\r\n|tianxiaofei@mailiqing.com\r\n|123456\r\n|shangdonglei@mailiqing.com\r\n|123456\r\n|wangjianhua@mailiqing.com\r\n|123456\r\n|tianyuwei@mailiqing.com\r\n|123456\r\n|zhoukai@mailiqing.com\r\n|123456\r\n|lvshaonan@mailiqing.com\r\n|123456\r\n|liuyanfang@mailiqing.com\r\n|123456\r\n|sunjianming@mailiqing.com\r\n|123456\r\n|===\r\n\r\n\r\n== Mai沥青 物流\r\n\r\n=== 数据库\r\nip::\r\n\t196.168.1.33\r\n端口:: 3307\r\n用户名:: wuliu\r\n密码:: 111111\r\n\r\n\r\n\r\n=== 正式服务器详情 2\r\n\r\n```bash\r\ncd /home/core/opt/src/version2\r\ndocker-compose -f mysql.yml start\r\ndocker-compose -f es.yml start\r\ndocker-compose -f koto.yml start\r\ndocker-compose -f gollum.yml start\r\ndocker-compose -f registry.yml start\r\ndocker-compose -f nginx.yml start\r\ndocker-compose -f logio.yml start\r\n```\r\n\r\n\r\napp\r\nbanner 尺寸\r\n\r\n[cols=\">,^\"]\r\n|===\r\n|类别\r\n|尺寸(宽 X 高)\r\n\r\n|banner\r\n|750X486\r\n\r\n|热门推荐\r\n|312X197\r\n\r\n|商品图片\r\n|750X458\r\n\r\n|店铺logo(长)\r\n|146X56\r\n|===\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/LaTeX-Math-Symbols",
        "title": "LaTeX 数学符号",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: LaTeX\r\n\r\n== Greek Letters\r\n\r\nimage::{img}/img/LaTeX/t1.gif[]\r\n---\r\n[quote]\r\n----\r\n \\alpha               \\theta               o                  \\tau\r\n \\beta                \\vartheta           \\pi                 \\upsilon\r\n \\gamma               \\gamma              \\varpi              \\phi\r\n \\delta               \\kappa              \\rho                \\varphi\r\n \\epsilon             \\lambda             \\varrho             \\chi\r\n \\varepsilon          \\mu                 \\sigma              \\psi\r\n \\zeta                \\nu                 \\varsigma           \\omega\r\n \\eta                 \\xi\r\n\r\n \\Gamma               \\Lambda             \\Sigma              \\Psi\r\n \\Delta               \\Xi                 \\Upsilon            \\Omega\r\n \\Theta               \\Pi                 \\Phi\r\n\r\n----\r\n\r\n== Binary Operation Symbols\r\n\r\nimage::{img}/img/LaTeX/t2.gif[]\r\n---\r\n[quote]\r\n----\r\n \\pm                  \\cap                \\diamond                    \\oplus\r\n \\mp                  \\cup                \\bigtriangleup              \\ominus\r\n \\times               \\uplus              \\bigtriangledown            \\otimes\r\n \\div                 \\sqcap              \\triangleleft               \\oslash\r\n \\ast                 \\sqcup              \\triangleright              \\odot\r\n \\star                \\vee                \\lhd$^b$                    \\bigcirc\r\n \\circ                \\wedge              \\rhd$^b$                    \\dagger\r\n \\bullet              \\setminus           \\unlhd$^b$                  \\ddagger\r\n \\cdot                \\wr                 \\unrhd$^b$                  \\amalg\r\n +                    -\r\n\r\n$^b$ Not predefined in a format based on {\\tt basefont.tex}.\r\n     Use one of the style options\r\n     {\\tt oldlfont}, {\\tt newlfont}, {\\tt amsfonts} or {\\tt amssymb}.\r\n----\r\n\r\n== Relation Symbols\r\n\r\nimage::{img}/img/LaTeX/t3.gif[]\r\n---\r\n[quote]\r\n----\r\n \\leq                 \\geq                \\equiv              \\models\r\n \\prec                \\succ               \\sim                \\perp\r\n \\preceq              \\succeq             \\simeq              \\mid\r\n \\ll                  \\gg                 \\asymp              \\parallel\r\n \\subset              \\supset             \\approx             \\bowtie\r\n \\subseteq            \\supseteq           \\cong               \\Join$^b$\r\n \\sqsubset$^b$        \\sqsupset$^b$       \\neq                \\smile\r\n \\sqsubseteq          \\sqsupseteq         \\doteq              \\frown\r\n \\in                  \\ni                 \\propto             =\r\n \\vdash               \\dashv              <                   >\r\n :\r\n----\r\n\r\n== Punctuation Symbols\r\n\r\nimage::{img}/img/LaTeX/t4.gif[]\r\n---\r\n[quote]\r\n----\r\n ,            ;           \\colon              \\ldotp              \\cdotp\r\n----\r\n\r\n== Arrow Symbols\r\n\r\nimage::{img}/img/LaTeX/t5.gif[]\r\n---\r\n[quote]\r\n----\r\n \\leftarrow                   \\longleftarrow              \\uparrow\r\n \\Leftarrow                   \\Longleftarrow              \\Uparrow\r\n \\rightarrow                  \\longrightarrow             \\downarrow\r\n \\Rightarrow                  \\Longrightarrow             \\Downarrow\r\n \\leftrightarrow              \\longleftrightarrow         \\updownarrow\r\n \\Leftrightarrow              \\Longleftrightarrow         \\Updownarrow\r\n \\mapsto                      \\longmapsto                 \\nearrow\r\n \\hookleftarrow               \\hookrightarrow             \\searrow\r\n \\leftharpoonup               \\rightharpoonup             \\swarrow\r\n \\leftharpoondown             \\rightharpoondown           \\nwarrow\r\n \\rightleftharpoons           \\leadsto$^b$\r\n----\r\n\r\n== Miscellaneous Symbols\r\n\r\nimage::{img}/img/LaTeX/t6.gif[]\r\n---\r\n[quote]\r\n----\r\n \\ldots               \\cdots              \\vdots              \\ddots\r\n \\aleph               \\prime              \\forall             \\infty\r\n \\hbar                \\emptyset           \\exists             \\Box$^b$\r\n \\imath               \\nabla              \\neg                \\Diamond$^b$\r\n \\jmath               \\surd               \\flat               \\triangle\r\n \\ell                 \\top                \\natural            \\clubsuit\r\n \\wp                  \\bot                \\sharp              \\diamondsuit\r\n \\Re                  \\|                  \\backslash          \\heartsuit\r\n \\Im                  \\angle              \\partial            \\spadesuit\r\n \\mho$^b$             .                   |\r\n----\r\n\r\n== Variable-sized Symbols\r\n\r\nimage::{img}/img/LaTeX/t7.gif[]\r\n---\r\n[quote]\r\n----\r\n \\sum                 \\bigcap             \\bigodot\r\n \\prod                \\bigcup             \\bigotimes\r\n \\coprod              \\bigsqcup           \\bigoplus\r\n \\int                 \\bigvee             \\biguplus\r\n \\oint                \\bigwedge\r\n----\r\n\r\n== Log-like Symbols\r\n\r\nimage::{img}/img/LaTeX/t8.gif[]\r\n---\r\n[quote]\r\n----\r\n\r\n \\arccos     \\cos       \\csc      \\exp      \\ker         \\limsup      \\min      \\sinh\r\n \\arcsin     \\cosh      \\deg      \\gcd      \\lg          \\ln\t      \\Pr       \\sup\r\n \\arctan     \\cot       \\det      \\hom      \\lim         \\log\t      \\sec      \\tan\r\n \\arg        \\coth      \\dim      \\inf      \\liminf      \\max\t      \\sin      \\tanh\r\n----\r\n\r\n== Delimiters\r\n\r\nimage::{img}/img/LaTeX/t9.gif[]\r\n---\r\n[quote]\r\n----\r\n (                    )                   \\uparrow            \\Uparrow\r\n [                    ]                   \\downarrow          \\Downarrow\r\n \\{                   \\}                  \\updownarrow        \\Updownarrow\r\n \\lfloor              \\rfloor             \\lceil              \\rceil\r\n \\langle              \\rangle             /                   \\backslash\r\n |                    \\|\r\n----\r\n\r\n== Large Delimiters\r\n\r\nimage::{img}/img/LaTeX/t10.gif[]\r\n---\r\n[quote]\r\n----\r\n  \\rmoustache        \\lmoustache         \\rgroup            \\lgroup\r\n  \\arrowvert         \\Arrowvert          \\bracevert\r\n----\r\n\r\n== Math mode accents\r\n\r\nimage::{img}/img/LaTeX/t11.gif[]\r\n---\r\n[quote]\r\n----\r\n \\hat{a}            \\acute{a}         \\bar{a}           \\dot{a}           \\breve{a}\r\n \\check{a}          \\grave{a}         \\vec{a}           \\ddot{a}          \\tilde{a}\r\n----\r\n\r\n== Some other constructions\r\n\r\nimage::{img}/img/LaTeX/t12.gif[]\r\n---\r\n[quote]\r\n----\r\n \\widetilde{abc}                     \\widehat{abc}\r\n \\overleftarrow{abc}                 \\overrightarrow{abc}\r\n \\overline{abc}                      \\underline{abc}\r\n \\overbrace{abc}                     \\underbrace{abc}\r\n \\sqrt{abc}                          \\sqrt[n]{abc}\r\n $f'$                                \\frac{abc}{xyz}\r\n----\r\n",
        "tags": [
            "LaTeX"
        ]
    },
    {
        "uri": "//hugo/post/mathematics/machine-learn",
        "title": "机器学习",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n\r\n参考 ::\r\n. [[http://www.nlpcn.org/]]\r\n. [[https://github.com/NLPchina/elasticsearch-sql]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/mappings-and-functions",
        "title": "逻辑量词",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n==== 逻辑量词\r\n\r\n全称量词 :: \\(\\forall\\)    任意\r\n存在量词 :: \\(\\exists\\)    存在\r\n\r\n对任意实数x,都存在比x更大的实数y ::\r\n\\(\\forall x \\in R \\; \\exists y \\in R \\; (y \\gt x) \\)\r\n\r\n幂函数的导数 ::\r\n\\((x^ \\mu)' = \\mu x^ \\mu -1\\) +\r\n\\((\\sqrt x)' = \\frac{1}{2\\sqrt x}\\)\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/mathjax-ref",
        "title": "Greek letters",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n==Greek letters\r\n\r\n\r\n参考 ::\r\n. [[http://blog.csdn.net/garfielder007/article/details/51646604]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/daoshu-moxing",
        "title": "导数的概念",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 导数的概念\r\n\r\n瞬时速度::\r\n\\(v = \\lim\\limits_{\\Delta t\\to 0} \\frac{\\Delta s}{\\Delta t} \\Rightarrow\r\nv(t) = s^`(t) = \\frac{ds}{dt}\\)\r\n\r\n切线斜率::\r\n\\(k = \\lim\\limits_{\\Delta x\\to 0} \\frac{\\Delta y}{\\Delta x} \\Rightarrow\r\nk = f'(x) = \\frac{dy}{dx}\\)\r\n\r\n线密度::\r\n\\(\\rho = \\lim\\limits_{\\Delta x\\to 0} \\frac{\\Delta m}{\\Delta x} \\Rightarrow\r\n\\rho = m'(x) = \\frac{dm}{dx}\\)\r\n\r\n=== 导数形式\r\n> 导数是一种特定的极限形式\r\n\r\n\\(\\lim\\limits_{\\Delta x\\to 0}\\frac{f(x+\\Delta x)-f(x)}{\\Delta x} = f'(x)\\)\r\n\r\n例: 设 \\( f'(3)=5 \\)\r\n\t求极限 \\( \\lim\\limits_{h\\to 0}\\frac{f(3+2h)-f(3)}{h} \\)\r\n\r\n解: \\( \\lim\\limits_{h\\to 0}\\frac{f(3+h)-f(3)}{h}=f'(3) \\)\r\n\r\n\\( \\lim\\limits_{h\\to 0}\\frac{f(3+2h)-f(3)}{h}=2\\lim\\limits_{h\\to 0}\\frac{f(3+2h)-f(3)}{2h} = 2f'(3)\\)\r\n\r\n\\(\r\n\\bbox[yellow,5px]\r\n{\r\n\\lim\\limits_{h\\to 0}\\frac{f(x_0+ah)-f(x_0)}{h}\r\n= af'(x_0)\r\n}\r\n\\)\r\n\r\n\\(\r\n\\bbox[yellow,5px]\r\n{\r\n\\lim\\limits_{h\\to 0}\\frac{f(x_0+bh)-f(x_0-ah)}{h}\r\n= (a+b)f'(x_0)\r\n}\r\n\\)\r\n\r\n==== 例子\r\n设 \\( f'(x_0)=-1 \\)\r\n求极限 \\( \\lim\\limits_{x\\to 0}\\frac{x}{f(x_0-2x)-f(x_0-h)} \\)\r\n\r\n解: \\( \\lim\\limits_{x\\to 0}\\frac{1}{\\frac{f(x_0-2x)-f(x_0-h)}{x}} = \\frac{1}{(-2+1)f'(x_0)} = \\frac{1}{-f'(x_0)} = 1\\)\r\n\r\n=== 单侧导数\r\n\r\n导数::\r\n\\( f'(x_0) = \\lim\\limits_{x\\to x_0}\\frac{f(x)-f(x_0)}{x-x_0}\\)\r\n\r\n左导数::\r\n\\( f^\\prime_-(x_0) = \\lim\\limits_{x\\to x_0^-}\\frac{f(x)-f(x_0)}{x-x_0}\\)\r\n\r\n右导数::\r\n\\( f^\\prime_+(x_0) = \\lim\\limits_{x\\to x_0^+}\\frac{f(x)-f(x_0)}{x-x_0}\\)\r\n\r\n> 导数存在的充分必要条件是左导数和右导数存在并且相等\r\n\\( f'(x_0) \\) 存在 \\( \\Longleftrightarrow f^\\prime_-(x_0)=f^\\prime_+(x_0)\\)\r\n\r\n如果 \\( f^\\prime_-(x_0) \\neq f^\\prime_+(x_0) \\)\r\n则 \\( f'(x_0) \\) 不存在\r\n\r\n单侧导数可以用来讨论分段函数在分段点处的导数\r\n\r\n例1 常数的导数 设 \\( f(x)=C \\),求 \\( f'(x) \\)\r\n解: \\( \\Delta y=f(x+\\Delta x)-f(x)=C-C=0 \\)\r\n\\( f'(x)= \\lim\\limits_{x\\to 0}\\frac{\\Delta y}{\\Delta x} = \\lim\\limits_{x\\to 0}\\frac{0}{\\Delta x}\\)\r\n\r\n> 常值函数处处可导,且导数为零 \\( ( C )'=0 \\)\r\n\r\n例2 设 \\( f(x)=x^n \\) (n 为正整数), 求 \\( f'(x) \\)\r\n\r\n解 \\( \\forall x_0 \\in R \\)\r\n\r\n\\(f(x)-f(x_0)=x^n - x_0^n\\)\r\n\r\n\\( =(x - x_0)(x^{n-1} + x^{n-2}x_0 + \\ldots + xx_0^{n-2} + x_0^{n-1}) \\)\r\n\r\n\\( f'(x_0)= \\lim\\limits_{\\Delta x\\to x_0}\\frac{f(x)-f(x_0)}{x-x_0} \\)\r\n\\( =\\lim\\limits_{\\Delta x\\to x_0}(x^{n-1} + x^{n-2}x_0 + \\ldots + xx_0^{n-2}+x_0^{n-1}) \\)\r\n\\( = (x_0^{n-1} + x_0^{n-2}x_0 + \\ldots + x_0x_0^{n-2}+x_0^{n-1}) = nx_0^{n-1} \\)\r\n\r\n\\(\r\n\\bbox[yellow,5px]\r\n{\r\na^n - b^n = (a-b)(a^{n-1} + a^{n-2}b + \\ldots + ab^{n-2} + b^{n-1})\r\n}\r\n\\)\r\n\r\n\r\n例: \\( (1 + x)^\\mu - 1 \\sim \\mu x (x \\rightarrow 0) \\)\r\n\r\n\\( (1+x)^{\\mu} - 1 = e^{\\ln(1 + x)^{\\mu}} \\)\r\n\r\n\\( e^{\\mu ln(1+x)} - 1 \\sim \\mu \\ln(1 + x) \\)\r\n\r\n\\( \\sim \\mu x \\)\r\n\r\n\\(\r\n\\bbox[yellow,5px]\r\n{\r\n\ta = e^{\\ln a}\r\n\te^{\\alpha} - 1 \\sim \\alpha ( \\alpha \\rightarrow 0)\r\n}\r\n\\)\r\n\r\n> 幂函数的导数\r\n\r\n\\(\r\n\\bbox[yellow,5px]\r\n{\r\n(x^{\\mu})' = \\mu x^{\\mu - 1}\r\n}\r\n\\)\r\n\r\n例如, \\( (x)' = 1 \\)\r\n\\( (x^2)' = 2x \\)\r\n\\( (x^3)' = 3x^2 \\)\r\n\r\n又如,\r\n\\( (\\sqrt{x})' = \\frac{1}{2 \\sqrt{x}} \\)  常用\r\n\r\n\\( (\\frac{1}{x})' = - \\frac{1}{x^2} \\)\r\n\r\n正弦函数处处可导,且导数为余弦函数\r\n\\( (sinx)' = cosx \\)\r\n\r\n余弦函数处处可导,且导数为正弦函数的相反数\r\n\\( (cosx)' = - sinx \\)\r\n\r\n指数函数处处可导\r\n\\( (a^x)' = a^x \\ln a \\)\r\n\r\n特别地\r\n\\( (e^x)' \\) = e^x\r\n\r\n对数函数处处可导\r\n\\( (\\log{_a} x )' = \\frac{1}{x \\ln a} \\)\r\n\r\n特别地\r\n\\( (\\ln x)' = \\frac{1}{x} \\)\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/gaojie-daoshu",
        "title": "高阶导数",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 高阶导数\r\n\r\n=== 二阶导数的记号\r\n\r\n\\( \\displaystyle f''(x) = [f'(x)]' \\)\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/hanshu-qiudao",
        "title": "函数求导",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n= 函数求导\r\n\r\n== 四大法则\r\n\r\n[stem]\r\n++++\r\n[u(x) \\pm v(x)]' = u'(x) + v'(x)\r\n++++\r\n\r\n[stem]\r\n++++\r\n[u(x)v(x)]' = u'(x)v(x) + u(x)v'(x)\r\n++++\r\n\r\n[stem]\r\n++++\r\n[\\frac{u(x)}{v(x)}]' = \\frac{u'(x)v(x)-u(x)v'(x)}{v^2(x)}'\r\n++++\r\n\r\n[stem]\r\n++++\r\n[\\frac{1}{v(x)}]' = - \\frac{v'(x)}{v^2(x)}\r\n++++\r\n\r\n\r\n[stem]\r\n++++\r\n[u \\pm v]' = u' \\pm v'\r\n++++\r\n\r\n[stem]\r\n++++\r\n(uv)' = u'v + uv'\r\n++++\r\n\r\n[stem]\r\n++++\r\n(\\frac{u}{v})' = \\frac{u'v-uv'}{v^2}\r\n++++\r\n\r\n推广\r\n[stem]\r\n++++\r\n[u + v + w]' = u' + v' + w'\r\n++++\r\n\r\n[stem]\r\n++++\r\n(uvw)' = u'vw + uv'w + uvw'\r\n++++\r\n\r\n[stem]\r\n++++\r\n\\displaystyle \\sum_{i=1}^n C_{i}u_{i})' = \\sum C_{i}u_{i}'\r\n++++\r\n\r\n线性组合的导数 = 导数的线性组合\r\n\r\n[stem]\r\n++++\r\n\\displaystyle \\prod_{i=1}^{n}u_i)' = \\sum_{i=1}^{n}u_1{\\ldots}u_i'{\\ldots}u_n\r\n++++\r\n\r\n六个三角函数的导数\r\n\r\n[stem]\r\n++++\r\n\\displaystyle\r\n(\\sin x)' = \\cos x \\qquad (\\cos x)' = - \\sin x \\\\[2ex]\r\n(\\tan x)' = \\sec^2 x \\qquad\t(\\cot x)' = - \\csc^2 x \\\\[2ex]\r\n(\\sec x)' = \\sec x \\tan x \\qquad (\\csc x)' = - \\csc x \\cot x\r\n++++\r\n\r\n\r\n== 函数求导法则2\r\n\r\n例子::\r\n[stem]\r\n++++\r\ny= \\sin 2x\r\n++++\r\n[stem]\r\n++++\r\n\\frac{d}{dx}(\\sin x) = \\cos x\r\n++++\r\n\r\n\r\n符合函数求导::\r\n\r\n[stem]\r\n++++\r\n\\frac{dy}{dx} = \\frac{dy}{du} \\cdot \\frac{du}{dx}\r\n++++\r\n\r\n定理3 (复合函数的求导法则)::\r\n\r\n> 设函数 stem:[u=g(x)] 在点x可导,而函数 stem:[y=f(u)] 在点 stem:[u=g(x)] 可导, 则复合函数 stem:[y=f(g(x))] 在点 x 可导,且有导数\r\n\r\n[stem]\r\n++++\r\n\\displaystyle \\frac{dy}{dx} = f'(u)g'(x)\r\n++++\r\n\r\n[stem]\r\n++++\r\n\\displaystyle \\frac{dy}{dx} = \\frac{dy}{du} \\frac{du}{dx}\r\n++++\r\n\r\n链式法则::\r\n\r\n[stem]\r\n++++\r\n\\displaystyle x \\rightarrow^g u \\rightarrow^f y\r\n++++\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/一阶线性微分方程",
        "title": "一阶线性微分方程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 一阶线性微分方程\r\n\r\n== 一阶线性微分方程\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_102207.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102339.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102423.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102520.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102548.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102652.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102724.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102820.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102844.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_102900.png[]\r\n---\r\n\r\n\r\n=== 常数变易法\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_102950.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_103054.png[]\r\n---\r\n\r\n=== 一阶线性方程的解的结构定理\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_103151.png[]\r\n---\r\n\r\n=== 例子\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_104309.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_104504.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_104537.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_110352.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_110431.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_110454.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_110556.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_110718.png[]\r\n---\r\n\r\n\r\n=== 一阶微分方程总结\r\n\r\nimage::{img}/img/gaoshu/2017-02-26_093702.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-26_093730.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/不定积分",
        "title": "不定积分",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 不定积分\r\n\r\n== 不定积分\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_091025.png[]\r\n\r\n=== 一个函数是否有原函数\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_091432.png[]\r\n---\r\n\r\n=== 原函数是否唯一\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_091542.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_091653.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_091744.png[]\r\n---\r\n\r\n==== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_091836.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_091929.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_092035.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_092108.png[]\r\n---\r\n\r\n=== 不定积分的基本性质\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_092646.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_093101.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_093135.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_093347.png[]\r\n---\r\n\r\n=== 每个导数公式都对应一个积分公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_093541.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_093823.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_094125.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_094206.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_094355.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_094436.png[]\r\n---\r\n\r\n==== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_094705.png[]\r\n---\r\n\r\n=== 不定积分性质\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_094930.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095036.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095123.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095156.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095222.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095251.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_095356.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/二次曲面",
        "title": "二次曲面",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 二次曲面\r\n\r\n== 二次曲面\r\n\r\n=== 常用的二次曲面的方程\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_164636.png[]\r\n---\r\n\r\n=== 球面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_164823.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-08_164856.png[]\r\n---\r\n\r\n=== 圆锥面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_164929.png[]\r\n---\r\n\r\n=== 圆柱面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_164959.png[]\r\n---\r\n\r\n=== 马鞍面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_165022.png[]\r\n---\r\n\r\n=== 直纹面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_165059.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-08_165125.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-08_165143.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-08_165153.png[]\r\n---\r\n\r\n=== 单叶双曲面\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_165228.png[]\r\n---\r\n\r\n=== 维维安妮曲线\r\n\r\nimage::{img}/img/gaoshu/2017-03-08_165450.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/二重积分",
        "title": "二重积分",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 二重积分\r\n\r\n== 二重积分\r\n\r\n\r\n\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_092338.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_092518.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_092559.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_092732.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_092752.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093438.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093516.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093536.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093608.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_093623.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093642.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093709.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093725.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093743.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093759.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093822.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_093838.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093859.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_093913.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/伯努利方程",
        "title": "伯努利方程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 伯努利方程\r\n\r\n== 伯努利方程\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_175041.png[]\r\n---\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/体积",
        "title": "体积",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 体积\r\n\r\n== 体积\r\n\r\nimage::{img}/img/gaoshu/2017-02-23_161331.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_161757.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_162013.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-23_162245.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_162350.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_162714.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_164305.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_164427.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_164635.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/偏导数",
        "title": "偏导数",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 偏导数\r\n\r\n== 偏导数\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153221.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153321.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153351.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153409.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153436.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153456.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153515.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153544.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153616.png[]\r\n---\r\n\r\n\r\n=== 偏导数的例子\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153659.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153720.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_153827.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_153855.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154009.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154038.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154053.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154105.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154119.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154132.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154132.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154132.png[]\r\n---\r\n\r\n\r\n=== 偏导数的几何意义\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_154353.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154440.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154454.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154509.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154524.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_154544.png[]\r\n---\r\n\r\n\r\n=== f(x,y) 的四个二阶偏导数\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_090448.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_090536.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_090600.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_090658.png[]\r\n---\r\n\r\n\r\n=== 克莱罗定理\r\n\r\nimage::{img}/img/gaoshu/2017-03-10_090754.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_090902.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_091044.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-10_091232.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/函数的单调性和极值",
        "title": "函数的单调性和极值",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 函数的单调性和极值\r\n\r\n== 函数的单调性和极值\r\n\r\n=== 函数单调性的判定定理\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_084154.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_084351.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_084521.png[]\r\n---\r\n\r\n=== 函数的极值\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_084903.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_084938.png[]\r\n---\r\n\r\n==== 极值的必要条件\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_085202.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_085425.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_085543.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_085634.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_090200.png[]\r\n---\r\n\r\n===== 极值的第一充分条件\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_090748.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_091226.png[]\r\n---\r\n\r\n===== 极值的第二充分条件\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_092546.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_093558.png[]\r\n---\r\n\r\n==== 最值\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_142739.png[]\r\n---\r\n\r\n===== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_142940.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_143217.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_143515.png[]\r\n---\r\n\r\n=== 推论\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_162957.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_163216.png[]\r\n---\r\n\r\n==== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_163216.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_163457.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_163906.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_164054.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_164155.png[]\r\n---\r\n\r\n=== 函数单调性应用\r\n\r\n==== 例6\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_164417.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_164700.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_164840.png[]\r\n---\r\n\r\n=== 利用单调性证明函数为正函数\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_165116.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_165452.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_165549.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_165914.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_170039.png[]\r\n---\r\n\r\n=== 利用函数的最值证明不等式\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_170234.png[]\r\n---\r\n\r\n=== 单调性证明方程有唯一的实根\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_170453.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_170650.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_170758.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_171026.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_171103.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_171131.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_171347.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-12_171516.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/分步积分法",
        "title": "分步积分法",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 分步积分法\r\n\r\n== 分步积分法\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_091309.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_091524.png[]\r\n---\r\n\r\n== 常见的分部积分的类型\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_091751.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_091922.png[]\r\n---\r\n\r\n=== 总结\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_092023.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_092131.png[]\r\n---\r\n\r\n== 分部积分的列表法解之\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_092437.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_092707.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_092748.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_092821.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_092853.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_093000.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_095332.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_095437.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_095556.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_095659.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/向量及其线性运算",
        "title": "向量及其线性运算",
        "content": "include::content/post/base.adoc[]\r\n:toc-title: 向量及其线性运算\r\n\r\n== 向量及其线性运算\r\n\r\nimage::{img}/img/gaoshu/2017-03-07_090305.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_091205.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_091508.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_091539.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_091635.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_092511.png[]\r\n---\r\n\r\n== 模 方向角 方向余弦\r\n\r\nimage::{img}/img/gaoshu/2017-03-07_093123.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093235.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093335.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093447.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093542.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093618.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093637.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093711.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093725.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093741.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093802.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093820.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093837.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_093856.png[]\r\n---\r\n\r\n== 向量的投影\r\n\r\nimage::{img}/img/gaoshu/2017-03-07_124618.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_124717.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_124745.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-07_124826.png[]\r\n---\r\n\r\n\r\n== 夹角公式\r\n\r\nimage::{img}/img/gaoshu/2017-03-07_125417.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_125453.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_130933.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-07_131227.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/多元函数",
        "title": "多元函数",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 多元函数\r\n\r\n== 多元函数\r\n\r\n=== 二元函数\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_084154.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_084307.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_084436.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_085405.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085445.png[]\r\n---\r\n\r\n\r\n=== 二元函数图形\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_085648.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085710.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_085736.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085810.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085829.png[]\r\n---\r\n\r\n=== 复杂的二元函数\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_085844.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085922.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_085943.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_090004.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_090044.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_090320.png[]\r\n---\r\n\r\n== 多元函数的极限和连续性\r\n\r\n=== 一元函数的极限\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_090540.png[]\r\n---\r\n\r\n=== 二元函数的极限\r\n\r\nimage::{img}/img/gaoshu/2017-03-09_090750.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_090911.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_090935.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-09_091037.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/定积分的几何应用(4)弧长",
        "title": "定积分的几何应用(4)弧长",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 定积分的几何应用(4)弧长\r\n\r\n== 定积分的几何应用(4)弧长\r\n\r\n=== 定义\r\n\r\nimage::{img}/img/gaoshu/2017-02-23_164848.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-23_165051.png[]\r\n---\r\n\r\n=== 弧微分推导\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/定积分的换元法",
        "title": "定积分的换元法",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 定积分的换元法\r\n\r\n== 定积分的换元法\r\n\r\nimage::{img}/img/gaoshu/2017-02-20_131059.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_131247.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_131524.png[]\r\n---\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/定积分的概念与性质",
        "title": "定积分的概念与性质",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 定积分的概念与性质\r\n\r\n== 定积分的意义\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_141411.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_141455.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_141515.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_141704.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_141817.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_142035.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/平面曲线的弧长",
        "title": "平面曲线的弧长",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 平面曲线的弧长\r\n\r\n== 平面曲线的弧长\r\n\r\n=== 弧长公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_090258.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_090749.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_090841.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_090949.png[]\r\n---\r\n\r\n=== 例子\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_091021.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091054.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091123.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091141.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091204.png[]\r\n---\r\n\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_091237.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091300.png[]\r\n---\r\n\r\n=== 椭圆周长\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_091359.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091420.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_091450.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/微分",
        "title": "微分",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 微分\r\n\r\n== 微分的定义\r\n\r\n\r\n定义 (微分) 设在一点 x 处\r\n[stem]\r\n++++\r\n\\Delta y = f(x+\\Delta x) - f(x)\r\n++++\r\n如果 stem:[\\Delta y = A\\Delta x + o(\\Delta x) ]\r\n其中 A 是只与 x 有关, 而与 stem:[\\Delta x] 无关的常数,则称函数 f(x) 在点 x 处可微 (differentiable),\r\n且将线性主部 stem:[A\\Delta x] 称为函数在点 x 处对应于 stem:[\\Delta x] 的微分 (differential) 记作 stem:[dy]\r\n[stem]\r\n++++\r\ndy = A\\Delta x\r\n++++\r\nstem:[o(\\Delta x)]: 高阶无穷小\r\n\r\n=== 可微与可导的关系?\r\n\r\n> 定理 (可微与可导的关系) 函数在一点可微的充分必要条件是: 函数在该点可导,且\r\n[stem]\r\n++++\r\ndy = f'(x)\\Delta x\r\n++++\r\n\r\n=== 函数可微 可导 连续 有极限的关系\r\n\r\nimage::{img}/img/2017-01-15_163843.png[]\r\n\r\nimage::{img}/img/2017-01-15_164051.png[]\r\n\r\n\r\n== 微分的几何意义\r\n\r\nimage::{img}/img/2017-01-15_164409.png[]\r\n\r\nimage::{img}/img/2017-01-15_164819.png[]\r\n\r\n== 微分的公式 微分的运算法则\r\n\r\n.1\r\nimage::{img}/img/2017-01-15_165053.png[]\r\n\r\n== 复合函数的微分\r\n=== 微分形式不变性\r\n\r\nimage::{img}/img/2017-01-15_165411.png[]\r\n\r\nimage::{img}/img/2017-01-15_165840.png[]\r\n\r\n=== 利用微分形式不变性\r\n\r\nimage::{img}/img/2017-01-15_170006.png[]\r\n\r\n==== 例题1\r\n===== 方法1\r\nimage::{img}/img/2017-01-15_170212.png[]\r\n===== 方法2\r\nimage::{img}/img/2017-01-15_170307.png[]\r\n\r\n==== 例题2\r\n\r\nimage::{img}/img/2017-01-15_171043.png[]\r\n\r\nimage::{img}/img/2017-01-15_171128.png[]\r\n\r\n==== 例题3\r\n\r\nimage::{img}/img/2017-01-15_171352.png[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/微分中值定理",
        "title": "微分中值定理",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 微分中值定理\r\n\r\n== 费马引理\r\n\r\nimage::{img}/img/2017-02-07_221146.png[]\r\n\r\n== 费马猜想\r\n\r\nimage::{img}/img/2017-02-07_221323.png[]\r\n\r\n== 罗尔 (Rolle) 定理\r\n\r\nimage::{img}/img/2017-02-07_221732.png[]\r\n\r\n=== 几何解释\r\n\r\nimage::{img}/img/2017-02-07_221839.png[]\r\n---\r\nimage::{img}/img/2017-02-07_221911.png[]\r\n\r\n=== 三个条件缺一不可\r\n\r\nimage::{img}/img/2017-02-07_222314.png[]\r\n\r\n=== 罗尔 (Rolle) 定理原型\r\n\r\nimage::{img}/img/2017-02-07_222733.png[]\r\n---\r\nimage::{img}/img/2017-02-07_225650.png[]\r\n---\r\nimage::{img}/img/2017-02-07_225736.png[]\r\n\r\n=== 思考题\r\n\r\nimage::{img}/img/2017-02-07_225813.png[]\r\n\r\n---\r\n\r\nimage::{img}/img/2017-02-07_230036.png[]\r\n\r\n== 拉格朗日 (Lagrange) 中值定理\r\n\r\nimage::{img}/img/2017-02-08_100604.png[]\r\n\r\n=== 几何解释\r\n\r\nimage::{img}/img/2017-02-08_101042.png[]\r\n---\r\nimage::{img}/img/2017-02-08_101707.png[]\r\n\r\n=== 物理解释\r\n\r\nimage::{img}/img/2017-02-08_102126.png[]\r\n\r\n=== 其他形式\r\n\r\nimage::{img}/img/gaoshu/2016-11-18-01.png[]\r\n---\r\n.有限增量公式\r\nimage::{img}/img/gaoshu/2017-02-08_103900.png[]\r\n\r\n==== 验证\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_104234.png[]\r\n\r\n=== Lagrange 定理有两个重要推论\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_104234.png[]\r\n\r\n==== 证明\r\n\r\n.在一区间上导数恒为零的函数必为常值函数\r\nimage::{img}/img/gaoshu/2017-02-08_104715.png[]\r\n---\r\n.在一区间上导数恒等的两个函数只相差一个常数\r\nimage::{img}/img/gaoshu/2017-02-08_105037.png[]\r\n\r\n=== Lagrange 定理应用\r\n\r\n==== 不等式的证明\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_105530.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_105758.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_105914.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_110147.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_110422.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_110528.png[]\r\n\r\n\r\n==== 恒等式的证明\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_113059.png[]\r\n\r\n=== 柯西 (Cauchy) 中值定理\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_113158.png[]\r\n\r\n.倒推法\r\nimage::{img}/img/gaoshu/2017-02-08_113414.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_132725.png[]\r\n\r\n=== 微分中值定理关系\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_133306.png[]\r\n\r\n=== 中值定理的证明题\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_133647.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-08_133910.png[]\r\n\r\n=== 例题\r\n\r\nimage::{img}/img/gaoshu/2017-02-08_134504.png[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/微分方程",
        "title": "微分方程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 微分方程\r\n\r\n== 微分方程\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_092233.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_092305.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_092720.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_092820.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-24_092840.png[]\r\n---\r\n\r\n\r\n== 可分离变量的微分方程\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_125656.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-24_125916.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/微积分基本公式",
        "title": "微积分基本公式",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 微积分基本公式\r\n\r\n== 微积分基本公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_203834.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_203957.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_204313.png[]\r\n---\r\n\r\n=== 定理 2 (原函数存在定理)\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_204442.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_204555.png[]\r\n---\r\n\r\n== 牛顿莱布尼茨公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_204725.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_204857.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_205012.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_205056.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_205206.png[]\r\n---\r\n\r\n== 例子\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_210206.png[]\r\n---\r\n\r\n== 定积分的 \"凑微分\" 公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_210707.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_210912.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_211133.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_211250.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_211414.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_211521.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_211958.png[]\r\n---\r\n\r\n\r\nimage::{img}/img/gaoshu/2017-02-19_212553.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_212616.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-19_212941.png[]\r\n---\r\n\r\n== 正弦积分函数\r\n\r\nimage::{img}/img/gaoshu/2017-02-20_090213.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_090605.png[]\r\n---\r\n\r\n== 函数的几种形式\r\n\r\nimage::{img}/img/gaoshu/2017-02-20_090653.png[]\r\n---\r\n\r\n== 积分上限函数的导数\r\n\r\nimage::{img}/img/gaoshu/2017-02-20_090952.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_091143.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_091233.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_091432.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-20_124527.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_124713.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_125009.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_125128.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_125411.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-20_125538.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/换元积分法",
        "title": "换元积分法",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 换元积分法\r\n\r\n== 换元积分法\r\n\r\n=== 第一类换元积分法\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_100516.png[]\r\n---\r\n\r\n=== 凑微分法的步骤\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_100802.png[]\r\n---\r\n\r\n=== 常见凑微分的积分类型\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_101300.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101419.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101458.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101719.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101800.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101840.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_101938.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_102025.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_201609.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_201735.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_202158.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_202330.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_202452.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204000.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204047.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204154.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-13_204348.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204408.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204507.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-13_204533.png[]\r\n---\r\nimage::{img}/img/gaoshu/[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n=== 常见的凑微分公式\r\n\r\n[cols=\"2*\"]\r\n|===\r\n|换元法类型\r\n|所用的凑微分公式\r\n\r\n|stem:[\\displaystyle \\int{f(ax + b)dx = \\frac{1}{a}}\\int{f(ax + b)d(ax + b)}]\r\n|stem:[\\displaystyle dx = \\frac{1}{a}d(ax + b)]\r\n\r\n|stem:[\\displaystyle \\int{f(x^n)x^{n-1}dx = \\frac{1}{n}}\\int{f(x^n)dx^n}]\r\n|stem:[\\displaystyle x^{n-1}dx = \\frac{1}{n}dx^n]\r\n\r\n|stem:[\\displaystyle \\int{f(x^2)xdx = \\frac{1}{2}}\\int{f(x^2)dx^2}]\r\n|stem:[\\displaystyle xdx = \\frac{1}{2}dx^2]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\sqrt{x})}{\\sqrt{x}}dx} = 2\\int{f(\\sqrt{x})d\\sqrt{x}}]\r\n|stem:[\\displaystyle \\frac{1}{\\sqrt{x}}dx = 2d\\sqrt{x}]\r\n\r\n|stem:[\\displaystyle \\int{f(\\frac{1}{x})\\frac{1}{x^2}dx} = -\\int{f(\\frac{1}{x})d\\frac{1}{x}}]\r\n|stem:[\\displaystyle \\frac{1}{x^2}dx = -d\\frac{1}{x}]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\ln{x})}{x}dx} = \\int{f(\\ln{x})d\\ln{x}}]\r\n|stem:[\\displaystyle \\frac{1}{x}dx = d\\ln{x}]\r\n\r\n|stem:[\\displaystyle \\int{f(e^x)e^xdx} = \\int{f(e^x)de^x}]\r\n|stem:[\\displaystyle e^xdx = de^x]\r\n\r\n|stem:[\\displaystyle \\int{f(\\sin{x})\\cos{x}dx} = \\int{f(\\sin{x})d\\sin{x}}]\r\n|stem:[\\displaystyle \\cos{x}dx = d\\sin{x}]\r\n\r\n|stem:[\\displaystyle \\int{f(\\cos{x})\\sin{x}dx} = -\\int{f(\\cos{x})d\\cos{x}}]\r\n|stem:[\\displaystyle \\sin{x}dx = -d\\cos{x}]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f'(x)}{f(x)}dx} = \\int{\\frac{1}{f(x)d(f(x))}} = \\ln{\\|f(x)\\| + C}]\r\n|stem:[\\displaystyle f'(x)dx = df(x)]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\arctan{x})}{1 + x^2}dx} = -\\int{f(\\arctan{x})d\\arctan{x}}]\r\n|stem:[\\displaystyle \\frac{1}{1+x^2}dx = d\\arctan{x}]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\arcsin{x})}{\\sqrt{1 - x^2}}dx} = -\\int{f(\\arcsin{x})d\\arcsin{x}}]\r\n|stem:[\\displaystyle \\frac{1}{\\sqrt{1 - x^2}}dx = d\\arcsin{x}]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\tan{x})}{\\cos^2{x}}dx} = \\int{f(\\tan{x})\\sec^2{x}dx} = \\int{f(\\tan{x})d\\tan{x}}]\r\n|stem:[\\displaystyle \\frac{1}{\\cos^2{x}}dx = \\sec^2{x}dx = d\\tan{x}]\r\n\r\n|stem:[\\displaystyle \\int{\\frac{f(\\cos{x})}{\\sin^2{x}}dx} = \\int{f(\\cot{x})\\csc^2{x}dx} = -\\int{f(\\cos{x})d\\cot{x}}]\r\n|stem:[\\displaystyle \\frac{1}{\\sin^2{x}}dx = \\csc^2{x}dx = -d\\cot{x}]\r\n\r\n|===\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/换元积分法(2)",
        "title": "换元积分法(2)",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 换元积分法(2)\r\n\r\n== 换元积分法(2)\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_124712.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_125327.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_125348.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_125411.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_131613.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_131902.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_132136.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_132617.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-14_132916.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_132945.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/曲线的凹凸性与拐点",
        "title": "曲线的凹凸性与拐点",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 曲线的凹凸性与拐点\r\n\r\n== 曲线的凹凸性与拐点\r\n\r\nimage::{img}/img/gaoshu/2017-02-12_171726.png[]\r\n---\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/有理函数的积分",
        "title": "有理函数的积分",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 有理函数的积分\r\n\r\n== 有理函数的积分\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_103835.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_103934.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_104200.png[]\r\n---\r\n\r\n== 真分式的分解\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_104839.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_105121.png[]\r\n---\r\n\r\n== 真分式化为部分公式之和的(待定系数法)\r\n\r\nimage::{img}/img/gaoshu/2017-02-16_110344.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_110606.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-16_110606.png[]\r\n---\r\nimage::{img}/img/gaoshu/[]\r\n---\r\n\r\n== 三角函数有理式积分\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/欧拉方程",
        "title": "欧拉方程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 欧拉方程\r\n\r\n== 欧拉方程\r\n\r\nimage::{img}/img/gaoshu/2017-03-06_090630.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-06_090702.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090730.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090747.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090812.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090838.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090854.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090907.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090926.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-06_090955.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/泰勒公式",
        "title": "泰勒公式",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 泰勒公式\r\n\r\n== 泰勒公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_145402.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_145444.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_145516.png[]\r\n\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_145554.png[]\r\n\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_145645.png[]\r\n\r\n=== 两个函数的关系\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_150804.png[]\r\n\r\n==== 物理意义\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_151035.png[]\r\n\r\n=== 定理 (带 Peano 余项的 *Taylor* 公式)\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_174442.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_174632.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_174720.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_174951.png[]\r\n\r\n=== *Taylor* 中值定理\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_175135.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_175557.png[]\r\n---\r\n\r\n=== 麦克劳林公式\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_175727.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_175806.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_180030.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_180126.png[]\r\n---\r\n\r\n=== 一些函数的麦克劳林函数\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_183206.png[]\r\n---\r\n\r\n==== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_183619.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_183657.png[]\r\n---\r\n\r\n==== 例2\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_183847.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_184044.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_184147.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_184252.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_184356.png[]\r\n---\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/洛必达法则",
        "title": "洛必达法则",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 洛必达法则\r\n\r\n== 洛必达法则\r\n\r\n=== 定义\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_085959.png[]\r\n\r\n=== 定理1\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_090213.png[]\r\n\r\n==== 练习1\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_090744.png[]\r\n\r\n==== 练习2\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_091008.png[]\r\n\r\n==== 练习3\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_091200.png[]\r\n\r\n==== 练习4\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_091648.png[]\r\n\r\n=== 一些更高阶的等价无穷小\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_091325.png[]\r\n\r\n=== 定理2\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_091810.png[]\r\n\r\n==== 练习5\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_092118.png[]\r\n\r\n==== 练习6\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_092420.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-09_092526.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-09_092620.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-09_092710.png[]\r\n\r\n==== 练习7\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_093131.png[]\r\n\r\n==== 练习8\r\n\r\nimage::{img}/img/gaoshu/2017-02-09_093539.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-09_093446.png[]\r\n\r\n==== 有些 stem:[\\infty/\\infty] 不能使用 洛必达法则\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_100237.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-10_100343.png[]\r\n\r\n=== 习题选讲\r\n\r\n==== 1\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_100543.png[]\r\n\r\n==== 2\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_100802.png[]\r\n\r\n==== 3\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_101054.png[]\r\n\r\n==== 4\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_101258.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-10_101609.png[]\r\n\r\n=== 其它未定式\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_101903.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-10_102158.png[]\r\n\r\n==== *有用的结论*\r\n[stem]\r\n++++\r\n\\lim_{x\\to 0^+}x\\ln a = 0\r\n++++\r\n---\r\nimage::{img}/img/gaoshu/2017-02-10_103503.png[]\r\n\r\n==== stem:[\\lim[f(x)-g(x)]] stem:[\\qquad]  stem:[\\infty - \\infty] 型\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_103745.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-10_103937.png[]\r\n\r\n=== 幂指函数的极限\r\n\r\n[stem]\r\n++++\r\n\\lim f(x)^{g(x)}  \\quad 1^{\\infty} \\quad {\\infty}^0 \\quad 0^0 \\quad 型\r\n++++\r\n\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_150726.png[]\r\n\r\n---\r\n\r\n[stem]\r\n++++\r\n\\lim f(x)^{g(x)} = e^{\\lim g(x)\\ln f(x)}\r\n++++\r\n\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_160329.png[]\r\n\r\n==== 1\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_160946.png[]\r\n\r\n==== stem:[1^{\\infty}]\r\n\r\nimage::{img}/img/gaoshu/2017-02-10_161221.png[]\r\n\r\n==== stem:[1^{\\infty}]型未定式有特殊的解法\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_143100.png[]\r\n\r\n===== 例1\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_143254.png[]\r\n---\r\n.另解\r\nimage::{img}/img/gaoshu/2017-02-11_143700.png[]\r\n\r\n===== 例2\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_143810.png[]\r\n---\r\n.另解\r\nimage::{img}/img/gaoshu/2017-02-11_143916.png[]\r\n\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_144012.png[]\r\n\r\n===== 例3\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_144348.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_144517.png[]\r\n\r\n===== 例4\r\n\r\nimage::{img}/img/gaoshu/2017-02-11_144636.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_144756.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_144900.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-11_144930.png[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/部分积分法",
        "title": "部分积分法",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 部分积分法\r\n\r\n== 部分积分法\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_133637.png[]\r\n---\r\n\r\n=== 分部积分的两个原则\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_133842.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-02-14_134106.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/高阶线性微分方程",
        "title": "高阶线性微分方程",
        "content": "\r\n== 高阶线性微分方程\r\n\r\n=== 齐次线性方程的解的叠加原理\r\n\r\nimage::{img}/img/gaoshu/2017-03-02_090230.png[]\r\n---\r\n\r\nimage::{img}/img/gaoshu/2017-03-02_090328.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-02_090346.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-03-02_090409.png[]\r\n---\r\n\r\n\r\nimage::{img}/img/gaoshu/2017-03-02_090619.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/mathematics/xuxiaozhan/齐次方程",
        "title": "齐次方程",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: 齐次方程\r\n\r\n== 齐次方程\r\n\r\n=== 标准齐次方程\r\n\r\nimage::{img}/img/gaoshu/2017-02-25_095515.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_095758.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_095839.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_100629.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_100911.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101055.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101117.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101207.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101228.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101300.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101320.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101419.png[]\r\n---\r\nimage::{img}/img/gaoshu/2017-02-25_101458.png[]\r\n---\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "#!/usr/bin/env ruby\r\n\r\nrequire 'rubygems' unless defined? Gem\r\n\r\nif File.exist?(asciidoctor = (File.expand_path '../../lib/asciidoctor', __FILE__))\r\n  require asciidoctor\r\nelse\r\n  require 'asciidoctor'\r\nend\r\n# 解析\r\nrequire 'asciidoctor-diagram'\r\nrequire 'asciidoctor/extensions'\r\nrequire 'asciidoctor/GistBlockMacro'\r\nAsciidoctor::Extensions.register do\r\n    block_macro GistBlockMacro if document.basebackend? 'html'\r\nend\r\n#\r\nrequire 'asciidoctor/cli'\r\n\r\ninvoker = Asciidoctor::Cli::Invoker.new ARGV\r\nGC.start\r\ninvoker.invoke!\r\nexit invoker.code\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/my/extensions",
        "content": "require 'asciidoctor' unless defined? ::Asciidoctor::VERSION\r\nrequire 'asciidoctor/extensions'\r\nrequire 'digest'\r\nrequire 'json'\r\nrequire 'fileutils'\r\nrequire_relative 'version'\r\nrequire_relative 'util/java'\r\nrequire_relative 'util/gif'\r\nrequire_relative 'util/pdf'\r\nrequire_relative 'util/png'\r\nrequire_relative 'util/svg'\r\n\r\nmodule Asciidoctor\r\n  module Diagram\r\n    module Extensions\r\n      # Provides the means for diagram processors to register supported output formats and image\r\n      # generation routines\r\n      module FormatRegistry\r\n        # Registers a supported format. The first registered format becomes the default format for the block\r\n        # processor.\r\n        #\r\n        # @param [Symbol] format the format name\r\n        # @param [Symbol] type a symbol indicating the type of block that should be generated; either :image or :literal\r\n        # @yieldparam parent [Asciidoctor::AbstractNode] the asciidoc block that is being processed\r\n        # @yieldparam source [DiagramSource] the source object\r\n        # @yieldreturn [String] the generated diagram\r\n        #\r\n        # Examples\r\n        #\r\n        #   register_format(:png, :image ) do |parent_block, source|\r\n        #     File.read(source.to_s)\r\n        #   end\r\n        def register_format(format, type, &block)\r\n          raise \"Unsupported output type: #{type}\" unless type == :image || type == :literal\r\n\r\n          unless defined?(@default_format)\r\n            @default_format = format\r\n          end\r\n\r\n          formats[format] = {\r\n              :type => type,\r\n              :generator => block\r\n          }\r\n        end\r\n\r\n        # Returns the registered formats\r\n        #\r\n        # @return [Hash]\r\n        # @api private\r\n        def formats\r\n          @formats ||= {}\r\n        end\r\n\r\n        # Returns the default format\r\n        #\r\n        # @return [Symbol] the default format\r\n        # @api private\r\n        def default_format\r\n          @default_format\r\n        end\r\n      end\r\n\r\n      # Mixin that provides the basic machinery for image generation.\r\n      # When this module is included it will include the FormatRegistry into the singleton class of the target class.\r\n      module DiagramProcessor\r\n        IMAGE_PARAMS = {\r\n            :svg => {\r\n                :encoding => Encoding::UTF_8,\r\n                :decoder => SVG\r\n            },\r\n            :gif => {\r\n                :encoding => Encoding::ASCII_8BIT,\r\n                :decoder => GIF\r\n            },\r\n            :png => {\r\n                :encoding => Encoding::ASCII_8BIT,\r\n                :decoder => PNG\r\n            },\r\n            :pdf => {\r\n                :encoding => Encoding::ASCII_8BIT,\r\n                :decoder => PDF\r\n            }\r\n        }\r\n\r\n        def self.included(mod)\r\n          class  e\r\n            case parent.attr('diagram-on-error') || 'log'\r\n              when 'abort'\r\n                raise e\r\n              else\r\n                text = \"Failed to generate image: #{e.message}\"\r\n                warn_msg = text.dup\r\n                if $VERBOSE\r\n                  warn_msg  image_attributes\r\n        end\r\n\r\n        def scale(size, factor)\r\n          if match = /(\\d+)(.*)/.match(size)\r\n            value = match[1].to_i\r\n            unit = match[2]\r\n            (value * factor).to_i.to_s + unit\r\n          else\r\n            size\r\n          end\r\n        end\r\n\r\n        def image_output_dir(parent)\r\n          document = parent.document\r\n\r\n          images_dir = parent.attr('imagesoutdir')\r\n\r\n          if images_dir\r\n            base_dir = nil\r\n          else\r\n            base_dir = parent.attr('outdir') || (document.respond_to?(:options) && document.options[:to_dir])\r\n            images_dir = parent.attr('imagesdir')\r\n          end\r\n\r\n          parent.normalize_system_path(images_dir, base_dir)\r\n        end\r\n\t\t\r\n\r\n        def cache_dir(parent)\r\n          document = parent.document\r\n          cache_dir = '.asciidoctor/diagram'\r\n          base_dir = parent.attr('outdir') || (document.respond_to?(:options) && document.options[:to_dir])\r\n          parent.normalize_system_path(cache_dir, base_dir)\r\n        end\r\n\r\n        def create_literal_block(parent, source, generator_info)\r\n          literal_attributes = source.attributes\r\n          literal_attributes.delete('target')\r\n\r\n          result = instance_exec(parent, source, &generator_info[:generator])\r\n\r\n          result.force_encoding(Encoding::UTF_8)\r\n          Asciidoctor::Block.new parent, :literal, :source => result, :attributes => literal_attributes\r\n        end\r\n      end\r\n\r\n      # Base class for diagram block processors.\r\n      class DiagramBlockProcessor < Asciidoctor::Extensions::BlockProcessor\r\n        include DiagramProcessor\r\n\r\n        def self.inherited(subclass)\r\n          subclass.option :pos_attrs, ['target', 'format','imgurl']\r\n          subclass.option :contexts, [:listing, :literal, :open]\r\n          subclass.option :content_model, :simple\r\n        end\r\n\r\n        # Creates a ReaderSource from the given reader.\r\n        #\r\n        # @return [ReaderSource] a ReaderSource\r\n        def create_source(parent_block, reader, attributes)\r\n          ReaderSource.new(parent_block, reader, attributes)\r\n        end\r\n      end\r\n\r\n      # Base class for diagram block macro processors.\r\n      class DiagramBlockMacroProcessor < Asciidoctor::Extensions::BlockMacroProcessor\r\n        include DiagramProcessor\r\n\r\n        def self.inherited(subclass)\r\n          subclass.option :pos_attrs, ['target', 'format','imgurl']\r\n        end\r\n\r\n        # Creates a FileSource using target as the file name.\r\n        #\r\n        # @return [FileSource] a FileSource\r\n        def create_source(parent, target, attributes)\r\n          target = parent.sub_attributes(target, :attribute_missing => 'warn') if target\r\n          FileSource.new(parent,target, attributes)\r\n        end\r\n      end\r\n\r\n      # This module describes the duck-typed interface that diagram sources must implement. Implementations\r\n      # may include this module but it is not required.\r\n      module DiagramSource\r\n        # @return [String] the base name for the image file that will be produced\r\n        # @abstract\r\n        def image_name\r\n          raise NotImplementedError.new\r\n        end\r\n\r\n        # @return [String] the String representation of the source code for the diagram\r\n        # @abstract\r\n        def code\r\n          raise NotImplementedError.new\r\n        end\r\n\r\n        # Get the value for the specified attribute. First look in the attributes on\r\n        # this node and return the value of the attribute if found. Otherwise, if\r\n        # this node is a child of the Document node, look in the attributes of the\r\n        # Document node and return the value of the attribute if found. Otherwise,\r\n        # return the default value, which defaults to nil.\r\n        #\r\n        # @param name [String, Symbol] the name of the attribute to lookup\r\n        # @param default_value [Object] the value to return if the attribute is not found\r\n        # @inherit [Boolean, String] indicates whether to check for the attribute on the AsciiDoctor::Document if not found on this node.\r\n        #                            When a non-nil String is given the an attribute name \"#{inherit}-#{name}\" is looked for on the document.\r\n        #\r\n        # @return the value of the attribute or the default value if the attribute is not found in the attributes of this node or the document node\r\n        # @abstract\r\n        def attr(name, default_value = nil, inherit = nil)\r\n          raise NotImplementedError.new\r\n        end\r\n\r\n        # @return [String] the base directory against which relative paths in this diagram should be resolved\r\n        # @abstract\r\n        def base_dir\r\n          raise NotImplementedError.new\r\n        end\r\n\r\n        # Alias for code\r\n        def to_s\r\n          code\r\n        end\r\n\r\n        # Determines if the diagram should be regenerated or not. The default implementation of this method simply\r\n        # returns true.\r\n        #\r\n        # @param image_file [String] the path to the previously generated version of the image\r\n        # @param image_metadata [Hash] the image metadata Hash that was stored during the previous diagram generation pass\r\n        # @return [Boolean] true if the diagram should be regenerated; false otherwise\r\n        def should_process?(image_file, image_metadata)\r\n          true\r\n        end\r\n\r\n        # Creates an image metadata Hash that will be stored to disk alongside the generated image file. The contents\r\n        # of this Hash are reread during subsequent document processing and then passed to the should_process? method\r\n        # where it can be used to determine if the diagram should be regenerated or not.\r\n        # The default implementation returns an empty Hash.\r\n        # @return [Hash] a Hash containing metadata\r\n        def create_image_metadata\r\n          {}\r\n        end\r\n      end\r\n\r\n      # Base class for diagram source implementations that uses an md5 checksum of the source code of a diagram to\r\n      # determine if it has been updated or not.\r\n      class BasicSource\r\n        include DiagramSource\r\n\r\n        attr_reader :attributes\r\n\r\n        def initialize(parent_block, attributes)\r\n          @parent_block = parent_block\r\n          @attributes = attributes\r\n        end\r\n\r\n        def image_name\r\n          attr('target', 'diag-' + checksum)\r\n        end\r\n\r\n        def attr(name, default_value=nil, inherit=nil)\r\n          name = name.to_s if ::Symbol === name\r\n\r\n          value = @attributes[name]\r\n\r\n          if value.nil? && inherit\r\n            case inherit\r\n              when String\r\n                value = @parent_block.attr(\"#{inherit}-#{name}\", default_value, true)\r\n              else\r\n                value = @parent_block.attr(name, default_value, true)\r\n            end\r\n          end\r\n\r\n          value || default_value\r\n        end\r\n\r\n        def should_process?(image_file, image_metadata)\r\n          image_metadata['checksum'] != checksum\r\n        end\r\n\r\n        def create_image_metadata\r\n          {'checksum' => checksum}\r\n        end\r\n\r\n        def checksum\r\n          @checksum ||= compute_checksum(code)\r\n        end\r\n\r\n        protected\r\n        def resolve_diagram_subs\r\n          if @attributes.key? 'subs'\r\n            subs = @parent_block.resolve_block_subs @attributes['subs'], nil, 'diagram'\r\n            subs.empty? ? nil : subs\r\n          else\r\n            nil\r\n          end\r\n        end\r\n\r\n        private\r\n        def compute_checksum(code)\r\n          md5 = Digest::MD5.new\r\n          md5 ",
        "tags": []
    },
    {
        "uri": "//hugo/post/my/GistBlockMacro",
        "content": "require 'asciidoctor'\r\nrequire 'asciidoctor/extensions'\r\n\r\n\r\nclass GistBlockMacro < Asciidoctor::Extensions::BlockMacroProcessor\r\n  use_dsl\r\n\r\n  named :asciinema\r\n\r\n  def process parent, target, attrs\r\n\r\n    html = %()\r\n    create_pass_block parent, html, attrs, subs: nil\r\n  end\r\nend\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/my/gollum",
        "title": "gollum",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== gollum\r\n* **启动**\r\n```bash\r\nsudo docker run -d -p 80:4567 --name gollum -v ~/wiki:/root/wikidata suttang/gollum\r\n```\r\n* **支持配置文件**\r\n```bash\r\n#修改Asciidoc文件后缀\r\nsudo docker run -d -p 80:4567 --name gollum -v ~/wiki:/ gollum/wiki alpine-gollum:1.1 --config /home/vagrant/wiki/config.rb --css /home/vagrant/wiki/wiki /custom.css\r\n```\r\n\r\n== Vagrantfile\r\n```ruby\r\nVagrant.configure(2) do |config|\r\n  config.vm.synced_folder \".\", \"/vagrant\", disabled: true\r\n  config.vm.synced_folder \"C:/Users/dishui/Desktop/sublime\\ file\", \"/home/vagrant/wiki\"\r\n  config.vm.synced_folder \"D:/docker/images\", \"/home/vagrant/src/docker/images\"\r\n  config.vm.define \"u1\" do |u1|\r\n    u1.vm.box = \"ubuntu-14.04\"\r\n    u1.vm.hostname = \"u1\"\r\n    u1.vm.network \"private_network\", ip: \"192.168.137.11\",name: \"VirtualBox Host-Only Ethernet Adapter\"\r\n  end\r\n  config.vm.provider \"virtualbox\" do |vb|\r\n    vb.memory = \"1024\"\r\n  end\r\nend\r\n```\r\n\r\n== 样式修改\r\n\r\n注释::\r\n[[/src/img/2016-09-17_235813.png]]\r\n\r\n. 修改文件\r\n```bash session\r\n$ vi /usr/lib/ruby/gems/2.2.0/gems/asciidoctor-1.5.4/lib/asciidoctor/converter/html5.rb\r\n # %(#{num})\r\n # %(#{num})\r\n\r\n # (#{num}) -> #{num}\r\n```\r\n\r\n=== DockerHub\r\n==== gollum\r\n. 在 `Windows` 上设置共享目录\r\n. 启动 `gollum`\r\n```bash\r\ndocker run -d -p 80:4567 --privileged  --name gollum dishuigit/gollum:1.9\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/my/hugo",
        "title": "hugo",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: hugo\r\n\r\n== 环境\r\n\r\n\r\n|===\r\n|软件|下载地址\r\n\r\n|Ruby\r\n|http://rubyinstaller.org/downloads/[Ruby 2.3.3 (x64)]\r\n\r\n|Asciidoctor\r\n|`gem install asciidoctor asciidoctor-diagram`  \r\n\r\n|graphviz\r\n|http://www.graphviz.org/Download..php[graphviz version 2.38.0]\r\n|===\r\n asciidoctor-diagram plantuml图\r\n\r\n[IMPORTANT]\r\n====\r\n. 设置淘宝gem源\r\n+\r\n```\r\ngem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/\r\n```\r\n. 环境变量\r\n+\r\n----\r\nGraphviz_HOME=D:\\Program Files (x86)\\Graphviz2.38\r\nPath=%Path%,%Graphviz_HOME%\\bin\r\n----\r\n. 替换文件\r\n.. 替换 `asciidoctor-1.5.5\\bin` 下的 `asciidoctor`\r\n+\r\n[source,ruby]\r\n----\r\ninclude::content/post/my/asciidoctor[]\r\n----\r\n.. 修改 `asciidoctor-diagram-1.5.4\\lib\\asciidoctor-diagram` 下的 `extensions.rb`\r\n+\r\n```\r\n# 155行添加\r\nimage_name2 = (\"#{parent.attr('plantimgdir')}/#{source.image_name}.#{format}\")\r\n# 187行修改\r\nimage_attributes['target'] = image_name2\r\n```\r\n\r\n====\r\n\r\n== hugo\r\n\r\n=== 设置发布目录\r\n\r\n```\r\n# 创建 gh-pages 分支\r\ngit checkout --orphan gh-pages\r\n#\r\ngit worktree add public gh-pages #public 是没有的目录\r\n```\r\n\r\n=== 部署\r\n\r\n==== 带项目名\r\n> http://dishui.oschina.io/note-hugo/\r\n\r\n.hugo-local.sh\r\n```\r\n#!/bin/sh\r\n\r\ncd /e/note-hugo/\r\n\r\n# 替换域名\r\necho \"替换域名\"\r\ngit checkout -- themes/mainroad/static/js/app.js content/post/base.adoc config.toml themes/mainroad/static/js/jquery.bigautocomplete.js\r\nsed -i 's/dishui.oschina.io/localhost:1313/g' themes/mainroad/static/js/app.js content/post/base.adoc config.toml themes/mainroad/static/js/jquery.bigautocomplete.js\r\necho \"启动 hugo server\"\r\nhugo server\r\n```\r\n\r\n.hugo.sh\r\n```\r\n#!/bin/sh\r\n\r\ncd /e/note-hugo/\r\n\r\n# 还原\r\necho \"恢复域名\"\r\ngit checkout -- themes/mainroad/static/js/app.js content/post/base.adoc config.toml themes/mainroad/static/js/jquery.bigautocomplete.js\r\n\r\necho \"Generating site\"\r\nhugo\r\n\r\necho \"Updating gh-pages branch\"\r\ncd public && git add --all && git commit -m \"$(date +%Y-%m-%d)\" && git push\r\n\r\necho \"Commit note-hugo\"\r\ncd .. && git add --all && git commit -m \"$(date +%Y-%m-%d)\" && git push\r\n```\r\n\r\n==== 不带项目名\r\n> http://dishui.oschina.io\r\n\r\n.hugo-local.sh\r\n```\r\n#!/bin/sh\r\n\r\ncd /e/dishui/\r\n\r\necho \"启动 hugo server\"\r\nhugo server\r\n```\r\n\r\n.hugo-oschina.sh\r\n```\r\n#!/bin/sh\r\n\r\ncd /e/dishui/\r\n\r\nhugo\r\n\r\necho \"Updating gh-pages branch\"\r\ncd public && git add --all && git commit -m \"$(date +%Y-%m-%d)\" && git push\r\n\r\necho \"Commit note\"\r\ncd .. && git add --all && git commit -m \"$(date +%Y-%m-%d)\" && git push\r\n```\r\n\r\n\r\n\r\n== 生成 *lunr* 索引\r\n\r\n. 启动 *nodejieba* +\r\n 启动 *docker-volume-netshare* ( link:/post/docker/docker-base/#_mount_aws_efs_nfs_or_cifs_samba_volumes_in_docker[docker-volume-netshare] )\r\n. 启动 *nodejieba* 容器\r\n+\r\n```\r\ndocker run -it --name=lunr --volume-driver=cifs -v 192.168.137.2/note-hugo:/hugo dishui.io:5000/nodejieba:1.1 /bin/bash\r\n```\r\n. 构建索引\r\n+\r\n```\r\ncd /hugo/content && \\\r\nnodejs hugo-lunr.js && \\ # 生成原始数据\r\nnodejs index_builder.js # 生成索引\r\n```\r\n\r\n== 参考\r\n\r\n. https://gohugo.io/tutorials/github-pages-blog/[Deployment via gh-pages branch]\r\n. https://github.com/BurntSushi/erd[erd]\r\n. http://rouge.jneen.net/[highlight rouge]\r\n. https://github.com/jgm/pandoc[pandoc]\r\n",
        "tags": [
            "hugo"
        ]
    },
    {
        "uri": "//hugo/post/my/lunr",
        "title": "lunr",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n\r\n参考 ::\r\n. https://github.com/codepiano/lunr.js/tree/master/test[]\r\n. http://gohugo.io/templates/partials/[]\r\n. https://github.com/spf13/hugo[]\r\n. https://discuss.gohugo.io/t/live-hugo-site-search-with-lunr-js/2857[]\r\n. https://runkit.com/npm/lunr-locale-chinese#[]\r\n. https://www.google.com/?gfe_rd=ssl&ei=EQCbVs7yMOOD8Qe8xJqYBA#q=lunrjs+nodejieba[]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/README",
        "content": "SublimeNote\r\n 每天的临时笔记\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/windows",
        "title": "win 端口转发",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== `Git`\r\n. svn 导出 git 单个目录\r\n```\r\n# trunk 替代 branch\r\nhttps://github.com/dishuiGit/codes.git/trunk/Spring-test\r\n```\r\n\r\n\r\n== Windows\r\n\r\n=== win10 端口转发\r\n. **netsh**\r\n```\r\n# 查看\r\nnetsh interface portproxy show all\r\n#add\r\nnetsh interface portproxy add v4tov4 listenport=9200 connectaddress=192.168.137.164 connectport=9200\r\n# 删除\r\nnetsh interface portproxy delete v4tov4 listenport=9200 listenaddress=196.168.1.178\r\n# 例子\r\nhttp://aofengblog.blog.163.com/blog/static/631702120148573851740/\r\n```\r\n\r\n=== *Windows* 环境变量\r\n\r\n. 添加临时环境变量\r\n```\r\npath=%path%;D:\\env\\apache-ant-1.9.4\\bin;\r\n```\r\n\r\n=== `mklink` 创建链接设置环境变量\r\n\r\n> 创建符号链接。\r\n\r\nMKLINK [[/D] | [/H] | [/J]] Link Target\r\n\r\n        /D      创建目录符号链接。默认为文件\r\n                符号链接。\r\n        /H      创建硬链接而非符号链接。\r\n        /J      创建目录联接。\r\n        Link    指定新的符号链接名称。\r\n        Target  指定新链接引用的路径\r\n                (相对或绝对)。\r\n\r\n```\r\nmklink D:\\env\\bin\\dot.exe D:\\env\\graphviz-2.38\\release\\bin\\dot.exe\r\nmklink /D D:\\env\\bin\\graphviz-bin\\ D:\\env\\graphviz-2.38\\release\\bin\\\r\n```\r\n\r\n参考::\r\nhttp://blog.csdn.net/kilosnow/article/details/7179705[windows7中的mklink命令]\r\n",
        "tags": [
            "windows"
        ]
    },
    {
        "uri": "//hugo/post/work/app-tables",
        "title": "App 表设计",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== App 表设计\r\n\r\n\r\n== APP 表关系\r\n\r\n=== 圈层\r\n[plantuml, app-quanceng, svg]\r\n----\r\n!define TABLE (T,#FFAAAA)\r\n\r\nclass app_pitchcircle \r\nclass app_user_mood \r\nclass app_likes \r\nclass app_share \r\nclass app_collection \r\nclass app_comment \r\n\r\napp_pitchcircle \"1\" -- \"*\" app_user_mood\r\napp_user_mood \"1\" -- \"*\" app_likes\r\napp_user_mood \"1\" -- \"*\" app_share\r\napp_user_mood \"1\" -- \"*\" app_collection\r\napp_user_mood \"1\" -- \"*\" app_comment\r\n\r\n----\r\n\r\n=== 群组\r\n[plantuml, app-qunzu, svg]\r\n----\r\n!define TABLE (T,#FFAAAA)\r\n\r\nclass app_group \r\nclass app_group_set \r\nclass app_complain \r\nclass app_group_user \r\n\r\n\r\napp_group \"1\" -- \"1\" app_group_set\r\napp_group \"1\" -- \"*\" app_complain\r\napp_group \"1\" -- \"*\" app_group_user\r\n\r\n----\r\n\r\n\r\n=== 用户\r\n\r\n[plantuml, app-user, svg]\r\n----\r\n!define TABLE (T,#FFAAAA)\r\n\r\nclass ti_user \r\n\r\nclass app_friend_recommend \r\nclass app_user_authentication \r\nclass app_friend_add \r\nclass app_friendship \r\nclass app_homeset \r\nclass app_advice \r\nclass app_user_login \r\n\r\nclass app_company_authentication \r\nclass app_image \r\n\r\n\r\nti_user \"1\" -up- \"*\" app_friend_recommend\r\nti_user \"1\" -left- \"*\" app_user_authentication\r\nti_user \"1\" -- \"*\" app_friend_add\r\nti_user \"1\" -right- \"*\" app_friendship\r\nti_user \"1\" -- \"1\" app_homeset\r\nti_user \"1\" -- \"*\" app_advice\r\nti_user \"1\" -- \"*\" app_user_login\r\n\r\n----\r\n\r\n== APP 表\r\n\r\n=== 用户反馈表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_advice    用户反馈表                                        */\r\n/*==============================================================*/\r\ncreate table app_advice\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            char(15) comment '用户名称',\r\n   type                 int(2) comment '反馈类型',\r\n   content              varchar(500) comment '反馈内容',\r\n   status               int(2) comment '状态：已回复',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户收藏表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_collection     用户收藏表                                   */\r\n/*==============================================================*/\r\ncreate table app_collection\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名',\r\n   type                 int(2) comment '类型：0资源单，1采购单，2动态，3商品，4店铺',\r\n   relation_id          char(15) comment '关联ID',\r\n   title                varchar(50) comment '标题',\r\n   url                  varchar(200) comment '链接',\r\n   content              varchar(500) comment '内容',\r\n   in_date              datetime comment '收藏时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户评论表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_comment         用户评论表                                  */\r\n/*==============================================================*/\r\ncreate table app_comment\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   type                 int(2) comment '类型：0资源单，1采购单，2动态',\r\n   mid                  char(15) comment '被评论信息ID',\r\n   user_id              char(15) comment '用户ID',\r\n   f_comment_id         char(15) comment '所回复的id',\r\n   user_name            varchar(30) comment '用户名',\r\n   comment              longtext comment '评论内容',\r\n   in_date              datetime comment '评论时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户企业认证表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_company_authentication     用户企业认证表                       */\r\n/*==============================================================*/\r\ncreate table app_company_authentication\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   cust_id              char(15) comment '企业主键',\r\n   is_authentication    int(2) comment '是否认证：0是，1否',\r\n   authentication_date  datetime comment '认证时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 群组投诉表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_complain         群组投诉表                                 */\r\n/*==============================================================*/\r\ncreate table app_complain\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名称',\r\n   reason               varchar(100) comment '投诉原因',\r\n   in_date              datetime comment '投诉时间',\r\n   primary key (id)\r\n);\r\n```\r\n=== 添加好友记录表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_friend_add     添加好友记录表                                   */\r\n/*==============================================================*/\r\ncreate table app_friend_add\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            char(15) comment '用户名称',\r\n   added_user_id        char(15) comment '被添加用户ID',\r\n   added_user_name      varchar(30) comment '被添加用户名称',\r\n   add_status           int(2) comment '添加状态：0已申请，1已添加，2已拒绝',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 好友推荐表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_friend_recommend      好友推荐表                            */\r\n/*==============================================================*/\r\ncreate table app_friend_recommend\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '推荐人ID',\r\n   re_user_id           char(15) comment '被推荐人ID',\r\n   re_user_name         varchar(30) comment '被推荐人名称',\r\n   in_date              datetime comment '推荐时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 好友关系表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_friendship        好友关系表                                */\r\n/*==============================================================*/\r\ncreate table app_friendship\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id1             char(15) comment '用户1ID',\r\n   user_id2             char(15) comment '用户2ID',\r\n   level                int(2) comment '好友级别：1一级好友，2二级好友，3三级好友',\r\n   in_date              datetime comment '成为好友时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 群组信息表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_group            群组信息表                                 */\r\n/*==============================================================*/\r\ncreate table app_group\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   group_name           varchar(30) comment '群名称',\r\n   creator_id           char(15) comment '创建人ID',\r\n   creator_name         varchar(30) comment '创建人名称',\r\n   leader_id            char(15) comment '群主ID',\r\n   leader_name          varchar(30) comment '群主名称',\r\n   group_img            varchar(200) comment '群头像',\r\n   group_notice         varchar(200) comment '群公告',\r\n   notice_date          datetime comment '公告发布时间',\r\n   in_date              datemite comment '群创建时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 群设置表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_group_set       群设置表                                  */\r\n/*==============================================================*/\r\ncreate table app_group_set\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(15) comment '用户名称',\r\n   is_disturb           int(1) comment '是否免打扰：0是，1否',\r\n   is_save              int(1) comment '是否保存到通讯录：0是，1否',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 群-用户关系表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_group_user      群-用户关系表                                  */\r\n/*==============================================================*/\r\ncreate table app_group_user\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   group_id             char(15) comment '群ID',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名称',\r\n   is_leader            int(1) comment '是否群主：0是，1否',\r\n   is_manager           int(1) comment '是否管理员：0是，1否',\r\n   in_date              datetime comment '创建时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 个人主页设置表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_homeset   个人主页设置表                                        */\r\n/*==============================================================*/\r\ncreate table app_homeset\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户主键',\r\n   see_me               int(2) comment '是否可看我的动态：0是，1否',\r\n   see_her              int(2) comment '是否看他的动态：0是，1否',\r\n   in_blacklis          int(2) comment '是否加入黑名单：0是，1否',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 图片信息表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_image      图片信息表                                       */\r\n/*==============================================================*/\r\ncreate table app_image\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   img_belong           char(15) comment '图片所属',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名称',\r\n   url                  varchar(200) comment '图片地址',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户点赞表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_likes      用户点赞表                                       */\r\n/*==============================================================*/\r\ncreate table app_likes\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名',\r\n   relation_id          char(15) comment '关联ID',\r\n   type                 int(2) comment '类型：0资源单，1采购单，2动态，3商品，4店铺',\r\n   in_date              datetime comment '收藏时间'\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 圈层表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_pitchcircle    圈层表                                   */\r\n/*==============================================================*/\r\ncreate table app_pitchcircle\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户标识',\r\n   type                 int(2) comment '类型：0资源单，1采购单，2动态',\r\n   relation_id          char(15) comment '关联的外部主键',\r\n   title                varchar(50) comment '标题',\r\n   detail               longtext comment '详情',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 推送消息表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_pushed     推送消息表                                       */\r\n/*==============================================================*/\r\ncreate table app_pushed\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   title                varchar(15) comment '标题',\r\n   detail               longtext comment '详情',\r\n   in_date              datetime comment '发布时间',\r\n   publish_user_id      char(15) comment '发布人ID',\r\n   publish_user_name    varchar(30) comment '发布人姓名',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户分享表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_share     用户分享表                                        */\r\n/*==============================================================*/\r\ncreate table app_share\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名称',\r\n   type                 int(2) comment '类型：0资源单，1采购单，2动态，3商品',\r\n   share_to             int(2) comment '分享到：0QQ好友，1微信好友，2微信朋友圈，3微博，4复制链接',\r\n   share_id             char(15) comment '所属ID',\r\n   title                varchar(50) comment '标题',\r\n   url                  varchar(200) comment '链接',\r\n   in_date              datetime comment '分享时间',\r\n   Column_10            char(10),\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户个人认证表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_user_authentication  用户个人认证表                             */\r\n/*==============================================================*/\r\ncreate table app_user_authentication\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   is_authentication    int(2) comment '是否认证：0是，1否',\r\n   authentication_date  datetime comment '认证时间'\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户登录记录表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_user_login      用户登录记录表                                  */\r\n/*==============================================================*/\r\ncreate table app_user_login\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名',\r\n   login_date           datetime comment '登录时间',\r\n   ip                   varchar(100) comment 'IP地址',\r\n   longitude            varchar(50) comment '经度',\r\n   latitude             varchar(50) comment '纬度',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n=== 用户动态表\r\n```sql\r\n/*==============================================================*/\r\n/* Table: app_user_mood       用户动态表                                  */\r\n/*==============================================================*/\r\ncreate table app_user_mood\r\n(\r\n   id                   char(15) not null comment '主键',\r\n   user_id              char(15) comment '用户ID',\r\n   user_name            varchar(30) comment '用户名称',\r\n   mood                 varchar(200) comment '动态详情',\r\n   likes                int(8) comment '点赞数',\r\n   status               int(2) comment '状态：0待审核，1审核中，2审核通过，3审核不通过',\r\n   in_date              datetime comment '时间',\r\n   primary key (id)\r\n)\r\nENGINE = InnoDB\r\nDEFAULT CHARSET = utf8;\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/bug",
        "title": "bug",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n. 我的店铺--添加商品--添加商品属性\r\n出库地址和销售区域 是选择的 不是填写的\r\n\r\n\r\nSELECT\r\n  mpa.product_id,\r\n  IFNULL(\r\n    tranAddr (\r\n      MAX(\r\n        CASE\r\n          mpa.attr_name\r\n          WHEN '销售地区'\r\n          THEN mpa.attr_value\r\n          ELSE NULL\r\n        END\r\n      ),\r\n      '-'\r\n    ),\r\n    CAST(mpa.attr_value AS CHAR(12))\r\n  ) sale_region,\r\n    MAX(\r\n      CASE\r\n        mpa.attr_name\r\n        WHEN '出库地区'\r\n        THEN tranAddr(mpa.attr_value,'-')\r\n        ELSE NULL\r\n      END\r\n    ) repository_region,\r\nFROM\r\n  mlq_product_attr mpa\r\nWHERE mpa.product_id = '201610261142512'\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/cart",
        "title": "购物车",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:host: 116.90.81.68/app\r\n== 购物车\r\n\r\n\r\n=== 购物车 列表\r\nURL::\r\nhttp://{host}/cart/list?start=1&limit=10&userId=201506242J080J3\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart # 起始页\r\nlimit # 每页显示个数\r\nuserId # 移动端 本地保存的用户ID\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"totalsize\" : 4\r\n  \"list\": [\r\n    {\r\n      \"sellerNick\": \"廊坊通泰公路材料有限公司\", #供应商\r\n      \"shopName\": \"廊坊通泰公路材料有限公司\", #店铺名\r\n      \"productPrice\": \"4250.00\", # 价格\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e351fce4b0b02f90bf7b20.img_300_300.img\",\r\n      \"userId\": \"201506242J080J3\", # 用户id\r\n      \"userName\": \"tjzh\", # 用户名\r\n      \"productId\": \"20160224dD6HNuc\", # 商品id\r\n      \"productName\": \"70#\", # 商品名称\r\n      \"productQuantity\": 35, # 购买数量\r\n      \"minQuantity\": \"35\", # 最小起订量\r\n      \"accessTime\": \"2016-03-29 06:49:14\", # 添加时间\r\n      \"deliveryType\": 0, #提货方式 0：卖家送货 1：买家自提\r\n      \"id\": \"20160329303v668\" # 购物车id\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 添加购物车\r\nURL::\r\nhttp://{host}/cart/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"201506242J080J3\", #用户id\r\n  \"productId\" : \"20151026X3422O5\", #商品id\r\n  \"productName\" : \"兆华 70#\", #商品名称\r\n  \"productQuantity\" : 45, #购买数量\r\n  \"deliveryType\" : 1 #提货方式 0：卖家送货 1：买家自提\r\n}\r\n\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 获取库存\r\nURL::\r\nhttp://{host}/product/getStock/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 20150915P303OF7 # 商品id\r\nhttp://{host}/product/getStock/20150915P303OF7\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"stockQuantity\": \"5000\"\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取库存失败\"\r\n}\r\n```\r\n\r\n=== 编辑购物车\r\nURL::\r\nhttp://{host}/cart/edit\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"20151026X3422O5\", # 购物车id\r\n  \"productQuantity\" : 450 # 商品数量\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n    \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n\t\"state\" : 0,\r\n\t\"message\" : \"编辑失败\"\r\n}\r\n```\r\n\r\n=== 删除\r\nURL::\r\nhttp://{host}/cart/del/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 2015062545V2OHQ # 商品id\r\nhttp://{host}/cart/del/2015062545V2OHQ\r\n```\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n{\r\n    \"state\": 1\r\n}\r\n\r\n失败::\r\n```json\r\n{\r\n\t\"state\" : 0,\r\n\t\"message\" : \"删除失败\"\r\n}\r\n```\r\n\r\n=== 收货地址\r\n\r\n==== 获取收获地址\r\n\r\nURL::\r\nhttp://{host}/cart/get/addr/list/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{userId} : 用户id\r\n```\r\n例：http://{host}/cart/get/addr/list/20150615uo7jE40\r\n\r\n是否需要登录::\r\n需要\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"consignee\": \"娃哈哈222\", # 联系人\r\n      \"cellphone\": \"1234567845\", # 联系电话\r\n      \"levelNo\": 0, # 是否是默认地址 0：是  -1：否\r\n      \"area\": \"北京 北京市4\", # 地址\r\n      \"address\": \"xxxxee\" # 详细地址\r\n      \"id\": \"201610081534403\" # 地址id\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n==== 默认收货地址\r\nURL::\r\nhttp://{host}/cart/get/addr/default/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\n携带参数说明::\r\n```\r\nuserId : 用户id\r\n```\r\n例: http://{host}/cart/get/addr/default/20160920GY3Pm85444\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"consignee\" : \"陆陆\",\r\n  \"cellphone\" : \"18840853787\",\r\n  \"levelNo\" : 0,\r\n  \"address\" : \"啦啦队\",\r\n  \"area\" : \"河北省|秦皇岛市|抚宁县\",\r\n  \"state\" : 1,\r\n  \"id\" : \"201610140328269\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"没有默认地址！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n==== 添加收获地址\r\nURL::\r\nhttp://{host}/cart/add/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\":\"20150615uo7jE40\", # 用户id\r\n  \"consignee\" : \"娃哈哈2\", # 联系人\r\n  \"area\" : \"北京|北京市\", # 地址\r\n  \"address\" : \"xxxxee\", # 详细地址\r\n  \"cellphone\" : \"12345678\" # 电话\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"id\": \"201610120452124\", # 地址id\r\n  \"levelNo\": \"0\" # 是否默认 0:默认 -1:不是默认\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 编辑收货地址\r\nURL::\r\nhttp://{host}/cart/edit/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"201610081534403\", # 收货地址id\r\n  \"userId\":\"20150615uo7jE40\", # 用户id\r\n  \"consignee\" : \"娃哈哈2\", # 联系人\r\n  \"area\" : \"北京|北京市4\", # 地址\r\n  \"address\" : \"xxxxee\", # 详细地址\r\n  \"cellphone\" : \"1234567845\" # 电话\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n==== 设置默认地址\r\nURL::\r\nhttp://{host}/cart/edit/addr\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\" : \"201610081534403\", # 收货地址id\r\n  \"levelNo\":0 # 设置默认地址\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"编辑失败！\"\r\n}\r\n```\r\n\r\n\r\n==== 删除地址\r\nURL::\r\nhttp://{host}/cart/del/addr/{id}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : id # 地址id\r\n```\r\nhttp://{host}/cart/del/addr/201610081608294\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"删除失败！\"\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/cservice",
        "title": "客服管理",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: app.mailiqing.com/app\r\n== 客服管理\r\n\r\n=== 动态\r\nURL::\r\nhttp://{host}/cservice/dynamic?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"imgs\": [ \"http://116.90.81.68:80/koto/img/58216823e4b05f43ef7356df.img_300_300.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    },\r\n    {\r\n      \"imgs\": [\r\n        \"http://116.90.81.68:80/koto/img/582537a0e4b02a49b7a089bf.img_300_300.img\"\r\n      ],\r\n      \"clist\": [],\r\n      \"likeCount\": 0,\r\n      \"collectionCount\": 0,\r\n      \"inDate\": \"2016-11-11 11:14:40.0\",\r\n      \"mood\": \"发布时间\",\r\n      \"userImage\": \"http://116.90.81.68:80/koto/img/58216823e4b05f43ef7356df.img_300_300.img\",\r\n      \"type\": \"2\",\r\n      \"commentCount\": 0,\r\n      \"id\": \"20161111205Q3Bj\",\r\n      \"user_name\": \"沥沥\",\r\n      \"isFriend\": 1,\r\n      \"isLike\": \"1\",\r\n      \"isCollection\": \"1\",\r\n      \"user_id\": \"20161021E0f8Ro0\"\r\n    }\r\n  ],\r\n  \"state\": 1,\r\n  \"totalsize\": 560\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 动态详情\r\nURL::\r\nhttp://{host}/app_pitchcircle/getMoodDetail?id=201611177Gs0Cn3\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"  #搜索值\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 采购单\r\nURL::\r\nhttp://{host}/cservice/procurement?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"id\": \"20161111866mgN0\",\r\n      \"userId\": \"20161021E0f8Ro0\",\r\n      \"title\": \"韩国大宇 稳定剂\",\r\n      \"receiveAddr\": \"北京市-北京市-大兴区\",\r\n      \"inDate\": \"2016-11-11 14:14:20\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/582561bbe4b02a49b7a089c5.img_100_100_1.img\",\r\n      \"unit\": \"吨\",\r\n      \"count\": \"25.00\"\r\n    },\r\n    {\r\n      \"id\": \"20150707E245t4x\",  #采购单id\r\n      \"title\": \"国产品牌 沥青4444444444444444\", #采购单标题\r\n      \"count\": 500.00, #数量\r\n      \"userId\": \"20160919OR42Yb6\", #采购单发布者\r\n      \"receiveAddr\": \"华北地区\", #收货地址\r\n      \"inDate\": \"2015-07-07 03:43:48\", #发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", #图片\r\n      \"unit\": \"吨\" #单位\r\n    },\r\n  ],\r\n  \"totalsize\": 114,\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 资源单\r\nURL::\r\nhttp://{host}/cservice/resource?start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nstart : 起始页\r\nlimit : 每页显示个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"total\": 173,\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"id\":\"20161027D87f7q7\",//资源单id\r\n      \"rs_name\":\"吃吃吃\",//公司名称\r\n      \"img\":\"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"rs_area\":\"北京市|北京市|东城区\",\r\n      \"rs_state\":\"沥青路面湿滑\",//介绍\r\n    },\r\n    {\r\n      \"rs_state\": \"啦啦啦啦\",\r\n      \"id\": \"20161111M0F55G3\",\r\n      \"rs_name\": \"啊啊啊\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/5825197de4b05f43ef735756.img_300_300.img\",\r\n      \"rs_area\": \"北京市|北京市|朝阳区\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n== 审核\r\n\r\n=== 审核动态\r\nURL::\r\nhttp://{host}/cservice/audit/dynamic?id=20161111x4D6266\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 动态id\r\n```\r\n例子: http://{host}/cservice/audit/dynamic?id=20161111x4D6266\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n=== 审核评论\r\nURL::\r\nhttp://{host}/cservice/audit/comment?id=2016111154QPF31\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 评论id\r\n```\r\n例子: http://{host}/cservice/audit/comment?id=2016111154QPF31\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n=== 审核采购单\r\nURL::\r\nhttp://{host}/cservice/audit/procurement?id=20169029yi2o2e3&state=0\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 采购单id\r\nstate : 0:不通过 1:通过\r\n```\r\n例子: http://{host}/cservice/audit/procurement?id=20169029yi2o2e3&state=0\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"操作失败\"\r\n}\r\n```\r\n\r\n== 获取客服信息\r\n=== 获取平台客服\r\n\r\nURL::\r\nhttp://{host}/app_customerService/getPlatCustomerService?custId=201512116eSr235\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n\"custId\": \"201512116eSr235\" # s_custId 卖家\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n\"state\":1,\r\n\"id\":\"20161031je43e0i\" //环信ID\r\n}\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取卖家客服失败\"\r\n}\r\n```\r\n\r\n=== 获取卖家客服\r\n\r\nURL::\r\nhttp://{host}/app_customerService/getMemberCustomerService?custId=201512116eSr235\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n\"custId\": \"201512116eSr235\" # s_custId 卖家\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n\"state\":1,\r\n\"id\":\"20161031je43e0i\" //环信ID\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"获取卖家客服失败\"\r\n}\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "FROM mailiqing.com:5000/tomcat:1.1\r\nCOPY ./setenv.sh /apache-tomcat-7.0.62/bin/setenv.sh\r\nEXPOSE 8080\r\nCMD [\"/usr/bin/supervisord\",\"-n\"]",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/goods",
        "title": "商品模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:host: app.mailiqing.com/app\r\n\r\n== 商品模块\r\n=== 商品列表统一接口\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST +\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n是否需要登录::\r\n否\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"from\":0,  # 起始页数\r\n  \"searchKey\":\"\",  # 搜索框\r\n  \"catId\":\"\",  # 管理类目id\r\n  \"brandName\":\"\",  # 品牌\r\n  \"productName\":\"\",  # 型号\r\n  \"region\":\"\",  # 出库地\r\n  \"sellerNick\":\"\",  # 供应商\r\n  \"priceFrom\":\"\",  # 起始价格\r\n  \"priceTo\":\"\", # 结束价格\r\n  \"category\":\"\",  # 商品类目\r\n  \"shopId\":\"\",  # 店铺id\r\n  \"shopCat\":\"\",  # 店铺类目\r\n  \"sort\":0  # 价格排序 0:升序 1:降序\r\n}\r\n```\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n=== 进入现货市场\r\nURL::\r\nhttp://{host}/goods\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET +\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [ #品牌\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\",\r\n    \"韩国SK\",\r\n    \"进口品牌\"\r\n  ],\r\n  \"productNames\": [ #型号\r\n    \"70#\",\r\n    \"弹性体SBS改性沥青防水卷材\",\r\n    \"90#\",\r\n    \"聚氨脂防水涂料\",\r\n    \"自粘防水卷材\",\r\n    \"SBS类\"\r\n  ],\r\n  \"sellerNicks\": [ #供应商\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"Mai沥青自营\",\r\n    \"山东大山路桥工程有限公司\",\r\n    \"山东高速物资储运有限公司\",\r\n    \"江苏中路新材料科技发展有限公司\",\r\n    \"山东华瑞道路材料技术有限公司\"\r\n  ],\r\n  \"hots\": [   #热门推荐\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\",\r\n    \"韩国SK\",\r\n    \"进口品牌\"\r\n  ],\r\n  \"categorys\": [\r\n    {\r\n      \"catId\": \"201509145a8o761\",\r\n      \"catName\": \"沥青\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915a006n2x\",\r\n      \"catName\": \"沥青添加剂\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915H047E36\",\r\n      \"catName\": \"沥青混合料\"\r\n    },\r\n    {\r\n      \"catId\": \"20150915H3y0520\",\r\n      \"catName\": \"防水材料\"\r\n    },\r\n    {\r\n      \"catId\": \"2015091534715Do\",\r\n      \"catName\": \"设备/检测\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\n```\r\nJSON\r\n```\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n[source,json]\r\n----\r\n{\r\n  \"searchKey\" : \"沥青\"  \r\n}\r\n----\r\n string 必须\r\n\r\n--\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n[source,json]\r\n----\r\n{\r\n  \"list\": [\r\n    {\r\n      \"goodsId\": \"201512308RLi6w2\", \r\n      \"title\": \"70#基质沥青\", \r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", \r\n      \"productPrice\": \"1800.00\", \r\n      \"unit\": \"吨\", \r\n      \"minQuantity\": \"5000\", \r\n      \"repositoryRegion\": \"华东地区,江苏省,泰州市\", \r\n      \"url\": \"/product/get/201512308RLi6w2\" \r\n    },\r\n    {\r\n      \"id\": \"201509155okjh81\",\r\n      \"title\": \"海韵牌70#沥青\",\r\n      \"imgOriginal\": null,\r\n      \"productPrice\": \"1745.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"50000\",\r\n      \"repositoryRegion\": \"华东地区,山东省\",\r\n      \"url\": \"/product/get/201509155okjh81\"\r\n    }\r\n  ],\r\n  \"totalCount\": 719, \r\n  \"totalPages\": 72, \r\n  \"state\": 1 \r\n}\r\n----\r\n 商品id\r\n 商品名称\r\n 图片\r\n 商品价格\r\n 单位\r\n 最小起订量\r\n 出库地址\r\n 商品详情链接\r\n 总数\r\n 总页数\r\n 1:成功 0:失败\r\n--\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 品牌过滤\r\n[[/uploads/2-1.png]]\r\n\r\n[IMPORTANT]\r\n====\r\n点击 品牌 跳转到 现货市场列表页  携带 *brandName* 到列表页\r\n====\r\n\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"brandName\" : \"东海\",  #品牌\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 供应商过滤\r\n[IMPORTANT]\r\n====\r\n点击 供应商 跳转到 现货市场列表页  携带 *sellerNick* 到列表页\r\n====\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"sellerNick\" : \"北京市政路桥建材集团有限公司\",  #供应商\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 型号过滤\r\n[IMPORTANT]\r\n====\r\n点击 型号 跳转到 现货市场列表页  携带 *productName* 到列表页\r\n====\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"productName\" : \"SBS\",  #型号\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 类目过滤\r\n[IMPORTANT]\r\n====\r\n点击左侧类目 右侧更新数据\r\n====\r\nURL::\r\nhttp://{host}/goods/search/category\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"catId\" : \"201509145a8o761\" #类目id\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [\r\n    \"国产品牌\",\r\n    \"山西兰亭\",\r\n    \"艾施姆\"\r\n  ],\r\n  \"productNames\": [\r\n    \"沥青混凝土\",\r\n    \"橡胶（ARAC）\",\r\n    \"沥青玛蹄脂碎石\",\r\n    \"环保橡胶\",\r\n    \"排水降噪\",\r\n    \"防冰融雪\"\r\n  ],\r\n  \"sellerNicks\": [\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"江苏中路新材料科技发展有限公司\",\r\n    \"兰亭商社\",\r\n    \"北京塞北路通商贸有限公司\",\r\n    \"北京岭北筑路材料有限公司\",\r\n    \"北京艾施姆科技有限公司\"\r\n  ],\r\n  \"hots\": [\r\n    \"国产品牌\",\r\n    \"山西兰亭\",\r\n    \"艾施姆\"\r\n  ],\r\n  \"categorys\": [\r\n    {\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青添加剂\",\r\n      \"catId\": \"20150914i3J058e\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青混合料\",\r\n      \"catId\": \"20150914m348342\"\r\n    },\r\n    {\r\n      \"catName\": \"防水材料\",\r\n      \"catId\": \"201509140qX823u\"\r\n    },\r\n    {\r\n      \"catName\": \"设备/检测\",\r\n      \"catId\": \"20150914K2Mm1LN\"\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 价格排序\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST  Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"sort\" : 0,    // 0:升序 1:降序\r\n  \"from\" : 2 # 页数(列表页,翻页时 携带)\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 添加商品\r\nURL::\r\nhttp://{host}/goods/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"2015091886Hi8X7\", #用户id\r\n  \"shopId\" : \"201509187M0Cv51\", #店铺id\r\n  \"title\" : \"东风70#\", #商品名称\r\n  \"catCode\" : \"20150914q0asfEw|20150914w7L7oG2|201509140732S22\", #类目\r\n  \"repositoryAddr\" : \"北京|北京市\", #出库地址\r\n  \"price\" : 3400,   # 价格 double\r\n  \"inventory\" : 400,  # 库存 int\r\n  \"saleAddr\" : \"北京|北京市\", # 销售区域\r\n  \"delivery\" : 3, # 交货天数\r\n  \"minMount\" : 45,  # 最小起订量\r\n  \"logisticsType\" : 0, # 物流信息 0:买家自提 1:卖家送货\r\n  \"goodsDesc\" : \"70# 沥青好东西\", # 商品描述\r\n  \"img\" : \"img/509476613293148127.jpg|img/624472029306431674\" # 图片 多张图片使用 | 分割\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n    \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加商品失败！\"\r\n}\r\n```\r\n\r\n\r\n\r\n==== 商品分类\r\nURL::\r\nhttp://{host}/procurement/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"msc_cl\": [\r\n        {\r\n          \"msc_cl\": [  # 子类目 数组\r\n            {\r\n              \"catName\": \"10#\",\r\n              \"catId\": \"2015091431h7wTV\"\r\n            },\r\n            {\r\n              \"catName\": \"60#\",\r\n              \"catId\": \"2015112386UvJoM\"\r\n            },\r\n            {\r\n              \"catName\": \"70#\",\r\n              \"catId\": \"201509140732S22\"\r\n            },\r\n            {\r\n              \"catName\": \"90#\",\r\n              \"catId\": \"201509144X87wlj\"\r\n            },\r\n            {\r\n              \"catName\": \"100#\",\r\n              \"catId\": \"20160112l200k78\"\r\n            },\r\n            {\r\n              \"catName\": \"110#\",\r\n              \"catId\": \"2015091482l1w41\"\r\n            },\r\n            {\r\n              \"catName\": \"130#\",\r\n              \"catId\": \"20150914L740u1U\"\r\n            },\r\n            {\r\n              \"catName\": \"140#\",\r\n              \"catId\": \"20151125460MI7i\"\r\n            },\r\n            {\r\n              \"catName\": \"180#\",\r\n              \"catId\": \"20151223iX8q82e,20150914w7L7oG2\"\r\n            }\r\n          ],\r\n          \"catName\": \"基质沥青\", # 类目名\r\n          \"catId\": \"20150914w7L7oG2\"  # 类目id\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"SBS类\",\r\n              \"catId\": \"20150914m401ckq\"\r\n            },\r\n            {\r\n              \"catName\": \"SBR类\",\r\n              \"catId\": \"2015091418gJ6ub\"\r\n            },\r\n            {\r\n              \"catName\": \"橡胶粉\",\r\n              \"catId\": \"20150914pM66574\"\r\n            },\r\n            {\r\n              \"catName\": \"PG改性沥青\",\r\n              \"catId\": \"20150914F85313F\"\r\n            },\r\n            {\r\n              \"catName\": \"环保橡胶沥青\",\r\n              \"catId\": \"20150914A4mAK2U\"\r\n            },\r\n            {\r\n              \"catName\": \"MAC改性沥青\",\r\n              \"catId\": \"201601140E1sgI3\"\r\n            }\r\n          ],\r\n          \"catName\": \"改性沥青\",\r\n          \"catId\": \"20150914H6PM003\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"公路用乳化沥青\",\r\n              \"catId\": \"20150914165E287\"\r\n            },\r\n            {\r\n              \"catName\": \"改性乳化沥青\",\r\n              \"catId\": \"20160318CPQ26JU\"\r\n            },\r\n            {\r\n              \"catName\": \"高含固量乳化沥青\",\r\n              \"catId\": \"20150914Wd82123\"\r\n            },\r\n            {\r\n              \"catName\": \"高粘度乳化沥青\",\r\n              \"catId\": \",20150914K6N5Hha\"\r\n            },\r\n            {\r\n              \"catName\": \"微表处改性乳化沥青\",\r\n              \"catId\": \"20150914c453WYQ\"\r\n            },\r\n            {\r\n              \"catName\": \"冷再生乳化沥青\",\r\n              \"catId\": \"2015091476gmJ1T\"\r\n            },\r\n            {\r\n              \"catName\": \"特殊乳化沥青\",\r\n              \"catId\": \"201509146eb8Pyb\"\r\n            },\r\n            {\r\n              \"catName\": \"不粘轮乳化沥青\",\r\n              \"catId\": \"20160413Q7Km65j\"\r\n            }\r\n          ],\r\n          \"catName\": \"乳化沥青\",\r\n          \"catId\": \"20150914m34mQ5n\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"煤沥青\",\r\n              \"catId\": \"20150914eB2cy68\"\r\n            },\r\n            {\r\n              \"catName\": \"岩沥青\",\r\n              \"catId\": \"2015091424K8635\"\r\n            },\r\n            {\r\n              \"catName\": \"彩色沥青\",\r\n              \"catId\": \"20160106M8nK6iI\"\r\n            },\r\n            {\r\n              \"catName\": \"硫化沥青\",\r\n              \"catId\": \"20160106O5tSxi4\"\r\n            },\r\n            {\r\n              \"catName\": \"防腐沥青\",\r\n              \"catId\": \"20151019341oqb4\"\r\n            }\r\n          ],\r\n          \"catName\": \"其他沥青\",\r\n          \"catId\": \"20150914q48W8K0\"\r\n        }\r\n      ],\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n说明::\r\n获取的类目是树形结构\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 品牌\r\n\r\nURL::\r\nhttp://{host}/app/procurement/brand/{categoryId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{categoryId} : 201509140732S22 # 类目id\r\n```\r\nhttp://{host}/app/procurement/brand/201509140732S22\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"brandId\": \"20150914NO6768t\", # 品牌id\r\n      \"brandName\": \"韩国SK\" # 品牌名称\r\n    },\r\n    {\r\n      \"brandId\": \"201509148O45Q61\",\r\n      \"brandName\": \"齐鲁石化\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 立即购买 结算\r\nURL::\r\nhttp://{host}/app_order/insertOrder.shtml\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nPOST Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"consignee\": \"77777777\", # 联系人\r\n  \"consigneeContact\": \"177777777\", # 联系方式\r\n  \"placeOfDelivery\": \"277777777\", # 收货地址\r\n  \"tihuoType\": \"1\", # 配送方式 0卖家运输，1买家自提\r\n  \"shipRemark\": \"dsssdsdds\", # 备注\r\n  \"invoiceType\": \"0\", # 发票类型 0增值税专用发票，1增值税普通发票\r\n  \"kaijuType\": \"1\", # 开据类型 0一票制，1两票制\r\n  \"buyerId\": \"20150828QYY07uh\", # 买家Id (s_custId)\r\n  \"buyerName\": \"测试账号_买家1\", # 买家名称\r\n  \"goodsId\": \"201509233SiR651\", # 商品ID\r\n  \"goodsNum\": \"10\", # 购买数量\r\n  \"goodsPrice\": \"12.34\" # 商品单价\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\": \"201610131634428\", # 订单id\r\n  \"bankNo\": \"862182325910001\", # 账号\r\n  \"totalShipFee\": \"0.0\", # 订单运费\r\n  \"totalOrderAmount\": \"123.40\", # 订单总额\r\n  \"state\": 1,\r\n  \"userName\": \"北京金兆路华电子商务有限公司\", # 户名\r\n  \"bank\": \"招商银行 朝阳门支行\", # 开户行\r\n  \"totalGoodsAmount\": \"123.40\" # 订单金额\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"新增订单失败！\"\r\n}\r\n```\r\n\r\n=== 筛选\r\n\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"from\":1,  # 起始页\r\n  \"searchKey\":\"沥青\", # 搜索关键字\r\n  \"brandName\":\"国产品牌\", # 品牌\r\n  \"productName\":\"SBS\", # 型号\r\n  \"region\":\"北京市\", # 地区\r\n  \"sellerNick\":\"北京市政路桥建材集团有限公司\", # 供应商\r\n  \"priceFrom\": 1000, # 起始价格\r\n  \"priceTo\": 2000, # 结束价格\r\n  \"sort\":0 # 0:升序 1:降序\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n参照 搜索 返回数据格式\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 获取 品牌 型号 供应商\r\nURL::\r\nhttp://{host}/goods/filter\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"brandNames\": [   #品牌\r\n    \"国产品牌\",\r\n    \"东海\",\r\n    \"中海油36-1\",\r\n    \"昆仑\"\r\n  ],\r\n  \"productNames\": [   #型号\r\n    \"70#\",\r\n    \"弹性体SBS改性沥青防水卷材\",\r\n    \"90#\",\r\n    \"聚氨脂防水涂料\"\r\n  ],\r\n  \"sellerNicks\": [   #供应商\r\n    \"北京市政路桥建材集团有限公司\",\r\n    \"Mai沥青自营\",\r\n    \"山东大山路桥工程有限公司\",\r\n    \"山东高速物资储运有限公司\"\r\n  ],\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 首页 轮播\r\nURL::\r\nhttp://{host}/goods/carousel?userId=20160919OR42Yb6\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n空\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"carousel\": [ # 轮播图\r\n    {\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"url\": \"http://www.mailiqing.com/special/zhyyingkou/zhyyingkou.html\"\r\n    },\r\n    {\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"url\": \"http://www.mailiqing.com/special/ziyuandan/ziyuandan.html\"\r\n    }\r\n  ],\r\n  \"recommend\": [ # 热卖推荐\r\n    {\r\n      \"title\": \"70#\", # 标题\r\n      \"clickCount\": \"2\", # 点击量\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", # 图片\r\n      \"userName\": \"小明\", # 发布者\r\n      \"type\": \"商品\",  # 类型 资源单|采购单|商品\r\n      \"url\": \"http://www.mailiqing.com/special/zhyyingkou/zhyyingkou.html\" # url\r\n    },\r\n    {\r\n      \"title\": \"70#\",\r\n      \"clickCount\": \"2\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"userName\": \"小明\",\r\n      \"type\": \"商品\",\r\n      \"url\": \"http://www.mailiqing.com/special/ziyuandan/ziyuandan.html\"\r\n    }\r\n  ],\r\n  \"dynamic\": [\r\n    {\r\n      \"imgs\": [ \"img/57e8efdbe4b09d52039ce4c4.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 首页 类目\r\n[IMPORTANT]\r\n====\r\n. 点击类目 携带类目id 跳转现货市场列表页\r\n. URL +\r\nhttp://{host}/goods/search\r\n. 携带参数说明\r\n```json\r\n{\"category\":\"沥青\"}\r\n```\r\n====\r\n\r\n\r\nURL::\r\nhttp://{host}/goods/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"catName\": \"沥青\", # 类目名 点击时  携带\r\n      \"catId\": \"20150914q0asfEw\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青添加剂\",\r\n      \"catId\": \"20150914i3J058e\"\r\n    },\r\n    {\r\n      \"catName\": \"沥青混合料\",\r\n      \"catId\": \"20150914m348342\"\r\n    },\r\n    {\r\n      \"catName\": \"防水材料\",\r\n      \"catId\": \"201509140qX823u\"\r\n    },\r\n    {\r\n      \"catName\": \"设备/检测\",\r\n      \"catId\": \"20150914K2Mm1LN\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 商品详情\r\nURL::\r\nhttp://{host}/product/get/{id}?userId=20160919OR42Yb6\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid: 20160308fqkgw2G # 商品id\r\nuserId: 20160919OR42Yb6 # 用户id (如果登录,需要携带)\r\n```\r\nhttp://{host}/product/get/20160308fqkgw2G\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"title\": \"秦皇岛90#\", # 商品名称\r\n  \"unit\": \"吨\", # 单位\r\n  \"imgLarge\": [ # 图片大图\r\n    \"http://116.90.81.68:80/koto/img/57e352dee4b0b02f90bf8995.img\"\r\n  ],\r\n  \"imgs\": [\r\n    \"http://116.90.81.68:80/koto/img/57e352dee4b0b02f90bf8995.img_300_300.img\" # 图片\r\n  ],\r\n  \"sellerNick\": \"北京通力正实\", # 公司名称\r\n  \"productPrice\": \"1580.00\", # 商品价格\r\n  \"stockQuantity\": \"5000\", # 库存量\r\n  \"packageType\": \"散装 \", # 包装类型\r\n  \"deliveryDay\": \"7\", # 备货周期 天\r\n  \"saleRegion\": \"全国\",  # 销售区域\r\n  \"minQuantity\": \"35\", # 最小起订量\r\n  \"repositoryRegion\": \"华北地区,河北省\", # 出库地\r\n  \"isSelf\": \"0\", # 是否是自营 0：否 1：是\r\n  \"shopId\": \"20151119v4N0775\",  # 店铺id\r\n  \"phone\": \"400-187-1158\", # 客服电话\r\n  \"goodsDesc\":\"/h5/goodsDesc/20160308fqkgw2G\" # 商品描述\r\n  \"huanxin_no\": \"20161031je43e0i\", # 平台环信号\r\n  \"m_huanxin_no\": \"20161031je43e0i\", # 卖家环信号\r\n  \"plat_image\": \"20161031je43e0i\", # 平台客服头像\r\n  \"member_image\": \"20161031je43e0i\", # 卖家头像\r\n  \"shopInfo\": { # 店铺信息\r\n    \"id\": \"20151119v4N0775\", # 店铺id\r\n    \"shopName\": \"北京通力正实\", # 店铺名称\r\n    \"shopLogo\": \"http://116.90.81.68/data/upload_image/shop/0/7/f082080de6d54d3492f5f57348aacfbe.jpg\", # 店铺logo\r\n    \"shopDesc\": \"\\n    北京通力正实贸易有限公司，成立于2009年，公司依法从事沥青、燃料油、危险品等专业贸易。公司注册资金500万元，拥有天津塘沽沥青库（2万库容），北京沥青库（2万库容），有一支管理经验丰富，技术力量雄厚的专业团队，各类专业人才近百名。\\n公司年销售、配送能力七十万吨以上。主要经销、配送中国石油秦皇岛、辽河、任丘、呼和浩特等炼厂生产的《昆仑》牌道路沥青、渣油、油浆、焦化料、催化料、塔顶油、燃料油及一线、二线、三线防水助剂；中海油滨州炼厂生产的《中海36-1》道路沥青、蜡油及200#焦化油；中国石油保定、镇海、齐鲁、南京金陵、西安、燕化等炼厂生产的《东海牌》道路沥青、油浆及渣油。在三大央企以上产品销量名列前茅。\\n在公司全体员工的积极努力下，公司先后获得：2010年中国石化炼油上海销售有限公司“东海牌”沥青稳定发展奖，河北省A级经销商等荣誉；获得中油燃料油股份有限公司、中海油中海沥青股份有限公司的大客户待遇。 公司以“科技为先、质量为本、信誉为金”为宗旨，以创新发展，靠质量求市场，用诚信求合作，竭诚为各界朋友提供优质的产品和诚信的服务。\", # 店铺简介\r\n    \"url\": \"/shop/get/20151119v4N0775\" # 店铺链接\r\n    \"collectCount\": 12, # 收藏数量\r\n    \"isCollect\": 1, # 是否收藏 0:否 1:是\r\n    \"goodsCount\": 17, # 商品数量\r\n    \"saleCount\": 11.5 # 销售量\r\n  },\r\n  \"services\": [ # 服务\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a7.img\",\r\n      \"text\": \"物流\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a3.img\",\r\n      \"text\": \"金融\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a1.img\",\r\n      \"text\": \"委托找货\"\r\n    },\r\n    {\r\n      \"icon\": \"http://116.90.81.68:80/koto/img/57ff2868e4b09d52039ce5a5.img\",\r\n      \"text\": \"加工\"\r\n    }\r\n  ],\r\n  \"recommandGoods\": [ # 热门推荐\r\n    {\r\n      \"title\": \"辽河石化70#\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"1610.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华北地区,河北省\",\r\n      \"url\": \"/product/get/2016030874s56CG\",\r\n      \"goodsId\": \"2016030874s56CG\"\r\n    },\r\n    {\r\n      \"title\": \"石家庄炼厂90#\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"1550.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华北地区,河北省\",\r\n      \"url\": \"/product/get/20160308La441Oe\",\r\n      \"goodsId\": \"20160308La441Oe\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n=== 进入店铺\r\nURL::\r\nhttp://{host}/shop/get/{id}?userId=20160919OR42Yb6\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 2015091404A3ol8 # 店铺id\r\nuserId: 20160919OR42Yb6 # 用户id (如果登录,需要携带)\r\n```\r\nhttp://{host}/shop/get/2015091404A3ol8\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\" : \"2015091404A3ol8\", # 店铺id\r\n  \"shopName\" : \"北京中物振华贸易有限公司\", # 店铺名称\r\n  \"shopLogo\" : \"http://116.90.81.68/data/upload_image/shop/13/0/016a6e2b4da14457b1da90ed39ed27c7.jpg\", # 店铺logo\r\n  \"shopDesc\" : \"北京中物振华贸易有限公司是以经营道路沥青、石化产品等为主的专业性贸易公司。公司拥有进出口企业许可证。近年来，公司在市场实践中积累了丰富的市场运作经验，拥有一支专业化、高素质、稳定团结的职工队伍。公司经营进口70号、90号道路沥青及乳化沥青和改性沥青。公司在天津塘沽建有12000吨散装沥青储存库区，年周转能力20余万吨，在山西平遥建有10000吨散装沥青库区。我公司是华北地区第一家经销进口散装道路沥青的企业，同时还是韩国“SK”沥青在部分地区的独家代理商，公司平均每年自销进口沥青20万吨以上，外贸进口额在8亿元人民币／年以上。 多年来，公司秉承“真诚、守信”的经营理念，以严谨务实的做事风格，在客户中赢得了充分的信誉和支持。\", # 店铺描述\r\n  \"url\" : \"/shop/get/2015091404A3ol8\",\r\n  \"collectCount\" : \"12\", # 收藏数量\r\n  \"goodsCount\" : \"12\", # 商品数量\r\n  \"saleCount\" : \"11.5\", # 销售量\r\n  \"isCollect\" : \"1\", # 是否收藏 0:否 1:是\r\n  \"shopStandardLogo\" : \"http://116.90.81.68/data/upload_image/shop/14/8/3a858e0536244ac9a8ede39792fe9ebe.png\", # 店铺描述 图片\r\n  \"state\" : 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/search?q=沥青&type=0&from=2\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\n携带参数说明::\r\n```\r\nq : 沥青 # 请求参数\r\ntype : 0:全部(默认) 1:采购单搜索框 2:资源单搜索框\r\nfrom : 1 (起始页)\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n\"dynamics\": [\r\n    {\r\n      \"imgs\": [ \"img/57e8efdbe4b09d52039ce4c4.img\" ],   # 图片地址\r\n      \"clist\": [], # 评论列表\r\n      \"likeCount\": 0, # 点赞数量\r\n      \"collectionCount\": 0, # 收藏数量\r\n      \"inDate\": \"2016-09-26 17:52:27.0\", # 时间\r\n      \"mood\": \"呵呵\", # 动态详情\r\n      \"userImage\": \"\", # 用户头像\r\n      \"type\": \"2\", # 动态\r\n      \"commentCount\": 0, # 评论数\r\n      \"id\": \"20160926g4V6j65\",  # 动态ID\r\n      \"user_name\": \"ceshi_buyer\", # 用户名\r\n      \"isLike\": \"1\", # 是否已点赞 0:是 1:否\r\n      \"isCollection\": \"1\", # 是否收藏 0:是 1:否\r\n      \"user_id\": \"20150828QYY07uh\" # 用户ID\r\n    }\r\n  ],\r\n  \"goods\": [\r\n    {\r\n      \"title\": \"70#优质沥青\",\r\n      \"imgOriginal\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"productPrice\": \"3500.00\",\r\n      \"unit\": \"吨\",\r\n      \"minQuantity\": \"35\",\r\n      \"repositoryRegion\": \"华东地区,上海市\",\r\n      \"url\": \"/product/get/20160614I6PXp42\",\r\n      \"goodsId\": \"20160614I6PXp42\"\r\n    }\r\n  ],\r\n  \"procurements\": [ # 采购单\r\n   {\r\n      \"id\": \"201508221gK5Lp5\", # 采购单id\r\n      \"title\": \"东海 沥青\", # 标题\r\n      \"receiveAddr\": \"华南地区-广西省\", # 地址\r\n      \"inDate\": \"2015-08-22 03:41:24\", # 发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", # 图片\r\n      \"unit\": \"吨\", # 单位\r\n      \"count\": \"40.00\" # 数量\r\n    },\r\n    {\r\n      \"id\": \"20150928R564b43\",\r\n      \"title\": \"国产品牌 沥青\",\r\n      \"receiveAddr\": \"华东地区-浙江省-丽水市-青田县\",\r\n      \"inDate\": \"2015-09-28 08:04:50\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"unit\": \"吨\",\r\n      \"count\": \"1.00\"\r\n    }\r\n  ],\r\n  \"resources\": [ # 资源单\r\n    {\r\n      \"id\": \"20160425Iyf0al0\", # 资源单id\r\n      \"rs_name\": \"山东金石沥青股份有限公司\", # 公司名称\r\n      \"rs_state\": \"金石沥青，质量保证，欢迎给我来我司考察。\",# 公司介绍\r\n      \"rs_area\": \"华东地区,山东省,日照市\", # 所在地\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\" # 图片\r\n    },\r\n    {\r\n      \"id\": \"201604267Rds4pK\",\r\n      \"rs_name\": \"东北兰亭轩飞沥青技术推广有限公司\",\r\n      \"rs_state\": \"公司销售以下产品《双龙70#、双龙90#、彩色沥青、高铁和隧道专用防水板、改性沥青设备、再生沥青混凝土拌合站》；欢迎各位咨询购买\\r\\n\",\r\n      \"rs_area\": \"东北地区\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\"\r\n    }\r\n  ],\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 首页 通知\r\nURL::\r\nhttp://{host}/alter/list?userId=201610175a7YJ3K&start=1&limit=10\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nuserId : 用户ID\r\nstart: 起始页\r\nlimit: 每页个数\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"dynamic\": {\r\n        \"id\": \"20161207X3T4722\",\r\n        \"imgs\": [\r\n          \"http://116.90.81.68:80/koto/img/5847b775e4b028b1d2a46f76.img_300_300_1.img\"\r\n        ],\r\n        \"isFriend\": 1,\r\n        \"user_name\": \"建华\",\r\n        \"collectionCount\": 0,\r\n        \"likeCount\": 0,\r\n        \"clist\": [],\r\n        \"isLike\": \"1\",\r\n        \"isCollection\": \"1\",\r\n        \"userImage\": \"http://116.90.81.68:80/koto/img/5829375be4b02a49b7a089d1.img_100_100_1.img\",\r\n        \"mood\": \"这次行不行\",\r\n        \"user_id\": \"20161031Je43e0i\",\r\n        \"commentCount\": 10\r\n      },\r\n\r\n      \"id\": 34, #消息id\r\n      \"moodId\": \"201612050UoG265\", # 动态ID\r\n      \"comment\": \"回复内容\", # 评论内容\r\n      \"image\": \"http://116.90.81.68:80/koto/img/583570ffe4b03366a5caf6e2.img_220_220_1.img\", # 评论者的头像\r\n      \"nickname\": \"行行行\", # 评论者的昵称\r\n      \"inDate\": \"2016-12-07 10:48:18\", # 评论时间\r\n      \"type\": 2 # 评论的消息\r\n    },\r\n    {\r\n      \"id\": 1, #消息id\r\n      \"msgAlter\": \"测试0\",\r\n      \"msgTitle\": \"测试0\",  #消息标题\r\n      \"inDate\": \"2016-11-04 10:08:42\", # 时间\r\n      \"msgContent\": \"测试0\", #消息内容\r\n      \"type\" : 1, #系统消息\r\n      \"url\":\"http://app.mailiqing.com/app/h5/alter/1\"\r\n    },\r\n    {\r\n      \"id\": 4,\r\n      \"msgAlter\": \"测试3\",\r\n      \"msgTitle\": \"测试3\",\r\n      \"inDate\": \"2016-11-04 10:09:04\",\r\n      \"msgContent\": \"测试3\",\r\n      \"type\" : 1,\r\n      \"url\":\"http://app.mailiqing.com/app/h5/alter/1\"\r\n    },\r\n    {\r\n      \"id\":\"20160817K5r07Pt\", # 主键ID\r\n      \"addStatus\":1, # 添加状态：0已申请，1已添加，2已拒绝\r\n      \"inDate\":\"2016-08-17 09:30:30\", # 时间\r\n      \"addedUserId\":\"201608153822qIE\", # 被添加用户ID\r\n      \"userId\":\"20150828p8jr40S\", # 申请人用户ID\r\n      \"image\":\"\", # 申请人头像\r\n      \"nickname\":\"\", # 申请人昵称\r\n      \"userName\":\"ceshi_buyer\", # 申请人用户名称\r\n      \"addedUserName\":\"bqlq\" # 被添加用户名称\r\n      \"additional\":\"我是谁啊\" # 附加信息\r\n      \"type\" : 0 # 添加好友信息\r\n    }\r\n  ],\r\n  \"totalsize\":13, #总数\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/procurement",
        "title": "采购单模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: app.mailiqing.com/app\r\n== 采购单\r\n=== 采购单列表\r\n\r\nURL::\r\nhttp://{host}/procurement/list?start=1&limit=10&area=北京&sort=1&q=沥青\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nstart # 起始页\r\nlimit # 每页个数\r\narea # 地区筛选\r\nsort # 日期排序 0:降序 1:升序\r\n综合排序 传 start limit\r\nq # 搜索关键字\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"id\": \"20150707E245t4x\",  #采购单id\r\n      \"title\": \"国产品牌 沥青4444444444444444\", #采购单标题\r\n      \"count\": 500.00, #数量\r\n      \"userId\": \"20160919OR42Yb6\", #采购单发布者\r\n      \"receiveAddr\": \"华北地区\", #收货地址\r\n      \"inDate\": \"2015-07-07 03:43:48\", #发布时间\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\", #图片\r\n      \"unit\": \"吨\" #单位\r\n    },\r\n    {\r\n      \"id\": \"201508221gK5Lp5\",\r\n      \"title\": \"东海 沥青\",\r\n      \"count\": 40.00,\r\n      \"receiveAddr\": \"华南地区-广西省\",\r\n      \"userId\": \"20160919OR42Yb6\",\r\n      \"inDate\": \"2015-08-22 03:41:24\",\r\n      \"img\": \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\",\r\n      \"unit\": \"吨\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 采购单详情\r\nURL::\r\nhttp://{host}/procurement/get/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nid : 20150707E245t4x  # 采购单id\r\n```\r\nhttp://{host}/procurement/get/20150707E245t4x\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"acTime\" : 10, #有效时间\r\n  \"companyName\" : \"\", #公司名称\r\n  \"deliveryType\" : 0, #提货方式 0：卖家送货 1：买家自提\r\n  \"count\" : 500.00, #采购数量\r\n  \"deliveryDateStart\" : \"2015-07-13\", #起始时间\r\n  \"deliveryDateEnd\" : \"2015-07-19\", #结束时间\r\n  \"inDate\" : \"2015-07-07 03:43:48\", #发布时间\r\n  \"title\" : \"国产品牌 沥青4444444444444444\", #标题\r\n  \"unit\" : \"吨\", #单位\r\n  \"state\" : 1, #状态\r\n  \"phone\" : \"13904650472\", # 电话\r\n  \"isCollect\" : 0, # 0:未收藏 1:收藏\r\n  \"id\" : \"20150707E245t4x\", #采购单id\r\n  \"desc\" : \"\", #采购单描述\r\n  \"huanxin_no\": \"20161031je43e0i\", # 平台环信号\r\n  \"plat_image\": \"20161031je43e0i\", # 平台头像\r\n  \"image\": [ # 图片\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbb.img_375_230.img\",\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbd.img_375_230.img\"\r\n  ],\r\n  \"imgLarge\": [ #图片大图\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbb.img\",\r\n    \"http://116.90.81.68:80/koto/img/5811873ae4b0c62d90aa8fbd.img\"\r\n  ],\r\n  \"receiveAddr\" : \"华北地区\", #收货地址\r\n  \"brandName\" : \"国产品牌\" #品牌\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n=== 发布\r\nURL::\r\nhttp://{host}/procurement/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\": \"20151026X3422O5\", # s_userId 用户id\r\n  \"companyName\": \"金兆路华777\", # 公司名称\r\n  \"category\": \"20150914q0asfEw|20150914w7L7oG2|201509140732S22\", # 类目\r\n  \"brandName\": \"东海,国产\", # 品牌名\r\n  \"count\": \"400\", # 数量\r\n  \"deliveryDateStart\": \"2016-08-08\", # 交货时间：开始时间 yyyy-MM-dd\r\n  \"deliveryDateEnd\": \"2016-08-18\", # 交货时间：结束时间yyyy-MM-dd\r\n  \"receiveAddr\": \"北京|北京市\", # 收货地址\r\n  \"desc\": \"70#沥青,行行行\", # 描述\r\n  \"img\": \"img/57e38f32e4b0b02f90bf8a3c.img\" # 图片\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\":1,\r\n  \"id\":\"20160928TyWUN1L\" # 采购单id\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加失败\"\r\n}\r\n```\r\n\r\n\r\n==== 商品分类\r\nURL::\r\nhttp://{host}/procurement/category\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n无\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"msc_cl\": [\r\n        {\r\n          \"msc_cl\": [  # 子类目 数组\r\n            {\r\n              \"catName\": \"10#\",\r\n              \"catId\": \"2015091431h7wTV\"\r\n            },\r\n            {\r\n              \"catName\": \"60#\",\r\n              \"catId\": \"2015112386UvJoM\"\r\n            },\r\n            {\r\n              \"catName\": \"70#\",\r\n              \"catId\": \"201509140732S22\"\r\n            },\r\n            {\r\n              \"catName\": \"90#\",\r\n              \"catId\": \"201509144X87wlj\"\r\n            },\r\n            {\r\n              \"catName\": \"100#\",\r\n              \"catId\": \"20160112l200k78\"\r\n            },\r\n            {\r\n              \"catName\": \"110#\",\r\n              \"catId\": \"2015091482l1w41\"\r\n            },\r\n            {\r\n              \"catName\": \"130#\",\r\n              \"catId\": \"20150914L740u1U\"\r\n            },\r\n            {\r\n              \"catName\": \"140#\",\r\n              \"catId\": \"20151125460MI7i\"\r\n            },\r\n            {\r\n              \"catName\": \"180#\",\r\n              \"catId\": \"20151223iX8q82e,20150914w7L7oG2\"\r\n            }\r\n          ],\r\n          \"catName\": \"基质沥青\", # 类目名\r\n          \"catId\": \"20150914w7L7oG2\"  # 类目id\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"SBS类\",\r\n              \"catId\": \"20150914m401ckq\"\r\n            },\r\n            {\r\n              \"catName\": \"SBR类\",\r\n              \"catId\": \"2015091418gJ6ub\"\r\n            },\r\n            {\r\n              \"catName\": \"橡胶粉\",\r\n              \"catId\": \"20150914pM66574\"\r\n            },\r\n            {\r\n              \"catName\": \"PG改性沥青\",\r\n              \"catId\": \"20150914F85313F\"\r\n            },\r\n            {\r\n              \"catName\": \"环保橡胶沥青\",\r\n              \"catId\": \"20150914A4mAK2U\"\r\n            },\r\n            {\r\n              \"catName\": \"MAC改性沥青\",\r\n              \"catId\": \"201601140E1sgI3\"\r\n            }\r\n          ],\r\n          \"catName\": \"改性沥青\",\r\n          \"catId\": \"20150914H6PM003\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"公路用乳化沥青\",\r\n              \"catId\": \"20150914165E287\"\r\n            },\r\n            {\r\n              \"catName\": \"改性乳化沥青\",\r\n              \"catId\": \"20160318CPQ26JU\"\r\n            },\r\n            {\r\n              \"catName\": \"高含固量乳化沥青\",\r\n              \"catId\": \"20150914Wd82123\"\r\n            },\r\n            {\r\n              \"catName\": \"高粘度乳化沥青\",\r\n              \"catId\": \",20150914K6N5Hha\"\r\n            },\r\n            {\r\n              \"catName\": \"微表处改性乳化沥青\",\r\n              \"catId\": \"20150914c453WYQ\"\r\n            },\r\n            {\r\n              \"catName\": \"冷再生乳化沥青\",\r\n              \"catId\": \"2015091476gmJ1T\"\r\n            },\r\n            {\r\n              \"catName\": \"特殊乳化沥青\",\r\n              \"catId\": \"201509146eb8Pyb\"\r\n            },\r\n            {\r\n              \"catName\": \"不粘轮乳化沥青\",\r\n              \"catId\": \"20160413Q7Km65j\"\r\n            }\r\n          ],\r\n          \"catName\": \"乳化沥青\",\r\n          \"catId\": \"20150914m34mQ5n\"\r\n        },\r\n        {\r\n          \"msc_cl\": [\r\n            {\r\n              \"catName\": \"煤沥青\",\r\n              \"catId\": \"20150914eB2cy68\"\r\n            },\r\n            {\r\n              \"catName\": \"岩沥青\",\r\n              \"catId\": \"2015091424K8635\"\r\n            },\r\n            {\r\n              \"catName\": \"彩色沥青\",\r\n              \"catId\": \"20160106M8nK6iI\"\r\n            },\r\n            {\r\n              \"catName\": \"硫化沥青\",\r\n              \"catId\": \"20160106O5tSxi4\"\r\n            },\r\n            {\r\n              \"catName\": \"防腐沥青\",\r\n              \"catId\": \"20151019341oqb4\"\r\n            }\r\n          ],\r\n          \"catName\": \"其他沥青\",\r\n          \"catId\": \"20150914q48W8K0\"\r\n        }\r\n      ],\r\n      \"catName\": \"沥青\",\r\n      \"catId\": \"20150914q0asfEw\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n说明::\r\n获取的类目是树形结构\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n==== 品牌\r\n\r\nURL::\r\nhttp://{host}/app/procurement/brand/{categoryId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{categoryId} : 201509140732S22 # 类目id\r\n```\r\nhttp://{host}/app/procurement/brand/201509140732S22\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"brandId\": \"20150914NO6768t\", # 品牌id\r\n      \"brandName\": \"韩国SK\" # 品牌名称\r\n    },\r\n    {\r\n      \"brandId\": \"201509148O45Q61\",\r\n      \"brandName\": \"齐鲁石化\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n==== 收货地址\r\nURL::\r\nhttp://{host}/procurement/area/{parentId}\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{parentId} : 000000000000000 # 父id\r\n```\r\nhttp://{host}/procurement/area/000000000000000\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\": 1,\r\n  \"list\": [\r\n    {\r\n      \"areaId\": \"201509237y73e1Y\", # 地区id\r\n      \"areaName\": \"全国\" # 地区名\r\n    },\r\n    {\r\n      \"areaId\": \"20150601L2sIhL7\",\r\n      \"areaName\": \"华东地区\"\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/quanceng",
        "title": "圈层模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: 116.90.81.68/app\r\n== 圈层\r\n=== 发布动态\r\nURL::\r\nhttp://{host}/app_user_mood/insert.shtml\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"user_id\": \"201512116eSr5i4\", # 用户id\r\n  \"user_name\": \"20160928TyWUN1L\", # 用户名\r\n  \"mood\": \"兆华\", # 动态详情\r\n  \"img\": \"img/asdlfjl13345431231.img\" # 图片 多张用 | 拼接\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/quoteprice",
        "title": "报价单模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: 116.90.81.68/app\r\n== 报价单\r\n=== 报价单发布\r\n\r\nURL::\r\nhttp://{host}/quoteprice/add\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"userId\" : \"201512116eSr5i4\" # 用户id\r\n  \"procurId\" : \"20160928TyWUN1L\", # 采购单id\r\n  \"factoryName\" : \"兆华\", # 公司名称\r\n  \"repositoryAddr\" : \"北京|北京市\", # 出库地址\r\n  \"desc\" : \"70#沥青好东西\", # 报价描述\r\n  \"contact\" : \"小明\", # 联系人\r\n  \"phone\" : \"13345431231\", # 电话\r\n  \"img\" : \"img/asdlfjl13345431231.img\" # 图片 多张使用 | 拼接\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"state\" : 1,\r\n  \"id\" : \"201609281332179\" # 报价单 id\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"添加报价单失败！\"\r\n}\r\n```\r\n\r\n\r\n=== 收到的报价\r\nURL::\r\nhttp://{host}/quoteprice/list?userId=201512116eSr5i4&start=1&limit=10\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\nuserId : 201512116eSr5i4 # 用户id\r\nstart : 1 # 起始页\r\nlimit : 10 # 每页显示个数\r\n```\r\nhttp://{host}/quoteprice/list?userId=201512116eSr5i4&start=1&limit=10\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n[\r\n  {\r\n    \"id\": \"201609281326083\", # 报价单id\r\n    \"title\": \"沥青|基质沥青|70# 东海,国产\", # 标题\r\n    \"receiveAddr\": \"北京-北京市\", # 所在地\r\n    \"inDate\": \"2016-09-28 02:04:29\", # 发布时间\r\n    \"img\": \"http://116.90.81.68:80/koto/img/asdlfjl13345431231.img_300_300.img\", # 图片\r\n    \"factoryName\": \"兆华\", # 公司名称\r\n    \"repositoryAddr\": \"北京-北京市\", # 出库地\r\n    \"count\": 400\r\n  },\r\n  {\r\n    \"id\": \"201609281332179\",\r\n    \"title\": \"沥青|基质沥青|70#东海,国产\",\r\n    \"receiveAddr\": \"北京-北京市\",\r\n    \"inDate\": \"2016-09-28 02:04:29\",\r\n    \"img\": \"http://116.90.81.68:80/koto/img/asdlfjl13345431231.img_300_300.img\",\r\n    \"factoryName\": \"兆华\",\r\n    \"repositoryAddr\": \"北京-北京市\",\r\n    \"count\": 400\r\n  }\r\n]\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 报价单 详情\r\nURL::\r\nhttp://{host}/quoteprice/get/{id}\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{id} : 201609281326083  # 报价单id\r\n```\r\n例子: http://{host}/quoteprice/get/201609281326083\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"title\": \"沥青|基质沥青|70# 东海,国产\", # 商品名称\r\n  \"receiveAddr\": \"北京-北京市\", # 收货地址\r\n  \"inDate\": \"2016-09-28 02:04:29\", # 发布时间\r\n  \"imgs\": [ # 图片\r\n    \"http://116.90.81.68:80/koto/img/57e38f32e4b0b02f90bf8a3c.img_300_300.img\"\r\n  ],\r\n  \"factoryName\": \"兆华\", # 公司名称\r\n  \"repositoryAddr\": \"北京-北京市\", # 出库地址\r\n  \"desc\": \"70#沥青好东西\", # 报价描述\r\n  \"contact\": \"小明\", # 联系人\r\n  \"phone\": \"13345431231\", # 电话\r\n  \"state\": \"1\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/shop",
        "title": "店铺模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: 116.90.81.68/app\r\n\r\n== 店铺\r\n\r\n=== 我的店铺\r\nURL::\r\nhttp://{host}/shop/{userId}\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET Content-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```url\r\n{userId} : 用户Id\r\n```\r\nhttp://{host}/shop/20150615uo7jE40\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"id\": \"2015091404A3ol8\", # 店铺id\r\n  \"shopName\": \"北京中物振华贸易有限公司\", # 店铺名称\r\n  \"shopLogo\": \"196.168.1.31/data/upload_image/shop/13/0/016a6e2b4da14457b1da90ed39ed27c7.jpg\", # 店铺logo\r\n  \"shopStandardLogo\": \"196.168.1.31/data/upload_image/shop/14/8/3a858e0536244ac9a8ede39792fe9ebe.png\", # 店铺介绍 图片\r\n  \"shopDesc\": \"北京中物振华贸易有限公司是以经营道路沥青、石化产品等为主的专业性贸易公司。公司拥有进出口企业许可证。近年来，公司在市场实践中积累了丰富的市场运作经验，拥有一支专业化、高素质、稳定团结的职工队伍。公司经营进口70号、90号道路沥青及乳化沥青和改性沥青。公司在天津塘沽建有12000吨散装沥青储存库区，年周转能力20余万吨，在山西平遥建有10000吨散装沥青库区。我公司是华北地区第一家经销进口散装道路沥青的企业，同时还是韩国“SK”沥青在部分地区的独家代理商，公司平均每年自销进口沥青20万吨以上，外贸进口额在8亿元人民币／年以上。 多年来，公司秉承“真诚、守信”的经营理念，以严谨务实的做事风格，在客户中赢得了充分的信誉和支持。\", # 店铺介绍\r\n\r\n  \"collectCount\": 12, # 收藏\r\n  \"goodsCount\" : 9, # 商品数量\r\n  \"saleCount\": 11.5, # 销量\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\": 0,\r\n  \"message\": \"尚未开通店铺,请联系客服\"\r\n}\r\n```\r\n\r\n\r\n=== 店铺 商品管理\r\nURL::\r\nhttp://{host}/shop/list?shopId=2015091404A3ol8&start=1&limit=10&state=c\r\n\r\n支持格式::\r\nGET JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\nshopId : 店铺id\r\nstart : 起始 1\r\nlimit : 每页个数 10\r\nstate : 商品状态 c:销售中 d:已下架 a:未审核\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\r\n  \"list\": [\r\n    {\r\n      \"id\": \"201509141hs732H\", # 商品 id\r\n      \"title\": \"东海牌70#沥青\", # 商品 标题\r\n      \"stockQuantity\": \"2000\", # 库存\r\n      \"goodsPrice\": \"1850.0\", # 商品价格\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3 # 销售量\r\n    },\r\n    {\r\n      \"id\": \"20150914JPCi4n8\",\r\n      \"title\": \"昆仑牌70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1850.0\",\r\n\t  \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n\t  \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    },\r\n    {\r\n      \"id\": \"20150915TR2F8rq\",\r\n      \"title\": \"中海油36-1 70#沥青\",\r\n      \"stockQuantity\": \"2000\",\r\n      \"goodsPrice\": \"1750.0\",\r\n      \"img\" : \"http://116.90.81.68:80/koto/img/57e351f7e4b0b02f90bf7b09.img_300_300.img\", # 图片\r\n      \"repositoryAddr\" : \"华北地区 天津市 塘沽区\", # 出库地\r\n      \"saleCount\": 3\r\n    }\r\n  ],\r\n  \"totalsize\": 9,\r\n  \"state\": 1\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n\r\n=== 商品管理 (上架,下架)\r\nURL::\r\nhttp://{host}/goods/edit\r\n\r\n支持格式::\r\nPOST JSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"id\":\"201509184CW5802\", # 商品id\r\n  \"state\":\"d\" # 商品状态 d:下架 a: 上架\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```json\r\n{\"state\":1}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"编辑失败!\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/template",
        "title": "接口模板",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n=== 搜索框\r\nURL::\r\nhttp://{host}/goods/search\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"  #搜索值\r\n}\r\n```\r\n\r\n是否需要登录::\r\n否\r\n\r\n成功::\r\n```json\r\n{\r\n  \"searchKey\" : \"沥青\"\r\n}\r\n```\r\n\r\n失败::\r\n```json\r\n{\r\n  \"state\" : 0,\r\n  \"message\" : \"查询结果为空！\"\r\n}\r\n```\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/app/xiaoxi",
        "title": "消息模块",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n:host: 116.90.81.68/app\r\n== 十四、消息聊天\r\n[cols=\"2*\"]\r\n|===\r\n\r\n|14.1添加好友列表\r\n|http://{host}/app_message/addFriendList.shtml\r\n\r\n|14.2用户搜索列表\r\n|http://{host}/app_message/searchUserList.shtml\r\n\r\n|14.3我的群列表\r\n|http://{host}/app_message/groupList.shtml\r\n\r\n|14.4群用户列表\r\n|http://{host}/app_message/groupUserList.shtml\r\n\r\n|14.5好友主页\r\n|http://{host}/app_userHome/userDetail.shtml\r\n\r\n|14.6我的圈层列表\r\n|http://{host}/app_pitchcircle/myPitchcirclelist.shtml\r\n\r\n|14.7申请添加好友\r\n|http://{host}/app_message/addFriend.shtml\r\n\r\n|14.8同意好友添加请求\r\n|http://{host}/app_message/agreeAddFriend.shtml\r\n\r\n|14.9删除好友\r\n|http://{host}/app_message/deleteFriend.shtml\r\n\r\n|14.10创建群组\r\n|http://{host}/app_message/creatGroup.shtml\r\n\r\n|14.11添加群用户\r\n|http://{host}/app_message/addGroupuser.shtml\r\n\r\n|14.12删除群用户\r\n|http://{host}/app_message/deleteGroupuser.shtml\r\n\r\n|14.13退出群组\r\n|http://{host}/app_message/outGroup.shtml\r\n\r\n|14.14删除群组\r\n|http://{host}/app_message/deleteGroup.shtml\r\n\r\n|14.15设置群名称\r\n|http://{host}/app_message/setGroupName.shtml\r\n\r\n|14.16设置群公告\r\n|http://{host}/app_message/setGroupNotice.shtml\r\n\r\n|14.17群投诉\r\n|http://{host}/app_message/groupComplain.shtml\r\n\r\n|14.18设置好友备注\r\n|http://{host}/app_userHome/setRemarkName.shtml\r\n\r\n|===\r\n\r\n=== 14.1添加好友列表\r\nURL::\r\nhttp://{host}/app_message/addFriendList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\"//当前用户ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"id\":\"20160817K5r07Pt\", //主键ID\r\n\"addStatus\":1, //添加状态：0已申请，1已添加，2已拒绝\r\n\"inDate\":\"2016-08-17 09:30:30\", //时间\r\n\"addedUserId\":\"201608153822qIE\", //被添加用户ID\r\n\"userId\":\"20150828p8jr40S\", //用户ID\r\n\"image\":\"\", //申请人头像\r\n\"userName\":\"ceshi_buyer\", //用户名称\r\n\"addedUserName\":\"bqlq\" //被添加用户名称\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.2用户搜索列表\r\nURL::\r\nhttp://{host}/app_message/searchUserList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"keyword\" : \"ceshi\"//搜索关键字\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"user_name\":\"ceshijingyan\", //用户名称\r\n\"image\":\"\", //用户头像\r\n\"user_id\":\"20151110vbO0kFg\" //用户ID\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.3我的群列表\r\nURL::\r\nhttp://{host}/app_message/groupList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\" //用户ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"id\":\"20160823E654813\", //群ID\r\n\"groupName\":\"闲聊\" //群名称\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.4群用户列表\r\nURL::\r\nhttp://{host}/app_message/groupUserList.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"groupId\" : \"20160823E654813\" //群组ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"nickName\":\"\", //昵称\r\n\"userId\":\"2016060350a651k\", //用户ID\r\n\"image\":\"\", //用户头像\r\n\"userName\":\"18611522653\" //用户名\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.5好友主页\r\nURL::\r\nhttp://{host}/app_userHome/userDetail.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\" //好友ID\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"areaName\":\"\", //地区名称\r\n\"nickName\":\"\", //昵称\r\n\"userId\":\"20150828QYY07uh\", //用户ID\r\n\"image\":\"\", //用户头像\r\n\"userName\":\"\", //用户名\r\n\"moodIamges\":\"http://196.168.1.31:80/koto/img/57c77d8ce4b098a789a30f30.img,http://196.168.1.31:80/koto/img/57c77d8ce4b098a789a30f2d.img\" //动态图片\r\n\"signature\":\"\" //个性签名\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n\r\n=== 14.6我的圈层列表\r\nURL::\r\nhttp://{host}/app_pitchcircle/myPitchcirclelist.shtml\r\n\r\n特殊说明::\r\n\r\n\r\n支持格式::\r\nJSON\r\n\r\nHTTP请求方式::\r\nGET\r\n\r\nHTTP请求方式::\r\nContent-Type: application/json;charset=UTF-8\r\n\r\n携带参数说明::\r\n```\r\n{\r\n  \"userId\" : \"20150828QYY07uh\", //当前用户ID\r\n  \"iStart\" : \"1\", //开始的页数\r\n  \"limit\" : \"5\" //显示的条数\r\n}\r\n```\r\n\r\n是否需要登录::\r\n是\r\n\r\n成功::\r\n```\r\n{\r\n\"list\":[\r\n{\r\n\"user_id\":\"20150828QYY07uh\", //发布用户ID\r\n\"in_date\":\"2016-09-01 09:04:07.0\", //时间\r\n\"relation_id\":\"2016090126fHv0p\", //该圈层关联ID\r\n\"type\":\"2\", //圈层类型：0资源单，1采购单，2动态\r\n\"detail\":\"2345\", //信息详情\r\n\"title\":\"\", //信息标题\r\n\"id\":\"201609015BX350y\" //该信息ID\r\n}\r\n]\r\n\"state\":1 //1:成功 0:失败\r\n}\r\n\r\n```\r\n\r\n失败::\r\n```\r\n{\r\n\t\"state\" : 0, //1:成功 0:失败\r\n\t\"message\" : \"获取列表失败\" //state为0时需返回的错误说明信息\r\n}\r\n\r\n```\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/arch",
        "title": "架构",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n=== 服务器 vlan\r\n\r\n[graphviz, app-arch-1, png]\r\n----\r\ndigraph foo {\r\n  _N1 [style=box,label=\"S5500(三层交换机)\"];\r\n  _N21 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan10(外)\"];\r\n  _N2 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan20(内)\"];\r\n  _N4 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan30(内)\"];\r\n  _N5 [shape=box,label=\"Web1\"];\r\n  _N6 [shape=box,label=\"Web2\"];\r\n  _N7 [shape=box,label=\"Image1\"];\r\n  _N8 [shape=box,label=\"Image2\"];\r\n  _N9 [shape=box,label=\"DB1\"];\r\n  _N10 [shape=box,label=\"DB(主)\"];\r\n  _N11 [shape=box,label=\"DB(从)\"];\r\n  _N12 [shape=box,label=\"LVS(主)\"];\r\n  _N13 [shape=box,label=\"LVS(备)\"];\r\n\r\n  _N1 -> _N2;\r\n  _N1 -> _N21;\r\n  _N1 -> _N4;\r\n  _N2 -> _N5;\r\n  _N2 -> _N6;\r\n  _N2 -> _N7;\r\n  _N2 -> _N8;\r\n  _N4 -> _N9;\r\n  _N4 -> _N10;\r\n  _N4 -> _N11;\r\n  _N21 -> _N12;\r\n  _N21 -> _N13;\r\n\r\n  _V10 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan10(外)\"];\r\n  _V20 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan20(内)\"];\r\n  _V30 [style=\"rounded,filled\", shape=ellipse,label=\"Vlan30(内)\"];\r\n\r\n  _V10 -> _V20\r\n  _V20 -> _V30\r\n}\r\n----\r\n\r\n\r\n参考 ::\r\nhttp://brizer.github.io/2016/07/10/%E6%B5%85%E8%B0%88web%E6%9E%B6%E6%9E%84%E4%B9%8B%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/[浅谈web架构之架构设计]\r\n\r\nhttp://www.jiagoushuo.com/article/1000382.html[图片服务器架构演进]\r\n\r\n\r\nimage::{img}/img/work/Mai沥青架构图.svg[]\r\n---\r\n\r\n物理机(2)\r\n  IBM x3650M4 2U 机架式服务器\r\n  一颗E5-2609v2 2.5GHz/16GB（4*8GB）/2x1TB 7.2K SAS 2.5\"/Raid 5/四端口千兆网卡/双冗余550W\r\n\r\n软件运行环境\r\n  Linux coreos01 4.9.0-coreos + Tomcat7.0.62 + Mysql5.5 + Redis3.2 + ElasticSearch1.4\r\n\r\n物理机1(虚拟机)\r\n|===\r\n|主机名 |IP |操作系统 |处理器 |内存 |运行软件\r\n|coreos01\r\n|192.168.1.129\r\n|CoreOS 1262.0.0 (Linux)\r\n|1核\r\n|8G\r\n|docker+tomcat+mysql+elasticsearch\r\n\r\n|coreos02\r\n|192.168.1.124\r\n|CoreOS 1262.0.0 (Linux)\r\n|2核\r\n|8G\r\n|docker+tomcat+mysql\r\n\r\n|coreos03\r\n|192.168.1.145\r\n|CoreOS 1262.0.0 (Linux)\r\n|2核\r\n|8G\r\n|docker+tomcat+mysql\r\n|===\r\n\r\n物理机2(虚拟机)\r\n|===\r\n|主机名 |IP |操作系统 |处理器 |内存 |运行软件\r\n|coreos04\r\n|192.168.1.127\r\n|CoreOS 1262.0.0 (Linux)\r\n|2核\r\n|10G\r\n|docker+tomcat+mysql\r\n\r\n|coreos05\r\n|192.168.1.130\r\n|CoreOS 1262.0.0 (Linux)\r\n|1核\r\n|4G\r\n|docker\r\n\r\n|coreos06\r\n|192.168.1.125\r\n|CentOS6.5 (Linux)\r\n|2核\r\n|8G\r\n|docker\r\n\r\n|coreos07\r\n|192.168.1.128(内) 116.90.81.70(外)\r\n|CentOS6.5 (Linux)\r\n|1核\r\n|4G\r\n|docker\r\n|===\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/esb",
        "title": "esb",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n=== Mule\r\n\r\n[[Mule ESB 社区版 企业版 资源下载 包含3.5和3.6|http://www.cnblogs.com/taven/p/5436349.html]] +\r\n\r\n下载 ::\r\n\t[[https://www.mulesoft.com/ty/dl/studio]] +\r\n\t[[https://www.mulesoft.com/ty/dl/studio]]\r\n\r\n\r\n==== *Example*\r\n\r\n[[https://docs.mulesoft.com/mule-user-guide/v/3.4/hello-world-example]]\r\n\r\n[[https://docs.mulesoft.com/mule-user-guide/v/3.4/mule-examples]]\r\n\r\n[[https://www.mulesoft.com/exchange#!/?types=example&sortBy=rating]]\r\n\r\n[[https://docs.mulesoft.com/mule-fundamentals/v/3.6/mule-message-tutorial]]\r\n\r\nEsb + MQ\r\n监控工具\r\n\r\n\r\nthis element must have all attributes for one of sets:[path] or [address] or [ref]\r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "var idx = lunr(function () {\r\n    this.field('title', { boost: 10 })\r\n    this.field('body')\r\n})\r\n\r\nvar doc = {\r\n    \"title\": \"黄金时代\",\r\n    \"body\": \"那一天我二十一岁，在我一生的黄金时代，我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消失，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。\",\r\n    \"author\": \"王小波\",\r\n    \"id\": 1\r\n}\r\nidx.add(doc)\r\n\r\nconsole.log(idx.search(\"生活\"))",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/koto",
        "title": "图片服务器",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n:icons: font\r\n=== `mongo`\r\n==== `mongo` 安装\r\n. 下载 +\r\n[[https://www.mongodb.com/download-center?jmp=docs#community]]\r\n\r\n. 配置\r\n```bash\r\n# ${MONGO_PATH} --> /root/opt/sof/mongodb-linux-i686-3.2.7\r\nln -s ${MONGO_PATH}/bin/mongod /usr/bin/mongod\r\nln -s ${MONGO_PATH}/bin/mongo /usr/bin/mongo\r\n```\r\n`/etc/mongod.conf` ::\r\n```conf\r\nsystemLog:\r\n  destination: file\r\n  path: \"/var/log/mongodb/mongod.log\" #日志路径\r\n  logAppend: true\r\nstorage:\r\n  dbPath: \"/home/vagrant/opt/mongd/db\"\r\nprocessManagement: #后台运行\r\n  fork: true\r\nnet:\r\n  bindIp: 0.0.0.0 #绑定所有网卡\r\n  port: 27017\r\n```\r\n. 启动 +\r\n64位 `mongod -f /etc/mongod.conf` +\r\n32位 `mongod -f /etc/mongod.conf --journal --storageEngine mmapv1`\r\n\r\n==== `ImageMagick`\r\n安装 ::\r\n```bash\r\nyum install ImageMagick ImageMagick-devel\r\n```\r\n查看是否安装成功 ::\r\n```bash session\r\n[root@Mysql src]# convert -version\r\nVersion: ImageMagick 6.7.2-7 2016-05-09 Q16 http://www.imagemagick.org\r\nCopyright: Copyright (C) 1999-2011 ImageMagick Studio LLC\r\nFeatures: OpenMP\r\n```\r\n\r\n[IMPORTANT]\r\ncentos7 下 不要设置 `M4JAVA_TOOLPATH`\r\n\r\n导入 `path` ::\r\n```bash\r\nexport IM4JAVA_TOOLPATH=/usr/bin/convert\r\n```\r\n\r\n=== Koto 图片服务器\r\n接口 ::\r\n@startuml\r\ninterface ImageService {\r\n\tUploadResult store(UploadSource paramUploadSource)\r\n\tvoid removeById(String paramString);\r\n\tvoid removeByPath(String paramString);\r\n\tlong sumImageLength(String paramString);\r\n\tStoredImgResult findStoredImages(Map paramMap, int paramInt1, int paramInt2);\r\n}\r\n@enduml\r\n流程 ::\r\n@startuml\r\n@startdot\r\ndigraph koto {\r\n  graph [bgcolor=\"#F6F6F6\", fontsize=\"8\", label=\"\"];\r\n  node [labeljust=\"centered\", shape=\"box\", style=\"filled\", color=\"blue\", fontsize=\"8\", fillcolor=\"white\", label=\"\"];\r\n  edge [style=\"solid\", color=\"black\", fontsize=\"8\", label=\"\"];\r\n  __N1 [shape=\"Msquare\", color=\"darkgreen\", label=\"start\"];\r\n  __N2 [label=\"读取 mlq_product_picture 表\r\n\t读取图片文件\t\"];\r\n\t__N3 [label=\"向 koto 写图片,返回图片路径\"]\r\n\t__N4 [label=\"更新 mlq_product_picture 表的图片路径\"]\r\n\r\n\t__N1 -> __N2\r\n\t__N2 -> __N3\r\n\t__N3 -> __N4\r\n}\r\n@enddot\r\n@enduml\r\n\r\n. `Spring` 配置文件\r\n```xml\r\n\r\n\t    \r\n\t    \r\n\r\n\r\n     \r\n     \r\n\r\n```\r\n\r\n. 接口\r\n```java\r\n/**\r\n * 上传文件到远程服务器\r\n * @author yangzl\r\n *\r\n */\r\npublic interface UploadHessionUtil {\r\n\r\n    /**\r\n     * 上传图片文件到远程服务器\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @return String 当返回值 为空时，代表出错\r\n     */\r\n    public String uploadImageFile(File file,String fileName);\r\n\r\n    /**\r\n     * 上传图片文件到远程服务器\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @return String 当返回值 为空时，代表出错\r\n     */\r\n    public String uploadImageFile(byte[] file,String fileName);\r\n\r\n    /**\r\n     * 上传文件到远程服务器\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @return String 当返回值 为空时，代表出错\r\n     */\r\n    public String uploadBinaryFile(File file,String fileName);\r\n    /**\r\n     * 上传文件到远程服务器\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @return String 当返回值 为空时，代表出错\r\n     */\r\n    public String uploadBinaryFile(byte[] file,String fileName);\r\n\r\n    /**\r\n     * 删除远程图片\r\n     * @param path  当初从远程接口返回文件路径\r\n     * @return\r\n     */\r\n    public boolean removeImageFile(String path);\r\n\r\n    /**\r\n     * 删除远程文件\r\n     * @param path 当初从远程接口返回文件路径\r\n     * @return\r\n     */\r\n    public boolean removeBinaryFile(String path);\r\n\r\n    /**\r\n     * 上传图片\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @param compressValue 是一个数组，分别代表宽与高的值\r\n     * @return\r\n     */\r\n    public String uploadImageAndCompress(File file,String fileName,int[][] compressValue);\r\n    /**\r\n     * 上传图片\r\n     * @param file\r\n     * @param fileName 上传文件名称\r\n     * @param compressValue 是一个数组，分别代表宽与高的值\r\n     * @return\r\n     */\r\n    public String uploadImageAndCompress(byte[] file,String fileName,int[][] compressValue);\r\n\r\n    /**\r\n     * 上传文件到服务器，根据指定的宽度压缩，\r\n     * 如果图片太小，则不压缩，但还是生成以指定宽度的后缀文件\r\n     * @param file\r\n     * @param width\r\n     * @return\r\n     */\r\n    public String uploadImageFile(byte[] file,int width);\r\n}\r\n\r\n```\r\n\r\n. 实现类\r\n```java\r\n\r\npackage com.ec.biz.common.manager.impl;\r\n\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.ec.biz.common.domain.UploadImageInfo;\r\nimport com.ec.biz.common.manager.UploadHessionUtil;\r\nimport com.eyeieye.koto.remote.UploadResult;\r\nimport com.eyeieye.koto.remote.UploadSource;\r\nimport com.eyeieye.koto.remote.file.FileService;\r\nimport com.eyeieye.koto.remote.img.ImageService;\r\nimport com.eyeieye.koto.remote.img.StoredImgResult;\r\nimport com.eyeieye.koto.remote.img.StoredImgResult.StoredImg;\r\nimport com.eyeieye.melody.util.StringUtil;\r\n\r\n@Service\r\npublic class UploadHessionUtilImpl implements UploadHessionUtil {\r\n\r\n\tprivate final Log log = LogFactory.getLog(getClass());\r\n\t@Autowired\r\n\tprivate ImageService imageService;\r\n\r\n\t@Autowired\r\n\tprivate FileService fileService;\r\n\r\n\tpublic String uploadImageFile(File file, String fileName, Long shopId) {\r\n\r\n\t\tif (StringUtil.isBlank(fileName) || file == null) {\r\n\t\t\tlog.error(\"fileName or file is null\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tUploadSource fileStoreSource = new UploadSource();\r\n\t\t\tbyte[] body;\r\n\t\t\ttry {\r\n\t\t\t\tbody = IOUtils.toByteArray(new FileInputStream(file));\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (shopId != null) {\r\n\t\t\t\tfileStoreSource.append(\"shop_id\", shopId);\r\n\t\t\t} else {\r\n\t\t\t\tfileStoreSource.append(\"admin\", -1);\r\n\t\t\t}\r\n\t\t\tfileStoreSource.setFilename(fileName);\r\n\t\t\tfileStoreSource.setBody(body);\r\n\t\t\tUploadResult imgStoreResult = imageService.store(fileStoreSource);\r\n\t\t\treturn imgStoreResult.getPath();\r\n\t\t} catch (Exception ex) {\r\n\t\t\tlog.error(ex);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic String uploadBinaryFile(File file, String fileName, Long shopId) {\r\n\t\tif (StringUtil.isBlank(fileName) || file == null) {\r\n\t\t\tlog.error(\"fileName or file is null\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tUploadSource fileStoreSource = new UploadSource();\r\n\t\t\tbyte[] body;\r\n\t\t\ttry {\r\n\t\t\t\tbody = IOUtils.toByteArray(new FileInputStream(file));\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (shopId != null) {\r\n\t\t\t\tfileStoreSource.append(\"shop_id\", shopId);\r\n\t\t\t} else {\r\n\t\t\t\tfileStoreSource.append(\"admin\", -1);\r\n\t\t\t}\r\n\t\t\tfileStoreSource.setFilename(fileName);\r\n\t\t\tfileStoreSource.setBody(body);\r\n\t\t\tUploadResult t = fileService.store(fileStoreSource);\r\n\r\n\t\t\treturn t.getPath();\r\n\t\t} catch (Exception ex) {\r\n\t\t\tlog.error(ex);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic boolean removeImageFile(String path) {\r\n\r\n\t\timageService.removeByPath(path);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic boolean removeBinaryFile(String path) {\r\n\t\tfileService.remove(path);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String uploadImageFile(byte[] file, String fileName, Long shopId) {\r\n\t\ttry {\r\n\t\t\tUploadSource fileStoreSource = new UploadSource();\r\n\t\t\tfileStoreSource.setFilename(fileName);\r\n\t\t\tfileStoreSource.setBody(file);\r\n\t\t\tif (shopId != null) {\r\n\t\t\t\tfileStoreSource.append(\"shop_id\", shopId);\r\n\t\t\t} else {\r\n\t\t\t\tfileStoreSource.append(\"admin\", -1);\r\n\t\t\t}\r\n\t\t\tUploadResult imgStoreResult = imageService.store(fileStoreSource);\r\n\t\t\treturn imgStoreResult.getPath();\r\n\t\t} catch (Exception ex) {\r\n\t\t\tlog.error(ex);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic String uploadBinaryFile(byte[] file, String fileName, Long shopId) {\r\n\t\ttry {\r\n\t\t\tUploadSource fileStoreSource = new UploadSource();\r\n\t\t\tfileStoreSource.setFilename(fileName);\r\n\t\t\tfileStoreSource.setBody(file);\r\n\t\t\tif (shopId != null) {\r\n\t\t\t\tfileStoreSource.append(\"shop_id\", shopId);\r\n\t\t\t} else {\r\n\t\t\t\tfileStoreSource.append(\"admin\", -1);\r\n\t\t\t}\r\n\t\t\tUploadResult t = fileService.store(fileStoreSource);\r\n\r\n\t\t\treturn t.getPath();\r\n\t\t} catch (Exception ex) {\r\n\t\t\tlog.error(ex);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t@Override\r\n\tpublic UploadImageInfo findUploadImgWithShopId(String imgName, Long shopId) {\r\n\t\tif (StringUtil.isEmpty(imgName) || shopId == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tMap map = new HashMap();\r\n\t\tmap.put(\"shop_id\", shopId);\r\n\t\tmap.put(\"filename\", imgName);\r\n\t\tStoredImgResult sir = imageService.findStoredImages(map, 0, 10);\r\n\t\tif (sir != null && sir.getImgs() != null) {\r\n\t\t\tStoredImg si = (StoredImg) sir.getImgs().get(0);\r\n\t\t\treturn new UploadImageInfo(imgName, si.getPath(), (String) si\r\n\t\t\t\t\t.getAttributes().get(\"_id\"));\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n\r\n```\r\n\r\n\r\nsudo  apt-get install imagemagick\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/myBatis-generator",
        "title": "mybatis",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n[[MyBatis Generator|http://mbg.cndocs.tk/running/runningWithJava.html]]\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/1",
        "content": "\r\n\r\n\r\njs html5渲染的3D玫瑰花（程序员的情人节礼物）\r\n\r\n\r\n\r\n\r\n\r\n    var b = document.body;\r\n    var c = document.getElementsByTagName('canvas')[0];\r\n    var a = c.getContext('2d');\r\n    document.body.clientWidth;\r\n\r\n\r\n// start of submission //\r\nwith(m=Math)C=cos,S=sin,P=pow,R=random;c.width=c.height=f=500;h=-250;function p(a,b,c){if(c>60)return[S(a*7)*(13+5/(.2+P(b*4,4)))-S(b)*50,b*f+50,625+C(a*7)*(13+5/(.2+P(b*4,4)))+b*400,a*1-b/2,a];A=a*2-1;B=b*2-1;if(A*A+B*B37){n=(j=c&1)?6:4;o=.5/(a+.01)+C(b*125)*3-a*300;w=b*h;return[o*C(n)+w*S(n)+j*610-390,o*S(n)-w*C(n)+550-j*350,1180+C(B+A)*99-j*300,.4-a*.1+P(1-B*B,-h*6)*.15-a*b*.4+C(a+b)/5+P(C((o*(a+1)+(B>0?w:-w))/25),30)*.1*(1-B*B),o/1e3+.7-o*w*3e-6]}if(c>32){c=c*1.16-.15;o=a*45-20;w=b*b*h;z=o*S(c)+w*C(c)+620;return[o*C(c)-w*S(c),28+C(B*.5)*99-b*b*b*60-z/2-h,z,(b*b*.3+P((1-(A*A)),7)*.15+.3)*b,b*.7]}o=A*(2-b)*(80-c*2);w=99-C(A)*120-C(b)*(-h-c*4.9)+C(P(1-b,7))*50+c*2;z=o*S(c)+w*C(c)+700;return[o*C(c)-w*S(c),B*99-C(P(b, 7))*50-c/3-z/1.35+450,z,(1-b/1.2)*.9+a*.1, P((1-b),20)/4+.05]}}setInterval('for(i=0;iz)m[q]=z,a.fillStyle=\"rgb(\"+~(s[3]*h)+\",\"+~(s[4]*h)+\",\"+~(s[3]*s[3]*-80)+\")\",a.fillRect(x,y,1,1)}',0)\r\n// end of submission //\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/222",
        "content": ":linkcss:\r\n=== 病害形成的原因\r\n\r\n===== 裂缝\r\n（1）横向裂缝：裂缝与路中心线基本垂直，缝宽不一，缝长贯穿部分路幅或整个路幅。裂缝一般比较规则，每隔一定的距离产生一道裂缝，裂缝间距的大小取决于当地的气温和沥青面层与半刚性基层材料的抗裂性能。 +\r\n（2）纵向裂缝：裂缝走向基本与行车方向平行，裂缝长度和宽度不一。主要集中在行车道轮迹分布密集处，因为高速公路交通渠化分明，轮迹位置及轮迹分布范围较小，大车、慢车、重型车辆全部集中在行车道上，快车、小型车，轻型车行驶于超车道机会明显增多，超车道上荷载较小，交通量相对较小，纵向裂缝也较小，纵缝缝宽一般在5～10mm，靠近标线或位于车道中央，且绵延几十米，甚至数百米。常以单条裂缝形式出现。产生的原因有两种可能性，一种情况是沥青面层分路幅摊铺时，两幅接茬处未处理好，在车辆荷载及大气因素作用下逐渐开裂；另一种情况是由于路基压实度不均匀或由于路基边缘受水侵蚀产生不均匀沉陷而引起。 +\r\n（3）网状裂缝：裂缝纵横交错，缝宽1mm以上，缝距1000px以下，1m2以上。 +\r\n（4）反射裂缝：主要是因为软基路段不均匀沉降引起的裂缝直接反射到沥青路面。另外，行车荷载的作用加速裂缝的发展。\r\n\r\n===== 车辙\r\n车辙一般是在温度较高的季节，沥青面层在车辆的反复碾压下产生永久变形和塑性流动而逐渐形成。它通常是在伴随沥青面层压缩沉陷的同时，出现侧向隆起，二者组合起来构成的。路面的永久变形主要发生在沥青面层中。因此，为了延缓车辙的形成，主要应从提高沥青面层材料的高温稳定性来着手考虑。此外，车辙的严重程度与沥青面层的结构组成和配合比有极大关系，ⅱ型沥青混凝土路面自身的抗车辙能力比ⅰ型好的多。上海市中心城区的沥青路面车辙病害也较普遍，大部分集中在公路交叉口，车辆来往多，高温天气路面下受碾压严重更容易出现车辙，修补更换新的沥青混凝土后，但未经严格保养就投入使用，在新的碾压下又会出现车辙，往往出现恶性循环。根据湿热地区高速公路建设和养护的实践分析了沥青路面常见病害的各种成因，提出了各种病害的处治方法，并对我国今后高速公路建设、设计、施工及管养等方面提出了一些建议。沥青路面因具有地质条件适应性强、行车舒适、维护方便等优点而被广泛用于高速公路。在高速公路通车后，因行车荷载作用、外界环境影响以及设计、施工中存在的不足，沥青路面会逐步出现多种路面病害。\r\n\r\n===== 沉陷\r\n沥青黏度小会影响沥青与矿料的黏附性。同时若沥青混合料的油石比太小,或在沥青加热和沥青混合料拌制过程中温度太高致使沥青过温,都会引起沥青混合料的沥青膜相对变薄,抗变形能力降低,脆性增加,空隙率偏大。这些都会导致沥青膜暴露太多,沥青的老化作用加快,同时渗水性加大,进而加快水对沥青的剥落作用,最终在车辆荷载作用下引起路面开裂、沉陷。\r\n\r\n===== 坑槽\r\n沥青路面坑槽的产生往往都有一个形成的时间过程，开始时是局部裂缝进而龟裂松散，在行车荷载和雨水等因素下逐步形成坑槽。常见原因主要有以下几种：（1）路面厚度与压实度不够性坑槽  面层铺筑过程中易出现压实度不足，造成面层内部孔隙率较大，使得沥青混合料粘结力、防水性能下降；拌和厂离施工现场较远，运距过长，运输途中沥青混合料热量损失较大，运至现场后温度不能满足铺筑要求；路面下基层局部标高控制不严，导致沥青上面层个别地方厚度不够，在行车作用下，该处首先破损，形成坑槽。（2）粘结层不牢坑槽  混合料拌和摊铺时，下层表面含有泥、灰等杂物，使上下层不能有效粘结，而形成坑槽，如桥面上形成的坑，这类坑槽修补二次损坏频率较高，一般应在底层先打入砼上面层再用沥青料填补修复。（3）水损害性坑槽这种坑槽是沥青混凝土路面早期破坏中最常见的坑槽，水损害破坏往往是从沥青面层的中面层开始的。水分进入沥青路面，滞留在中面层，当集料与沥青膜剥离后，沥青混合料不再是一个整体，集料在荷载的作用下，对基层产生了力的作用，基层的局部松落形成灰浆，从路面的缝隙向上挤出来，在沥青路面上形成白色的唧浆。如此循环不断，形成了水损害性坑槽。（4）运营期间车辆造成的坑槽  柴油、机油滴漏在路表面上，沥青被稀释后，粘结力降低，集料散失形成坑槽；钢圈或车辆运输的重物，刮撞形成的坑槽；千斤顶顶出的坑槽以及火烧形成的坑槽。（5）基层、底基层损坏产生翻浆形成的坑槽\r\n\r\n===== 泛油和油斑\r\n泛油和油斑这两种病害产生的最主要的原因是混合料离析。混合料发生离析时，粗集料和细集料分别集中于铺筑层的某些位置，使沥青混凝土不均匀、配合比级配与原设计不符，混合料失去原设计达到的粘接力就形成了路面推移，而混合料的不均匀还会导致集料和沥青分离，沥青集中到一处形成泛油和油斑。\r\n\r\n===== 路面推移\r\n沥青混凝土面层推移，主要是混合料在道路的纵向发生位移，它可能是在施工期间发生或者是在道路通车一段时间后产生，尤其在高温天气时行车荷载的作用。\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/222",
        "content": ":linkcss:\r\n=== 病害形成的原因\r\n\r\n===== 裂缝\r\n（1）横向裂缝：裂缝与路中心线基本垂直，缝宽不一，缝长贯穿部分路幅或整个路幅。裂缝一般比较规则，每隔一定的距离产生一道裂缝，裂缝间距的大小取决于当地的气温和沥青面层与半刚性基层材料的抗裂性能。 +\r\n（2）纵向裂缝：裂缝走向基本与行车方向平行，裂缝长度和宽度不一。主要集中在行车道轮迹分布密集处，因为高速公路交通渠化分明，轮迹位置及轮迹分布范围较小，大车、慢车、重型车辆全部集中在行车道上，快车、小型车，轻型车行驶于超车道机会明显增多，超车道上荷载较小，交通量相对较小，纵向裂缝也较小，纵缝缝宽一般在5～10mm，靠近标线或位于车道中央，且绵延几十米，甚至数百米。常以单条裂缝形式出现。产生的原因有两种可能性，一种情况是沥青面层分路幅摊铺时，两幅接茬处未处理好，在车辆荷载及大气因素作用下逐渐开裂；另一种情况是由于路基压实度不均匀或由于路基边缘受水侵蚀产生不均匀沉陷而引起。 +\r\n（3）网状裂缝：裂缝纵横交错，缝宽1mm以上，缝距1000px以下，1m2以上。 +\r\n（4）反射裂缝：主要是因为软基路段不均匀沉降引起的裂缝直接反射到沥青路面。另外，行车荷载的作用加速裂缝的发展。\r\n\r\n===== 车辙\r\n车辙一般是在温度较高的季节，沥青面层在车辆的反复碾压下产生永久变形和塑性流动而逐渐形成。它通常是在伴随沥青面层压缩沉陷的同时，出现侧向隆起，二者组合起来构成的。路面的永久变形主要发生在沥青面层中。因此，为了延缓车辙的形成，主要应从提高沥青面层材料的高温稳定性来着手考虑。此外，车辙的严重程度与沥青面层的结构组成和配合比有极大关系，ⅱ型沥青混凝土路面自身的抗车辙能力比ⅰ型好的多。上海市中心城区的沥青路面车辙病害也较普遍，大部分集中在公路交叉口，车辆来往多，高温天气路面下受碾压严重更容易出现车辙，修补更换新的沥青混凝土后，但未经严格保养就投入使用，在新的碾压下又会出现车辙，往往出现恶性循环。根据湿热地区高速公路建设和养护的实践分析了沥青路面常见病害的各种成因，提出了各种病害的处治方法，并对我国今后高速公路建设、设计、施工及管养等方面提出了一些建议。沥青路面因具有地质条件适应性强、行车舒适、维护方便等优点而被广泛用于高速公路。在高速公路通车后，因行车荷载作用、外界环境影响以及设计、施工中存在的不足，沥青路面会逐步出现多种路面病害。\r\n\r\n===== 沉陷\r\n沥青黏度小会影响沥青与矿料的黏附性。同时若沥青混合料的油石比太小,或在沥青加热和沥青混合料拌制过程中温度太高致使沥青过温,都会引起沥青混合料的沥青膜相对变薄,抗变形能力降低,脆性增加,空隙率偏大。这些都会导致沥青膜暴露太多,沥青的老化作用加快,同时渗水性加大,进而加快水对沥青的剥落作用,最终在车辆荷载作用下引起路面开裂、沉陷。\r\n\r\n===== 坑槽\r\n沥青路面坑槽的产生往往都有一个形成的时间过程，开始时是局部裂缝进而龟裂松散，在行车荷载和雨水等因素下逐步形成坑槽。常见原因主要有以下几种：（1）路面厚度与压实度不够性坑槽  面层铺筑过程中易出现压实度不足，造成面层内部孔隙率较大，使得沥青混合料粘结力、防水性能下降；拌和厂离施工现场较远，运距过长，运输途中沥青混合料热量损失较大，运至现场后温度不能满足铺筑要求；路面下基层局部标高控制不严，导致沥青上面层个别地方厚度不够，在行车作用下，该处首先破损，形成坑槽。（2）粘结层不牢坑槽  混合料拌和摊铺时，下层表面含有泥、灰等杂物，使上下层不能有效粘结，而形成坑槽，如桥面上形成的坑，这类坑槽修补二次损坏频率较高，一般应在底层先打入砼上面层再用沥青料填补修复。（3）水损害性坑槽这种坑槽是沥青混凝土路面早期破坏中最常见的坑槽，水损害破坏往往是从沥青面层的中面层开始的。水分进入沥青路面，滞留在中面层，当集料与沥青膜剥离后，沥青混合料不再是一个整体，集料在荷载的作用下，对基层产生了力的作用，基层的局部松落形成灰浆，从路面的缝隙向上挤出来，在沥青路面上形成白色的唧浆。如此循环不断，形成了水损害性坑槽。（4）运营期间车辆造成的坑槽  柴油、机油滴漏在路表面上，沥青被稀释后，粘结力降低，集料散失形成坑槽；钢圈或车辆运输的重物，刮撞形成的坑槽；千斤顶顶出的坑槽以及火烧形成的坑槽。（5）基层、底基层损坏产生翻浆形成的坑槽\r\n\r\n===== 泛油和油斑\r\n泛油和油斑这两种病害产生的最主要的原因是混合料离析。混合料发生离析时，粗集料和细集料分别集中于铺筑层的某些位置，使沥青混凝土不均匀、配合比级配与原设计不符，混合料失去原设计达到的粘接力就形成了路面推移，而混合料的不均匀还会导致集料和沥青分离，沥青集中到一处形成泛油和油斑。\r\n\r\n===== 路面推移\r\n沥青混凝土面层推移，主要是混合料在道路的纵向发生位移，它可能是在施工期间发生或者是在道路通车一段时间后产生，尤其在高温天气时行车荷载的作用。\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/asciidoctor",
        "content": "*{\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n#content, #footer-text{\r\n    width: 92%;\r\n    margin: 10px auto;\r\n}\r\nh3{\r\n    margin: 20px 0;\r\n    text-align: center;\r\n}\r\nh5{\r\n    margin: 10px 0;\r\n}\r\np{\r\n    line-height: 20px;\r\n    font-size: 12px;\r\n}\r\n#footer{\r\n    background-color: #666;\r\n    padding: 10px 0;\r\n}\r\n#footer-text{\r\n    font-size: 12px;\r\n    margin: 0 auto;\r\n}",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/mailiqing-ts/1",
        "content": "\r\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t病害形成的原因\r\n\t\t\r\n\t\t\t*{\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t\t#content, #footer-text{\r\n\t\t\t\twidth: 92%;\r\n\t\t\t\tmargin: 10px auto;\r\n\t\t\t}\r\n\t\t\th3{\r\n\t\t\t\tmargin: 20px 0;\r\n                text-align: center;\r\n\t\t\t}\r\n\t\t\th5{\r\n\t\t\t\tmargin: 10px 0;\r\n\t\t\t}\r\n\t\t\tp{\r\n\t\t\t\tline-height: 20px;\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t}\r\n\t\t\t#footer{\r\n\t\t\t\tbackground-color: #666;\r\n\t\t\t\tpadding: 10px 0;\r\n\t\t\t}\r\n\t\t\t#footer-text{\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\t\t\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n病害形成的原因\r\n\r\n裂缝\r\n\r\n（1）横向裂缝：裂缝与路中心线基本垂直，缝宽不一，缝长贯穿部分路幅或整个路幅。裂缝一般比较规则，每隔一定的距离产生一道裂缝，裂缝间距的大小取决于当地的气温和沥青面层与半刚性基层材料的抗裂性能。\r\n（2）纵向裂缝：裂缝走向基本与行车方向平行，裂缝长度和宽度不一。主要集中在行车道轮迹分布密集处，因为高速公路交通渠化分明，轮迹位置及轮迹分布范围较小，大车、慢车、重型车辆全部集中在行车道上，快车、小型车，轻型车行驶于超车道机会明显增多，超车道上荷载较小，交通量相对较小，纵向裂缝也较小，纵缝缝宽一般在5～10mm，靠近标线或位于车道中央，且绵延几十米，甚至数百米。常以单条裂缝形式出现。产生的原因有两种可能性，一种情况是沥青面层分路幅摊铺时，两幅接茬处未处理好，在车辆荷载及大气因素作用下逐渐开裂；另一种情况是由于路基压实度不均匀或由于路基边缘受水侵蚀产生不均匀沉陷而引起。\r\n（3）网状裂缝：裂缝纵横交错，缝宽1mm以上，缝距1000px以下，1m2以上。\r\n（4）反射裂缝：主要是因为软基路段不均匀沉降引起的裂缝直接反射到沥青路面。另外，行车荷载的作用加速裂缝的发展。\r\n\r\n\r\n\r\n车辙\r\n\r\n车辙一般是在温度较高的季节，沥青面层在车辆的反复碾压下产生永久变形和塑性流动而逐渐形成。它通常是在伴随沥青面层压缩沉陷的同时，出现侧向隆起，二者组合起来构成的。路面的永久变形主要发生在沥青面层中。因此，为了延缓车辙的形成，主要应从提高沥青面层材料的高温稳定性来着手考虑。此外，车辙的严重程度与沥青面层的结构组成和配合比有极大关系，ⅱ型沥青混凝土路面自身的抗车辙能力比ⅰ型好的多。上海市中心城区的沥青路面车辙病害也较普遍，大部分集中在公路交叉口，车辆来往多，高温天气路面下受碾压严重更容易出现车辙，修补更换新的沥青混凝土后，但未经严格保养就投入使用，在新的碾压下又会出现车辙，往往出现恶性循环。根据湿热地区高速公路建设和养护的实践分析了沥青路面常见病害的各种成因，提出了各种病害的处治方法，并对我国今后高速公路建设、设计、施工及管养等方面提出了一些建议。沥青路面因具有地质条件适应性强、行车舒适、维护方便等优点而被广泛用于高速公路。在高速公路通车后，因行车荷载作用、外界环境影响以及设计、施工中存在的不足，沥青路面会逐步出现多种路面病害。\r\n\r\n\r\n\r\n沉陷\r\n\r\n沥青黏度小会影响沥青与矿料的黏附性。同时若沥青混合料的油石比太小,或在沥青加热和沥青混合料拌制过程中温度太高致使沥青过温,都会引起沥青混合料的沥青膜相对变薄,抗变形能力降低,脆性增加,空隙率偏大。这些都会导致沥青膜暴露太多,沥青的老化作用加快,同时渗水性加大,进而加快水对沥青的剥落作用,最终在车辆荷载作用下引起路面开裂、沉陷。\r\n\r\n\r\n\r\n坑槽\r\n\r\n沥青路面坑槽的产生往往都有一个形成的时间过程，开始时是局部裂缝进而龟裂松散，在行车荷载和雨水等因素下逐步形成坑槽。常见原因主要有以下几种：（1）路面厚度与压实度不够性坑槽  面层铺筑过程中易出现压实度不足，造成面层内部孔隙率较大，使得沥青混合料粘结力、防水性能下降；拌和厂离施工现场较远，运距过长，运输途中沥青混合料热量损失较大，运至现场后温度不能满足铺筑要求；路面下基层局部标高控制不严，导致沥青上面层个别地方厚度不够，在行车作用下，该处首先破损，形成坑槽。（2）粘结层不牢坑槽  混合料拌和摊铺时，下层表面含有泥、灰等杂物，使上下层不能有效粘结，而形成坑槽，如桥面上形成的坑，这类坑槽修补二次损坏频率较高，一般应在底层先打入砼上面层再用沥青料填补修复。（3）水损害性坑槽这种坑槽是沥青混凝土路面早期破坏中最常见的坑槽，水损害破坏往往是从沥青面层的中面层开始的。水分进入沥青路面，滞留在中面层，当集料与沥青膜剥离后，沥青混合料不再是一个整体，集料在荷载的作用下，对基层产生了力的作用，基层的局部松落形成灰浆，从路面的缝隙向上挤出来，在沥青路面上形成白色的唧浆。如此循环不断，形成了水损害性坑槽。（4）运营期间车辆造成的坑槽  柴油、机油滴漏在路表面上，沥青被稀释后，粘结力降低，集料散失形成坑槽；钢圈或车辆运输的重物，刮撞形成的坑槽；千斤顶顶出的坑槽以及火烧形成的坑槽。（5）基层、底基层损坏产生翻浆形成的坑槽\r\n\r\n\r\n\r\n泛油和油斑\r\n\r\n泛油和油斑这两种病害产生的最主要的原因是混合料离析。混合料发生离析时，粗集料和细集料分别集中于铺筑层的某些位置，使沥青混凝土不均匀、配合比级配与原设计不符，混合料失去原设计达到的粘接力就形成了路面推移，而混合料的不均匀还会导致集料和沥青分离，沥青集中到一处形成泛油和油斑。\r\n\r\n\r\n\r\n路面推移\r\n\r\n沥青混凝土面层推移，主要是混合料在道路的纵向发生位移，它可能是在施工期间发生或者是在道路通车一段时间后产生，尤其在高温天气时行车荷载的作用。\r\n\r\n\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/mailiqing-ts/2017-03-23",
        "content": ":linkcss:\r\n=== 各种病害的处理方法\r\n\r\n===== 裂缝\r\n根据《沥青路面施工及验收规范》（gb50092）要求，按本地区气候条件和道路等级选取适用的沥青类型。以减少或消除沥青面层温度收缩裂缝。采用优质沥青更有效。 +\r\n（1）合理组织施工，尽量避免冷接缝。对于冷接缝的处理，应先将接缝处沿边缘切割整齐、清除碎料，然后预热软化接缝处，涂刷乳化沥青，再铺筑新混合料。碾压时，压路机在已压实的横幅上，钢轮伸入新铺层375px左右，每压一遍向新铺层移动15-500px，直到压路机全部在新铺层为止。对于纵向裂缝，如分幅摊铺时，前后幅应紧跟，上、下层的施工纵缝应错开375px以上，摊铺时控制好松铺系数，使压实后的接缝结合紧密、平整。 +\r\n（2）沥青路面摊铺前，对下卧层需认真检查，及时清除泥灰，处理好软弱层，保证下卧层稳定。在旧路面上加铺沥青路面结构层前，须铣削原路面后再加铺，以延缓反射裂缝的形成。 +\r\n（3）在路面出现微小裂缝时就必须及时处理整治。对于细裂缝（2-5mm）可用改性乳化沥青灌缝。对大于5mm的粗裂缝，可用改性沥青（如sbs改性沥青）灌缝。灌缝前，必须清除缝内、缝边碎粒、垃圾，并使缝内干燥。灌缝后，表面撒上粗砂或3-5mm石屑。对裂缝很大的情况，必须将裂缝两边沥青混凝土开挖，先处理基层再摊铺新混合料，水稳定性好、收缩性小的半刚性材料是首选基层。如夹有软弱层或不稳定结构层时，应将其铲除；如因结构层积水引起网裂时，铲除面层后，需加设将路面渗透水排除至路外的排水设施。\r\n\r\n\r\n===== 车辙\r\n主要是提高混合料的高温稳定性。近几年来的改性沥青混合料的生产施工实践证明，采用改性沥青混合料是防止或延缓路面产生车辙的有效方法。在沥青中掺入不同的改性剂能改善沥青的很多性能，粘度提高，感温性能稳定，沥青软化点提高，针入度提高，耐老化性能提高，从而也相应的提高了沥青的高温稳定性和抗车辙能力。改性沥青分为三类：第一类为矿物类填料，如碳、木质素、石棉等；第二类为聚合物类，橡胶类sbs、树脂类eva、pa等；第三类为添加剂，包括抗养化剂、抗剥落剂等。从改性沥青混合料生产实践中可知，pe对改善沥青混合料的高温稳定性效果明显，而eva对改善沥青低温延度方面效果明显。\r\n\r\n===== 沉陷\r\n为了避免沉陷的发生,可采取以下措施: +\r\n①选用符合“交通道路石油沥青技术要求”的沥青,或采用实践证明行之有效的改性沥青。 +\r\n②采用适当的沥青层厚度,或在沥青面层与半刚性基层之间设12～375px的碎石过度层。 +\r\n③在半刚性基层顶面或沥青层之间设置各种土工合成材料,或者提高沥青混合料的抗拉强度和抗变形能力。 +\r\n④加强路基路面的养护及重视工作。\r\n\r\n===== 坑槽\r\n沥青路面早期破损的防护通过以上分析，可看出沥青混凝土路面早期破损与沥青混合料、路面施工、交通气候条件的全部或部分有联系，而交通气候条件是客观存在的，所以沥青路面早期破损防治应以路面施工和沥青混合料两个方面考虑。 +\r\n（1）严格控制沥青混合料质量 +\r\n①选取具有具有良好的高低温性能、抗老化性能、含蜡量低、高粘度的优质国产或进口沥青。选用骨料应选用表面粗糙、石质坚硬、耐磨性强、嵌挤作用好、与沥青粘附性能好的集料。 +\r\n②选择合理的混合料级配。混合料级配是沥青混合料的高温稳定性和疲劳性能、低温抗裂性，路面表面特性和耐久性的保障。为提高沥青路面使用性能可以考虑以下两个途径：第一是改善矿料级配，采用沥青玛蹄脂碎石混合料（SMA）。第二是改善沥青结合料，采用改性沥青。 +\r\n③严格控制沥青混合料的拌和质量，拌合过程中发现“糊料”或“离析”等异常情况应立即进行处理；加大马歇尔试验频率，严格控制沥青混合料的油石比、稳定度、流值等指标，必要时对混合料进行特殊配合比设计。 +\r\n（2）按设计完成施工\r\n 施工质量控制不严，早期破损必然出现。所以沥青路面施工必须按全面质量管理的要求，建立健全有效的质量保证体系，实行目标管理、工序管理，明确责任，对施工全过程，每道工序的质量要进行严格的检查、控制、评定，以保证其达到质量标准，具体要抓好以下几方面： +\r\n①保证基层顶面粗糙度。改善基层材料级配，增加粗骨料，提高大中粒径集料含量；控制最佳含水量，改进碾压方法，避免过振过湿，不能使基层顶面形成灰浆硬壳，不能用细料进行压实后找平。对细粒土类的半刚性基层，必要时可以采用顶面栽钉等办法加强基层顶面粗糙度。   +\r\n②合理洒布透层油、粘层油。在进行各层铺筑前，必须保持顶面清洁。根据近年来的施工经验，对于水泥稳定类半刚性基层，透层油应以慢裂型乳化沥青为宜。用沥青洒布车喷洒时，应保持稳定的车速和喷洒量，不能流淌和形成油膜，更不能有空白，并立即撒布石屑或粗砂，用钢筒式压路机稳压一遍，将多余的浮料扫走。对旧沥青路面罩面，必须洒布粘层油粘层油应有较好的粘附性，脚踏有明显的粘附感，整个面层取芯后不易分离。对于干线公路可以设置I型稀浆封层作为粘结层，实现层间结合与防水的双重作用且不需要封闭交通。 +\r\n③提高面层摊铺质量。在摊铺混合料时，运距不能过远，摊铺温度应控制在130℃-150℃为宜，摊铺厚度均匀，压实设备数量应配套，速度控制在2m/min左右，碾压遍数不能太少，以免混合料孔隙过大；一般不能进行补料，尤其是下面层；基层雨后潮湿未干，不得摊铺，更不得冒雨摊铺；纵向、横向接缝应紧密、平顺，各幅之间重叠的混合料应用人工铲走。\r\n\r\n\r\n===== 泛油和油斑\r\n提高混合料在压实后的内在稳定性，适度降低沥青和细集料的含量，提高混合料中多角碎石颗粒的含量，施工摊铺时尽量避免搅拌不匀的现象，如出现时可采用人工局部挑出。\r\n\r\n===== 路面推移\r\n出现路面推移情况时只能局部铲除，采用符合要求的新混合料摊铺，并与周边的混合料结合紧密。\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/mailiqing-ts/2017-03-23",
        "content": "\r\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t病害形成的原因\r\n\t\t\r\n\t\t\t*{\r\n\t\t\t\tpadding: 0;\r\n\t\t\t\tmargin: 0;\r\n\t\t\t}\r\n\t\t\t#content, #footer-text{\r\n\t\t\t\twidth: 92%;\r\n\t\t\t\tmargin: 10px auto;\r\n\t\t\t}\r\n\t\t\th3{\r\n\t\t\t\tmargin: 20px 0;\r\n                text-align: center;\r\n\t\t\t}\r\n\t\t\th5{\r\n\t\t\t\tmargin: 10px 0;\r\n\t\t\t}\r\n\t\t\tp{\r\n\t\t\t\tline-height: 20px;\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t}\r\n\t\t\t#footer{\r\n\t\t\t\tbackground-color: #666;\r\n\t\t\t\tpadding: 10px 0;\r\n\t\t\t}\r\n\t\t\t#footer-text{\r\n\t\t\t\tfont-size: 12px;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t}\r\n\t\t\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n各种病害的处理方法\r\n\r\n裂缝\r\n\r\n根据《沥青路面施工及验收规范》（gb50092）要求，按本地区气候条件和道路等级选取适用的沥青类型。以减少或消除沥青面层温度收缩裂缝。采用优质沥青更有效。\r\n（1）合理组织施工，尽量避免冷接缝。对于冷接缝的处理，应先将接缝处沿边缘切割整齐、清除碎料，然后预热软化接缝处，涂刷乳化沥青，再铺筑新混合料。碾压时，压路机在已压实的横幅上，钢轮伸入新铺层375px左右，每压一遍向新铺层移动15-500px，直到压路机全部在新铺层为止。对于纵向裂缝，如分幅摊铺时，前后幅应紧跟，上、下层的施工纵缝应错开375px以上，摊铺时控制好松铺系数，使压实后的接缝结合紧密、平整。\r\n（2）沥青路面摊铺前，对下卧层需认真检查，及时清除泥灰，处理好软弱层，保证下卧层稳定。在旧路面上加铺沥青路面结构层前，须铣削原路面后再加铺，以延缓反射裂缝的形成。\r\n（3）在路面出现微小裂缝时就必须及时处理整治。对于细裂缝（2-5mm）可用改性乳化沥青灌缝。对大于5mm的粗裂缝，可用改性沥青（如sbs改性沥青）灌缝。灌缝前，必须清除缝内、缝边碎粒、垃圾，并使缝内干燥。灌缝后，表面撒上粗砂或3-5mm石屑。对裂缝很大的情况，必须将裂缝两边沥青混凝土开挖，先处理基层再摊铺新混合料，水稳定性好、收缩性小的半刚性材料是首选基层。如夹有软弱层或不稳定结构层时，应将其铲除；如因结构层积水引起网裂时，铲除面层后，需加设将路面渗透水排除至路外的排水设施。\r\n\r\n\r\n\r\n车辙\r\n\r\n主要是提高混合料的高温稳定性。近几年来的改性沥青混合料的生产施工实践证明，采用改性沥青混合料是防止或延缓路面产生车辙的有效方法。在沥青中掺入不同的改性剂能改善沥青的很多性能，粘度提高，感温性能稳定，沥青软化点提高，针入度提高，耐老化性能提高，从而也相应的提高了沥青的高温稳定性和抗车辙能力。改性沥青分为三类：第一类为矿物类填料，如碳、木质素、石棉等；第二类为聚合物类，橡胶类sbs、树脂类eva、pa等；第三类为添加剂，包括抗养化剂、抗剥落剂等。从改性沥青混合料生产实践中可知，pe对改善沥青混合料的高温稳定性效果明显，而eva对改善沥青低温延度方面效果明显。\r\n\r\n\r\n\r\n沉陷\r\n\r\n为了避免沉陷的发生,可采取以下措施:\r\n①选用符合“交通道路石油沥青技术要求”的沥青,或采用实践证明行之有效的改性沥青。\r\n②采用适当的沥青层厚度,或在沥青面层与半刚性基层之间设12～375px的碎石过度层。\r\n③在半刚性基层顶面或沥青层之间设置各种土工合成材料,或者提高沥青混合料的抗拉强度和抗变形能力。\r\n④加强路基路面的养护及重视工作。\r\n\r\n\r\n\r\n坑槽\r\n\r\n沥青路面早期破损的防护通过以上分析，可看出沥青混凝土路面早期破损与沥青混合料、路面施工、交通气候条件的全部或部分有联系，而交通气候条件是客观存在的，所以沥青路面早期破损防治应以路面施工和沥青混合料两个方面考虑。\r\n（1）严格控制沥青混合料质量\r\n①选取具有具有良好的高低温性能、抗老化性能、含蜡量低、高粘度的优质国产或进口沥青。选用骨料应选用表面粗糙、石质坚硬、耐磨性强、嵌挤作用好、与沥青粘附性能好的集料。\r\n②选择合理的混合料级配。混合料级配是沥青混合料的高温稳定性和疲劳性能、低温抗裂性，路面表面特性和耐久性的保障。为提高沥青路面使用性能可以考虑以下两个途径：第一是改善矿料级配，采用沥青玛蹄脂碎石混合料（SMA）。第二是改善沥青结合料，采用改性沥青。\r\n③严格控制沥青混合料的拌和质量，拌合过程中发现“糊料”或“离析”等异常情况应立即进行处理；加大马歇尔试验频率，严格控制沥青混合料的油石比、稳定度、流值等指标，必要时对混合料进行特殊配合比设计。\r\n（2）按设计完成施工\r\n 施工质量控制不严，早期破损必然出现。所以沥青路面施工必须按全面质量管理的要求，建立健全有效的质量保证体系，实行目标管理、工序管理，明确责任，对施工全过程，每道工序的质量要进行严格的检查、控制、评定，以保证其达到质量标准，具体要抓好以下几方面：\r\n①保证基层顶面粗糙度。改善基层材料级配，增加粗骨料，提高大中粒径集料含量；控制最佳含水量，改进碾压方法，避免过振过湿，不能使基层顶面形成灰浆硬壳，不能用细料进行压实后找平。对细粒土类的半刚性基层，必要时可以采用顶面栽钉等办法加强基层顶面粗糙度。  \r\n②合理洒布透层油、粘层油。在进行各层铺筑前，必须保持顶面清洁。根据近年来的施工经验，对于水泥稳定类半刚性基层，透层油应以慢裂型乳化沥青为宜。用沥青洒布车喷洒时，应保持稳定的车速和喷洒量，不能流淌和形成油膜，更不能有空白，并立即撒布石屑或粗砂，用钢筒式压路机稳压一遍，将多余的浮料扫走。对旧沥青路面罩面，必须洒布粘层油粘层油应有较好的粘附性，脚踏有明显的粘附感，整个面层取芯后不易分离。对于干线公路可以设置I型稀浆封层作为粘结层，实现层间结合与防水的双重作用且不需要封闭交通。\r\n③提高面层摊铺质量。在摊铺混合料时，运距不能过远，摊铺温度应控制在130℃-150℃为宜，摊铺厚度均匀，压实设备数量应配套，速度控制在2m/min左右，碾压遍数不能太少，以免混合料孔隙过大；一般不能进行补料，尤其是下面层；基层雨后潮湿未干，不得摊铺，更不得冒雨摊铺；纵向、横向接缝应紧密、平顺，各幅之间重叠的混合料应用人工铲走。\r\n\r\n\r\n\r\n泛油和油斑\r\n\r\n提高混合料在压实后的内在稳定性，适度降低沥青和细集料的含量，提高混合料中多角碎石颗粒的含量，施工摊铺时尽量避免搅拌不匀的现象，如出现时可采用人工局部挑出。\r\n\r\n\r\n\r\n路面推移\r\n\r\n出现路面推移情况时只能局部铲除，采用符合要求的新混合料摊铺，并与周边的混合料结合紧密。\r\n\r\n\r\n\r\n\r\n\r\n\r\nLast updated 2017-03-23 10:49:17 中国标准时间\r\n\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pc/server",
        "content": "\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n  \r\n    \r\n  \r\n\r\n  \r\n\r\n    \r\n    \r\n\r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n    \r\n\r\n\r\n    \r\n\r\n    \r\n    \r\n\r\n      \r\n      \r\n\r\n      \r\n      \r\n        \r\n        \r\n      \r\n\r\n      \r\n\r\n        \r\n        \r\n\r\n        \r\n        \r\n        \r\n      \r\n    \r\n  \r\n",
        "tags": []
    },
    {
        "uri": "/",
        "content": "#cloud-config\r\n\r\nhostname: coreos04\r\ncoreos:\r\n  units:\r\n    - name: settimezone.service\r\n      command: start\r\n      content: |\r\n        [Unit]\r\n        Description=Set the time zone\r\n\r\n        [Service]\r\n        ExecStart=/usr/bin/timedatectl set-timezone Asia/Shanghai\r\n        RemainAfterExit=yes\r\n        Type=oneshot\r\n    - name: \"docker.service\"\r\n      command: start\r\nwrite_files:\r\n  - path: /etc/hosts\r\n    content: |\r\n      127.0.0.1     localhost\r\n      192.168.1.129    mailiqing.com\r\n  - path: \"/etc/resolv.conf\"\r\n    permissions: \"0644\"\r\n    owner: \"root\"\r\n    content: |\r\n      nameserver 114.114.114.114\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/pom",
        "content": "\r\n\t4.0.0\r\n\tkotobulkimport\r\n\tkotobulkimport\r\n\t0.0.1-SNAPSHOT\r\n\t\r\n\t\t\r\n\r\n\t\t\t\r\n\t\t\t\torg.apache.maven.plugins\r\n\t\t\t\tmaven-compiler-plugin\r\n\t\t\t\t3.0\r\n\t\t\t\t\r\n\t\t\t\t\t1.7\r\n\t\t\t\t\t1.7\r\n\t\t\t\t\tUTF-8\r\n\t\t\t\t\teclipse\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\torg.codehaus.plexus\r\n\t\t\t\t\t\tplexus-compiler-eclipse\r\n\t\t\t\t\t\t2.1\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\t\t\torg.apache.maven.plugins\r\n\t\t\t\tmaven-jar-plugin\r\n\t\t\t\t2.4\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tBulkUpdate\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\t\t\tcom.jolira\r\n\t\t\t\tonejar-maven-plugin\r\n\t\t\t\t1.4.4\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttrue\r\n\t\t\t\t\t\t\tonejar\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tone-jar\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\t\r\n\r\n\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-context\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-core\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-beans\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-test\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-aop\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-aspects\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\torg.springframework\r\n\t\t\tspring-orm\r\n\t\t\t3.2.8.RELEASE\r\n\t\t\r\n\t\t\r\n\t\t\tmysql\r\n\t\t\tmysql-connector-java\r\n\t\t\t5.1.38\r\n\t\t\r\n\t\t\r\n\t\t\tc3p0\r\n\t\t\tc3p0\r\n\t\t\t0.9.1.2\r\n\t\t\r\n\t\t\r\n\t\t\torg.slf4j\r\n\t\t\tslf4j-api\r\n\t\t\t1.7.12\r\n\t\t\r\n\t\t\r\n\t\t\tjunit\r\n\t\t\tjunit\r\n\t\t\t4.11\r\n\t\t\r\n\t\t\r\n\t\t\torg.apache.ibatis\r\n\t\t\tibatis-sqlmap\r\n\t\t\t2.3.4.726\r\n\t\t\r\n\t\t\r\n\t\t\torg.apache.ibatis\r\n\t\t\tibatis-core\r\n\t\t\t3.0\r\n\t\t\r\n\t\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/tip",
        "title": "tip",
        "content": "\r\ntip\r\n\r\n 启动虚拟机\r\n`bash\r\nmysql(196.168.1.216)\r\nvmrun -T ws start \"/root/vmware/CentOS-mysql/CentOS-mysql.vmx\" nogui\r\n\r\n启动mysql\r\n[root@Mysql ~] service mysqld start\r\n启动httpd/bugzilla\r\n[root@Mysql ~]# service httpd start\r\n\r\nsvn(196.168.1.224)\r\nvmrun -T ws start \"/root/vmware/CentOS-svn-bak/CentOS-mysql.vmx\" nogui\r\n\r\n启动svn\r\nsvnserve -d -r /home/svn/\r\n`\r\n\r\n 终端shell连接数据库乱码\r\n\r\n`sql\r\nmysql -uroot -h192.168.1.123 -p --default-character-set=utf8\r\n`\r\n\r\n`sql\r\nmysql show variables like 'char%';\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| charactersetclient     | latin1                     |\r\n| charactersetconnection | latin1                     |\r\n| charactersetdatabase   | latin1                     |\r\n| charactersetfilesystem | binary                     |\r\n| charactersetresults    | latin1                     |\r\n| charactersetserver     | latin1                     |\r\n| charactersetsystem     | utf8                       |\r\n| charactersetsdir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n`\r\n\r\nmysql备份数据库\r\n`sql\r\n mysqldump mailiqing -uroot -h192.168.1.127 -p --default-character-set=utf8 --ignore-table=mailiqing.tinormalasphaltpara\r\n`\r\n\r\n\r\n 注释\r\n`java\r\n\r\n/----------  -----start----------------/\r\n\r\n/----------  -----end----------------/\r\n\r\n\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\n测试/正式 打包/解包\r\n`bash\r\n[root@jinzhaoAgent webapps] tar -zcPvf ../bak/b2b2015-09-28.tar.gz --exclude=b2b/WEB-INF --exclude=b2b/special --exclude=b2b/data --exclude=b2b/images b2b/*\r\n\r\n[root@jinzhaoAgent apache-tomcat-7.0.62]# tar -zxvf bak/b2b2015-09-28-119.tar.gz -C webapps\r\n\r\n\r\n`\r\n\r\n\r\n本地VirtualBox 服务器目录配置\r\n`\r\nHOSTNAME            IPADDR                TYPE\r\n--------            ------                ----\r\nCentOS-Lvs-Master   192.168.137.108       Lvs-Master\r\nCentOS-Data-01      192.168.137.107       Data-01\r\nCentOS-Web-02       192.168.137.101       Web-02\r\n`\r\n hosts映射\r\n\r\n`\r\n192.168.137.108   CentOS-Lvs-Master\r\n10.0.2.107        CentOS-Data-01\r\n10.0.2.101        CentOS-Web-01\r\n10.0.2.102        CentOS-Web-02\r\n`\r\n\r\n 目录设置\r\n\r\n`\r\nCentOS-Data-01\r\n    nfs挂载目录:/usr/data/rpm\r\n`\r\n\r\n\r\nscp /etc/rc.d/init.d/nginx CentOS-Web-02:/etc/rc.d/init.d/\r\n\r\n\r\n 服务器目录配置\r\n\r\n 软件存放位置\r\n\r\n/usr/local/src/rpm\r\n\r\n`\r\n192.168.1.111\r\n192.168.1.112\r\n\r\n192.168.1.121       Mlq-Web-Ceshi\r\n192.168.1.123       Mlq-Sql-master  数据库\r\n192.168.1.124       Mlq-Web-R1\r\n    nfs:\r\n        挂载:\r\n        mount -t nfs -o rsize=8192,wsize=8192 192.168.1.126:/usr/mailiqing/data /usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/data\r\n192.168.1.125       Mlq-Web-R2\r\n\r\n\r\n192.168.1.126       Mlq-Data\r\n    nfs:\r\n        /usr/local/src/rpm 192.168.1.0/24(rw)   软件\r\n        /usr/mailiqing/data 192.168.1.0/24(rw)  data目录\r\n192.168.1.127       Mlq-Sql-slave  数据库\r\n192.168.1.128       Mlq-Web-Zhengshi\r\n`\r\n\r\n\r\nhost:\r\n\r\n`\r\n192.168.1.124   Mlq-Web-R1\r\n192.168.1.125   Mlq-Web-R2\r\n192.168.1.126   Mlq-Data\r\n`\r\n\r\n查看日志\r\n\r\n`\r\ntail -f /usr/tomcat/apache-tomcat-7.0.62/logs/catalina.out\r\n`\r\n\r\n---\r\n\r\n\r\n正式服务器发布 脚本\r\n\r\ndeploy.sh\r\n`bash\r\n!/bin/bash\r\nIP_ARRAY=(\"Mlq-Web-R1\" \"Mlq-Web-R2\")\r\nUSER=\"root\"\r\nREMOTE_CMD=\"/home/dishui/scripts/unpack.sh\"\r\nDATE=$(date +%Y-%m-%d)\r\nFILE=\"/tmp/b2b$DATE.tar.gz\"\r\ntar -zcPvf $FILE --exclude=/usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/data --exclude=/usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/special /usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/*\r\necho \"测试打包完毕----\"\r\nfor IP in ${IP_ARRAY[*]}\r\ndo\r\n  scp $FILE $IP:/tmp\r\n  echo \"$ip--拷贝成功\"\r\n  sleep 5\r\n  ssh -t -p 22 $USER@$IP $REMOTE_CMD\r\ndone\r\n`\r\nunpack.sh\r\n`bash\r\n!/bin/bash\r\nDATE=$(date +%Y-%m-%d)\r\nFILE=\"/tmp/b2b${DATE}.tar.gz\"\r\ntar -zxvf $FILE /\r\n`\r\n\r\n 批量重启Tomcat\r\n\r\ntomcat.sh\r\n`bash\r\n!/bin/bash\r\nIP_ARRAY=(\"Mlq-Web-R1\" \"Mlq-Web-R2\")\r\nUSER=\"root\"\r\nREMOTECMDSTART=\"nohup sh /home/dishui/scripts/start-tom.sh/dev/null 2&1\"\r\nREMOTECMDSTOP=\"nohup sh /home/dishui/scripts/stop-tom.sh/dev/null 2&1\"\r\ncase $1 in\r\n    start | begin)\r\n      for IP in ${IP_ARRAY[*]}\r\n      do\r\n        ssh -t -p 22 $USER@$IP $REMOTECMDSTART\r\n                echo \"$IP--启动成功!\"\r\n      done\r\n    ;;\r\n    stop | end)\r\n      for IP in ${IP_ARRAY[*]}\r\n      do\r\n        ssh -t -p 22 $USER@$IP $REMOTECMDSTOP\r\n                echo \"$IP--关闭成功!\"\r\n      done\r\n    ;;\r\n    restart)\r\n      for IP in ${IP_ARRAY[*]}\r\n      do\r\n        ssh -t -p 22 $USER@$IP $REMOTECMDSTART\r\n                echo \"$IP--重启成功!\"\r\n      done\r\n    ;;\r\n    *)\r\n        echo \"你是不是傻!\"\r\n        echo \"$0 stop 批量关闭tomcat\"\r\n        echo \"$0 start 批量关闭tomcat\"\r\n        echo \"$0 restart 批量重启tomcat\"\r\n    ;;\r\nesac\r\n`\r\n\r\n 启动Tomcat\r\n\r\nstart-tom.sh\r\n`bash\r\n!/bin/bash\r\nTOM_COUNT=ps -ef|grep -c tomcat\r\nONE=1\r\nTWO=2\r\nif [ $TOM_COUNT -ge $TWO ]; then\r\n    /usr/tomcat/apache-tomcat-7.0.62/bin/shutdown.sh\r\n    sleep 10\r\n    pid=pgrep java\r\n    if [ ! $pid ]; then\r\n      echo \"$HOSTNAME 正在启动! \"\r\n      /usr/tomcat/apache-tomcat-7.0.62/bin/startup.sh\r\n    else\r\n      echo \"$HOSTNAME 没有完全杀死!\"\r\n      echo \"请稍等!!!\"\r\n      sleep 3\r\n      kill -9 $pid\r\n      echo \"$HOSTNAME 正在启动! \"\r\n      /usr/tomcat/apache-tomcat-7.0.62/bin/startup.sh\r\n    fi\r\nelse\r\n    echo \"$HOSTNAME 正在启动! \"\r\n    /usr/tomcat/apache-tomcat-7.0.62/bin/startup.sh\r\nfi\r\n`\r\n\r\n 关闭Tomcat\r\n\r\nstop-tom.sh\r\n`bash\r\n!/bin/bash\r\nTOM_COUNT=ps -ef|grep -c tomcat\r\nONE=1\r\nTWO=2\r\nif [ $TOM_COUNT -ge $TWO ]; then\r\n    /usr/tomcat/apache-tomcat-7.0.62/bin/shutdown.sh\r\n    sleep 10\r\n    pid=pgrep java\r\n    if [ ! $pid ]; then\r\n      echo \"$HOSTNAME 已关闭! \"\r\n    else\r\n      echo \"$HOSTNAME 没有完全杀死!\"\r\n      echo \"请稍等!!!\"\r\n      sleep 3\r\n      kill -9 $pid\r\n      echo \"$HOSTNAME 已被完全干掉!\"\r\n    fi\r\nelse\r\n    echo \"$HOSTNAME 已关闭! \"\r\nfi\r\n`\r\n\r\n 部分文件部署到正式服务器\r\n\r\ncopy.sh\r\n`bash\r\n!/bin/bash\r\nwhile read LINE\r\ndo\r\n  if [ -f $LINE ]; then\r\n    echo \"$LINE is 文件\"\r\n    scp ${myline} Mlq-Web-R1:${myline%/*} &&\\\r\n    scp ${myline} Mlq-Web-R2:${myline%/*}\r\n  elif [ -d $LINE ]; then\r\n    echo \"$LINE is 文件夹\"\r\n    scp -r ${LINE} Mlq-Web-R1:${LINE} &&\\\r\n    scp -r ${LINE} Mlq-Web-R2:${LINE}\r\n  else\r\n    echo \"$LINE 不存在\"\r\n  fi\r\ndone < $1\r\n`\r\n\r\n 备份\r\n\r\nbackup.sh\r\n`bash\r\n!/bin/bash\r\nip_array=(\"Mlq-Web-R1\" \"Mlq-Web-R2\")\r\nuser=\"root\"\r\nremote_cmd=\"/home/dishui/scripts/pack.sh\"\r\nDATE=$(date +%Y-%m-%d)\r\nfor ip in ${ip_array[*]}\r\ndo\r\n    ssh -t -p 22 $user@$ip $remote_cmd\r\ndone\r\n`\r\n\r\n 脚本使用\r\n\r\n`bash\r\nMlq-Web-R1,Mlq-Web-R2备份到每个机器的当前目录下\r\nsh /home/dishui/scripts/backup.sh\r\n测试服务器部署到正式服务器\r\nsh /home/dishui/scripts/deploy.sh\r\n批量操作Tomcat\r\nsh /home/dishui/scripts/tomcat.sh start|stop|restart\r\n部分文件部署到正式服务器\r\ncd /home/dishui/scripts\r\nvim filelist\r\n将需要部署的文件地址添加到filelist文件\r\n例:(每个地址一行)\r\n/usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/program/company/goods/goodsList.jsp\r\n/usr/tomcat/apache-tomcat-7.0.62/webapps/b2b/special/111\r\ni 进入编辑模式, esc 退出编辑模式, :wq 保存退出\r\nsh copy.sh filelist\r\n`\r\n\r\n 本地mysql、svn\r\n\r\n服务器\r\n\r\n| 主机  | 196.168.1.220 |\r\n| -- | -- |\r\n| mysql | 196.168.1.216 |\r\n| svn | 196.168.1.224 |\r\n\r\n操作\r\n    查看虚拟机是否启动\r\n`bash\r\nvmrun list\r\nTotal running VMs: 2\r\n/root/vmware/CentOS-mysql/CentOS-mysql.vmx\r\n/root/vmware/CentOS-svn-bak/CentOS-mysql.vmx\r\n有以上信息说明,已经启动\r\n`\r\n    启动虚拟机\r\n`bash\r\nssh 连接 196.168.1.220\r\n启动216\r\nvmrun -T ws start \"/root/vmware/CentOS-mysql/CentOS-mysql.vmx\" nogui\r\n启动224\r\nvmrun -T ws start \"/root/vmware/CentOS-svn-bak/CentOS-mysql.vmx\" nogui\r\n重启\r\nvmrun reset \"/root/vmware/CentOS-svn-bak/CentOS-mysql.vmx\" hard\r\n`\r\n    启动mysql\r\n`bash\r\nssh 登录216\r\n启动mysql\r\nservice mysqld start\r\n`\r\n    启动svn\r\n`bash\r\nssh 登录224\r\n启动svn\r\nsvnserve -d -r /home/svn/\r\n`\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/tmp",
        "title": "临时文件",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n由于，Mai沥青平台前期访问量不大，没有部署硬件防火墙\r\nMai沥青平台，上线时间紧张，没有划分网络，前期数据量不大，web应用与数据库没有逻辑隔离\r\n划分vLan:\r\n\t1. 提高安全性\r\n\t2. 提高性能\r\n\r\n\r\n\r\n网聚无线\r\n\thttp://www.wellidc.net/\r\n世纪互联\r\n\thttp://www.ch.21vianet.com/\r\n\r\n\r\n\r\n\r\n机房位置 （全国位置）\r\n\t北京上帝数据中心\r\n\t北京兆维数据中心\r\n网络接入\r\n\tBGP接入,上传/下载 1:1\r\n\t联通，移动，电信\r\n机房应急管理\r\n\tIDC被攻击，连接不上服务器怎么办？\r\n\t\t最慢20分钟恢复\r\n\t服务器断电，有什么数据保护措施？\r\n\t\t磁带保存，保存周期多长时间\r\n\t假如数据丢失，如何补偿，有什么补偿措施\r\n\r\n产品与服务\r\n\t机柜出租 （价格）\r\n\t\t8万左右\r\n\t网络带宽（价格）\r\n\t\t120/M\r\n\tCDN服务 （价格）\r\n\t\t60~70元\r\n\r\n\r\n\r\n\r\n机房位置 （全国位置）\r\n\t北京上帝数据中心\r\n\t北京兆维数据中心\r\n网络接入\r\n\tBGP接入,上传/下载 1:1\r\n\t联通，移动，电信\r\n机房应急管理\r\n\tIDC被攻击，连接不上服务器怎么办？\r\n\t\t最慢20分钟恢复\r\n\t服务器断电，有什么数据保护措施？\r\n\t\t磁带保存，保存周期多长时间\r\n产品与服务\r\n\t机柜出租 （价格）\r\n\t\t8万左右\r\n\t网络带宽（价格）\r\n\t\t120/M\r\n\tCDN服务 （价格）\r\n\t\t60~70元\r\n\r\n\r\n\r\nDevOps\r\n文化 趋势 自动化\r\n\r\n\r\n\r\nup_area_id=uO4W5OY1B21xTxu\r\n\r\nhttp://activemq.apache.org/\r\nhttp://activemq.apache.org/getting-started.html\r\n\r\n\r\nMongo\r\n\t[[http://www.jb51.net/article/87255.htm]]\r\n\r\nGalary集群\r\n\r\nWarning:Problems clearing output files for target \"Resources for 'b2b' production\": PersistentEnumerator storage corrupted C:\\Users\\dishui\\.IntelliJIdea15\\system\\compile-server\\b2b_8a7c3241\\targets\\resources-production\\b2b\\src-out\\data\r\n\r\n\r\n\r\n软件\r\n硬件\r\n\r\n网络\r\n人为\r\n\r\n容灾\r\n安全\r\n备份\r\n\r\n\r\n服务器 厂商 型号 配置\r\n\r\n\r\n交换机\r\n型号：HP 2920-24G Switch(J9726A)\r\n价格：1.95万\r\n参考： 中关村在线产品报价\r\n\r\n\r\n服务器\r\n型号：E5-2609 v2 @2.50GHz 2.50 GHz (2处理器) 32G内存 1Tb 硬盘\r\n价格：2.5~3.0万\r\n\r\n防火墙\r\n型号: 知道创宇KS-WAF-P300S\r\n价格: 18.8万\r\n\r\n型号: 华为USG6330\r\n价格: 9000\r\n\r\n型号: 网康防火墙\r\n\r\n\r\n\r\nPDA\r\n\r\nIBM x3650M4\r\n2*E5-2609\r\n192.168.\r\n\r\n\r\n\r\n物流供应商\r\n\r\n科捷物流\r\n用友\r\n智软软件\r\n好伙伴\r\n北京交大思源科技\r\n四方网络科技\r\n\r\n\r\ngoods\r\n\tbean\r\n\tservice\r\n\tdao\r\n\r\n repository_region;\r\n\r\n\r\n\r\n\"id\", \"cat_desc\", \"pic_path\", \"cat_code\", \"is_show\", \"is_leaf\", \"parent_code\", \"cat_type\", \"rel_type\", \"depth\", \"sort_order\", \"is_deleted\", \"gmt_create\", \"creater\", \"gmt_modify\", \"modifier\", \"key_word_search\", \"shop_key_word\"\r\n\r\n url;\r\n\r\n\r\n\r\n\r\nprocur_f_id\r\nprocur_cust_id\r\nuser_id\r\ncompany_name\r\nreceive_addr\r\ndelivery_type\r\npay_date\r\ncategory\r\nmodel_num\r\nbrand_name\r\nfactory_name\r\nrepo_addr\r\ncount\r\npay_type\r\nhope_price\r\ndelivery_date_start\r\ndelivery_date_end\r\nmin_quantity\r\nstatus\r\nin_date\r\nupdate_date\r\nproduct_norm_id\r\nremark\r\nrsrv_str1\r\nrsrv_str2\r\nrsrv_str3\r\nrsrv_str4\r\nrsrv_str5\r\n\r\n\r\n\r\n\"id\", \"cat_id\", \"cat_name\", \"sort_order\", \"brand_logo\", \"start\", \"limit\", \"parentStr\"\r\n\r\n\r\n\"start\", \"limit\", \"ct\", \"en_name\", \"area_level\", \"sort_no\"\r\n\r\nareaId=20150601L2sIhL7\r\n\r\n{\r\n\t\"userId\" : \"20151026X3422O5\",\r\n\t\"companyName\" : \"金兆路华\",\r\n\t\"category\" : \"a|b|c\",\r\n\t\"brandName\" : \"20150615hJDE2Ww\",\r\n\t\"count\" : \"400\",\r\n\t\"deliveryDateStart\" : \"2016-08-08\",\r\n\t\"deliveryDateEnd\" : \"2016-08-16\",\r\n\t\"receiveAddr\" : \"20150601L2sIhL7|7d3j31OwCh8J7E3\",\r\n\t\"image\" : \"cccccccc\",\r\n\t\"desc\" : \"70#沥青,行行行\"\r\n}\r\n\r\n phone;\t\t\t\t\t\t//联系电话\r\n\r\n\r\n\r\n\"is_search\",\"cat_desc\",\"pic_path\",\"cat_code\",\"sort_order\",\"is_show\",\"child_nums\",\"depth\",\"is_leaf\",\"parent_code\",\"point_proportion\",\"is_dummy\",\"style_type\",\"cat_type\",\"is_fragile\",\"is_deleted\"\r\n\r\n\r\n goodsDesc;\r\n\r\n\r\n\r\nid                   char(15) not null comment '商品主健id',\r\n   cat_code             varchar(64) comment '类目代码',\r\n   goods_sn             varchar(60) comment '商品编号',\r\n   title                varchar(120) comment '商品名称',\r\n   brand_id             char(15) comment '品牌id',\r\n   sale_number          double(12,2) comment '已售数量',\r\n   market_price         decimal(12,2) comment '市场价格',\r\n   goods_price          decimal(12,2) comment '商品销售价格',\r\n   goods_number         double(10,0) comment '库存数量',\r\n   goods_desc           blob comment '商品描述',\r\n   img_large            varchar(255) comment '默认商品大图路径',\r\n   img_middle           varchar(255) comment '商品 中图默认路径',\r\n   img_small            varchar(255) comment '默认商品小图 路径',\r\n   attr_value           varchar(2000) comment '属性值',\r\n   attr_desc            varchar(4000) comment '属性值描述',\r\n   goods_status         varchar(20) comment '商品状态',\r\n   gmt_listing          datetime comment '上架时间',\r\n   gmt_delisting        datetime comment '下架时间',\r\n   click_count          integer comment '点击籹',\r\n   goods_weight         double(10,3) comment '商品重量',\r\n   warn_number          integer comment '警告数量。不实现',\r\n   original_img         varchar(255) comment '原始图片路径',\r\n   gmt_create           datetime comment '创建时间',\r\n   gmt_modify           datetime comment '修改时间',\r\n   goods_rank           integer comment '商品信用等级',\r\n   is_cutprice          char(2) comment '是否特价商品 ：y 是 n 不是',\r\n   gmt_cutprice         datetime comment '特价状态修改时间',\r\n   options              integer comment '数据以二进制字节位来表示',\r\n   cost_amount          decimal(10,2) comment '成本价',\r\n   send_flag            integer comment '商品其它信息 以位来操作　　0x01 新到货标志　0x02 降价标志。主要提供数据信息发送功能。',\r\n   shop_cat_id          varchar(255) comment '店铺类目',\r\n   sale_num_begin       double comment '起售数量(主要提供后期，b2b的模式)',\r\n   search_tag           varchar(250) comment '搜索关健字',\r\n   gout_type            varchar(40) comment '趣味类型',\r\n   logistics_type       integer comment '提货方式 1--卖家送货 2---买家自提',\r\n   distribution_mode    integer comment '配送方式:1,汽运,2,船运,3,集装箱'\r\n   mailing_amount       decimal comment '平邮费用',\r\n   ems_amount           decimal comment 'ems物流费用',\r\n   express_amount       decimal comment '快递费用',\r\n   shop_id              char(20) comment '商品所属的店铺id',\r\n   postage_id           char(20) comment '所属运费模板id',\r\n   shop_cat_code        varchar(255) comment '店铺类目代码　如\"9.1\"',\r\n   seller_id            char(20) comment '卖家id',\r\n   seller_nick          varchar(30) comment '卖家名称',\r\n   mailing_cod_amount   decimal(10,2) comment '平邮代收货款费用',\r\n   ems_cod_amount       decimal(10,2) comment 'ems代收货款物流费用',\r\n   express_cod_amount   decimal(10,2) comment '快递代收货款费用',\r\n   is_bundling          varchar(2) comment '是否捆绑销售 ：1 是 2 不是',\r\n   version_num          integer(12) comment '商品版本号',\r\n   province_code        varchar(20) comment '所在地省份code',\r\n   province_abbname     varchar(120) comment '省别名',\r\n   city_code            varchar(20) comment '所在地市code',\r\n   city_abbname         varchar(120) comment '市别名',\r\n   gmt_audit            datetime comment '最迟审核时间',\r\n   first_audit          varchar(255) comment '一审机构代码',\r\n   second_audit         varchar(255) comment '二审机构代码',\r\n   reserve_price        decimal(10,2) comment '起拍价',\r\n   increase_rate        integer(2) comment '加价幅度,0系统代理加价',\r\n   bid_deduction        integer(2) comment '买家出价扣除金额',\r\n   bidder_margin_freezed integer comment '是否冻结买家保证金,1是0否',\r\n   seller_margin        integer(2) comment '卖家保证金',\r\n   auth_flag            integer comment '是否认证商品 1-是 0（默认）无',\r\n   fixed_attr           varchar(255) comment '固定属性',\r\n   goods_video          varchar(255) comment '商品视频字段',\r\n   promotions_price     decimal(10,2) comment '促销价格',\r\n   promotions_s_time    datetime comment '促销开始时间',\r\n   promotions_e_time    datetime comment '促销结束时间',\r\n   audit_remark         varchar(255) comment '审核备注',\r\n   goods_type           varchar(20) comment '商品类型，目前包括：ordinary:一般品，standard:标准品，special:定制品',\r\n   goods_model          varchar(120) comment '商品型号',\r\n   goods_selling_point  blob comment '商品卖点',\r\n   max_delivery_cycle   integer comment '最长备货周期（标准品，定制品）',\r\n   min_delivery_cycle   integer comment '最短备货周期（标准品，定制品）',\r\n   weighted_value       integer(2) comment '商品权重',\r\n   qr_code_url          varchar(255) comment '商品二维码url',\r\n   is_freeze            varchar(1) comment '是否冻结（y-是；n-否）',\r\n   is_listing_now       varchar(1) comment '是否立即上架（y：是，n：否）',\r\n   goods_district       varchar(20) comment '商品区域',\r\n   commission           integer comment '交易佣金比例',\r\n   high_price           decimal(15) comment '最高价格',\r\n   low_price            decimal(15) comment '最低价格',\r\n   prepay_amount        decimal(15) comment '定金价格',\r\n   is_fragile           integer comment '是否易碎，0：否，1：是',\r\n   high_original_price  decimal(15) comment '最高原售价格',\r\n   low_original_price   decimal(15) comment '最低原售价格',\r\n\r\n\r\n\r\n\r\napp_friend_add\r\napp_advice\r\napp_friendship\r\napp_group\r\napp_group_user\r\napp_complain\r\napp_group_set\r\n\r\n\r\n\r\nAppFriendAdd\r\nAppAdvice\r\nAppFriendship\r\nAppGroup\r\nAppGroupUser\r\nAppComplain\r\nAppGroupSet\r\n\r\n\r\n\r\nversion: '2'\r\nservices:\r\n  codis1:\r\n    ports:\r\n     - \"19000:19000\"\r\n     - \"11000:11000\"\r\n     - \"18087:18087\"\r\n    command:\r\n    container_name: codis1\r\n    image: codis:1.0\r\n  redis-master:\r\n    ports:\r\n     - \"6380:6380\"\r\n    command: /redis-2.8.21/src/redis-server --port 6380\r\n    container_name: redis-master\r\n    image: centos/redis:2.8.21\r\n  redis-slave:\r\n    ports:\r\n     - \"6381:6380\"\r\n    command: /redis-2.8.21/src/redis-server --port 6380\r\n    container_name: redis-slave\r\n    image: centos/redis:2.8.21\r\n\r\n\r\n\r\n\"levelNo\",\"email\",\"areaAttr\",\"address\",\"postCode\",\"tel\",\"bestTime\",\"inDate\",\"userId\",\"remark\"\r\n\r\n\r\nversion: '2'\r\nservices:\r\n  gollum:\r\n    privileged: true\r\n    image: dishuigit/gollum:2.0\r\n    container_name: gollum1\r\n    ports:\r\n      - \"80:4567\"\r\n  registry:\r\n    image: registry:2.5\r\n    container_name: registry\r\n    ports:\r\n      - \"5000:5000\"\r\n    volumes:\r\n      - /home/core/registry:/var/lib/registry\r\n  registry-ui:\r\n    image: atcol/docker-registry-ui\r\n    container_name: registry-ui\r\n    ports:\r\n      - \"8080:8080\"\r\n    environment:\r\n      REG1: http://registry:5000/v2/\r\n    depends_on:\r\n      - registry\r\n\r\n\r\njava - dropwizard\r\njava - kulumzEE\r\n\r\n测试金字塔\r\nUT PACT\r\nrestassure\r\n\r\n微服务拆分\r\n. 基于名词\r\n. 基于行为\r\n. DDD\r\n. bundlecontext\r\n. aggregator root\r\n. asgard\r\n设计原则 tomas erl\r\n\r\n\r\nversion: 0.1\r\n\r\nstorage:\r\n  filesystem:\r\n    rootdirectory: /registry\r\n  delete:\r\n    enabled: true\r\n\r\nhttp:\r\n  addr: 0.0.0.0:5000\r\n\r\nauth:\r\n  token:\r\n    realm: http://localhost:8080/api/auth\r\n    service: localhost:5000\r\n    issuer: test\r\n    rootcertbundle: /etc/docker/registry/auth.cert\r\n\r\nlog:\r\n  level: info\r\n\r\nnotifications:\r\n  endpoints:\r\n    - name: listener\r\n      url: http://registry-web:8080/api/notification\r\n      timeout: 500ms\r\n      threshold: 5\r\n      backoff: 1s\r\n\r\n\r\n\r\ndocker push dishui.io:5000/dishuigit/centos7-mysql56:1.0 && \\\r\ndocker push dishui.io:5000/dishuigit/centos7-mysql56-slave:1.0 && \\\r\ndocker push dishui.io:5000/dishuigit/mycat:1.2 && \\\r\ndocker push dishui.io:5000/dishuigit/asciinema:1.2 && \\\r\ndocker push dishui.io:5000/dishuigit/java:1.0 && \\\r\ndocker push dishui.io:5000/dishuigit/mongod:1.0 && \\\r\ndocker push dishui.io:5000/dishuigit/golang:1.6 && \\\r\ndocker push dishui.io:5000/dishuigit/codis:1.1\r\n\r\n\r\n\r\nsudo su - root\r\n\r\n在 /etc/systemd/network 目录下创建 static.network文件,示例内容如下\r\n\r\n[Match]\r\nName=enp0s3\r\n[Network]\r\nDNS=114.114.114.114\r\nAddress=192.168.200.12/24\r\nGateway=192.168.200.11\r\n\r\nsystemctl restart systemd-networkd\r\n\r\ncoreos-install -d /dev/sda -C stable -c cloud-config.yaml -b http://192.168.137.2\r\n\r\n\r\nwget\r\n\r\npasswd core\r\n# core123\r\npasswd root\r\n\r\ninput {\r\n  jdbc {\r\n        jdbc_connection_string => \"jdbc:mysql://192.168.137.2:3306/test\"\r\n        jdbc_user => \"root\"\r\n        jdbc_password => \"111111\"\r\n        jdbc_driver_library => \"/mysql-connector-java-5.1.33.jar\"\r\n        jdbc_driver_class => \"com.mysql.jdbc.Driver\"\r\n        jdbc_paging_enabled => \"true\"\r\n        jdbc_page_size => \"50000\"\r\n        statement => \"/logstash-2.3.4/sql-init/test_contacts.sql\"\r\n    }\r\n}\r\noutput {\r\n  elasticsearch {\r\n    hosts => \"es:9200\"\r\n    index => \"test\"\r\n    document_type => \"contacts\"\r\n    document_id => \"%{uid}\"\r\n  }\r\n  stdout { codec => rubydebug }\r\n}\r\n\r\n\r\n\r\n\r\n\r\ns | awk '{if($1 ~ \"^dishui.io:5000/dishuigit/es\"&&$2 != \"1.3\" ){print $1\":\"$2}}'\r\n\r\n\r\nPUT /test/contacts/_mapping\r\n{\r\n    \"contacts\":{\r\n      \"properties\": {\r\n        \"uid\": {\r\n          \"type\":\"long\",\r\n          \"store\":\"yes\",\r\n          \"index\":\"not_analyzed\"\r\n        },\r\n        \"email\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        },\r\n        \"firstName\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        },\r\n        \"lastName\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        },\r\n        \"inDate\": {\r\n           \"type\": \"string\",\r\n           \"store\":\"yes\",\r\n           \"index\":\"analyzed\",\r\n           \"analyzer\":\"ik_analyzer\"\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\n\r\n/e/docker/src/elasticsearch-1.7.1/elasticsearch-1.7.1.tar\r\n\r\n\r\n/elasticsearch-1.7.1/config/elasticsearch.yml\r\n\r\nE:\\eclipse\\app\\b2b\\WebRoot\\program\\admin\\mlqcategory\\admin_goods\\goodsList.jsp\r\n/WebRoot/program/admin/mlqcategory/admin_goods/goodsList.jsp\r\n\r\n\r\n\r\n=== Swarm\r\n$ docker run -d swarm join --addr= token://\r\n$ docker run -d swarm join --addr= token://\r\n\r\n\"id\",\"imgLarge\",\"imgMiddle\",\"imgSmall\",\"gmtCreate\",\"gmtModify\",\"goodsId\",\"imgDesc\"\r\n\r\n\r\nes:\r\n  container_name: es\r\n  command: /usr/bin/supervisord -n\r\n  image: dishui.io:5000/dishuigit/elastic:1.0\r\n  ports:\r\n    - \"9200:9200\"\r\n    - \"9300:9300\"\r\n  volumes:\r\n    - /home/core/compose/conf/elasticsearch.yml:/elasticsearch-1.7.1/config/elasticsearch.yml\r\nlogstash:\r\n  command: /usr/bin/supervisord -n\r\n  container_name: logstash\r\n  image: dishui.io:5000/dishuigit/logstash:1.1\r\n  links:\r\n    - es\r\n\r\n\"payDate\",\"category\",\"modelNum\",\"factoryName\",\"repoAddr\",\"payType\",\"hopePrice\",\"minQuantity\",\"status\",\"dateDate\"\r\n\r\n\r\nnetsh interface portproxy delete v4tov4 listenport=8080 listenaddress=192.168.137.15\r\n\r\n\r\n\r\n  DECLARE i INT;\r\n  SET @id=NULL;\r\n  SET @len=NULL;\r\n\r\n\r\n\r\n\r\n{\r\n   \"query\": {\r\n      \"multi_match\": {\r\n         \"query\": \"华南\",\r\n         \"fields\": [\r\n            \"rsrv_str3\",\r\n            \"rsrv_str4\",\r\n            \"rsrv_str5\"\r\n         ]\r\n      }\r\n   }\r\n}\r\n\r\n\r\nid AS id,\r\nrs_name AS rsName,\r\nrs_class AS rsClass,\r\nrs_brand AS rsBrand,\r\nrs_area AS rsArea,\r\nrs_state AS rsState,\r\nrs_create AS rsCreate,\r\nrs_modify AS rsModify,\r\noperator AS operator,\r\nreviewer AS reviewer,\r\nrstatus AS rstatus,\r\nrs_url AS rsUrl,\r\nrs_html AS rsHtml,\r\nchuku_1 AS chuku1,\r\nchuku_2 AS chuku2,\r\nchuku_3 AS chuku3,\r\njishu AS jishu,\r\nrs_uploader AS rsUploader,\r\nrs_partition AS rsPartition\r\n\r\n\r\n\r\n\r\n\r\n\r\nprivate String procur_f_id;\r\nprivate String procur_cust_id;\r\nprivate String user_id;\r\nprivate String company_name;\r\nprivate String receive_addr;\r\nprivate Integer delivery_type;\r\nprivate Integer pay_date;\r\nprivate String category;\r\nprivate String model_num;\r\nprivate String brand_name;\r\nprivate String factory_name;\r\nprivate String repo_addr;\r\nprivate BigDecimal count;\r\nprivate Integer pay_type;\r\nprivate BigDecimal hope_price;\r\nprivate Date delivery_date_start;\r\nprivate Date delivery_date_end;\r\nprivate BigDecimal min_quantity;\r\nprivate Integer status;\r\nprivate Date in_date;\r\nprivate Date update_date;\r\nprivate String product_norm_id;\r\nprivate String remark;\r\nprivate String rsrv_str1;\r\nprivate String rsrv_str2;\r\nprivate String rsrv_str3;\r\nprivate String rsrv_str4;\r\nprivate String rsrv_str5;\r\n\r\n\r\n\r\n.field(\"procur_f_id\",\"procurFId\")\r\n.field(\"user_id\",\"userId\")\r\n.field(\"company_name\",\"companyName\")\r\n.field(\"receive_addr\",\"receiveAddr\")\r\n.field(\"delivery_type\",\"deliveryType\")\r\n.field(\"factory_name\",\"factoryName\")\r\n.field(\"repo_addr\",\"repoAddr\")\r\n.field(\"count\",\"count\")\r\n.field(\"delivery_date_start\",\"deliveryDateStart\")\r\n.field(\"delivery_date_end\",\"deliveryDateEnd\")\r\n.field(\"status\",\"status\")\r\n.field(\"in_date\",\"in_date\")\r\n.field(\"update_date\",\"updateDate\")\r\n.field(\"remark\",\"remark\")\r\n.field(\"rsrv_str1\",\"rsrvStr1\")\r\n.field(\"rsrv_str2\",\"rsrvStr2\")\r\n.field(\"rsrv_str3\",\"rsrvStr3\")\r\n.field(\"rsrv_str4\",\"rsrvStr4\")\r\n.field(\"rsrv_str5\",\"rsrvStr5\")\r\n\r\n\r\n\r\n\r\n[source,xml,subs=\"attributes+,+replacements\"]\r\n----\r\n{version}\r\n(C) ACME\r\n\r\ncontent in 1 element\r\n\r\n----\r\n\r\n\r\n[source,ruby]\r\n----\r\nrequire 'sinatra' \r\n\r\nget '/hi' do  \r\n  \"Hello World!\"\r\nend\r\n----\r\n Library import\r\n URL mapping\r\n Response block\r\n\r\n\r\n[source,bash]\r\n----\r\nvi /etc/profile \r\n----\r\n 配置文件\r\n\r\n\r\n\r\nGRANT REPLICATION SLAVE ON *.* TO 'root'@'172.%.%.%' IDENTIFIED BY '111111';\r\n\r\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '111111' WITH GRANT OPTION;\r\n\r\n\r\n\r\nscp -P 2222  core@116.90.81.68:/home/core/opt/src/version2/app-wiki\r\n\r\nversion: '2'\r\nservices:\r\n  elk:\r\n    image: sebp/elk:es240_l240_k460\r\n    container_name: elk\r\n    ports:\r\n      - \"5601:5601\"\r\n      - \"9200:9200\"\r\n      - \"5044:5044\"\r\n      - \"5000:5000\"\r\n\r\n>> Stashed changes\r\n\r\n链接：http://pan.baidu.com/s/1slBzECt 密码：t1w9\r\n\r\n链接：http://pan.baidu.com/s/1bVqPVC 密码：ch3m\r\n\r\n\r\n\r\n\r\nfullyQualifiedTable\r\n\r\nbaseColumns\r\n\r\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/tmp2016-10-26",
        "title": "临时文件",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n\r\necho 172.17.80.3 hadoop-slave1 >> /etc/hosts\r\necho 172.17.80.4 hadoop-slave2 >> /etc/hosts\r\n\r\ncat > /usr/lib/systemd/system/etcd.service > /etc/supervisord.conf \\\r\n      && tar -zxPf /tar/apache-tomcat-7.0.62.tar.gz -C / \\\r\n      && rm -rf tar\r\nCOPY ./server.xml /apache-tomcat-7.0.62/conf/server.xml\r\nEXPOSE 8080\r\nENTRYPOINT  [\"/usr/bin/supervisord\",\"-n\"]\r\n\r\n\r\n\r\nFROM centos:7\r\nMAINTAINER dishui_git@126.com\r\nENV LANG en_US.utf8\r\nENV JAVA_HOME /usr/local/java/jdk1.7.0_79\r\nCOPY ./python3.tar.gz ./jdk-7u79-linux-x64.rpm /tar/\r\nRUN tar -zxPf /tar/python3.tar.gz -C / \\\r\n       && ln -s /usr/local/python3/bin/python3 /usr/bin/python3 \\\r\n       && curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo \\\r\n       && yum install python-setuptools -y \\\r\n       && easy_install -i http://pypi.doubanio.com/simple supervisor \\\r\n       && echo_supervisord_conf > /etc/supervisord.conf \\\r\n       && mkdir -p /etc/supervisord.conf.d \\\r\n       && echo -e \"[include]\\nfiles = /etc/supervisord.conf.d/*.conf\" >> /etc/supervisord.conf \\\r\n       && rpm -ivh tar/jdk-7u79-linux-x64.rpm --prefix=/usr/local/java \\\r\n       && rm -rf tar\r\n\r\n\r\n\r\nnetsh interface portproxy add v4tov4 listenport=2222 connectaddress=192.168.137.20 connectport=22\r\n\r\n\r\n\r\n/home/core/opt/src/data/b2b:/apache-tomcat-7.0.62/webapps/b2b\r\n/home/core/opt/src/data/setenv.sh:/apache-tomcat-7.0.62/bin/setenv.sh\r\n/home/core/opt/src/data/jprofiler9:/jprofiler9\r\n\r\nJAVA_OPTS=\"-agentpath:/jprofiler9/bin/linux-x86/libjprofilerti.so=port=8849,nowait\"\r\n\r\n\r\n\r\n\r\nversion: '2'\r\nservices:\r\n  pc-web:\r\n    image: dishui.io:5000/dishuigit/tomcat:1.0\r\n    stdin_open: true\r\n    volumes:\r\n    - /home/core/opt/src/data/setenv.sh:/apache-tomcat-7.0.62/bin/setenv.sh\r\n    - /home/core/opt/src/data/b2b:/apache-tomcat-7.0.62/webapps/b2b\r\n    - /home/core/opt/src/data/jprofiler9:/jprofiler9\r\n    tty: true\r\n    ports:\r\n    - 8080:8080/tcp\r\n    labels:\r\n      io.rancher.container.pull_image: always\r\n\r\n\r\n\r\nversion: '2'\r\nservices:\r\n  pc-web:\r\n    scale: 1\r\n\r\n\r\n\r\nlocation ~* \\.(gif|jpg|jpeg|png)$ {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n极光推送 内网 不能成功\r\n\r\n\r\n\r\nversion: '2'\r\nservices:\r\n  pc-web1:\r\n    image: mailiqing.com:5000/tomcat:1.2\r\n    stdin_open: true\r\n    volumes:\r\n    - /home/core/b2b:/apache-tomcat-7.0.62/webapps/b2b\r\n    - /home/core/jprofiler9:/jprofiler9\r\n    - /home/core/setenv.sh:/apache-tomcat-7.0.62/bin/setenv.sh\r\n    tty: true\r\n    ports:\r\n    - 8080:8080/tcp\r\n    labels:\r\n      io.rancher.container.pull_image: always\r\n  redis:\r\n    image: mailiqing.com:5000/redis:3.2-alpine\r\n    stdin_open: true\r\n    tty: true\r\n    ports:\r\n    - 6379:6379/tcp\r\n    command:\r\n    - redis-server\r\n    - --appendonly\r\n    - 'yes'\r\n    labels:\r\n      io.rancher.container.pull_image: always\r\n\r\n\r\n\r\n116.90.81.68/\r\n\r\n\r\n\r\n\r\n\r\n20161122Clb346X\r\n20161122C5oL647\r\n20161121aGkCkBU\r\n20161121wsdA515\r\n201611215E5D76H\r\n20161121438Dhpo\r\n20161122S2673K5\r\n20161122IB3q4VX\r\n\r\n\r\n20161122uo05V64\r\n201611222jYYGMS\r\n20161121ovyNQnO\r\n20161121E04N050\r\n20161121180V27h\r\n20161121840UMhE\r\n201611223q648N6\r\n20161122GlwA81y\r\n\r\n\r\n\r\n\r\nLANG=\"zh_CN.GB18030\"\r\nSUPPORTED=\"zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:en\"\r\nSYSFONT=\"latarcyrheb-sun16\"\r\n\r\n\r\n\r\n\r\nsudo docker-volume cifs --username user --password pass --domain domain --security security\r\n\r\n\r\nsudo nohup docker-volume-netshare cifs &\r\n\r\n\r\nmount -t cifs //192.168.137.2/hugo /hugo -o username=dishui,domain=storage,password=dishui,uid=0,gid=0\r\n\r\ndocker volume create -d cifs --name cifshost/share --opt username=dishui --opt password=dishui --opt domain=192.168.137.2 --opt security=security\r\n\r\ndocker volume create -d cifs --name myvol -o share=cifs:/share -o username=dishui -o password=dishui -o domain=storage -o security=security\r\n\r\ndocker volume create -d cifs --name myvol -o share=192.168.137.2/hugo:/share -o username=dishui -o password=dishui -o domain=storage\r\n\r\n\r\ndocker volume create -d cifs --name myvol -o share=//192.168.137.2/hugo:/share -o username=dishui -o password=dishui -o domain=storage\r\n\r\n\r\n--username dishui --password dishui --domain domain\r\n\r\n\r\n\r\nsudo nohup docker-volume-netshare cifs --username dishui --password dishui --domain storage &\r\n\r\n\r\n\r\ndocker run -i -t --volume-driver=cifs -v 192.168.137.2/hugo:/hugo centos:7 /bin/bash\r\n\r\n\r\n:sectnums:\r\n:toc:\r\n:toclevels: 4\r\n\r\n\r\n\r\n'+++\\ntitle = \"\"\\ndate = \"2016-12-27\"\\n+++'\r\n--update-cache --repository http://dl-3.alpinelinux.org/alpine/main/x86_64/ --allow-untrusted\r\n\r\n\r\n懒人\r\n\r\n\r\nFROM mailiqing.com/java:1.1\r\nCOPY ./es1.7.tar.gz /\r\nCOPY ./es.conf /etc/supervisord.conf.d/es.conf\r\nRUN tar -zxf /es1.7.tar.gz \\\r\n    && rm -rf /elasticsearch-1.7.1/logs \\\r\n    && rm -rf /es1.7.tar.gz\r\nEXPOSE 9200 9300\r\nCMD [\"/usr/bin/supervisord\",\"-n\"]\r\n\r\n\r\n\r\n\r\n+++\\ndescription = \\\"\\\"\\ndate = \"$DATE\"\\ncategories = [\\n]\\ntags = [\\n]\\nthumbnail = \\\"\\\"\\ntitle = \\\"\\\"\\n\\n+++\\n\r\n\r\n+++\\ndescription = \\\"\\\"\\n\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/well",
        "title": "日常积累 点点滴滴",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n== 一点 一点\r\n=== js\r\n. **jquery-aop**\r\n[jquery-aop][jquery-aop]\r\n[jquery-aop]: https://github.com/gonzalocasas/jquery-aop\r\n\r\n. **demo**\r\n```javascript\r\n// 导入 aop.js jquery9.min.js\r\n//\r\n(function(){\r\n    function T(){\r\n        this.init();\r\n        _this = this;\r\n    };\r\n    T.prototype = {\r\n        init: function(){\r\n            $('*[data-save]').each(function(){\r\n                $(this).bind('click',{flag:$(this)},_this.save);\r\n            });\r\n            $('*[data-delete]').each(function(){\r\n                $(this).bind('click',{flag:$(this)},_this.delete);\r\n            });\r\n        },\r\n        save: function(event){\r\n            var data = event.data.flag;\r\n            console.log(data.html());\r\n        },\r\n        delete: function(event){\r\n            var data = event.data.flag;\r\n            console.log(data.html());\r\n        }\r\n    };\r\n    //前置\r\n    jQuery.aop.before( {target: T, method: 'save'},\r\n        function() {\r\n            console.log('before sava!');\r\n        }\r\n    );\r\n    //后置\r\n    jQuery.aop.after( {target: T, method: 'delete'},\r\n        function() {\r\n            console.log('after delete!');\r\n        }\r\n    );\r\n    window[\"t\"] = new T();\r\n})();\r\n```\r\n\r\n=== `tomcat`\r\n\r\n. `Context` 配置\r\n```xml\r\n\r\n```\r\n\r\n\r\n=== 密码\r\n道客巴巴 ::\r\n    帐户名: dishui_git +\r\n    密码: 142857dg\r\n豆瓣FM ::\r\n    帐户名: zhoukai_mx +\r\n    密码: 142857\r\nDockerHub ::\r\n    帐户名: dishuigit\r\n    密码: 142857hub\r\n阿里云 ::\r\n    帐户名: dishuiyun\r\n    密码: 142857git\r\n[[无忧加速服务|http://payment.jiegenet.com/user.html]] ::\r\n    帐户名: dishuivpn\r\n    密码: 123456\r\nsee-world ::\r\n    帐户名: dishui_git@126.com\r\n    密码: 123456vpn\r\n跑跑卡丁车 ::\r\n    zm55554  密码 nic1980\r\nGolang中国 ::\r\n    dishui  密码 123456go\r\n优才网 ::\r\n    dishui_git@126.com  密码 123456youcai\r\nRancher ::\r\n    jinzhaoluhua 密码 %jinzhaoluhua%\r\n\r\n\r\n=== 工具\r\nUML ::\r\n    系统架构建模与管理: SPARX EA +\r\n    业务架构建模与管理: ADONIS\r\n\r\n\r\n=== 科学上网\r\n\r\n[[科学上网|http://www.jianshu.com/p/458a9bfa98d7]]\r\n\r\n\r\n协同过滤\r\n\r\nCHANGE MASTER TO MASTER_HOST='mysqlMaster',MASTER_USER='repluser',MASTER_PASSWORD='replpass',MASTER_LOG_FILE='master-bin.000007',MASTER_LOG_POS=410;\r\n\r\n\r\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'172.17.%.%' IDENTIFIED BY '123456' WITH GRANT OPTION;\r\n\r\n\r\n网络与信息安全管理组织机构设置及工作职责\r\n一、网站运行安全保障措施\r\n1、网站服务器和其他计算机之间设置防火墙,做好安全策略,拒绝外来的恶意攻击，保障网站正常运行。\r\n2、在网站的服务器及工作站上均安装了相应的防病毒软件，对计算机病毒、有害电子邮件有整套的防范措施，防止有害信息对网站系统的干扰和破坏。\r\n3、做好访问日志的留存。网站具有保存六个月以上的系统运行日志和用户使用日志记录功能，内容包括IP地址及使用情况，主页维护者、对应的IP地址情况等。\r\n4、网站提供集中式权限管理，针对不同的应用系统、终端、操作人员，由网站系统管理员设置共享数据库信息的访问权限，并设置相应的密码及口令。不同的操作人员设定不同的用户名，且定期更换，严禁操作人员泄漏自己的口令。对操作人员的权限严格按照岗位职责设定，并由网站系统管理员定期检查操作人员权限。\r\n二、信息安全保密管理制度\r\n1、严格按照“谁主管、谁负责”、“谁主办、谁负责”的原则，落实责任制，明确责任人和职责，细化工作措施和流程，建立完善管理制度和实施办法，确保使用网络和提供信息服务的安全。\r\n2、网站信息内容更新全部由网站工作人员完成或管理,工作人员素质高、专业水平好,有强烈的责任心和责任感。网站相关信息发布之前有一定的审核程序。工作人员采集信息将严格遵守国家的有关法律、法规和相关规定。\r\n3、遵守对网站服务信息监视，保存、清除和备份的制度。开展对网络有害信息的清理整治工作，对违法犯罪案件，报告并协助公安机关查处。\r\n4、所有信息都及时做备份。按照国家有关规定，网站将保存6个月内系统运行日志和用户使用日志记录。\r\n5、制定并遵守安全教育和培训制度。加大宣传教育力度，增强用户网络安全意识，自觉遵守互联网管理有关法律、法规，不泄密、不制作和传播有害信息，不链接有害信息或网页。\r\n三、用户信息安全管理制度\r\n1、尊重并保护用户的个人隐私，在与用户签署的隐私政策和网站服务条款以及其他公布的准则规定的情况下，未经用户授权不得公布与用户个人身份有关的资料，除非有法律或程序要求。\r\n2、严格遵守网站用户帐号使用登记和操作权限管理制度，对用户信息专人管理，严格保密，未经允许不得向他人泄露。\r\n\r\n\r\n网络与信息安全管理人员配备情况及相应资质\r\n\r\n姓名：尚冬雷\r\n\r\n职位：技术部经理\r\n\r\n工作内容：\r\n\r\n全面掌握网络部署，制定和主要负责监控网络设备环境的相关事项；\r\n及时发现并安排解决网络故障，优化网络结构\r\n\r\n直属上级：总经理\r\n\r\n人员学历：本科\r\n\r\n相应资质：全国计算机等级B级证书\r\n\r\n\r\n\r\n姓名：周凯\r\n\r\n职位：开发工程师\r\n\r\n工作内容：全面掌握网络部署，监控网络设备环境；及时排除网络故障，优化网络结构\r\n\r\n直属上级：技术部经理\r\n\r\n人员学历：本科\r\n\r\n相应资质：全国计算机等级B级证书\r\n\r\n\r\n\r\n\r\n[[http://192.168.137.16:8088/test.html]]\r\n\r\n\r\n\r\n\r\nasciinema.player.js.CreatePlayer('player-container', './test.json', { width: 81, height: 20 });\r\n\r\n\r\n\r\n```dom\r\nasldkfj\r\n```\r\n\r\n\r\n[shout]\r\nThe time is now. Get a move on.\r\n\r\nThe time is now. Get a move on.\r\n\r\n\r\n\r\nasdf\r\n\r\n\r\n.mysql-slave\r\nasciinema::slave[\"xxxer2\",\"/src/records/mysql-slave.json\",\"95\",\"25\"]\r\n\r\n\r\n\r\n/usr/lib/ruby/gems/2.2.0/gems/gollum-4.0.1/lib/gollum/public/gollum/javascript\r\n\r\n/usr/lib/ruby/gems/2.2.0/gems/gollum-4.0.1/lib/gollum/templates\r\n\r\n/usr/lib/ruby/gems/2.2.0/gems/asciidoctor-1.5.4/lib/asciidoctor\r\n\r\nSee man:gittutorial[7] to get started.\r\n\r\n\r\n\r\n\r\n* * * * * /usr/bin/rsync -a /records/ /records_win/\r\n* * * * * sleep 10; /usr/bin/rsync -a /records/ /records_win/\r\n* * * * * sleep 20; /usr/bin/rsync -a /records/ /records_win/\r\n* * * * * sleep 30; /usr/bin/rsync -a /records/ /records_win/\r\n* * * * * sleep 40; /usr/bin/rsync -a /records/ /records_win/\r\n* * * * * sleep 50; /usr/bin/rsync -a /records/ /records_win/\r\n\r\n\r\nFile: master-bin.000007\r\n         Position: 120\r\n\r\nSHOW SLAVE STATUS\\G;\r\n\r\nSHOW STATUS LIKE 'Slave_running'\r\n\r\n\r\nCHANGE MASTER TO MASTER_HOST='mysqlMaster',MASTER_USER='repluser',MASTER_PASSWORD='replpass',MASTER_LOG_FILE='master-bin.000006',MASTER_LOG_POS=410;\r\n\r\n\r\nCREATE TABLE `user` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `name` varchar(20) DEFAULT NULL,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8\r\n\r\n\r\n\r\n\r\n# mycat 管理入口\r\nmysql -utest -ptest -P9066 -h172.18.0.5\r\n\r\n\r\n\r\n\r\n\r\nrsconf = {\r\n           _id: \"rs0\",\r\n           members: [\r\n                      {\r\n                       _id: 0,\r\n                       host: \"localhost:27017\"\r\n                      }\r\n                    ]\r\n         }\r\n\r\n\r\n@startuml\r\n\r\n  JAVA\r\n  com.eyeieye.koto.dao.cache.file.ImgCacheStoreConfig\r\n  \r\n    org.springframework.beans.factory.DisposableBean\r\n    org.springframework.beans.factory.InitializingBean\r\n    com.eyeieye.koto.dao.cache.file.ImgCacheStoreConfig\r\n  \r\n  \r\n  \r\n    \r\n      \r\n      \r\n      \r\n      \r\n    \r\n    \r\n      \r\n      \r\n      \r\n      \r\n    \r\n  \r\n  \r\n  \r\n  \r\n  All\r\n  private\r\n\r\n@enduml\r\n\r\n\r\n\r\n\r\n\r\n// @Path ,定义路径。\r\n\r\n// @GET、@POST、@PUT等，定义提交请求的方法。\r\n\r\n// @Consumes，定义接收请求的参数格式，是JSON、XML，还是form表单。\r\n\r\n// @Produces，定义输出的格式，输出XML、JSON等格式。\r\n\r\n// @XmlRootElement、@XmlElement、@XmlAttribute定义根元素、元素、属性，使用这些注解可以自定义xml的输出格式。\r\n\r\n// @FormParam、@QueryParam、@PathParam，获取单个参数的三种方式：分别是从表单获取参数、从url问号之后获取参数、获取路径参数。还可以直接将POJO作为方法参数，根据接收的参数格式自动封装bean，比如底部代码中的formJson(Member member)方法。\r\n\r\n// @Context，从容器的上下文获取HttpServletRequest、HttpServletResponse等对象。\r\n\r\n\r\n\r\n2016-9-26   没有送\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/basic",
        "title": "物流",
        "content": "\r\ninclude::content/post/base.adoc[]\r\n:toc-title: Contents\r\n\r\n== SVN\r\n仓库地址 ::\r\nsvn://196.168.1.32/wuliu\r\n\r\n账户密码 ::\r\n[cols=\"3*\"]\r\n|===\r\n|姓名\r\n|账号\r\n|密码\r\n\r\n|田小飞\r\n|tianxiaofei\r\n|tianxiaofei\r\n\r\n|尚冬雷\r\n|shangdonglei\r\n|shangdonglei\r\n\r\n|刘斌\r\n|liubin\r\n|liubin123\r\n\r\n|李震\r\n|lizhen\r\n|lizhen123\r\n\r\n|刘辉\r\n|liuhui\r\n|liuhui123\r\n\r\n|吕少楠\r\n|lvshaonan\r\n|lvshaonan123\r\n\r\n|===\r\n\r\n== 数据库\r\n数据库地址::\r\n196.168.1.31\r\n账户密码::\r\n[cols=\">,^\"]\r\n|===\r\n|账号\r\n|密码\r\n\r\n|wuliu\r\n|123456\r\n|===\r\n\r\n== 物流服务器\r\n账号 ::\r\nwuliu\r\n密码 ::\r\nwuliu\r\n部署脚本::\r\n+\r\n```\r\nsh ~/opt/src/version2/depoly.sh\r\n```\r\n\r\n\r\n\r\n\r\n== Q & A\r\n`Exception: java.lang.OutOfMemoryError` ::\r\n. windows 下\r\n+\r\n```\r\nset JAVA_OPTS=-Xms1024m -Xmx4096m -XX:PermSize=128m -XX:MaxPermSize=256m\r\n```\r\n. linux 下\r\n+\r\n```\r\nCATALINA_OPTS=\"-Xms2048m -Xmx2048m -XX:PermSize=512M -XX:MaxNewSize=256m -XX:MaxPermSize=1024m\"\r\n```\r\n\r\n=== 物流项目发布\r\n\r\n```\r\ncd ~/opt/src/version2/ &&\r\ndocker-compose -f nginx.yml stop wuliu &&\r\ndocker exec ant rm -rf /svn-data/code/tky/WebRoot/WEB-INF/classes/* &&\r\ndocker exec svn svn up /svn-data/code/tky/ &&\r\ndocker exec ant /apache-ant-1.9.7/bin/ant -f /svn-data/code/tky/build.xml &&\r\ndocker-compose -f nginx.yml restart wuliu\r\n```\r\n\r\n== 仓储\r\n\r\n=== 表关系\r\n\r\nimage::{img}/img/work/wuliu/2017-02-28_110200.png[]\r\n---\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/docker-compose",
        "content": "version: '2'\r\nservices:\r\n  mysql-m:\r\n    image: mailiqing.com:5000/mysql:1.1\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: '111111'\r\n    volume_driver: rancher-nfs\r\n    stdin_open: true\r\n    volumes:\r\n    - mysqls1:/data\r\n    tty: true\r\n    labels:\r\n      io.rancher.container.pull_image: always\r\n  wuliu:\r\n    image: mailiqing.com:5000/mysql:1.1\r\n    environment:\r\n      MYSQL_ROOT_PASSWORD: '111111'\r\n    volume_driver: rancher-nfs\r\n    stdin_open: true\r\n    volumes:\r\n    - mysqls2:/data\r\n    tty: true\r\n    links:\r\n    - mysql-m:mysql-m\r\n    labels:\r\n      io.rancher.container.pull_image: always\r\n",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/img/2017-03-28_093226",
        "content": "�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0003$\u0000\u0000\u0002;\b\u0003\u0000\u0000\u0000*#��\u0000\u0000\u0003\u0000PLTE'�`����ҦÐf�ta,A��ӵ[��6>P�����cJ�z�>S���'�⃀��úfEX,>Q�Ԙ�rQ.�e�ا'��\\X`������D^sf���ç?TjT��,�c�����d��Ӥ�d��е�d��b������'��1�g����������ꨕ�֚��gB������`'�����rʗZ��ݱmv�������j���.t����pƕ�Ѿ���e�d���*��-�Ӭ��������Bu�jđ������E�v����Ψ���ЕT?�q�ɍ�xm'�����D���ɤ�蚗Գ�Ѳ���.�Ć��V�����]�b�ɻ�쵅�ŗíb��������pUU˰�Ei�5�j��������s����gZ��誇����������'��l���ǖk|�լ�������AR��]��~�����޳������������b�����]��w��ƥ�����ۭcgf�ᷣ���佈?vJZ`���,E`������������u�բȵ���r���׻��|������o��M�ۀ������ؚqzt2b�i�Ѯ�`���\\u�ˡ'����ڮ�Ç��g>v�˵'����㸵�,Z����ĵ��zp�ė��ŭ��2Q����B�����_�¤���Ɯsoi�Ķ?��'����Ĳ���Ηzɜ����YWp��B�����il�c��������������JHQ��Ҍѫ��Ҟ�����V�փ��������[]s���'��������okb��������ͅ��,>vE�`ZR�'�����ܴ����ɼ����Y�����P��L�����r~�d��v������&���\u0000\u0000\u0000\u0001bKGD��m\u0006J\u0000\u0000\u0000\tpHYs\u0000\u0000\u000e�\u0000\u0000\u000e�\u0001�+\u000e\u001b\u0000\u0000 \u0000IDATx���\u000f`S���\u000f�?���RTh�?\u0018��T����\u0002\u0005�\"W쟈�ء���\"1����\u001fL�mյ\n\u001b�\u0016.�\r+�ܸ?l^m����lue��\u0016�\u0011:����ݸ^������=�{NҴM�4�9�{N���$��$�y��������9\u0011\\(\u0014*�\u00044\u0001\n���P\b\t\n���P\b\t\n���P\b\t\n���P\b\t\n�BHP(�\u0004�BHP(�\u0004�BH�H�'��\u0018k\u0000!�^v��.�\u001a@H��$���\u001eFH\u0010\u0012\r@򰙡��� $\b\tB�� $\b\tB�� $\b\tB\u0012��_�0z\u0011\u0012�\u0004!\u0019O�\u001b��v>�q�\u0011�\u0004!AHBk����v\u001d�T,DH\u0010\u0012�d\u001cH~k�����z�\u0004!AH\u0010\u0012�\u0004!AH\u0010\u0012T�!i��}h��\u00076U���K\u0007\u001c�\b\tB���֛?��@���/��a~Ō]�\u0010\u0012�\u0004!\u0019�-ט'�#��OM\u000b͏ $\b\tB\u0012\n\u0012\bF\u0000�%�\u0014\"$\b\tB�� $\b��u퇎�\u001d��m�o=S�v\u0017B�� $cUU���Ýٯ�ݵi�\u0003S�\b\tB���\u0011\u0012�\u0004!AHP�����j�p�ň� $\bI؋M,\u0003\b\tB������$%$�\u001e���ln\u001d�Y�F��g�\r\u001e���i��\u0002�T�Y��ޣVr�U�\fM����\u001dU\u0016+����ڼ�g?�p�!^sv��\u0010!AH�\u0000I��A\u001b��͛�3`�A�������\u0007^�y\n�ˌ��\u0019�g�\u0006H��&�y��h�}����l\n�g�`�\u0007^�\u000fڍ#\tB�\u001bw��o:>�\u001f�\\���5�dD �\u0016m�U=G|���Gn��\u001d\u0019�l�^z�\u0004\t[\u0000\u0012�\u0000x�� $��\u0004\u0006��\f�x��\u0001��٢��\u0017M�꛻\\�Lg\b\u001a\u000b�\u001c^�MHH�ː����\u000eN\u0017��\u0007�\u0007\r���5��5wm1\u0011�\"hP\u0007L����{1B³�8Ok���/�/j8���T隚��+V�x��$\r�k4\u000b\t�-��\u0010\u0012�\u0019�������g���\u0005\r���j���z����\u000e�Z\u0003/�_��t|�6��@��\"$�2���\u001a$/�J]�o>�r�k05\u000f�y��g�\u0001�\u0011\u0010�)�T�S#�������4\u0007�>e+�ƢǤ��Q3��\u001f\u0012�r\u0019j\u0011\u0012d\u0004!\t�ri`�]@F\u0010\u0012�.W\u0007B�\u0017#%.��;���\\pRAR�4�\u0010\u0012\u000e�.Ϋ%� �ٝ�Z��,�pOI2A2$h��\u001dI\u0003\t��$\u0011$�B�\u000b!�S�\\;��\u0003I�0�BH�\r\u00179�t!i ���6�\u0004)AH�\u0006$��\u0003ARA�3%�\u0002��\u0002����e3�JI�@����$� ���S�8I �u�\u0010\u0012��/�\"$�ԮAg+\t!�ui]R@b�\u001b\\\b�\u0016��E�I\u0001I�Џ�hC%>�(L;5�����d��9X�\u0013{\n����Շ;�__�kӢX\u0017��\u0001\u0012�3O���_\u0005\\��-.p\u0015�>�[����\u0004!�\u0001$��R@�K4�(A�����?\u0007ArcQ:��\u0014����=zH��D���.\u0012\rK�)$�G6��H\u0000��\u001f� ��:)� az��r#�\u0004Ɇ��\u001b9��xNr�\u0015����=��D��}���\u0011#��\u0005ߑ\"�$���m\u000b����\u0017g̽�\u001f�L�\u001e�I��|�]>��}��\u001f\u0007C���3�8ͦ\u0018$���\u0011!��s�Ԯ,Lҹ�\u001f�\u0004 ������\u0014�7\u0007CR^��r1���\r\u0012�\u000eB�����ҹ\\�Ƽ+\u0011�\u0004�8C\bI� ���t��C��DH\u0012(���� ���t��\u0006A�wԢ��H1\\��7H�ߗ���.\b��Z�I\u0012mXv\u0019\u0019�A�����yNA\u0018*��#p��ئ'Jحq�\u001b$Cvv���Sp\u000e5ڸ�n]\t���\u0007\u0012vk\u001c�\u0006\t��&��\u0004�y�|��k;\u0000ێL�@��I�\u0013�5�K\u0011H�d�k�����eDH���~��b�v��Ш\u000b��]�\u0019'$\u0010�ƪ5J@Ү�\u0012��@}��\u0014�n��Q\u0006�6�p�\u001e�.f�K�A��\n�Q�:��\u0010���v��]̦�t\u0006��K�m�y�\u0003u^!\u00015���b��1A�̚$v�%O��JV�]�$/s�~S����\rdϧ}��ҵ�_T\u000e\u0012��\u0000�\u001aC\u0005�q@r��;�37]$����\"���ˤ�\f\u0016O\u001c\u0012�[�C��5\fI;���\u0012\u0004��:����E���y�7��Q������\nY��\u000e �P\u0010U�\u0016=$���v��\u0004� \u0004�MMz\u0013\u001daR������\u0007�m��[�\u0011�D\u0010r\u001b5J\t�5���䵦�[��\u000b���\u0002����+�;~HH�\"Ю&nHH\\@ܮZ-B�j�81��\rp,���D�\u0018\u0003\tq\u0014`�G���(:�(��&\u0012�F\r�,\u0018F`0y���Գc!!���O��\u0013J\u0004$�+�\u0003wQ�kVX�qL\f$���ZY�}64$�O��Z\u0013��O���&� Qp\r\\{�TV�\ro����\u001bj#}��1������[Bq|\u001f��b�\u001e_�Bc|\u001f����k�\u0016.��\u0010y7�a�\u0004C�\u0015���1�R�#�R�\u0014h]Ǹб�\u0007��q���\u0002��/c(g��8Y\u0016��X!ak�\u0018!��e���\t$\u000f�\u0019�\u001e+$,\u000b�P��\\ƲԆ\u0018!��e��\u0005!AH\u0010\u0012�\u0004!AH\u0010\u0012�\u0004!AH\"���E�B�A���8��\u001c$���\t$��Z\u0007�ԜX�H�k���Z�d���o�\\�y�^MA\u0012��\u0019@\u0012��u\u0000I��N�4��C��\u0014$_~����\u000e\u001d�v�� ���\f ���z�d���}�%�h\u000b���\u0012?�1H�65\u000bH�65B�� $��d�^-B��\u0016!���Lܭ$�$�f��\u0003�mZ{�ڏ�߷��\b$i\u0015/\u001dZ4��ߝz��'��\u000b�\u0001IbL�6$\t1��!����nZ�v�'s��z��˷]�\rH�\u000f��\u0010*o��C��>��[m@�\u0018S�\rIBL�uH�n^�\r:�>r�׼E+�,4׼B|��)\u000e�z�@�\u0010S�\u000eI\"L�}Hd�\u0018@C�Ȯ=�XC�$��\f ���\b\tB���\u001b���o��Le��Վ�����4\u0002I͡��}�S\u001f�z�\\�v�F I��Ն$!��|\n8��KOU{��zi�!O��sTO\u0001g��v����\u0019Sv�9��Hv+1�V=\u0005�\bS�*`3�\u0002VQ�\n\u0018!AH\u0010\u0012N!9j=�\u001dH2�\u00138����\u001d$їt��c��\u0003��\u001a��3���j+DH\u0010\u0012�$\u001c$G=\b�v!a�n%\u000f$>�C����:Ph�\u0019}=V�7�(��\u0016�5���q��㐪��G�\r�\u0016xP\u0003�A�]���8ʬ�6��u�g�\u001a����\u001e�Q*�����\u001en�ٖ6�u@�\u00138ry����\u0004C\u0012GI\u001d\u0016����k�e@2wZ\u000f�*4�\u0007��0\u0000IСJ@2�a,��\u000f�uD�0\b\u0014d���x�\u0019V8\u0004>���W��d�9�i=\u000e�7���b,�?����\u001c�\u0000[�z�\u000f���[I��!\u001d�:\u0006�T���\u0011�C�\t|��ֽ�V0{Zπ���\u0017�DY��Ue\u0003U�6Ro{�\u0013!�+�\t\u001c\t�d����%\u001e�8J��\u000f�������K���e�����ꁢ���d���C2�a,���ΐ�)l�\u0000H(#Ry�f��\u0017l\u0000M�[Ћ��39��k�\b\u001dU��j4�U��\\b���o��kH%w\u000b�C�I6�vj�Vi4��.�\t}\r~0�3y����{��\u001fI �\f(�n�^R�\u0002\nW\u0005m\u0014̽��Mꔼ�\u0001\u0006A2|�B�VPà_�D��p\r\u0003�Qi�g�%���\"\u0012\u001b����&$���8(���u���\u0015\u0006ɽR-Z�T�!�j�h���KO��\r���N� I�\u0011\\nzf���>�\b)�[�F#\u001d���n�F˪��D�w�{�G�z�Y=����!�����\u000f��HWl�w�\u000f��\u0000$c\u000fMO�qDFHޓ\u001d",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/img/2017-03-28_093540",
        "content": "�PNG\r\n\u001a\n\u0000\u0000\u0000\rIHDR\u0000\u0000\u0003$\u0000\u0000\u0002;\b\u0003\u0000\u0000\u0000*#��\u0000\u0000\u0003\u0000PLTE'�`����֯,>��hUr>P������,>Q��`y��,�d'�ɴ����p���H��'����ф�`���ὖ׮����d>P��`�����p���f����������Ĝ�����,>b4a��ΨH;Z��,�������􀀎,t�ΑQ���ʬ�s���˻���mŔupe��`�Ѿ��������ύ��������,@�����Ҳa�����3?P���pgX������Y>�������L�؈���Ä,v��ɥ���x��Э�������B�`���3Pk���L���Ý���{;i��@PcytX���ں��i���SNT��񵷳������ʤ{���t�􆎞�ܼ���̻�_OS����ч'�{��3e�rJR���M>P��쫼����'��'������ڜ4\\,D����Xz����D^br�ӽ�l���Z������̎³������♥���`�bU������,At�����������p'�ӧ��'��.�e����٬�׺,b����Y>lp������������b{w��r>l��j�����Ӏ��������T>�������B��x�Ƞ����ݪ���������ν�ㇺ���ԗ�zh]�`BI\\�Ý��xҺ����>BPJt����������͔`���,Z����ԥa��`�tR��߸����Ǝ��,F_��{b_V�rPJ>�B�ܳ��h�����zn`����ķ������,~����Hlx\\Q�����ɪ��>^r������LKT'���Ɯ�����`������2t��Η�ꥯzU���ʺ���䑕�p����s��Ԥ�ԫ��hh߅\u0000\u0000\u0000\u0001bKGD�Cd��\u0000\u0000\u0000\tpHYs\u0000\u0000\u000e�\u0000\u0000\u000e�\u0001�+\u000e\u001b\u0000\u0000\u0019�IDATx���}|\u0014ա�ᥭ�cQ�P\u0004c�4X+ ) � \u0006m\u0017�|[I\f*�Jr�Z�(E1`�pm/\u0010\u0012\r!\b-����\u001a��\r�*QkV\u0014\n\u0016C\n-T\u0012\u001a@�����Z@�����$�\u0001\u0003\u0004v�}�`73��\u001f��9gf\u0000O:\u0011���_\u0002\"�\u0010��\b$D !\u0002\t\u0011H�@B\u0004\u0012\"\u0002\t\u0011H�@B\u0004\u0012\"�\u0010��\b$D !\"�\u0010��\b$D !\u0002\t\u0011H�@B\u0004\u0012\"\u0002\t\u0011H�@B\u0004\u0012\"�\u0010��\b$D !\u0002\t\u0011��\b$D !\u0002\t\u0011H�@B\u0004\u0012\"�\u0010\u0011H�@B\u0004\u0012\"�\u0010��\b$D !\u0002\t\u0011��\b$D !\u0002\t\u0011H�@B\u0004\u0012\"�\u0010���@B\u0004\u0012\"�\u0010��\b$D !\u0002\t\u0011H�\b$D !\u0002\t\u0011HN��uwyK�=\u0006�q�5�˻��c��\u0004$ 9�H:޽�\f$ 9!HR��\u0015 \u0001\tH@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012���@B �\u0019$��\u0004$ �^��]��\u0000$ \u0001I�\u0006Mo\u0012���+�.l\u0012{W�\u0004$ i��g���>�/G�&��3H@\u0002��H~~c�9�\u0003\"{�{\u0005�\u0007\tH@\u0012\u0011����\u0000\tH@\u0002\u0012��\u0004$ \u0001\tH@B \u0001\t�VH�G���\u0019V�y\f�=rA��P\u0004\tHb\u0004I���\u0003��Ќ)y\"{�Ԫ&ѸF�P|�\u0002$ \u0001�s\u001bQ����!G\u0013!�3Fn��d�\u0018�u��\u0004$6�\u0001�Y\u0014�z*��\tr�U��\\����\u001f@\u0002\u0012�8H�'|bB��dO{��\u0001r���5 \u0001\tH�]�z�'�B\u0017H@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012� $�V���\u0012��\nH@▅��h\u000b�\bH&O\u001b>��5���\t� \u0001Il#���� �t���y��\\\u0002.|�ڹ\u0004\\�\\\u0002n�d��D�[n�\u0017\u0005�\\�ܠ�Z6�\u0016��$F����*P��fb3$�}��\\�\u0018�(j{\u001eܾ��(H��\u000f�\u0003\u001aF��~���\u001dH,��w\u0002�q��V��4C��.OL�;2��$�\u0007\f\u0019�#\n\u0012+�5)�q�$�[ ��5\t|\u0017$ \u0001\tH\b$ !��\u0004$ \u0001\tH@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012\u0002\t�\u0004$ \u0001\tH@\u0002\u0012��\u0004$�C��\u000e\n$ �U$I���3H@\u0002\u0012��\u0004$ \u0001\tH@\u0002\u0012��\u0004$ \u0001\tH��#9�W�U�5��%{�?�����,����\u0015��ײ\u0012\u0000\tH܇�\u0007jc\u0017�����\u0007.{+\"\u0012ϝ�5�A�r�e��\u0001\tH܍�N��0�|q��k������륊\u000b~�X�\u0006�?�׳��H\f\fS_=\n��\u000f��\u0005\u0012��\u000e��=������S�������\u001f\u000e:p\u0006\u000e�D\u001d4�l��",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/jenkins",
        "content": "#!/bin/bash\n\nrevision_start=2482\nrevision_end=2483\n\nsource /etc/profile\n\nbase=\"/root/.jenkins/workspace/mailiqing-increment/wuliu-production\"\n\n#更新文件列表\nupdate_list=\"$base/update.txt\"\n\n#日期\ndate=$(date +%Y-%m-%d)\n#增量打包文件\ntar_file=\"$base/path/pc-wuliu-path$date.tar.gz\"\n#本地svn仓库地址\nsvn_repo_url=\"$base/tky\"\n#编译后的class文件路径\npath=\"$svn_repo_url/WebRoot/WEB-INF/classes\"\nwebroot=\"$svn_repo_url/WebRoot\"\n\nfunction exar() {\n    #awk -F'.' '{if($NF ~ \"java\"){print $0}}' $1 | xargs -I t getLs t\n    while read LINE\n    do\n        # 获取目录\n        local t_dir=`echo $LINE | awk -F'.' '{if($NF == \"class\"){print $0}}' | xargs -I t dirname t`\n        # 获取内部类\n        ls $t_dir | awk '{print $1}' | awk -F'.' '{if($1 ~ /\\$/){print dir\"/\"$1\".class\"}}' dir=\"$t_dir\" >> $webroot/filelist1\n    done < $1\n}\n\n# 清空\ncd $path &&\\\nrm -rf * &&\\\n\ncd $svn_repo_url &&\\\n#本地版与最新版的差异\nsvn diff --summarize -r $revision_start:$revision_end * | awk '{if($1 != \"D\"){print $2}}' | awk -F '.' '{if($NF ~ \"jsp|js|java|xml|css|properties|png|jpg|html|jar|ftl\"){print $0}}' > $update_list\ncat $update_list\n#判断 是否有更新\nif [ -s $update_list ];then\n    # svn 更新\n    svn update -r HEAD * &&\\\n    #记录版本号\n    #svn info WebRoot | awk -F':' '{if($1 == \"Revision\"){gsub(/ /,\"\",$2);print $2}}' > $revision &&\\\n    # ant 编译\n    ant -f ./build-production.xml &&\\\n    cat $update_list | awk '{gsub(\"WebRoot/\",webroot);gsub(\"src/\",path);gsub(\"^resources/\",path);gsub(\".java$\",\".class\");print $0}' path=\"$path/\" webroot=\"$webroot/\" | awk -F 'WebRoot/' '{print $2}' > $webroot/filelist\n    #\n    if [ -s $webroot/filelist ];then\n\n        cd $webroot &&\\\n        exar $webroot/filelist &&\\\n        cat $webroot/filelist1 >> $webroot/filelist &&\\\n        cat $webroot/filelist &&\\\n        #增量打包\n        awk '!a[$0]++' filelist| xargs tar -czf $tar_file &&\\\n        rm -f filelist filelist1 &&\\\n        cd $svn_repo_url &&\\\n        tar -tPvf $tar_file | awk '{print $6}' &&\\\n        echo \"增量更新文件打包OK!路径:$tar_file\"\n        scp -P2222 $tar_file core@$scp_ip:~/tmp &&\\\n        echo \"增量包copy到$scp_ip成功\"\n\n        if [[ $Restart == true ]];then\n            ssh -tt -p 2222 core@116.90.81.68 \"/home/core/bin/wuliu-restart.sh\"\n        else\n            ssh -tt -p 2222 core@116.90.81.68 \"/home/core/bin/wuliu.sh\"\n        fi\n\n\n        #echo \"$scp_ip增量包解压成功\"\n    else\n        echo \"增量打包文件列表为空!\"\n    fi\nelse\n    echo \"没有最新的文件了!\"\nfi",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/jiaojie",
        "title": "文档",
        "content": "\ninclude::content/post/base.adoc[]\n:toc-title: Contents\n\n== 测试服务器\n\n环境:\n|===\n|名称|版本|下载地址\n\n|Docker\n|Docker version 1.13.1\n|link:https://store.docker.com/editions/community/docker-ce-server-centos?tab=description[docker]\n\n|Rancher\n|1.5\n|link:https://github.com/rancher/rancher/tree/v1.5[rancher 1.5]\n\n|Docker Compose\n|docker-compose version 1.8.1, build 878cff1\n|link:https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64[docker-compose]\n|===\n\n=== Docker 安装\n\n. 配置docker 本地 yum 仓库\n+\n[source,bash]\n----\nyum install -y yum-plugin-downloadonly # yum下载软件包插件\nmkdir -p /var/www/html/data/yum-repo/ # yum 仓库目录\nyum install docker-engine-1.12.1-1.el7.centos --downloadonly --downloaddir=/var/www/html/data/yum-repo/ # 下载 docker 依赖到仓库\ncreaterepo -p -d -o /var/www/html/data/yum-repo/ /var/www/html/data/yum-repo/ # 生成 yum 仓库信息\n\nsystemctl start httpd # 启动 apache (如果没有 yum install -y httpd 安装)\n----\n\n. 配置 内网 `yum` 源\n+\n[source,]\n----\ncat > /etc/yum.repos.d/CentOS-Base.repo ",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/jiaojie2pdf",
        "content": "PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000\n7�J7�Ǚx\u0001\u0000\u0000�\u0006\u0000\u0000\u0013\u0000\u0000\u0000[Content_Types].xml���j�@\u0010���\u0014�m�M�RJ���\u0007�M\u001bh�\u0000���,u\u000f�NNo�Q\u001b)%�4ɍ�3���?�:��t\u0011m�\u0007e�$\u001e��8\u0002#�T&�ğ���>�M�Ƌ��\u0010Q�\t�x��\u001e\u0018\u000bb\u0005���:0Tɬ�\u001c����q��s`����\tk\u0010\f&Xj���\u0013d|]`���ǵ/���c�WZMb�\\�\u0004G*��ʎ\u000ez(B����?x�\u000fZJ�UOX)\u0017�\u000f\u0016�\u0014�W\u0012�9���5鱭��ma�\u0001�\u0014KH�i�x�,S\u0002�\u0015kM#i)��\u0015\u0010\u0002��\"�%�Mb�z\t�z���HwS���\u0011z'��P_�'sT2ݞ\u00199,�����x#�JA�so]`�v2\u0003�'I�L\bāG\u0005��7���$p8{�t_�z�p_�%v����o\u0014�N�T4W���Y4\u0016/�E#�M�A*����\u0019���8�.?���~\"��\"���L�\u0001PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000\n7�J��\u0012\u0019�\u0000\u0000\u0000?\u0002\u0000\u0000\u000b\u0000\u0000\u0000_rels/.rels���J\u0003A\f��>Ő{7�*\"��^�ЛH}�0��\u001d��!\u0013���#�Z��\u0007�����G�r�\u000f;��R|�\u001d̛\u0016\fG���c\u0007����\u0006V����w�5R&���=�t0��[�b'\u000eT��9֟!I �O\u00191�}��qѶ�(?\u0019�\u001f0��u \u001b7\u0007�}�|\u000e;\r��|��s��GF�JT2����k\u0012����T,\u0018��SUy\u000bͰ?����`��\r��\u000e\u0003\u0006��\u0005`f�\u0000�����8\u001e\u0012D\u0004!��\u0004�sh���e��\u0010��k\u0016��Z�\u0004\u000f ���\u000b\u000bDCG�Zhڒ �ă��[\u000fY������\f\u000b@��e�kx�Q���W,W�[{���V�qҪ����{�J���Z�,A�\u000e9y�_\u00182�;��U�Ȼ\r\u000b汮�jhT��iȾ�\u0002ұ\u0015ٞ�\f�3,>K�yH*rw\u001e\u001cv�^�gɫ�ȷ�ݹ��\u001b�\u0011��\u001da\u001bob\u0016+�l\u0016KPd�������\u0013Y�\u0015'��\u000b\u0013Y�b��W��1�bY����I˛i�\u001f�5ٕ5��_��g��\u0016vk\\��Hֵ�a\u0000\u0017\u0006\f��Z��V�=���ØH���/\f8À��\n�r^]p}..�\u0013C�m\u0018Ȉ��\u001c���Ă�憆\u0001^�R)p������fq�h��a�'Y\u0011Ж�J:�R�fgG�D[\u0003}�q���(\f4��x��c�JN��ʅ��O�\u0007\u000e?�6�194L�Z�jBۢ�㪔H��\u000b�\u0019\t��Lq�I\u000b�Z\u0018h0:��^�T6���\u001cm�����\u0018T�]�R��U��^K҉N\u001c�r�\u0016u�\u001b��@�\u0016������5!\f4p�\u0011,d6rP.n���\u001b�%V�[e��7��\u0011U,�\u001e\u000e\u001ddC�\\N�9�5�Dl\u0017���bIj��@�\u0000R�]\u001df�aOr�����ޠE��ʎ�� }�G\rr9�)�\\{Y�P���-p.�V�k;�S̑������\u0003�a5GջC�f\u0019>\f4�F�[z�;�J��1�)�\u0013�]�1pR�d��P�,)8��:ܥ9^�\u001e�Mq�\u001b�4\u000ev�\u0002O\u0015C�C�\u0014�ei`��\u0007��.��b��9M��mj�M\u0016Z;�BS\u001d��zlcth���X��\u0004�Q�n�V�1*a���`��.���۩f��㎩��ֈ�\f�I��~�2��'���~aP�/\u0015ղ\u0002������M&\u000e�b\u0018h0F������ڞpZ�g��~=>-\u00195��m�a:U�*����q\u0005La'��\\o��M�P����2\u000e\u0003\r��6��P����KY�c\u0000�S`�s}\u0006\u001e��\f8\u001e��X\u0007]̒�l�m���U�]�&\u0014HYu�{\u001d���1eQ����\u0013�����>L\u0014����\u0016�N\u001e��\"�g\u0012��\u0014�&\u0001\u000eB�A��hzl\t�M\u0003q~~\u0015��b�+�t\u0015�(Ɋ�����\u0003\u0002�\u000b�>\u0018��kZ\u0010XB\u001f��P�=T�[�B\fy�4�e\"q\"�N\rْ�\bo[z\u0004\u00170�A\u0015?�^����O\u0003i��t�(Z�y~\u0003�V\u0019�*�_\u0010\\��-�\u001fW�\u0000]�\u0006�k:F�U�h���e�l�r\u0014�(�3}�\u0000�cL��\u0005��%�Em�^'}�������P�W\u0002�Ӓ@h�\u001c��Bm�ȋ�\u0002[\u001a�]��Q\"�y/l~\u0003PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000\n7�J�\u0006f�3ę��%C��_���I��\u0004�0���\r���p\u000e>\u0017c͗��|��f��\t�:�-1Qu\r�\u0017\u001f�;ij�Ԥ�IS���\u001dS��\u0019`��\u0005��-U3�Yj�a\u0007]YN�\u001b���1�qLn\u001c�\u001b�N���Ʊc\u0013\u000b2�\n�7A\u001f8Yy9�|��8\\\u001d�0\u0014�\u0001��;�ǚq���)\u0013�k�\u000b�\u001f�U�A�������I����h'\r�h�\n��R(R(u�bH�H��\u0011\n�B�B�#\u0014*�\"�RG(& \u0014�|��\u0003\r(���r2P\u0007\u0003�B_\u0003\u0003�J\u001f,�\u0011T�#0\u0012(�,0\u0010(\u0005L0\u0010�\u0006\n\u0006\u0002S\u0005��T\u0001*��Jp0@g�\u000e)�)9M��\u0005x��^�^��\u0002L�R/R/Gz�,[�E���^�JM�������ջ��\u0000PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000\n7�J�؛��\u000b\u0000\u0000Cs\u0000\u0000\u000f\u0000\u0000\u0000word/styles.xml�]Ms��\u0019��W`xwH�$HzBg(J�5�eǒ��\u0012\\��@,\u000b���s�L��Nf:�&�i�{zꡓ&��v���'��\u0000�\u0015^�R|����>�~���\u0002�ҧ�]�,�\ru\\�����I��P�`s�>\u001f�^�\u001d>\u0018�>{��O/\u001f�޵E]�W�݇θ�����v�5�tE�Oؚ�\\�`Ίx��9o���4�>36+j{m����\u000e��ǡܥ�v[Qo���.�3_;̠��Ƕ���VĴ[�����ا\u000b��|��\u000f��ɗ,�*�6�륊��9/m�x�[.}C�qKӒ��[(��}\u001e\u0017R�����H�.\u001fLO��\u0019�z�\"΃�Iв\u001di�����?\u0005�kb�\u0001\u0010Yx�{�\u001b���2m�\u000f&yx��x\u0001���!�@�\b(�u�`v�\\���0T��.��qA��\u001e\u0017�[\u0001\u0004/|q��1�cz���h\u0014\u0015�ҕ�؜ϩ\u001f�qE{i���%�_�t�-��0���G�ml�M\u001f\u0004�`���+���8�R���9�\u001bX~m7�\u00134ߘ�ф\u00059Ԡ��1�\u001a{M\u0004��ğ:�Z�4BB҄\u001d���E裇�G\u001f�\u000f\u001d��\u0001B\u001fC�>F\r���\u0011Fa�}wTפ\u0010N�M\n�Sߤ\u0010,�M\n�Qߤ\u0010\n�M\n��oRpt}��_��\u0018$x.4�ã���,Z�IjS���\u0002�\u0019qȹC�K�_r\u000b0U]�nf\u001el�j���z\u000e��kq4�!��j�$���#55�\u0019�YT��c�k��e�Oy��,b�%���Q���'��\tSN�$�޹\r-ql�/=�t\u0019�h-�^f�:�c���{/S��w�#���,��\t���Ul\u001d@��w�bh�\u0018��b�N�(�o\u0004\u0000�@�)��h�\u0006�F\u0000\u0000\r��\u0000��\u0000���O�\u000b�\u0005y�\u0016*���H�ᰃ?��\b���w��\u0001�\u0010�.�kj��E�J9�����ߓ\n�J$�I�xX�z\u0015k�'��P�p[������!�\u001e�h�f��\u0005����`���s,f�D�gxS���",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/jiaojie3",
        "content": ":host: E:\\dishui\\content\r\n:img: {host}/src\r\n:resource: content/resource\r\n:src: content/src\r\n:svg: {host}/src/svg\r\n// :imagesdir: {host}/src\r\n:imagesoutdir: {host}/src/img/plantuml\r\n:plantimgdir: {host}/src/img/plantuml\r\n:experimental:\r\n:table-caption!:\r\n:example-caption!:\r\n:icons: font\r\n:sectnums:\r\n:toc:\r\n:toclevels: 4\r\n:source-highlighter: rouge\r\n:stem: latexmath\r\n:toc-title: Contents\r\n\r\n== 测试服务器\r\n\r\n环境:\r\n|===\r\n|名称|版本|下载地址\r\n\r\n|Docker\r\n|Docker version 1.13.1\r\n|link:https://store.docker.com/editions/community/docker-ce-server-centos?tab=description[docker]\r\n\r\n|Rancher\r\n|1.5\r\n|link:https://github.com/rancher/rancher/tree/v1.5[rancher 1.5]\r\n\r\n|Docker Compose\r\n|docker-compose version 1.8.1, build 878cff1\r\n|link:https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64[docker-compose]\r\n|===\r\n\r\n=== Docker 安装\r\n\r\n. 配置 `yum` 源\r\n[source,shell]\r\n----\r\ncat > /etc/yum.repos.d/docker-main.repo ",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/jiaojie3",
        "content": "PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000�5�J�\r\u0016�]\u0001\u0000\u0000$\u0006\u0000\u0000\u0013\u0000\u0000\u0000[Content_Types].xml���N�0\u0010E�|E�-Jܲ@\b5���\u0012*Q>�u&��_����g��\b�*�h����̽�W�L�;��\r�����8\u001b�\u0004�t��˜}�_�\u00076-n&󽇘P��9[!�GΣ\\�\u00111s\u001e,U*\u0017�@z\rK���\u0012K�w��=��\"XL��`��\u0019*�֘���s�K�,yj�j��\tﵒ\u0002�̛*?:\u0018@Ǟɍ-���?h\u0019M6=q�|�=X�S\u0014A���D�7aH�o](�\u0016\u0016\u001f�H�Ĭ�����*%�trmh$�\u0005}p\u0012b$=��_��$vm\u0016\u0010���\u001c��0E�Z\u0018��$��\u000f���l�Ffس\"��Xh���;�^\n��\u0005�#'��\u0019��I%�)�x\b��?��\\���\u0004\u000ew��>ղ�6�k�Ʈ5������\t��\u0011ʞ�~\u000e��kd�Iw\u0014���\u0017�PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000�5�J��\u0012\u0019�\u0000\u0000\u0000?\u0002\u0000\u0000\u000b\u0000\u0000\u0000_rels/.rels���J\u0003A\f��>Ő{7�*\"��^�ЛH}�0��\u001d��!\u0013���#�Z��\u0007�����G�r�\u000f;��R|�\u001d̛\u0016\fG���c\u0007����\u0006V����w�5R&���=�t0��[�b'\u000eT��9֟!I �O\u00191�}��qѶ�(?\u0019�\u001f0��u \u001b7\u0007�}�|\u000e;\r��|��s��GF�JT2����k\u0012����T,\u0018\u0002\u000e5d�(@�YU���\u0002�ǰ\u0010*R���T#.S��n�4��\u0000p*�:N%ક\u0000V�4ȸ��\u0015թM���@�M����=�W�\t�M\u0018���Nxj\u001d�x��؉\u0010�X3'�F��FYV0��Afg��r��/�v��\u0012���;0�\u0017b�D&l�ِd�*�\u000b�s�,\u0005�\u0010N\n����()�y>)�2�BX�+P����@�g��@)`���5\u00100\u0010�*0L�\fP�|W��\u0001:�uH1M�i�@/�S,�\"�r�\u0017`�\u0016z\u0011z9�\u000bd�B/B/��\u0002TjB/�{�d����=�\u0007PK\u0003\u0004\u0014\u0000\u0002\b\b\u0000�5�J�؛��\u000b\u0000\u0000Cs\u0000\u0000\u000f\u0000\u0000\u0000word/styles.xml�]Ms��\u0019��W`xwH�$HzBg(J�5�eǒ��\u0012\\��@,\u000b���s�L��Nf:�&�i�{zꡓ&��v���'��\u0000�\u0015^�R|����>�~���\u0002�ҧ�]�,�\ru\\�����I��P�`s�>\u001f�^�\u001d>\u0018�>{��O/\u001f�޵E]�W�݇θ�����v�5�tE�Oؚ�\\�`Ίx��9o���4�>36+j{m����\u000e��ǡܥ�v[Qo���.�3_;̠��Ƕ���VĴ[�����ا\u000b��|��\u000f��ɗ,�*�6�륊��9/m�x�[.}C�qKӒ��[(��}\u001e\u0017R�����H�.\u001fLO��\u0019�z�\"΃�Iв\u001di�����?\u0005�kb�\u0001\u0010Yx�{�\u001b���2m�\u000f&yx��x\u0001���!�@�\b(�u�`v�\\���0T��.��qA��\u001e\u0017�[\u0001\u0004/|q��1�cz���h\u0014\u0015�ҕ�؜ϩ\u001f�qE{i���%�_�t�-��0���G�ml�M\u001f\u0004�`���+���8�R���9�\u001bX~m7�\u00134ߘ�ф\u00059Ԡ��1�\u001a{M\u0004��ğ:�Z�4BB҄\u001d���E裇�G\u001f�\u000f\u001d��\u0001B\u001fC�>F\r���\u0011Fa�}wTפ\u0010N�M\n�Sߤ\u0010,�M\n�Qߤ\u0010\n�M\n��oRpt}��_��\u0018$x.4�ã���,Z�IjS���\u0002�\u0019qȹC�K�_r\u000b0U]�nf\u001el�j���z\u000e��kq4�!��j�$���#55�\u0019�YT��c�k��e�Oy��,b�%���Q���'��\tSN�$�޹\r-ql�/=�t\u0019�h-�^f�:�c���{/S��w�#���,��\t���Ul\u001d@��w�bh�\u0018��b�N�(�o\u0004\u0000�@�)��h�\u0006�F\u0000\u0000\r��\u0000��\u0000���O�\u000b�\u0005y�\u0016*���H�ᰃ?��\b���w��\u0001�\u0010�.�kj��E�J9�����ߓ\n�J$�I�xX�z\u0015k�'��P�p[������!�\u001e�h�f��\u0005����`���s,f�D�gxS���",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/ref",
        "content": "PK\u0003\u0004\u0014\u0000\u0006\u0000\b\u0000\u0000\u0000!\u0000\u0018�h\"�\u0001\u0000\u0000�\u0006\u0000\u0000\u0013\u0000\b\u0002[Content_Types].xml �\u0004\u0002(�\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�U�N�0\u0010�#�\u000f��(q�\u0001!��\u0007\u001eG�D�\u0000�޴\u0016�m���߳I�\b!���\\\"E�����n�ɶ*�5�����8\u0019�\b��J�E�>f/�=�\u0002\n�Di\rdl\u0007�M���t�s\u0010\"�6!cKD��y�K�DH�\u0003C_\n�+���\u0017�\t�)\u0016�oG�;.�A0\u0018c�����\u0004x� �\n���\"\u001e��^��Z4\u0016!$\u0004Ǣ�}]M�1�\\��@\u0012��F� �mQh\t��UETI\r缕\u0010\u0002�V�I\u000b}SC�\u0001\u0000\u0000��\u0003\u0000PK\u0003\u0004\u0014\u0000\u0006\u0000\b\u0000\u0000\u0000!\u00006H�h \u0001\u0000\u0000�\u0004\u0000\u0000\u001c\u0000\b\u0001word/_rels/document.xml.rels �\u0004\u0001(�\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000���N�@\u0010\u0007����@�.\u000bU�1]z1&�*>�\u0002�G�Y�;Uy{'6P�\r��q�dg~�\u00056���\r>��Ơ\u0012q\u0018�\u000007E��\u0012���ͣ\b\u001ci,tk\u0010�\u0018��mr}�y�V\u0013\u001fruӻ���S�&꟤ty\r�v��\u0001�Iil��K[�^�\u001f�\u0002������\u001e\"9�\u0019�\n%��������˽MY69",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/registry-cert",
        "content": "#!/bin/bash\n\nDOMAIN=mailiqing.com:5000\n\nmkdir -p /etc/docker/certs.d/$DOMAIN\n\ncat > /etc/docker/certs.d/$DOMAIN/registry.crt  /etc/hosts",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/t",
        "content": "#!/bin/bash\n\ng=${@: -1}\ng=${g##*/}\ng=${g%.*}\n\n\n# echo $@\n# echo \"---\"\n# echo $g\n\nasciidoctor $@ -a noheader -a nofooter -o - |\npandoc -f html --reference-docx=ref.docx --self-contained -o $g.docx",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/wuliu",
        "content": "7Vxbk9uoEv41epyU0F2PlsdzzkO2KpVJ1e4+TWGbsXRWFj4yc/31CwisC2iMbNk7myhJVSQkGkF//QHdtC13vn39Twl36W94jXLLsdevlntrOQ4I4oj+x0reqhLPdauCTZmtxUt1wX32jkShLUqfsjXat14kGOck27ULV7go0Iq0ymBZ4pf2a484b7e6gxukFNyvYK6W/p6tSVqVRk5Ql/8XZZtUtkx7XD1ZwtVfmxI/FaI9y3Ef+Z/q8RZKWaKj+xSu8UujyF1Y7rzEmFRX29c5ytnYymGr6t31PD18d4kKYlIhFN/xDPMnJD+Zfxh5k4PB+rNTBYu2nlFJ0KtOK3ApJdQ9o4hBeItI+UbfE7VuYvERAiyOJ+5f6qF3I1GWNobdsT2hcqHuzUF23WV6IXqtH4FYGYD39GFPcMkg0h2K/Uu2zWFB75KUbKnIW0AvH3FB7sVLNr1fpVm+/grf8BP70D2hmJB3SYrL7J2+D2Vl+rgkwgIovqi0LM/nOMclb9JFNvvbqnnPJIq2SrSndb9JvYBD0Ve4J/J7cJ7D3T6r9MFe2cJykxUJJgRvxUuya3ft5gV63QTm2aagZSvaECpFr+/gNsuZ2n7AFG+hHIuqNyCk9ypuDpDrAqcXICBQAXGwoLRlh24/IIT47wyZxYYOxYfyAdDId+22eJjToSggQQmz+L0Cu0NXjJAINLa48K3IsWaRtQit5NaSltKAJB1D0objnpT4LyR1WGAO1yaqRNF+B1dZsfmKHln3vLrku+gxK3pJM4LuaTlr7oWyPS3DVHWPOaetNFuvUcFAhwmUFs/gtMNZQfgw+Qn9R797bn/xLZ9+8pzeg/qe/mOvl2SOC/rpMONAQRS+L4hBWEWeiqnYGFKSYwIzRDkjMIwTHufYPOuSSqVFOfsAvQrl0ORchwnrf0ZnsZko3lLt5A1V/8BUfbc3QFG+qyrf1Sg1h0uUf8P7jGSYyS+rdzvKPqbPU4ljsJJ9Q9qIztexDzQ6DnLW3XX23NJ18P8nNrsnzHBvhAJnbNas4H14Tq824n8uh+qn0ApiI3ez50PH5ABv96qRojIJu5hbccAuZrYVAdkS7WzVWPsDaDHviyztzo0p3LFLqjKSwbzmWdpVjjuOoApvfOYSCmDXSzkTgbYRKKbfi/Cj/OZ+XoJbl3j3g87ISA7H9SwkMqTBYAQTcRQTEcushxXdQJyNp2VzNdNcnQ2mTS7+mtPjMYCwIRC9UZXun78Qb6g/dr94gW/HrhsEdKnmOhcCg/vv5EtgJfxRvLCiZOLLX40vI8+QL+MRTMTr5Uvytpv48mS+dHu0fjG+HAMMqpuizXMjsJaRr+Nk34bb78PoeDxsO1pxlwMz4Eb5Hf/DwUF322htNbwvDTPvemPaGynHUnwmtRtF+Ez4p0vHHHu6hvuUt2frOFaFWK+Lg0GM+2JQ02E3hG6AbeCXOOL2+EB6oPOqOBd1ewSq2wOwmZnh9c5K6EVkJR7HdGAlFNy+tYitmIL7YALLUqLY4TUDK/asJGYXkW3NQpOarqhJG0wC1mbkssoaB0xjmVJV9XjV2Irou7e8dfov7q9aN2q4VNCxpmbWF/R8uv+na0p6oue20uBmhas/ZN/Bc66rcc7ZHwDelFIDTxlntN4gSR1ikGqu6UyT6DUjf4hidv0nu6YLGDf5HyLkTQwjfCKYTXElSfEGFzD/ivlcLInrHAfqHj+VK9Se1IhcFjWGmvXqw4EuUQ5J9tyOfZwztKGBx+viUYWDP3Wgyw+4I/iDYo0v13AEDoN3+hCIHt+AK/YY+EqP39MHyhWofMZZ+UB7CA3XGFM8ZdAmxjyechYQNAuJJiWHBuuSkeMlgWpjdM6lE3js8sl3zq6neIkGMwdjHT9gMoJzKJgCJqMETIZrWfporxAxCT99xMQJ4JaZb7Hc7/i9bVKkMtAUZ/kkxDia33C4YZmeYBiDPkM10FIvw6ZQyxmuw3DcUEv8xbUplnwvDoDt28GFZlN1Yf6zEq3PnCzMBRMyp09iT0T7yxFtdM11qroBqYm2gNuJaE8l2qBP75+ZaMNPH9MecUU7W3Dv+ES0PwfRDnAiCaIFwNC7OIppqbFwuFyW6DmDfGc98eyJC9pxY+HX4dlY3d8oAGgGaor1jKWE0NvF93dU4h/4N1i8VU+Yd9YaEo5phojoMGbk7TuPnuBiUT9JUL7kDUp06Bc3lll45lj091BoHMcRbXxjQKojJp14iddx3lbhJlGn1pYiJmyLOZzClXKqEJUi5wQHcKyyggKES4eZXL/bXYUVPaAxBOCOcCok1q04zAbgMHajWP7luhjpDr4YdnFUcrtcF4E2BQnudynMyUOJdvT7sRA5Bc/GDZ4d4DUseKZLDvoQC0eCZ7FG3mWDZ3Kl1hc8m91accSOwcwAO8LSxd4URWsa7llRNB2WxlgmRQaTwxRFM/BBDc+q0ETRdFoeI4rWfy50XJ/DWR4EQz9DxLwKsyrpkdKPP/jE/eCDdZPn4R/3PAw3L10s7WIkqk6TuFyjcjqCf5bboU/np7kdwi+hHYaB59h+4AGZNzE6FHS7zZ/AvXs6X08nHSZ2NgrAXYyd1dD2dNJhFIaORnUPXYuhNQdC/62LYUeXejKUX6f18K/AuAAY7jdHsTH1bO6UxT8G4QY9av/MhBv2Hy1rZ6WesbM3cnpPWakG7speX7dpVqoMeclISP+PiIyRpSpa86Uo6ULV5QNq01aDzm83jetAD48sNtrzbqPIrmZ2n6ejNrdQ3DB65mlVCuB1QnHu8VQpDrPE2GOZtguPSWHJsoOluNyeE/4JHl+rxDxr12ZJtCwf1mcZvMPlVnVslq9LG6DLHbrNHC6Fs02c8HhGyJZUSdwgInpxZyXhx+J+nfzccPCJy0vl50Zq1OmU/Fx5fb38XMmzzfxc6fFq5ufKob5+fm6sm7c/GOv+gy76czZCN/X5GvMFcb/a6EeUb4eMa3ZTP9MsozU6AKoO5D738xzCCdrTHej+AqHpMRynI6grZ8RjOLqZcHw0XRI/baQaocnXoSn4ZGjyOosnt3sYyxRNyirsgqe61B3mlEh+qbMwmr2AgvvejcBN2DkyCEx/cTMYthX4Z/PM5Y+ZT3nmlskJmSOQqsx70AmZkU6V09v6h9UrHNS/Xu8u/gY=",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/服务器",
        "content": ":host: E:\\dishui\\content\r\n:img: {host}/src\r\n:resource: content/resource\r\n:src: content/src\r\n:svg: {host}/src/svg\r\n// :imagesdir: {host}/src\r\n:imagesoutdir: {host}/src/img/plantuml\r\n:plantimgdir: {host}/src/img/plantuml\r\n:experimental:\r\n:table-caption!:\r\n:example-caption!:\r\n:icons: font\r\n:sectnums:\r\n:toc:\r\n:toclevels: 4\r\n:source-highlighter: rouge\r\n:stem: latexmath\r\n:toc-title: Contents\r\n\r\n== 测试服务器\r\n\r\n环境:\r\n|===\r\n|名称|版本|下载地址\r\n\r\n|Docker\r\n|Docker version 1.13.1\r\n|link:https://store.docker.com/editions/community/docker-ce-server-centos?tab=description[docker]\r\n\r\n|Rancher\r\n|1.5\r\n|link:https://github.com/rancher/rancher/tree/v1.5[rancher 1.5]\r\n\r\n|Docker Compose\r\n|docker-compose version 1.8.1, build 878cff1\r\n|link:https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64[docker-compose]\r\n|===\r\n\r\n=== Docker 安装\r\n\r\n. 配置 `yum` 源\r\n[source,shell]\r\n----\r\ncat > /etc/yum.repos.d/docker-main.repo ",
        "tags": []
    },
    {
        "uri": "//hugo/post/work/wuliu/服务器",
        "content": "%PDF-1.3\n%����\n1 0 obj\n>\nendobj\n2 0 obj\n\n>>\nendobj\n3 0 obj\n>\nendobj\n4 0 obj\n>\nstream\nq\n\nendstream\nendobj\n5 0 obj\n\n>>\nendobj\n6 0 obj\n>\nstream\nq\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n48.24 734.44 Td\n/F3.0 22 Tf\n[ 19.0  12.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 706.26 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n114.5805 706.26 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 706.26 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 706.26 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n63.24 691.56 Td\n/F2.0 10.5 Tf\n[ 20.0 ] TJ\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n146.2065 691.56 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 691.56 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 691.56 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n63.24 676.86 Td\n/F2.0 10.5 Tf\n[ 4.0 ] TJ\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n151.4775 676.86 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 676.86 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 676.86 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n78.24 662.16 Td\n/F2.0 10.5 Tf\n[ 11.0  11.0  22.0  -29.0  -29.0  4.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n177.8325 662.16 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 662.16 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 662.16 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n78.24 647.46 Td\n/F2.0 10.5 Tf\n[ 11.0  11.0  22.0  -29.0 ] TJ\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n188.3745 647.46 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 647.46 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 647.46 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n78.24 632.76 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n130.1835 632.76 Td\n/F3.0 10.5 Tf\n[ 8.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n173.1285 632.76 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n230.3325 632.76 Td\n/F3.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n255.942 632.76 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n271.146 632.76 Td\n/F3.0 10.5 Tf\n[ 29.0  12.0  12.0  23.0  -14.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n357.0465 632.76 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 632.76 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 632.76 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n63.24 618.06 Td\n/F2.0 10.5 Tf\n[ 4.0 ] TJ\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n151.4775 618.06 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 618.06 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 618.06 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n63.24 603.36 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n109.3095 603.36 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 603.36 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 603.36 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n63.24 588.66 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n109.3095 588.66 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nBT\n557.3445 588.66 Td\n/F2.0 2.625 Tf\n Tj\nET\n\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.9325 588.66 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\n\nendstream\nendobj\n7 0 obj\n>\n/Annots [49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R]\n>>\nendobj\n8 0 obj\n>\nstream\nq\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n48.24 734.44 Td\n/F3.0 22 Tf\n Tj\n/F3.1 22 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 706.11 Td\n/F2.1 10.5 Tf\n Tj\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n48.24 671.1 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n220.0798 671.1 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n391.9197 671.1 171.8403 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n48.24 651.6 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n220.0798 651.6 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n391.9197 651.6 171.8403 19.5 re\nf\n0.0 0.0 0.0 scn\n0.9333 0.9333 0.9333 scn\n48.24 632.1 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n0.9333 0.9333 0.9333 scn\n220.0798 632.1 171.8398 19.5 re\nf\n0.0 0.0 0.0 scn\n0.9333 0.9333 0.9333 scn\n391.9197 632.1 171.8403 19.5 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n48.24 602.1 171.8398 30.0 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n220.0798 602.1 171.8398 30.0 re\nf\n0.0 0.0 0.0 scn\n1.0 1.0 1.0 scn\n391.9197 602.1 171.8403 30.0 re\nf\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 690.6 m\n220.0798 690.6 l\nS\n[] 0 d\n1.25 w\n0.8667 0.8667 0.8667 SCN\n48.24 671.1 m\n220.0798 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 690.85 m\n48.24 670.475 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 690.85 m\n220.0798 670.475 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n51.24 678.36 Td\n/F3.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 690.6 m\n391.9197 690.6 l\nS\n[] 0 d\n1.25 w\n0.8667 0.8667 0.8667 SCN\n220.0798 671.1 m\n391.9197 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 690.85 m\n220.0798 670.475 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 690.85 m\n391.9197 670.475 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n223.0798 678.36 Td\n/F3.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 690.6 m\n563.76 690.6 l\nS\n[] 0 d\n1.25 w\n0.8667 0.8667 0.8667 SCN\n391.9197 671.1 m\n563.76 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 690.85 m\n391.9197 670.475 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n563.76 690.85 m\n563.76 670.475 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n394.9197 678.36 Td\n/F3.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 scn\n1.25 w\n0.8667 0.8667 0.8667 SCN\n48.24 671.1 m\n220.0798 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 651.6 m\n220.0798 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 671.725 m\n48.24 651.35 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 671.725 m\n220.0798 651.35 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n51.24 658.86 Td\n/F2.0 10.5 Tf\n[ 20.0 ] TJ\nET\n\n0.0 0.0 0.0 scn\n1.25 w\n0.8667 0.8667 0.8667 SCN\n220.0798 671.1 m\n391.9197 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 651.6 m\n391.9197 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 671.725 m\n220.0798 651.35 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 671.725 m\n391.9197 651.35 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n223.0798 658.86 Td\n/F2.0 10.5 Tf\n[ 20.0  4.0  4.0 ] TJ\nET\n\n0.0 0.0 0.0 scn\n1.25 w\n0.8667 0.8667 0.8667 SCN\n391.9197 671.1 m\n563.76 671.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 651.6 m\n563.76 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 671.725 m\n391.9197 651.35 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n563.76 671.725 m\n563.76 651.35 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n394.9197 658.86 Td\n/F2.0 10.5 Tf\n[ 20.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 651.6 m\n220.0798 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 632.1 m\n220.0798 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 651.85 m\n48.24 631.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 651.85 m\n220.0798 631.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n51.24 639.36 Td\n/F2.0 10.5 Tf\n[ 4.0 ] TJ\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 651.6 m\n391.9197 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 632.1 m\n391.9197 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 651.85 m\n220.0798 631.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 651.85 m\n391.9197 631.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n223.0798 639.36 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 651.6 m\n563.76 651.6 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 632.1 m\n563.76 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 651.85 m\n391.9197 631.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n563.76 651.85 m\n563.76 631.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n394.9197 639.36 Td\n/F2.0 10.5 Tf\n[ 27.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 632.1 m\n220.0798 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 602.1 m\n220.0798 602.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n48.24 632.35 m\n48.24 601.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 632.35 m\n220.0798 601.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n51.24 619.86 Td\n/F2.0 10.5 Tf\n[ 20.0 ] TJ\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 632.1 m\n391.9197 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 602.1 m\n391.9197 602.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n220.0798 632.35 m\n220.0798 601.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 632.35 m\n391.9197 601.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n\nBT\n223.0798 619.86 Td\n/F2.0 10.5 Tf\n[ 20.0  27.0  24.0  4.0  4.0 ] TJ\nET\n\n\nBT\n223.0798 609.36 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 scn\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 632.1 m\n563.76 632.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 602.1 m\n563.76 602.1 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n391.9197 632.35 m\n391.9197 601.85 l\nS\n[] 0 d\n0.5 w\n0.8667 0.8667 0.8667 SCN\n563.76 632.35 m\n563.76 601.85 l\nS\n[] 0 d\n1 w\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n394.9197 619.86 Td\n/F2.0 10.5 Tf\n[ 20.0  27.0  24.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.2 0.2 0.2 scn\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 569.46 Td\n/F3.0 18 Tf\n[ 29.0 ] TJ\n/F3.1 18 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 542.01 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 542.01 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n94.092 542.01 Td\n/F4.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n112.992 542.01 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n52.24 525.135 m\n559.76 525.135 l\n561.9691 525.135 563.76 523.3441 563.76 521.135 c\n563.76 391.393 l\n563.76 389.1839 561.9691 387.393 559.76 387.393 c\n52.24 387.393 l\n50.0309 387.393 48.24 389.1839 48.24 391.393 c\n48.24 521.135 l\n48.24 523.3441 50.0309 525.135 52.24 525.135 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n52.24 525.135 m\n559.76 525.135 l\n561.9691 525.135 563.76 523.3441 563.76 521.135 c\n563.76 391.393 l\n563.76 389.1839 561.9691 387.393 559.76 387.393 c\n52.24 387.393 l\n50.0309 387.393 48.24 389.1839 48.24 391.393 c\n48.24 521.135 l\n48.24 523.3441 50.0309 525.135 52.24 525.135 c\nh\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 502.541 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 488.252 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 473.963 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 459.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 445.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 431.096 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 416.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 402.518 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 363.903 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 363.903 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n94.092 363.903 Td\n/F4.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 347.028 m\n559.76 347.028 l\n561.9691 347.028 563.76 345.2371 563.76 343.028 c\n563.76 313.309 l\n563.76 311.0999 561.9691 309.309 559.76 309.309 c\n74.74 309.309 l\n72.5309 309.309 70.74 311.0999 70.74 313.309 c\n70.74 343.028 l\n70.74 345.2371 72.5309 347.028 74.74 347.028 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 347.028 m\n559.76 347.028 l\n561.9691 347.028 563.76 345.2371 563.76 343.028 c\n563.76 313.309 l\n563.76 311.0999 561.9691 309.309 559.76 309.309 c\n74.74 309.309 l\n72.5309 309.309 70.74 311.0999 70.74 313.309 c\n70.74 343.028 l\n70.74 345.2371 72.5309 347.028 74.74 347.028 c\nh\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 324.434 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 272.169 Td\n/F3.0 18 Tf\n[ 8.0 ] TJ\n/F3.1 18 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 240.469 Td\n/F3.0 13 Tf\n[ 12.0  12.0  23.0  -14.0  -14.0  8.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 214.119 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 214.119 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 198.609 m\n559.76 198.609 l\n561.9691 198.609 563.76 196.8181 563.76 194.609 c\n563.76 94.523 l\n563.76 92.3139 561.9691 90.523 559.76 90.523 c\n74.74 90.523 l\n72.5309 90.523 70.74 92.3139 70.74 94.523 c\n70.74 194.609 l\n70.74 196.8181 72.5309 198.609 74.74 198.609 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 198.609 m\n559.76 198.609 l\n561.9691 198.609 563.76 196.8181 563.76 194.609 c\n563.76 94.523 l\n563.76 92.3139 561.9691 90.523 559.76 90.523 c\n74.74 90.523 l\n72.5309 90.523 70.74 92.3139 70.74 94.523 c\n70.74 194.609 l\n70.74 196.8181 72.5309 198.609 74.74 198.609 c\nh\nS\nQ\n0.0 0.2 0.5333 scn\n0.0 0.2 0.5333 SCN\n\nBT\n81.74 176.015 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n94.94 176.015 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n180.74 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n193.94 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.2 0.5333 scn\n0.0 0.2 0.5333 SCN\n\nBT\n200.54 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n220.34 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n279.74 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n292.94 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n378.74 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n391.94 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.2 0.5333 scn\n0.0 0.2 0.5333 SCN\n\nBT\n398.54 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n418.34 147.976 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 119.937 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n312.74 119.937 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n444.74 119.937 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 105.648 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.5 w\n0.9333 0.9333 0.9333 SCN\n130.74 78.523 m\n130.74 55.523 l\nS\nQ\n0.0667 0.0667 0.0667 scn\n0.0667 0.0667 0.0667 SCN\n\nBT\n94.1735 58.812 Td\n/F5.1 23.0 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n142.74 63.033 Td\n/F2.0 10.5 Tf\n[ 13.0  24.0 ] TJ\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.0 0.0 0.0 scn\n0.0 0.0 0.0 SCN\n1 w\n0 J\n0 j\n[] 0 d\n/Stamp1 Do\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.765 11.04 Td\n/F2.0 9 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\nQ\n\nendstream\nendobj\n9 0 obj\n\n>>\n/Annots [18 0 R 19 0 R 20 0 R]\n>>\nendobj\n10 0 obj\n[9 0 R /XYZ 0 792.0 null]\nendobj\n11 0 obj\n>\nendobj\n12 0 obj\n>\nendobj\n13 0 obj\n[9 0 R /XYZ 0 792.0 null]\nendobj\n14 0 obj\n>\nendobj\n15 0 obj\n>\nendobj\n16 0 obj\n>\nendobj\n17 0 obj\n>\nendobj\n18 0 obj\n\n/Subtype /Link\n/Rect [394.9197 657.6 428.6142 668.1]\n/Type /Annot\n>>\nendobj\n19 0 obj\n\n/Subtype /Link\n/Rect [394.9197 638.1 449.5827 648.6]\n/Type /Annot\n>>\nendobj\n20 0 obj\n\n/Subtype /Link\n/Rect [394.9197 618.6 476.7567 629.1]\n/Type /Annot\n>>\nendobj\n21 0 obj\n[9 0 R /XYZ 0 590.1 null]\nendobj\n22 0 obj\n>\nendobj\n23 0 obj\n[9 0 R /XYZ 0 292.809 null]\nendobj\n24 0 obj\n[9 0 R /XYZ 0 256.209 null]\nendobj\n25 0 obj\n>\nendobj\n26 0 obj\n>\nstream\nq\n\n-0.5 Tc\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 744.51 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 744.51 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n94.092 744.51 Td\n/F4.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 716.145 Td\n/F6.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 708.885 m\n559.76 708.885 l\n561.9691 708.885 563.76 707.0941 563.76 704.885 c\n563.76 489.948 l\n563.76 487.7389 561.9691 485.948 559.76 485.948 c\n74.74 485.948 l\n72.5309 485.948 70.74 487.7389 70.74 489.948 c\n70.74 704.885 l\n70.74 707.0941 72.5309 708.885 74.74 708.885 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 708.885 m\n559.76 708.885 l\n561.9691 708.885 563.76 707.0941 563.76 704.885 c\n563.76 489.948 l\n563.76 487.7389 561.9691 485.948 559.76 485.948 c\n74.74 485.948 l\n72.5309 485.948 70.74 487.7389 70.74 489.948 c\n70.74 704.885 l\n70.74 707.0941 72.5309 708.885 74.74 708.885 c\nh\nS\nQ\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n81.74 686.291 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n127.94 686.291 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n134.54 686.291 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n141.14 686.291 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n147.74 686.291 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n81.74 658.252 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n134.54 658.252 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 643.963 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n94.94 643.963 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n167.54 643.963 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 629.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n108.14 629.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n141.14 629.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n147.74 629.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n154.34 629.674 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 615.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n108.14 615.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n200.54 615.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n207.14 615.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n213.74 615.385 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 601.096 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n108.14 601.096 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n141.14 601.096 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 586.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n121.34 586.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n127.94 586.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n134.54 586.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n141.14 586.807 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 572.518 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n108.14 572.518 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n180.74 572.518 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 558.229 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n121.34 558.229 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n312.74 558.229 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n319.34 558.229 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n325.94 558.229 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 543.94 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n121.34 543.94 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n259.94 543.94 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n266.54 543.94 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n273.14 543.94 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 529.651 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n108.14 529.651 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n154.34 529.651 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 515.362 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n121.34 515.362 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n127.94 515.362 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n134.54 515.362 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 501.073 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n121.34 501.073 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n127.94 501.073 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n134.54 501.073 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 473.948 m\n559.76 473.948 l\n561.9691 473.948 563.76 472.1571 563.76 469.948 c\n563.76 440.229 l\n563.76 438.0199 561.9691 436.229 559.76 436.229 c\n74.74 436.229 l\n72.5309 436.229 70.74 438.0199 70.74 440.229 c\n70.74 469.948 l\n70.74 472.1571 72.5309 473.948 74.74 473.948 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 473.948 m\n559.76 473.948 l\n561.9691 473.948 563.76 472.1571 563.76 469.948 c\n563.76 440.229 l\n563.76 438.0199 561.9691 436.229 559.76 436.229 c\n74.74 436.229 l\n72.5309 436.229 70.74 438.0199 70.74 440.229 c\n70.74 469.948 l\n70.74 472.1571 72.5309 473.948 74.74 473.948 c\nh\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 451.354 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 403.989 Td\n/F3.0 13 Tf\n[ 12.0  12.0  23.0  -14.0 ] TJ\n/F3.1 13 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.0 0.0 0.0 scn\n0.0 0.0 0.0 SCN\n1 w\n0 J\n0 j\n[] 0 d\n/Stamp2 Do\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n49.24 11.04 Td\n/F2.0 9 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\nQ\n\nendstream\nendobj\n27 0 obj\n\n>>\n>>\nendobj\n28 0 obj\n>\nendobj\n29 0 obj\n[27 0 R /XYZ 0 419.729 null]\nendobj\n30 0 obj\n>\nstream\nq\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n48.24 744.51 Td\n/F6.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n52.24 737.25 m\n559.76 737.25 l\n561.9691 737.25 563.76 735.4591 563.76 733.25 c\n563.76 305.595 l\n563.76 303.3859 561.9691 301.595 559.76 301.595 c\n52.24 301.595 l\n50.0309 301.595 48.24 303.3859 48.24 305.595 c\n48.24 733.25 l\n48.24 735.4591 50.0309 737.25 52.24 737.25 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n52.24 737.25 m\n559.76 737.25 l\n561.9691 737.25 563.76 735.4591 563.76 733.25 c\n563.76 305.595 l\n563.76 303.3859 561.9691 301.595 559.76 301.595 c\n52.24 301.595 l\n50.0309 301.595 48.24 303.3859 48.24 305.595 c\n48.24 733.25 l\n48.24 735.4591 50.0309 737.25 52.24 737.25 c\nh\nS\nQ\n0.5333 0.5333 0.5333 scn\n0.5333 0.5333 0.5333 SCN\n\nBT\n59.24 714.656 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n59.24 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n98.84 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n105.44 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 658.578 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n250.64 658.578 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n59.24 630.539 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n230.84 630.539 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n277.04 630.539 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n369.44 630.539 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n422.24 630.539 Td\n/F2.1 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 616.25 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 601.961 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 587.672 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 573.383 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 559.094 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 544.805 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 530.516 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 516.227 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 501.938 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 487.649 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 473.36 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 459.071 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 444.782 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 430.493 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 416.204 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 401.915 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 387.626 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 373.337 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 359.048 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n59.24 344.759 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.2 0.5333 scn\n0.0 0.2 0.5333 SCN\n\nBT\n59.24 316.72 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n92.24 316.72 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n51.39 284.0905 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n65.04 284.105 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n109.392 284.105 Td\n/F4.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n203.892 284.105 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.6941 0.1294 0.2745 scn\n0.6941 0.1294 0.2745 SCN\n\nBT\n219.096 284.105 Td\n/F4.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 251.49 Td\n/F3.0 13 Tf\n Tj\n/F3.1 13 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n115.788 251.49 Td\n/F3.0 13 Tf\n[ 8.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n168.958 251.49 Td\n/F3.0 13 Tf\n Tj\n/F3.1 13 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n239.86 251.49 Td\n/F3.0 13 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n271.567 251.49 Td\n/F3.0 13 Tf\n Tj\n/F3.1 13 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n290.469 251.49 Td\n/F3.0 13 Tf\n[ 29.0  12.0  12.0  23.0  -14.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 225.14 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 225.14 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.0 0.0 0.0 scn\n0.0 0.0 0.0 SCN\n1 w\n0 J\n0 j\n[] 0 d\n/Stamp1 Do\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.765 11.04 Td\n/F2.0 9 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\nQ\n\nendstream\nendobj\n31 0 obj\n\n>>\n>>\nendobj\n32 0 obj\n[31 0 R /XYZ 0 267.23 null]\nendobj\n33 0 obj\n>\nstream\nq\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n70.74 744.51 Td\n/F6.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 737.25 m\n559.76 737.25 l\n561.9691 737.25 563.76 735.4591 563.76 733.25 c\n563.76 575.469 l\n563.76 573.2599 561.9691 571.469 559.76 571.469 c\n74.74 571.469 l\n72.5309 571.469 70.74 573.2599 70.74 575.469 c\n70.74 733.25 l\n70.74 735.4591 72.5309 737.25 74.74 737.25 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 737.25 m\n559.76 737.25 l\n561.9691 737.25 563.76 735.4591 563.76 733.25 c\n563.76 575.469 l\n563.76 573.2599 561.9691 571.469 559.76 571.469 c\n74.74 571.469 l\n72.5309 571.469 70.74 573.2599 70.74 575.469 c\n70.74 733.25 l\n70.74 735.4591 72.5309 737.25 74.74 737.25 c\nh\nS\nQ\n0.5333 0.5333 0.5333 scn\n0.5333 0.5333 0.5333 SCN\n\nBT\n81.74 714.656 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.5333 0.0 scn\n0.0 0.5333 0.0 SCN\n\nBT\n81.74 686.617 Td\n/F7.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n108.14 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.5333 0.0 scn\n0.0 0.5333 0.0 SCN\n\nBT\n134.54 686.617 Td\n/F7.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n147.74 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n154.34 686.617 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.5333 0.0 scn\n0.0 0.5333 0.0 SCN\n\nBT\n81.74 672.328 Td\n/F7.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.5333 0.0 scn\n0.0 0.5333 0.0 SCN\n\nBT\n81.74 658.039 Td\n/F7.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.2 0.5333 scn\n0.0 0.2 0.5333 SCN\n\nBT\n108.14 658.039 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n134.54 658.039 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n141.14 658.039 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n147.74 658.039 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.8667 0.1333 0.0 scn\n0.8667 0.1333 0.0 SCN\n\nBT\n174.14 658.039 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 643.75 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n187.34 643.75 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 629.461 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n180.74 629.461 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n207.14 629.461 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n339.14 629.461 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 615.172 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n312.74 615.172 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 600.883 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.4 0.6 scn\n0.2 0.4 0.6 SCN\n\nBT\n306.14 600.883 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.0 0.5333 0.0 scn\n0.0 0.5333 0.0 SCN\n\nBT\n81.74 586.594 Td\n/F7.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 547.979 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 547.979 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 532.469 m\n559.76 532.469 l\n561.9691 532.469 563.76 530.6781 563.76 528.469 c\n563.76 457.313 l\n563.76 455.1039 561.9691 453.313 559.76 453.313 c\n74.74 453.313 l\n72.5309 453.313 70.74 455.1039 70.74 457.313 c\n70.74 528.469 l\n70.74 530.6781 72.5309 532.469 74.74 532.469 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 532.469 m\n559.76 532.469 l\n561.9691 532.469 563.76 530.6781 563.76 528.469 c\n563.76 457.313 l\n563.76 455.1039 561.9691 453.313 559.76 453.313 c\n74.74 453.313 l\n72.5309 453.313 70.74 455.1039 70.74 457.313 c\n70.74 528.469 l\n70.74 530.6781 72.5309 532.469 74.74 532.469 c\nh\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 511.305 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 497.016 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 482.727 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 468.438 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 416.173 Td\n/F3.0 18 Tf\n[ 8.0 ] TJ\n/F3.1 18 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 388.723 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 388.723 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n94.092 388.723 Td\n/F3.0 10.5 Tf\n[ 31.0  30.0  -14.0  8.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.9608 0.9608 0.9608 scn\n74.74 373.213 m\n559.76 373.213 l\n561.9691 373.213 563.76 371.4221 563.76 369.213 c\n563.76 326.635 l\n563.76 324.4259 561.9691 322.635 559.76 322.635 c\n74.74 322.635 l\n72.5309 322.635 70.74 324.4259 70.74 326.635 c\n70.74 369.213 l\n70.74 371.4221 72.5309 373.213 74.74 373.213 c\nh\nf\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 373.213 m\n559.76 373.213 l\n561.9691 373.213 563.76 371.4221 563.76 369.213 c\n563.76 326.635 l\n563.76 324.4259 561.9691 322.635 559.76 322.635 c\n74.74 322.635 l\n72.5309 322.635 70.74 324.4259 70.74 326.635 c\n70.74 369.213 l\n70.74 371.4221 72.5309 373.213 74.74 373.213 c\nh\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 352.049 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n378.74 352.049 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n385.34 352.049 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 337.76 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 299.145 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 299.145 Td\n/F3.0 10.5 Tf\n[ 31.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n110.8605 299.145 Td\n/F2.0 10.5 Tf\n Tj\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n70.74 272.145 Td\n/F2.0 10.5 Tf\n[ 4.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 245.145 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n70.74 245.145 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nq\n493.02 0.0 0.0 90.012 70.74 139.623 cm\n/I1 Do\nQ\nq\n0.5 w\n0.9333 0.9333 0.9333 SCN\n70.74 120.123 m\n563.76 120.123 l\nS\nQ\nq\n0.0 0.0 0.0 scn\n0.0 0.0 0.0 SCN\n1 w\n0 J\n0 j\n[] 0 d\n/Stamp2 Do\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n49.24 11.04 Td\n/F2.0 9 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\nQ\n\nendstream\nendobj\n34 0 obj\n\n>>\n/Annots [37 0 R]\n>>\nendobj\n35 0 obj\n>\nendobj\n36 0 obj\n[34 0 R /XYZ 0 436.813 null]\nendobj\n37 0 obj\n\n/Subtype /Link\n/Rect [70.74 270.885 124.311 281.385]\n/Type /Annot\n>>\nendobj\n38 0 obj\n]\n>>\nstream\nx���\u000f`\u0013U�\u0007p�ײ�Az`�k\u0002m�\u0006,�xD\u0005��(V\u0003\u0014����`M�[\u0010���\u0014�V(�v�Q�\u0016r�r\b��\u001e4\u0018�4�\u001c\u0006�AL\u000b{\fx�ҥ\u001f�̮�4\u001a�;�6>Fu\r���ߨ�\\��\\��\u000bd���b/jE�)�ˬǼ?Y.uC��4�7���0^�γ;\u00174\u001f\"�y����;C��\f\u001e�7���Ә½�Q\u0005\u001eKi~&�_��F�sR\u000f��bws噙�g]ޓ��\bn:'a1�\u0001�\\�jWaiN\"��I����i���`�z�؊\u0006���$M��}����\u001a\u0006]�!��CL�V��,o��\u0012�4��[�iz�0�{\u001cݱ��\\5\u0014�~՟g�*h��ǹn4Ӹ��\u0015�5�۸�(0횴c�:8a�w��\r�)��y�\u000eqǭ��>��R!��q������E�r��w���#�\u001e�BL����EԴY+�{�\u000f��a>p��O�IxL?�E�Vlk��qy!�1�|�t�#j�Akqx1;j|���\u0003��Z�{�\t1\u001d���\u001bw���i��\u0001\u0007�\u000b�^ӤN+\u000e1\u001d�H��)\u000b�Bl/T;\u0002�\nC�i\u0012�\t�^S���\fCL��\u000ey�4�\u0010�!\u000f1�9�t�CLc\u000e1\u001d�\u0010ӘCL�\nstream\n\u0000ErҔTeIS����\u0000\u0000,>P\n���Ӛ\u0000U�\u0000U�\u0000q�\u0000u�v��kq�3��ku����\u0001d�\u0002X����\u0014`�\u0000`�\u0000U�/r�lH������̹��+M��9+��¿�����s��\u0000d���Σ~̧��ῌ����D9\\��Rp��x�����7����+3HQ����qQ�k�j����Ә��b�����j��6������M�c\\g/��1��\u0001��\u0003��\u0000^�Ҝ���@\\f���>s�r�Оu�D�򀢹���������\u0000��\u0000���CBi��\u0000Uӡ�����Pb�z��Q��/�˓�������֥���Խ��u�ʪB��������z�DQ\u0001u����.E���ZQs����\u001du��{l��ǖ�����o�ʌ����˨��h��l�顆�R��ߣi����������qT���S�ʽ��\t��jJu���xo[P��l�Ĭ��\u0001�����,>i���4i����n���ŌAs�\u0000s�������V{�������O�����d����+G����w���yMW%d������͙������TR���\u0000��{��k��F�о��\u0003�̷����녈��j\\�Sfɢcd¾�u�G��\f��HKS�̖�����P\fp�P_c\u0000v�\u001f�����t������������޴���\u001d��\u0001u�P����gf3��\r{��Hwru����\u0000o�ndP���\r��������\u001e}������㌁Q��Қ��W����ˑ��{��ܲ\u0000��\fu�/�����4��\u0016j����\u0000{�O�ӎ��w�����U��lW�������N|�3JnP�����ru�l��\nstream\nq\nq\n/DeviceRGB cs\n0.9608 0.9608 0.9608 scn\n74.74 756.0 m\n559.76 756.0 l\n561.9691 756.0 563.76 754.2091 563.76 752.0 c\n563.76 666.555 l\n563.76 664.3459 561.9691 662.555 559.76 662.555 c\n74.74 662.555 l\n72.5309 662.555 70.74 664.3459 70.74 666.555 c\n70.74 752.0 l\n70.74 754.2091 72.5309 756.0 74.74 756.0 c\nh\nf\n/DeviceRGB CS\n0.8 0.8 0.8 SCN\n0.75 w\n74.74 756.0 m\n559.76 756.0 l\n561.9691 756.0 563.76 754.2091 563.76 752.0 c\n563.76 666.555 l\n563.76 664.3459 561.9691 662.555 559.76 662.555 c\n74.74 662.555 l\n72.5309 662.555 70.74 664.3459 70.74 666.555 c\n70.74 752.0 l\n70.74 754.2091 72.5309 756.0 74.74 756.0 c\nh\nS\nQ\n/DeviceRGB cs\n0.2 0.2 0.2 scn\n/DeviceRGB CS\n0.2 0.2 0.2 SCN\n\nBT\n81.74 734.836 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 720.547 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 706.258 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 691.969 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n81.74 677.68 Td\n/F4.0 11 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 625.415 Td\n/F3.0 18 Tf\n Tj\n/F3.1 18 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\nq\n515.52 0.0 0.0 229.3828 48.24 380.0722 cm\n/I2 Do\nQ\nq\n0.5 w\n0.9333 0.9333 0.9333 SCN\n48.24 360.5722 m\n563.76 360.5722 l\nS\nQ\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n48.24 317.4322 Td\n/F3.0 18 Tf\n Tj\n/F3.1 18 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 289.9822 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n70.74 289.9822 Td\n/F2.1 10.5 Tf\n Tj\n/F2.0 10.5 Tf\n[ 20.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 267.4822 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n70.74 267.4822 Td\n/F2.0 10.5 Tf\n[ 20.0  22.0  15.0  11.0 ] TJ\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n-0.5 Tc\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n57.7645 244.9822 Td\n/F2.0 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n\n0.0 Tc\n0.2588 0.5451 0.7922 scn\n0.2588 0.5451 0.7922 SCN\n\nBT\n70.74 244.9822 Td\n/F2.1 10.5 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nq\n0.0 0.0 0.0 scn\n0.0 0.0 0.0 SCN\n1 w\n0 J\n0 j\n[] 0 d\n/Stamp1 Do\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\n0.2 0.2 0.2 scn\n0.2 0.2 0.2 SCN\n\nBT\n557.765 11.04 Td\n/F2.0 9 Tf\n Tj\nET\n\n0.0 0.0 0.0 SCN\n0.0 0.0 0.0 scn\nQ\nQ\n\nendstream\nendobj\n41 0 obj\n\n>>\n/Annots [46 0 R 47 0 R 48 0 R]\n>>\nendobj\n42 0 obj\n[41 0 R /XYZ 0 646.055 null]\nendobj\n43 0 obj\n]\n>>\nstream\nx���\r`\u0013e��\u0003\u0014|hV�\u0014m)zmy�[DC���T�\"�R[*Z\u000b�\n�P���4ԭE+��\u0005�P\r���G�\u001c5�\u0017hku\u0015��N\u000bN�����V�{����k�.�\u0019\fm�\u0002r\u0004���e��\u0005�X�\u0016Ut��\u0016ڕ��\u000fo�:Z����~���f�kԑ����F�#rL���\u0001�\b\u0000!�g��]ש��\u001cu\\E�ј��\u0016D��\u0015�Wt=\rs�j;+GI��!9\u0002\u0000��4wg\u0018\u000eWE\u000fk9ߡ/��V�̙ݨ��������D��jV�����\u0005�\b\u0000!��|�lhHAHO�96Xz�0�@r\u0004\u0000\u0000�u@�\u0000\u0010b�8�\u0005�0�#\u0000\u0000�\b G\u0000\b1d\u001c�\u0002Z\u0018�\u0011\u0000\u0000@\u0004�#\u0000�\u00182\u000es\u0001-\f�\b\u0000\u0000 \u0002�\u0011\u0000B\f\u0019���\u0016\u0006r\u0004\u0000\u0000\u0010\u0001�\b\u0000!���\\@\u000b\u00039\u0002\u0000\u0000�\u0000r\u0004�\u0010C�a.���\u001c\u0001\u0000\u0000D\u00009\u0002@�!�0\u0017��@�\u0000\u0010b��W\u0001-L�\u0014�\u001fj\u0007\u0000\u0000�\r�$��\u0016\u0000\u0000�\u0010d9\u00064s\u0003�\u0004\u000e�l�qM7��Ar\u0004\u0000\u0000\u0010\u0001�# \r8t�E�a.��Ar\u0004\u0000\u0000\u0010\u0001�# \r8t�E�a.��Ar\u0004\u0000\u0000\u0010\u0001�# \r8t�E�a.��Ar\u0004\u0000\u0000\u0010\u0001�# \r8t�E�a.��Ar\u0004\u0000\u0000\u0010\u0001�# \r8t�E�a��²��6u��ڐ\u001c\u0001\u0000觸2�g�!9\u0002ҀC'[B'9�Z�\u0000\u0000\u0000����\b�C��ʡ�6��S��`���\b�䨚��p��r�kL��w/GU�L�)�\u001c'\u0004\u0003&;�����`�\u0005@�l%�\u0019��X{�E��\u000f���\u0015��Js�\u001co.F��S8*L��\u0004$����\u001d����ٹG^x��=+%m��\u001ds��!k���n��\b=\u0019\u0019�cqZ�ED�̒?����t���\u0016=\u0015g�g\\_�Ј��vT\f�\u001f+\u0019ӟ�=������\u001a�\u001b�C�DoCy�3H����Ē�.�+'�M)��\u0002\u0014�����U�W��ݮP(\u0016 ��\t��\u000bp��T��^d\u001d�\u001f��\u0007>;�a�K?�'[�\u0002�ss�\u0013��}\u0005v�pt�ɑw��&��W�\u001a��7�D��\u001d�Q�\u0019���\u000e�\u0015�o�:�\u0010\u001c:M\tb�\"�\u001b����*�w����\u001c�����Y�%�\u0005�/H���5k\u0019?��\u0014:�\u0011Y�(\u0002\u0013vq#'����=예\u001c���3��\u0001�\u000fj��rW\u00047�ڧ\u000f��W�������xY\u0018A��3{������\b����X\u0018;޾ӂ3��\\�\u001f�\u0015)=��'r�f���:Ӣ���l��\u0016&\u000b���\u000f����\u0001z}���x���P�(�Q�\u0017\u0019z�S���\u0001i0՛�4=Fm����\u001b9�f\u0017ʘ�+���ʹn}��\u0007g\f���\f\\��9G�_�\u0012W��\u000f�\ng�o��%9����'\u00148Օ��U*���O(6��56mE�\u000fֿ~�ja\r��zO\u001cJ��1>K�x�~H�\u000e�\u000bz 7����)�g�Hm\u001b��o\u0018��~~���bj\u0014���!OZ�ē��\u000b��j19�~9o�9jc����\t/�{o����\"\u001d\u001e�p\u0001��M�ؕ�g�3d^x�\u0007;�\u0001����!\u0016��ƻ\"6܆���#к\u0001j�1�!�����b;��o�H���\u000f=\u001f�^�#7>�b\u001d���\u0010Z\u0012�\u001a��X�$\u0007��̙�\u0010�͟u$!�PK|Eư��rԒ;���\u001c�ܰ���y9&��\\H\u001eö��d\u0015Nb\f>5�\fp%G�O\u0011�0����I���0I���;C��zw�k�6\r��#ړ���&�B-V��>\u001c\u0019���r�FQ_��'�>��3\u0005��Y\u0010s���#�H%� ��,8[j�C��hqX��Q��7����{p��c�qm\u0006\u0016�\u0019�m\u0007�G�T�����\u0007\u0016�*��}\u0016ݙ�W\u001a��G�0#��\u001cѺ��&�\t2�6��Nd�IB!�ˑ.�3G���?\tW��CC���#\u001e�̐��Ѵ�����\u0017ȱ��{\u0014\u00029Rq\t䈗l��f�Vn-���8\u00079\u0012\u0012W��V��\"���Mڊ���/)fp��\u001c�Ƙ=O�%�\u001e䘑��c��ť9zQ9�S����j57���\u001c=\u000bs�'\u0006$�V�Z�\u001dIL�\u000e)!�N\"m\u001c����0�۞��\u000fp�ի&}�x�\u0017�I�7{�ٚ��D䨊ف���\r/Zj���N;�{-j�U�>=\u000e��[X9j�mS-�i���rD��뇕��=��6ùJ��>����d\u0015\u001e}�\u0006G[v\u0014�%\\1t����1���.!jd��˪��\t7�R�{�V9b\u00071a\u00029��4�z�.9&�(\u0014�Jp���sl_k��h����\b�h\nN�q.��h�\u0017�J�4�BN\u001d�\u001c�K�\u000b���64k��v�Q5��W\u000er��*L�rd�9�O����\r�����}Y���ܬU&t�/\u0005��݊��&�\u001da\u0016�m/}w��Fc77�\u000f�����?�\u001c5�{#��*��a9���\\W�;�s���A'��L�j��6\u0007��L�����\u0011�l\u0013�C��\u0011}:\u0014��\u001e�\u001c�}��\u001c�\u000f���U)d��-a�j5U׋v\u0016��1\u0014�� Gn���$�J\u001d\u000b\u000b9J��$iv��e��B�c�����QF7�Zm�#�P��d�@��S5�{�r,#7�\u000bW��5��V�o�m�[�@����1�j\u0014�F,�\t|\u0016\t�d\u0005�\u0019�\nlr�\u0017�8�\u001c\u000f��\u0016��մ��J퐽l��e�k�i6\u001c}��c���\u001b2lk5=c�X�����-���\\{�j����\u000b��z���1\u0016�[���c\u001dFک�r��T��m��U���\u001c���͂�I\u0017\\�N��/;�k��_�������/K�\u001d���\r�����L��\b7KR�9ԫ\u0005�\u0004r�M\u001dl3\u001f��Sn\u0014lT(^�^�/J^\b\u000f����vL��;�w��;_��=|AƁT��R�v`��\u0014���\u0007��Y��Vn�\u001cy8�q�Z��'�~CF~���V\u000b����Y�>X��6���3�i����\u001cW���Wy���JoX3�{�}U���\u0002�\r�_\u0018\u0019��i\u0017��ߏ\\�B�9�\n��\b�\u0001\u0019���\u0016�ߓ�c7Gn�Y�\"븘�^�I�\u0000H�\u0000Я��ɱWx1>�{�\u0017���\u0003\b2\u000es\u0001-��'G\u0000\u0000\u0000I@r\u0004�\u0001�N��8�\u0005�0H�\u0000\u0000\u0000\"@r\u0004�\u0001�N��8�\u0005�0H�\u0000\u0000\u0000\"@r\u0004�\u0001�N��8�\u0005�0E���>\u0004\u0000\u0000\b\u0005\u0014I\u0000\u0000\u0000�\u0013 G\u0000\u0000\u0000\u0011@�\u0000\u0000\u0000\"�\u001c\u0001\u0000\u0000D\u00009\u0002\u0000\u0000�\u0000r\u0004\u0000\u0000\u0010\u0001�\b\u0000\u0000 \u0002�\u0011\u0000\u0000@\u0004�#\u0000\u0000�\b��#\u0000\u0000\u0000�#�#~�6\"\u0000\u0000}\u001d\u0019�9���\u001c\u0001\u0000\u0000D\u00009\u0002@�!�0\u0017��@�\u0000\u0000\u0000\"�\u001c\u0001 Đq�\u000bha G\u0000\u0000\u0000\u0011@�\u0000\u0010b�8�\u0005�0�#\u0000\u0000�\b G\u0000\b1d\u001c�\u0002Z\u0018�\u0011\u0000\u0000@\u0004�#\u0000�\u00182\u000es\u0001-\f�\b\u0000\u0000 \u0002�\u0011\u0000B\f\u0019���\u0016\u0006r\u0004\u0000\u0000\u0010\u0001�\b\u0000!���\\@\u000b\u00039\u0002\u0000\u0000�\u0000r\u0004�\u0010C�a.���\u001c\u0001 hd�\u000f\u0018Y�~��\u0003�\b\u0000A�oI���Ƌ\u000e�>2.\f�\b\u0000A#8r\u0004ɑ\t�����\f\ns\r�\u0011\u0000��l��v�BQ��\u0016�ja=\u0000r\u0004��!���h��$�*��y�Sʱ�\u0013�\u0011\u0000��\\��q��Ā�9�\u0015��5�z+\u001c��\u001c\u0001 h\b.G�:��d$K\u0017Bɋm��������\u0004�b)�\u0005�c�~M��U��\u000bk�1�S������HV����墍�C�s�,t���\u0002�C\u0012\u000bbe�܍����z՝\u0017����鴼��^$Gf��\u0014lƃ\\M�h��\u000e\u0012 �+`���ϴ�?���H\u0015�Kt\u0014޸�(@�+ц�q�ӡ&f�-9~ZK\u001e5���u�\u0018��|s\u0011�q0kLУ�\b�#�D=�\u0016�\u0018���M��۴:\"G�\u0017\u0011�p�\u0002���\u0011���q�\u0014��\u001ba|v�E�[��2\u00132\u000e����\u001c�\u0017ȓ\u001f\u0003M(�A�;W3cv\u0007R��\u0018\u000e�)e_��\u001fLsSP�tr��T���R-&'�/��=GmL��Q1�E�\u001d4�M��\u001eW���\u001f.�V��\u0011�r�Lt��\u000b��`�=���)\u001bn�1xn�P���\"y�N�0�Ū�µ�صV�o�\u0003x��\u0006\u0016a\u0003�\u001c+�� ��9s\u001b\u000e��Y�\u0005���>\r\u0015�\u0015�#��\bn1����6l/�#\u0007�1(�>��3\u0005$�3�J�ۮ\u001d�\u0000%� �`\u0016�Á�y~+�?��s���O�\u000f���}uҡ�\u000fΖ���39Z\u001c��q�����#��\u001e\u001c���\\��Ex�t���Q?�.9�:�\u0001���s�\u001e��d�ۉ(N��\"zK��=ǟ\u0006�����\u0011�9z����G>3�jo4-/.�p�\u0013�ZW��\u001a8$B\\����9��C5\nV�X�Nr�j�\u001f�,̩�\u0018�H[�kYo%�i������0����0�\u001c\u0013��\u0001��zդ/\u0013��b6��fO:[��'\u001b\u0011O�ɴ\u0007\u000f��S�\u001aU\u001e�p\\��Y�\\kLK\u001d��b\u001b���d�=�ʔ��\u0011�T��E/@��'\u0011���އ���_k�XT���AV�>W����(G\u0004��\u0007�\u001c�\u001e_\\�SJ刘�a\u0003o�\r���uׁ\u0001�B�h��\u001c\u0013\u0007 f�8\u0013�\u001cE�\b\r2�\u0006\u001f�Y��Xo��=袅\f�C�fyd+ϱ�\n.�ҧTr���Z���\u001a�E=[��� � ���lmzj\u001ci�^�T\u0007�g��\u001cU1;�����EK-�v�ig�\u0018�u\u00029n�篏�OH\u0011T��?x�n�\u0013D�v�j�F���'��.&����M�/��7'�lJa�9\"���@��6\u000eW��!�\u0010^��_�B\u0007_�Un��S��ǯlr���\u0017�sl��\u0000���\u000f�an�*\u0013:��\u0002��nE�x\u0013�-f���\"��s4vs��P\u0018��\u001c���QC�7\u00129���\u001c�S]��u���=�?O\u001btrI̴���ls��4RT[�\u001a����\u0011iN4Z���o\u0011�\u0019��Z�\u000b�N|�>9�d\t��D锜$�N����YHrl9�qs1��f[�\u0011*�a���\u0012ҕ[��]^�h��3fO��E�`�=3�\u0014Z���\\1��V_�u�T�V�\u0004\u001e@��Ql�@{�3��yk�3u��H;�Vn��\n,�\u001d\u001fg��p��V�/9\"Uu�\u0005œ.�b��+X��6���3�i����\u001cW���Wy����\r\rwL?����>;X�N=z@�~Cuc\n��\u0006��\"�ϸ{��$��h�x���\u0004��*\u000f3�!=���r\u0007���c�F��W���Ȗ��\u001c�Y���\f\u0000\u0000����\u001c!~�\u00168t�\u0005��,�\b\u0000\u0000�[���\u0005�C����-��\u001c}\u0003�#\u0000\u0000�\b�\u001c\u0001i���-2\u000es\u0001-\f�#\u0000\u0000�\b�\u001c\u0001i���-2\u000es\u0001-\f�#\u0000\u0000�\b�\u001c\u0001i���-2\u000es\u0001-\f�#\u0000\u0000�\b�\u001c\u0001i���-2\u000es\u0001-\f�#\u0000\u0000�\b�\u001c\u0001i���-2\u000es\u0001-L����\u000f\u0001\u0000\u0000B\u0001E�\u0012\u0000\u0000\u0000p$�r\u001c\u001f��\u0001\u001f�C'[\u0002z�d\\\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c�\u0002Z\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c�\u0002Z\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c�\u0002Z\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c�\u0002Z\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c��,���o��ڐ\u001c\u0001\u0000觸��\u001e���ֆ�\bH\u0003\u000e�l\t��(k9\u0002\u0000\u0000�\u0016��#�\u000f���\u000f]F\u0017yT\u0015\u0017\u0004{G�\u001a��\u001cU\u0013�\u001c�\u0012�c�\u001a�t9jcf��&�/r�\u0010x��#�tn�w\u0002���&�\u0019��Xs�i�\u001d%��\u001f\u0016��\u000e��\u0004��x�@��\u0010��\u0002����]�@ؾ�g�V����{���!^���Ά��G3����ddd��s9�/��[����\u001e,z*�:ϸ:B\u0019?���&G�?V�\u001fݲ�dL:���_���\u0005\u0018�\b\u000e�JW�lf�S�O�=�U7�X(�;可w�Ƶ�#z,l�?ԑ��\u0017\u0014\n�J:%\f\u000fͥ���\u001a�b\u0006>\u0015\u001e�Jq��n���\u00029�{c\u001dP�W��jܪT�����q)���\u0013Q�\u0017(�D\u0011�v�\u0007d�\u0007Wݫ\u000f��x:Ed��a�Sa��x��\n>�a\u0003��GWͯSn�NRa�\u0004U�݈�����\u001d��\u0017\u0019�d�\\�����\u001ccj��\u0011;\u0016m����瓸�\u0010�q�\n���|�-W�\u0003�d�fl�QM)��\u000bJ\u0012ت��b\t���\u0011�����\u0013|�\u001d����[N��\u000f��\t���k'�c7q_�r�tA\u0015z\u000f�sz,Uv��\u001co6�+3��i��Sj�lW��R\u0010�n%�\u001f�+ݽ���qηJ��:�9v�͏$�=�GL�A_ѳc�s1jث\u0015\u00037�-�\"�j�\u0019M>=�Gm�.���7�3ww�=�ԑȯ:�E�}r(\n��qڸ��=�j�]r�1��|��]\u0016��mP G��\u0001�i���W\u001a�ҳ՟r\u001c��i���?�\u0013�~\\��]\u0003\u001b'.GR[��Q�q�c�7B\u0019��W'�қ�69\u0012~��\u001fT[+��\u000b����\u0019.�A��%8;\u000e�V�+��J�J�|��]34�Z��w\u001f�3��9�\u0013{\u0013i��\u0000��/L3��\u00169N�\rcn��\n�����\u001f�\u001a�wM\u001as��/f�[�ٓ����\u0013?�'��n�\u001c��ը�p���jkkLr\u0004��e\u001b�����\u001f�I��\u0000�\u001c�\u001b\u001a?�.~gz�#��QM�����j5����u\n���[\u0010�\u001c,�Q\u0015�����C��\u0003ٰ�7\fì�\\?�:�7~�at��\u001c\u000b�*�r4��\u0001�\u0001�ܸk೷\u001c�xp\u0017����Y�\u0017���~���N�t�\t=�Q�h-\u0011ႌ\u0015�\f���c�\u0006�\rW�>��y�k:f���w?>�~��F����k_0�&Gv\u0002R��@����e&n\u0016\n����\u0007��eZr�1�;�.1�U��{�\u0016j�\u0006\u0019�\u001c�4�g�v�v�G\u000bP\b��\u0013v\u001fx��\u0002\u0012��S%��&�q�\u000e����S��\u0000���\u0002y9j��>\u0017?5?0�\u001e�W'\u001d\u001a��l�\u001d\u000e=���ay\u001eG9��\\>bZ��Ꮟ�ǵ\u0019X�gH�\u001d\u001c\u001f�S��#�S\u001f�I��>=��H��\u0003����x\u0012�䘂�'n��>ȱ��*9���\f��\u001bMˋ�-��Ĵ�U��\u0006\u000e�\u0010�c�*����L\u0018m%��H\u0016/��]��\u000fܣ����8^���\u001e{��n.\u0013d�=k�uT��麹�ԍ\u001c5��\u0005���Aף\b�����kx\u0016��O\fH��Ƶ��\u0012ӴCJ�{�������0�\u001c\u0013��\u0001��zդ/\u0013��b6��fO:[����E\u000b�V�\u0011'G�j5�9&w1�%�9��g��Uћ\u0013n6���\u001c����F��\u001b��6\u000e\u0019��rT��\u0016:�:�r\u0017X�h�S��1F G��1��o�=G,F&����%�v�M���OLh���=2� q9��s�8�-\u0019V��\u0016\u0019ߣ\u001f�! G�an�*\u0013:��\u0002��nE�x\u0013�-f���\"��s4vs��P\u0018��\u001c���QC�7\u00129���\u001c�S]��u���=�?O\u001btrI̴���ls��4�prl?��\u0017{�M�\u0003�}�u��NդQRC��>�Z�\u0016q������.�\u0013\u001ef�\u0001\u000e�N�I���\u001f����$ǖ�\u001d7\u0017��n��\u001aW�q� JC�\u000f*V���\u0011m|}��I�����\\x�\u00186�o�lrL\\�����\n皘���%�Y9>P��I$�#s�F��m�=b2r�pr�`�\r\u0019���cZ־\u0017�k�#�P�+Q�l\u0003m\b��=�?�(6] ����1\u0016�[���c�\u0013i�����S�e�[��\\����K�HU�fA���N�\u0013x����㗤'!&{}�ˎsz\u0001珕R\u001c\u0012i�3\u00170��Wc�ؕ\u0016��:�D!�E�\u001c���\u001c�\b\u000f����vL��;�qrl�|\t\u000f{���l[�'�\u0010����6P���J�\u0018\u000egU�ӡ�.�աK��n�09�Z��냕�m\u0013+�;s��kό�q^����*\u000f�>WcO\u001fHL���\u001b\u001atӥh�U�\u001d�99�t��\u0011��\u001e��1\u0005VK@?�!\u0002���.�@�FПq�ĉI\"����\u0016��\tr�U\u001e&�!=�\"�Pǜ�,��N\u001e���H��U\u001e�\u0007�vr�ga��ɲ�`3�c*\u0014�\u0011A�\u001a\u0000d���\u0018��a5�@��?�\u0014)�\u0006\u0019�Vۀ�([ 9�B�AA A�q��S}�.j\u0002\u0000 \u0007d�?�\nVr�\t\u0012�$G\u0004rt\u000f$G�\u0012:��7B59\"A�إ\u001c\u0005.��j\u0000\b1B59��OL�N�'\u0001\n$G�\"�0\u0017��B09�z�\b&�'G��G�]J\u0000\u0000�=!�\u001c��\u0013�s����N-\u0010)��\n$G�\"�0\u0017��B/9r�hvб�����Fa\u0007\u001f��\b\u0000�B\b&G4XL}���3���\nH��E�a.���^r\u0004\u0000\u0000��PL��?�C'[d\u001c�\u0002Z\u0018$G\u0000\u0000\u0000\u0011 9\u0002ҀC'[d\u001c�\u0002Z�\"��o\u001f\u0002\u0000\u0000�\u0002�$%\u0000\u0000\u0000�H��8>������\u0007.�2�㋠7��F���z0`*D7+�\u0002��љ��hGiȡ\u000b\"�z\u001a���\u0001�+S$%��y읧\u000b�;�_^��+|�]����5��N+ֵ�\u001aE煞��y���c\u0016fg�ő�������yv\u0001\u0002\u0000R�Z��:\u0015\u0007\u0003�\b\u0000\u0000 \u00028G@\u001e�:բb3\u0017�`�\u001c\u0001\u0000\u0000D\u0000�\b�\u0003R�ZTl��\u001a\f�#\u0000\u0000�\b�\u001c\u0001y@�T���\\P��s\u0004\u0000\u0000\u0010\u0001�# \u000fH�jQ��\u000bj0p�\u0000\u0000\u0000\"�s\u0004�\u0001�S-*6s~\u0006���V{XιE,�'��s����\r�]��{\u0004��9\u001b�,�%.�%�L�yT�n9t��C��\u001a�60�8��D^\u001c�\u0003�\r�v��\u001cz6st�u�cO#����mD��\fv�u[�Q[\n�\u0019i-���)\u0010��eV\u000b\u0012�d6���Y\u000bƪ�I\u001e�H�Q\u0011w����{V\u0016�F��s��\n\u000f���\u000b�_\u0016\u001a3\u0001\u001f�\u0016\u0017����7���\u0012G������ȶ�z�\b�o\u0012��M����F�7�������>I�e\u00049\u0002ff�tz\u0002�`!�/G\u0004��j^\u0016��N\u000eiDt5�@�o�_�LE��\u0019Qq����U��l�OEm[s�v��\u0006q�\u0015�uc\u00164\u0010��4u��e94��\u0007/�,\"���)\u0016P\u0010ǂڔl��9i*9��̄=��L͐9\u0004,M\u001c\u001d\u0012��8��vBv��91����:t,�\u001c�n�v��s�7\u001dv\u0002i�\u000e���]�t�3o� zy�\u0016� '��e\t��fės�+��̞U�\\��TxKǥ�\u0015�\u001a��P��8��\u0002� �Z�K�\tw\u0002\n��\u0014G(��C��3>\\\u0013ǎ\u001a�p���J�=^��P�6��9����'���[\u0013�\u001foyj*�z�Lh�������1��)�]�j�r_�Բ�9\u001a�\u0014A~�ܠ���Wj��te�~|�+�8�\u0015~߀�K\u000f#z�r\u0003�{S\"pu�\u001d��\u001e�ȕ՜8BY}3��Q[f��7k/+��6\r�we� g�ն�����k�A\\\u001c��.\u001c:,\u0015[�\u000f\u000eE��#\f�\u0004\u001b���Cǜn�GΙn'�\u001bY�(qr�d�eu\u0018?;�\\\u0007�\u0019��Vf\u0017�q\u001bWC�\u001b��\u0012Ǻ׸jz|4\u0019���3��i\u0006\"�f�f�\u001e\u0013^X\u0013ȤG��9�\f\u001d�\u001a�,����\u0012G\u0014u\u001a\t�hJ\r \u001a� ����\u000efC\u0007�F�9f\u0014��\u0018=����sĢ�x4�ؒ�\n�v� ��\u0003���1!��6 :�@�}������\u0005qt�s,y�\u0000Sy\u0014�g3WRd@�_6\u0018�q�d��-���4B|����ߦ@0\u000eqqTf����\u0017Gfh\u0007�)�Lkd�Tq�|>!�4O7!;�*oiP+أ\u000f��̓�1��\\oq��Y\u000fT�7!{\u0013��L/�˛�\u000fq�I\u001f��4�6�r�ո$�fC?�:��\u0014M�~A\u001c��1��&���q��VM\u0011η��B$�#\u0019�fV���7���$� bN�j�v�tY�\u000e\u0017\u0006�K\u0016Dp�!����m\n\u0005�\u000f�y^�Jm\u0018_V+�\u001c)f�w\u000e��(�\n�I�e�'�3y\u00133\u0010��r��NP�\u000e^�nGS�s�|d C〒���Tj�P��:Q�CJ�s��ҷ'\nz�\\�H�s�ee\u0003EݱIց���e�'���.�w9������z��T��s�`��:����G\u0013Y�qV���E��\u000e�O�[B]:S�ZgfD�\u0015��\u0016�\u0014+���QDc~���C�݊j�G���`!",
        "tags": []
    }
]